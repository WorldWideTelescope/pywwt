import { ConstellationFilter, EngineSetting, EngineSettingsInterface, EngineSettingsInterfaceRO } from "@wwtelescope/engine";
/** A list of the names of the core engine settings. */
export declare const engineSettingNames: string[];
/** Type guard function for `EngineSetting`. */
export declare function isEngineSetting(obj: [string, any]): obj is EngineSetting;
/** Apply a setting to the engine or an equivalent. */
export declare function applyEngineSetting(engine: EngineSettingsInterface, setting: EngineSetting): void;
/** Extract all of the current settings of the engine or an equivalent. */
export declare function extractEngineSettings(engine: EngineSettingsInterfaceRO): EngineSetting[];
/** Copy settings from the engine, or an equivalent, to another. */
export declare function copyEngineSettings(source: EngineSettingsInterfaceRO, dest: EngineSettingsInterface): void;
/** A plain-old-data class implementing `EngineSettingsInterface`. */
export declare class EngineState implements EngineSettingsInterface {
    constructor(source: EngineSettingsInterfaceRO);
    actualPlanetScale: boolean;
    get_actualPlanetScale(): boolean;
    set_actualPlanetScale(v: boolean): boolean;
    constellationArtFilter: ConstellationFilter;
    get_constellationArtFilter(): ConstellationFilter;
    set_constellationArtFilter(v: ConstellationFilter): ConstellationFilter;
    constellationBoundariesFilter: ConstellationFilter;
    get_constellationBoundariesFilter(): ConstellationFilter;
    set_constellationBoundariesFilter(v: ConstellationFilter): ConstellationFilter;
    constellationFigureColor: string;
    get_constellationFigureColor(): string;
    set_constellationFigureColor(v: string): string;
    constellationFiguresFilter: ConstellationFilter;
    get_constellationFiguresFilter(): ConstellationFilter;
    set_constellationFiguresFilter(v: ConstellationFilter): ConstellationFilter;
    constellationBoundryColor: string;
    get_constellationBoundryColor(): string;
    set_constellationBoundryColor(v: string): string;
    constellationNamesFilter: ConstellationFilter;
    get_constellationNamesFilter(): ConstellationFilter;
    set_constellationNamesFilter(v: ConstellationFilter): ConstellationFilter;
    constellations: boolean;
    get_constellations(): boolean;
    set_constellations(v: boolean): boolean;
    constellationSelectionColor: string;
    get_constellationSelectionColor(): string;
    set_constellationSelectionColor(v: string): string;
    constellationsEnabled: string;
    get_constellationsEnabled(): string;
    set_constellationsEnabled(v: string): string;
    crosshairsColor: string;
    get_crosshairsColor(): string;
    set_crosshairsColor(v: string): string;
    earthCutawayView: boolean;
    get_earthCutawayView(): boolean;
    set_earthCutawayView(v: boolean): boolean;
    galacticMode: boolean;
    get_galacticMode(): boolean;
    set_galacticMode(v: boolean): boolean;
    localHorizonMode: boolean;
    get_localHorizonMode(): boolean;
    set_localHorizonMode(v: boolean): boolean;
    locationAltitude: number;
    get_locationAltitude(): number;
    set_locationAltitude(v: number): number;
    locationLat: number;
    get_locationLat(): number;
    set_locationLat(v: number): number;
    locationLng: number;
    get_locationLng(): number;
    set_locationLng(v: number): number;
    milkyWayModel: boolean;
    get_milkyWayModel(): boolean;
    set_milkyWayModel(v: boolean): boolean;
    minorPlanetsFilter: number;
    get_minorPlanetsFilter(): number;
    set_minorPlanetsFilter(v: number): number;
    planetOrbitsFilter: number;
    get_planetOrbitsFilter(): number;
    set_planetOrbitsFilter(v: number): number;
    showAltAzGrid: boolean;
    get_showAltAzGrid(): boolean;
    set_showAltAzGrid(v: boolean): boolean;
    showAltAzGridText: boolean;
    get_showAltAzGridText(): boolean;
    set_showAltAzGridText(v: boolean): boolean;
    showConstellationBoundries: boolean;
    get_showConstellationBoundries(): boolean;
    set_showConstellationBoundries(v: boolean): boolean;
    showConstellationFigures: boolean;
    get_showConstellationFigures(): boolean;
    set_showConstellationFigures(v: boolean): boolean;
    showConstellationLabels: boolean;
    get_showConstellationLabels(): boolean;
    set_showConstellationLabels(v: boolean): boolean;
    showConstellationPictures: boolean;
    get_showConstellationPictures(): boolean;
    set_showConstellationPictures(v: boolean): boolean;
    showConstellations: boolean;
    get_showConstellations(): boolean;
    set_showConstellations(v: boolean): boolean;
    showConstellationSelection: boolean;
    get_showConstellationSelection(): boolean;
    set_showConstellationSelection(v: boolean): boolean;
    showCrosshairs: boolean;
    get_showCrosshairs(): boolean;
    set_showCrosshairs(v: boolean): boolean;
    showEarthSky: boolean;
    get_showEarthSky(): boolean;
    set_showEarthSky(v: boolean): boolean;
    showEcliptic: boolean;
    get_showEcliptic(): boolean;
    set_showEcliptic(v: boolean): boolean;
    showEclipticGrid: boolean;
    get_showEclipticGrid(): boolean;
    set_showEclipticGrid(v: boolean): boolean;
    showEclipticGridText: boolean;
    get_showEclipticGridText(): boolean;
    set_showEclipticGridText(v: boolean): boolean;
    showEclipticOverviewText: boolean;
    get_showEclipticOverviewText(): boolean;
    set_showEclipticOverviewText(v: boolean): boolean;
    showElevationModel: boolean;
    get_showElevationModel(): boolean;
    set_showElevationModel(v: boolean): boolean;
    showEquatorialGridText: boolean;
    get_showEquatorialGridText(): boolean;
    set_showEquatorialGridText(v: boolean): boolean;
    showGalacticGrid: boolean;
    get_showGalacticGrid(): boolean;
    set_showGalacticGrid(v: boolean): boolean;
    showGalacticGridText: boolean;
    get_showGalacticGridText(): boolean;
    set_showGalacticGridText(v: boolean): boolean;
    showGrid: boolean;
    get_showGrid(): boolean;
    set_showGrid(v: boolean): boolean;
    showHorizon: boolean;
    get_showHorizon(): boolean;
    set_showHorizon(v: boolean): boolean;
    showISSModel: boolean;
    get_showISSModel(): boolean;
    set_showISSModel(v: boolean): boolean;
    showPrecessionChart: boolean;
    get_showPrecessionChart(): boolean;
    set_showPrecessionChart(v: boolean): boolean;
    showSkyGrids: boolean;
    get_showSkyGrids(): boolean;
    set_showSkyGrids(v: boolean): boolean;
    showSkyOverlays: boolean;
    get_showSkyOverlays(): boolean;
    set_showSkyOverlays(v: boolean): boolean;
    showSkyOverlaysIn3d: boolean;
    get_showSkyOverlaysIn3d(): boolean;
    set_showSkyOverlaysIn3d(v: boolean): boolean;
    showSkyNode: boolean;
    get_showSkyNode(): boolean;
    set_showSkyNode(v: boolean): boolean;
    showSolarSystem: boolean;
    get_showSolarSystem(): boolean;
    set_showSolarSystem(v: boolean): boolean;
    smoothPan: boolean;
    get_smoothPan(): boolean;
    set_smoothPan(v: boolean): boolean;
    solarSystemCMB: boolean;
    get_solarSystemCMB(): boolean;
    set_solarSystemCMB(v: boolean): boolean;
    solarSystemCosmos: boolean;
    get_solarSystemCosmos(): boolean;
    set_solarSystemCosmos(v: boolean): boolean;
    solarSystemLighting: boolean;
    get_solarSystemLighting(): boolean;
    set_solarSystemLighting(v: boolean): boolean;
    solarSystemMilkyWay: boolean;
    get_solarSystemMilkyWay(): boolean;
    set_solarSystemMilkyWay(v: boolean): boolean;
    solarSystemMinorPlanets: boolean;
    get_solarSystemMinorPlanets(): boolean;
    set_solarSystemMinorPlanets(v: boolean): boolean;
    solarSystemMultiRes: boolean;
    get_solarSystemMultiRes(): boolean;
    set_solarSystemMultiRes(v: boolean): boolean;
    solarSystemOrbits: boolean;
    get_solarSystemOrbits(): boolean;
    set_solarSystemOrbits(v: boolean): boolean;
    solarSystemOverlays: boolean;
    get_solarSystemOverlays(): boolean;
    set_solarSystemOverlays(v: boolean): boolean;
    solarSystemPlanets: boolean;
    get_solarSystemPlanets(): boolean;
    set_solarSystemPlanets(v: boolean): boolean;
    solarSystemScale: number;
    get_solarSystemScale(): number;
    set_solarSystemScale(v: number): number;
    solarSystemStars: boolean;
    get_solarSystemStars(): boolean;
    set_solarSystemStars(v: boolean): boolean;
    solarSystemMinorOrbits: boolean;
    get_solarSystemMinorOrbits(): boolean;
    set_solarSystemMinorOrbits(v: boolean): boolean;
}
