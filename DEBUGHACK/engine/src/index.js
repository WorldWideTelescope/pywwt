(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["wwtlib"] = factory();
	else
		root["wwtlib"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./esm/annotation.js":
/*!***************************!*\
  !*** ./esm/annotation.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Annotation: () => (/* binding */ Annotation),
/* harmony export */   Circle: () => (/* binding */ Circle),
/* harmony export */   Poly: () => (/* binding */ Poly),
/* harmony export */   PolyLine: () => (/* binding */ PolyLine)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./graphics/primitives3d.js */ "./esm/graphics/primitives3d.js");
/* harmony import */ var _graphics_tessellator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./graphics/tessellator.js */ "./esm/graphics/tessellator.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./color.js */ "./esm/color.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./coordinates.js */ "./esm/coordinates.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Web GL support for annotations.
//
// Annotations all share a set of supporting primitives. Each time any
// annotation changes the primitives, they must be regenerated if they have been
// drawn already. It is best to do updates in large batches.










// wwtlib.Annotation

function Annotation() {
    this.addedToPrimitives = false;
    this.annotationDirty = true;
    this._opacity = 1;
    this._showHoverLabel = false;
}

Annotation.pointList = null;
Annotation.lineList = null;
Annotation.triangleFanPointList = null;
Annotation.triangleList = null;
Annotation.batchDirty = true;

Annotation.prepBatch = function (renderContext) {
    if (Annotation.pointList == null || Annotation.batchDirty) {
        Annotation.pointList = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__.PointList(renderContext);
        Annotation.lineList = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__.LineList();
        Annotation.triangleFanPointList = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__.TriangleFanList();
        Annotation.triangleList = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__.TriangleList();
        Annotation.lineList.set_depthBuffered(false);
        Annotation.triangleList.depthBuffered = false;
    }
};

Annotation.drawBatch = function (renderContext) {
    Annotation.batchDirty = false;
    if (renderContext.gl == null) {
        return;
    }
    if (Annotation.pointList != null) {
        Annotation.pointList.draw(renderContext, 1, false);
    }
    if (Annotation.lineList != null) {
        Annotation.lineList.drawLines(renderContext, 1);
    }
    if (Annotation.triangleFanPointList != null) {
        Annotation.triangleFanPointList.draw(renderContext, 1);
    }
    if (Annotation.triangleList != null) {
        Annotation.triangleList.draw(renderContext, 1, 0);
    }
};

Annotation.separation = function (Alpha1, Delta1, Alpha2, Delta2) {
    Delta1 = Delta1 / 180 * Math.PI;
    Delta2 = Delta2 / 180 * Math.PI;
    Alpha1 = Alpha1 / 12 * Math.PI;
    Alpha2 = Alpha2 / 12 * Math.PI;
    var x = Math.cos(Delta1) * Math.sin(Delta2) - Math.sin(Delta1) * Math.cos(Delta2) * Math.cos(Alpha2 - Alpha1);
    var y = Math.cos(Delta2) * Math.sin(Alpha2 - Alpha1);
    var z = Math.sin(Delta1) * Math.sin(Delta2) + Math.cos(Delta1) * Math.cos(Delta2) * Math.cos(Alpha2 - Alpha1);
    var vvalue = Math.atan2(Math.sqrt(x * x + y * y), z);
    vvalue = vvalue / Math.PI * 180;
    if (vvalue < 0) {
        vvalue += 180;
    }
    return vvalue;
};

Annotation.colorToUint = function (col) {
    return (col.a) << 24 | (col.r << 16) | (col.g) << 8 | col.b;
};

Annotation.colorToUintAlpha = function (col, opacity) {
    return opacity << 24 | col.r << 16 | col.g << 8 | col.b;
};

var Annotation$ = {
    draw: function (renderContext) { },

    get_opacity: function () {
        return this._opacity;
    },

    set_opacity: function (value) {
        Annotation.batchDirty = true;
        this._opacity = value;
        return value;
    },

    get_id: function () {
        return this._id;
    },

    set_id: function (value) {
        this._id = value;
        return value;
    },

    get_tag: function () {
        return this._tag;
    },

    set_tag: function (value) {
        this._tag = value;
        return value;
    },

    get_label: function () {
        return this._label;
    },

    set_label: function (value) {
        this._label = value;
        return value;
    },

    get_showHoverLabel: function () {
        return this._showHoverLabel;
    },

    set_showHoverLabel: function (value) {
        this._showHoverLabel = value;
        return value;
    },

    hitTest: function (renderContext, RA, dec, x, y) {
        return false;
    },

    get_center: function () {
        return this.center;
    },

    set_center: function (value) {
        this.center = value;
        return value;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Annotation", [Annotation, Annotation$, null]);


// wwtlib.Circle

function Circle() {
    this._fill$1 = false;
    this._skyRelative$1 = false;
    this._strokeWidth$1 = 1;
    this._radius$1 = 10;
    this._lineColor$1 = _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_white();
    this._fillColor$1 = _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_white();
    this._ra$1 = 0;
    this._dec$1 = 0;
    Annotation.call(this);
}

var Circle$ = {
    get_fill: function () {
        return this._fill$1;
    },

    set_fill: function (value) {
        Annotation.batchDirty = true;
        this._fill$1 = value;
        return value;
    },

    get_skyRelative: function () {
        return this._skyRelative$1;
    },

    set_skyRelative: function (value) {
        Annotation.batchDirty = true;
        this._skyRelative$1 = value;
        return value;
    },

    get_lineWidth: function () {
        return this._strokeWidth$1;
    },

    set_lineWidth: function (value) {
        Annotation.batchDirty = true;
        this._strokeWidth$1 = value;
        return value;
    },

    get_radius: function () {
        return this._radius$1;
    },

    set_radius: function (value) {
        Annotation.batchDirty = true;
        this._radius$1 = value;
        return value;
    },

    get_lineColor: function () {
        return this._lineColor$1.toString();
    },

    set_lineColor: function (value) {
        Annotation.batchDirty = true;
        this._lineColor$1 = _color_js__WEBPACK_IMPORTED_MODULE_5__.Color.load(value);
        return value;
    },

    get_fillColor: function () {
        return this._fillColor$1.toString();
    },

    set_fillColor: function (value) {
        Annotation.batchDirty = true;
        this._fillColor$1 = _color_js__WEBPACK_IMPORTED_MODULE_5__.Color.fromName(value);
        return value;
    },

    setCenter: function (ra, dec) {
        Annotation.batchDirty = true;
        this._ra$1 = ra / 15;
        this._dec$1 = dec;
        this.center = _coordinates_js__WEBPACK_IMPORTED_MODULE_6__.Coordinates.raDecTo3d(this._ra$1, this._dec$1);
    },

    draw: function (renderContext) {
        var onScreen = true;
        var rad = this._radius$1;
        if (this._skyRelative$1) {
            rad /= renderContext.get_fovScale() / 3600;
        }
        var screenSpacePnt = renderContext.WVP.transform(this.center);
        if (screenSpacePnt.z < 0) {
            onScreen = false;
        }
        if (_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.dot(renderContext.get_viewPoint(), this.center) < 0.55) {
            onScreen = false;
        }
        if (renderContext.gl != null) {
            if (Annotation.batchDirty || this.annotationDirty) {
                var up = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 1, 0);
                var xNormal = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.cross(this.center, up);
                var yNormal = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.cross(this.center, xNormal);
                var r = this._radius$1 / 44;
                var segments = 72;
                var radiansPerSegment = Math.PI * 2 / segments;
                var vertexList = [];
                for (var j = 0; j <= segments; j++) {
                    var x = Math.cos(j * radiansPerSegment) * r;
                    var y = Math.sin(j * radiansPerSegment) * r;
                    vertexList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(this.center.x + x * xNormal.x + y * yNormal.x, this.center.y + x * xNormal.y + y * yNormal.y, this.center.z + x * xNormal.z + y * yNormal.z));
                }
                if (this._strokeWidth$1 > 0 && vertexList.length > 1) {
                    var lineColorWithOpacity = this._lineColor$1._clone();
                    lineColorWithOpacity.a = Math.round(lineColorWithOpacity.a * this.get_opacity());
                    for (var i = 0; i < (vertexList.length - 1); i++) {
                        Annotation.lineList.addLine(vertexList[i], vertexList[i + 1], lineColorWithOpacity, new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__.Dates(0, 1));
                    }
                }
                if (this._fill$1) {
                    var fillColorWithOpacity = this._fillColor$1._clone();
                    fillColorWithOpacity.a = Math.round(fillColorWithOpacity.a * this.get_opacity());
                    var pos = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(this.center.x, this.center.y, this.center.z);
                    vertexList.splice(0, 0, pos);
                    Annotation.triangleFanPointList.addShape(vertexList, fillColorWithOpacity, new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__.Dates(0, 1));
                }
                this.annotationDirty = false;
            }
        } else {
            if (onScreen) {
                var ctx = renderContext.device;
                ctx.save();
                ctx.globalAlpha = this.get_opacity();
                ctx.beginPath();
                ctx.arc(screenSpacePnt.x, screenSpacePnt.y, rad, 0, Math.PI * 2, true);
                ctx.lineWidth = this._strokeWidth$1;
                ctx.fillStyle = this._fillColor$1.toString();
                if (this._fill$1) {
                    ctx.fill();
                }
                ctx.globalAlpha = 1;
                ctx.strokeStyle = this._lineColor$1.toString();
                ctx.stroke();
                ctx.restore();
            }
        }
    },

    hitTest: function (renderContext, RA, dec, x, y) {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.emptyString(this.get_id())) {
            return false;
        }
        var rad = this._radius$1;
        if (!this._skyRelative$1) {
            rad *= renderContext.get_fovScale() / 3600;
        }
        return Annotation.separation(RA, dec, this._ra$1, this._dec$1) < rad;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Circle", [Circle, Circle$, Annotation]);


// wwtlib.Poly

function Poly() {
    this._points$1 = [];
    this._fill$1 = false;
    this._strokeWidth$1 = 1;
    this._lineColor$1 = _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_white();
    this._fillColor$1 = _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_white();
    Annotation.call(this);
}

var Poly$ = {
    addPoint: function (x, y) {
        Annotation.batchDirty = true;
        this._points$1.push(_coordinates_js__WEBPACK_IMPORTED_MODULE_6__.Coordinates.raDecTo3d(x / 15, y));
    },

    get_fill: function () {
        return this._fill$1;
    },

    set_fill: function (value) {
        Annotation.batchDirty = true;
        this._fill$1 = value;
        return value;
    },

    get_lineWidth: function () {
        return this._strokeWidth$1;
    },

    set_lineWidth: function (value) {
        Annotation.batchDirty = true;
        this._strokeWidth$1 = value;
        return value;
    },

    get_lineColor: function () {
        return this._lineColor$1.toString();
    },

    set_lineColor: function (value) {
        Annotation.batchDirty = true;
        this._lineColor$1 = _color_js__WEBPACK_IMPORTED_MODULE_5__.Color.fromName(value);
        return value;
    },

    get_fillColor: function () {
        return this._fillColor$1.toString();
    },

    set_fillColor: function (value) {
        Annotation.batchDirty = true;
        this._fillColor$1 = _color_js__WEBPACK_IMPORTED_MODULE_5__.Color.fromName(value);
        return value;
    },

    draw: function (renderContext) {
        if (renderContext.gl != null) {
            if (Annotation.batchDirty || this.annotationDirty) {
                //todo can we save this work for later?
                var vertexList = this._points$1;

                if (this._strokeWidth$1 > 0 && this._points$1.length > 1) {
                    var lineColorWithOpacity = this._lineColor$1._clone();
                    lineColorWithOpacity.a = Math.round(lineColorWithOpacity.a * this.get_opacity());
                    for (var i = 0; i < (this._points$1.length - 1); i++) {
                        Annotation.lineList.addLine(vertexList[i], vertexList[i + 1], lineColorWithOpacity, new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__.Dates(0, 1));
                    }
                    Annotation.lineList.addLine(vertexList[this._points$1.length - 1], vertexList[0], lineColorWithOpacity, new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__.Dates(0, 1));
                }
                if (this._fill$1) {
                    var fillColorWithOpacity = this._fillColor$1._clone();
                    fillColorWithOpacity.a = Math.round(fillColorWithOpacity.a * this.get_opacity());
                    var indexes = _graphics_tessellator_js__WEBPACK_IMPORTED_MODULE_4__.Tessellator.tesselateSimplePoly(vertexList);
                    for (var i = 0; i < indexes.length; i += 3) {
                        Annotation.triangleList.addSubdividedTriangles(vertexList[indexes[i]], vertexList[indexes[i + 1]], vertexList[indexes[i + 2]], fillColorWithOpacity, new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__.Dates(0, 1), 2);
                    }
                }
                this.annotationDirty = false;
            }
        } else {
            var ctx = renderContext.device;
            ctx.save();
            ctx.globalAlpha = this.get_opacity();
            ctx.beginPath();
            var first = true;
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._points$1);
            while ($enum1.moveNext()) {
                var pnt = $enum1.current;
                var screenSpacePnt = renderContext.WVP.transform(pnt);
                if (screenSpacePnt.z < 0) {
                    ctx.restore();
                    return;
                }
                if (_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.dot(renderContext.get_viewPoint(), pnt) < 0.75) {
                    ctx.restore();
                    return;
                }
                if (first) {
                    first = false;
                    ctx.moveTo(screenSpacePnt.x, screenSpacePnt.y);
                }
                else {
                    ctx.lineTo(screenSpacePnt.x, screenSpacePnt.y);
                }
            }
            ctx.closePath();
            ctx.lineWidth = this._strokeWidth$1;
            if (this._fill$1) {
                ctx.fillStyle = this._fillColor$1.toString();
                ctx.fill();
            }
            ctx.strokeStyle = this._lineColor$1.toString();
            ctx.globalAlpha = 1;
            ctx.stroke();
            ctx.restore();
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Poly", [Poly, Poly$, Annotation]);


// wwtlib.PolyLine

function PolyLine() {
    this._points$1 = [];
    this._strokeWidth$1 = 1;
    this._lineColor$1 = _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_white();
    Annotation.call(this);
}

var PolyLine$ = {
    addPoint: function (x, y) {
        Annotation.batchDirty = true;
        this._points$1.push(_coordinates_js__WEBPACK_IMPORTED_MODULE_6__.Coordinates.raDecTo3d(x / 15, y));
    },

    get_lineWidth: function () {
        return this._strokeWidth$1;
    },

    set_lineWidth: function (value) {
        Annotation.batchDirty = true;
        this._strokeWidth$1 = value;
        return value;
    },

    get_lineColor: function () {
        return this._lineColor$1.toString();
    },

    set_lineColor: function (value) {
        Annotation.batchDirty = true;
        this._lineColor$1 = _color_js__WEBPACK_IMPORTED_MODULE_5__.Color.fromName(value);
        return value;
    },

    draw: function (renderContext) {
        if (renderContext.gl != null) {
            if (Annotation.batchDirty || this.annotationDirty) {
                //todo can we save this work for later?
                var vertexList = this._points$1;
                if (this._strokeWidth$1 > 0) {
                    var lineColorWithOpacity = this._lineColor$1._clone();
                    lineColorWithOpacity.a = Math.round(lineColorWithOpacity.a * this.get_opacity());
                    for (var i = 0; i < (this._points$1.length - 1); i++) {
                        Annotation.lineList.addLine(vertexList[i], vertexList[i + 1], lineColorWithOpacity, new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__.Dates(0, 1));
                    }
                }
                this.annotationDirty = false;
            }
        } else {
            var ctx = renderContext.device;
            ctx.save();
            ctx.globalAlpha = this.get_opacity();
            var first = true;
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._points$1);
            while ($enum1.moveNext()) {
                var pnt = $enum1.current;
                var screenSpacePnt = renderContext.WVP.transform(pnt);
                if (screenSpacePnt.z < 0) {
                    ctx.restore();
                    return;
                }
                if (_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.dot(renderContext.get_viewPoint(), pnt) < 0.75) {
                    ctx.restore();
                    return;
                }
                if (first) {
                    first = false;
                    ctx.beginPath();
                    ctx.moveTo(screenSpacePnt.x, screenSpacePnt.y);
                }
                else {
                    ctx.lineTo(screenSpacePnt.x, screenSpacePnt.y);
                }
            }
            ctx.lineWidth = this._strokeWidth$1;
            ctx.strokeStyle = this._lineColor$1.toString();
            ctx.stroke();
            ctx.restore();
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PolyLine", [PolyLine, PolyLine$, Annotation]);


/***/ }),

/***/ "./esm/astrocalc.js":
/*!**************************!*\
  !*** ./esm/astrocalc.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AstroCalc: () => (/* binding */ AstroCalc),
/* harmony export */   AstroRaDec: () => (/* binding */ AstroRaDec),
/* harmony export */   RiseSetDetails: () => (/* binding */ RiseSetDetails)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util.js */ "./esm/util.js");
/* harmony import */ var _astrocalc_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./astrocalc/coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _astrocalc_date_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./astrocalc/date.js */ "./esm/astrocalc/date.js");
/* harmony import */ var _astrocalc_nutation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./astrocalc/nutation.js */ "./esm/astrocalc/nutation.js");
/* harmony import */ var _astrocalc_parallax_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./astrocalc/parallax.js */ "./esm/astrocalc/parallax.js");
/* harmony import */ var _astrocalc_physical_jupiter_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./astrocalc/physical_jupiter.js */ "./esm/astrocalc/physical_jupiter.js");
/* harmony import */ var _astrocalc_rise_transit_set_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./astrocalc/rise_transit_set.js */ "./esm/astrocalc/rise_transit_set.js");
/* harmony import */ var _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./astrocalc/elliptical.js */ "./esm/astrocalc/elliptical.js");
/* harmony import */ var _astrocalc_galilean_moons_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./astrocalc/galilean_moons.js */ "./esm/astrocalc/galilean_moons.js");
/* harmony import */ var _astrocalc_moon_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./astrocalc/moon.js */ "./esm/astrocalc/moon.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Some miscellaneous types relating to astronomy calculations.















// Global state

var galDetails = new _astrocalc_galilean_moons_js__WEBPACK_IMPORTED_MODULE_10__.GMDS();
var jupDetails = new _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_9__.EPD();
var jupPhisical = new _astrocalc_physical_jupiter_js__WEBPACK_IMPORTED_MODULE_7__.CAAPhysicalJupiterDetails();
var jDateLast = 0;


// wwtlib.AstroRaDec

function AstroRaDec(ra, dec, dist, shadow, eclipsed) {
    this.RA = 0;
    this.dec = 0;
    this.distance = 0;
    this.shadow = false;
    this.eclipsed = false;
    this.RA = ra;
    this.dec = dec;
    this.distance = dist;
    this.shadow = shadow;
    this.eclipsed = eclipsed;
}

var AstroRaDec$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("AstroRaDec", [AstroRaDec, AstroRaDec$, null]);


// wwtlib.RiseSetDetails

function RiseSetDetails(bValid, Rise, Transit, Set, neverRises) {
    this.bValid = false;
    this.rise = 0;
    this.transit = 0;
    this.set = 0;
    this.bNeverRises = false;
    this.bValid = bValid;
    this.rise = Rise;
    this.transit = Transit;
    this.set = Set;
    this.bNeverRises = neverRises;
}

var RiseSetDetails$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("RiseSetDetails", [RiseSetDetails, RiseSetDetails$, null]);


// wwtlib.AstroCalc

function AstroCalc() { }

AstroCalc.getPlanet = function (jDate, planetIn, locLat, locLong, locHeight) {
    var planet = planetIn;
    locLong = -locLong;

    if (planet < 9) {
        var Details = _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_9__.ELL.calculate(jDate, planetIn);
        var corrected = _astrocalc_parallax_js__WEBPACK_IMPORTED_MODULE_6__.CAAParallax.equatorial2Topocentric(Details.apparentGeocentricRA, Details.apparentGeocentricDeclination, Details.apparentGeocentricDistance, locLong, locLat, locHeight, jDate);
        return new AstroRaDec(corrected.x, corrected.y, Details.apparentGeocentricDistance, false, false);
    }
    else if (planet === 9) {
        var lat = _astrocalc_moon_js__WEBPACK_IMPORTED_MODULE_11__.CAAMoon.eclipticLatitude(jDate);
        var lng = _astrocalc_moon_js__WEBPACK_IMPORTED_MODULE_11__.CAAMoon.eclipticLongitude(jDate);
        var dis = _astrocalc_moon_js__WEBPACK_IMPORTED_MODULE_11__.CAAMoon.radiusVector(jDate) / 149598000;
        var epsilon = _astrocalc_nutation_js__WEBPACK_IMPORTED_MODULE_5__.CAANutation.trueObliquityOfEcliptic(jDate);
        var d = _astrocalc_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_3__.CT.ec2Eq(lng, lat, epsilon);
        var corrected = _astrocalc_parallax_js__WEBPACK_IMPORTED_MODULE_6__.CAAParallax.equatorial2Topocentric(d.x, d.y, dis, locLong, locLat, locHeight, jDate);
        return new AstroRaDec(corrected.x, corrected.y, dis, false, false);
    }
    else {
        if (jDate !== jDateLast) {
            jupDetails = _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_9__.ELL.calculate(jDate, 4);
            jupPhisical = _astrocalc_physical_jupiter_js__WEBPACK_IMPORTED_MODULE_7__.CAAPhysicalJupiter.calculate(jDate);
            var corrected = _astrocalc_parallax_js__WEBPACK_IMPORTED_MODULE_6__.CAAParallax.equatorial2Topocentric(jupDetails.apparentGeocentricRA, jupDetails.apparentGeocentricDeclination, jupDetails.apparentGeocentricDistance, locLong, locLat, locHeight, jDate);
            jupDetails.apparentGeocentricRA = corrected.x;
            jupDetails.apparentGeocentricDeclination = corrected.y;
            galDetails = _astrocalc_galilean_moons_js__WEBPACK_IMPORTED_MODULE_10__.GM.calculate(jDate);
            jDateLast = jDate;
        }
        var jupiterDiameter = 0.000954501;
        var scale = Math.atan(0.5 * (jupiterDiameter / jupDetails.apparentGeocentricDistance)) / 3.1415927 * 180;
        var raScale = (scale / Math.cos(jupDetails.apparentGeocentricDeclination / 180 * 3.1415927)) / 15;
        var xMoon = 0;
        var yMoon = 0;
        var zMoon = 0;
        var shadow = false;
        var eclipsed = false;
        switch (planet) {
            case 10: // IO
                xMoon = galDetails.satellite1.apparentRectangularCoordinates.x;
                yMoon = galDetails.satellite1.apparentRectangularCoordinates.y;
                zMoon = galDetails.satellite1.apparentRectangularCoordinates.z;
                eclipsed = galDetails.satellite1.bInEclipse;
                shadow = galDetails.satellite1.bInShadowTransit;
                break;
            case 11: // Europa
                xMoon = galDetails.satellite2.apparentRectangularCoordinates.x;
                yMoon = galDetails.satellite2.apparentRectangularCoordinates.y;
                zMoon = galDetails.satellite2.apparentRectangularCoordinates.z;
                eclipsed = galDetails.satellite2.bInEclipse;
                shadow = galDetails.satellite2.bInShadowTransit;
                break;
            case 12: // Ganymede
                xMoon = galDetails.satellite3.apparentRectangularCoordinates.x;
                yMoon = galDetails.satellite3.apparentRectangularCoordinates.y;
                zMoon = galDetails.satellite3.apparentRectangularCoordinates.z;
                eclipsed = galDetails.satellite3.bInEclipse;
                shadow = galDetails.satellite3.bInShadowTransit;
                break;
            case 13: // Callisto
                xMoon = galDetails.satellite4.apparentRectangularCoordinates.x;
                yMoon = galDetails.satellite4.apparentRectangularCoordinates.y;
                zMoon = galDetails.satellite4.apparentRectangularCoordinates.z;
                eclipsed = galDetails.satellite4.bInEclipse;
                shadow = galDetails.satellite4.bInShadowTransit;
                break;
            case 14: // Io shadow
                xMoon = galDetails.satellite1.apparentShadowRectangularCoordinates.x;
                yMoon = galDetails.satellite1.apparentShadowRectangularCoordinates.y;
                zMoon = galDetails.satellite1.apparentShadowRectangularCoordinates.z * 0.9;
                shadow = galDetails.satellite1.bInShadowTransit;
                break;
            case 15: // Europa shadow
                xMoon = galDetails.satellite2.apparentShadowRectangularCoordinates.x;
                yMoon = galDetails.satellite2.apparentShadowRectangularCoordinates.y;
                zMoon = galDetails.satellite2.apparentShadowRectangularCoordinates.z * 0.9;
                shadow = galDetails.satellite2.bInShadowTransit;
                break;
            case 16: // Ganymede shadow
                xMoon = galDetails.satellite3.apparentShadowRectangularCoordinates.x;
                yMoon = galDetails.satellite3.apparentShadowRectangularCoordinates.y;
                zMoon = galDetails.satellite3.apparentShadowRectangularCoordinates.z * 0.9;
                shadow = galDetails.satellite3.bInShadowTransit;
                break;
            case 17: // Callisto shadow
                xMoon = galDetails.satellite4.apparentShadowRectangularCoordinates.x;
                yMoon = galDetails.satellite4.apparentShadowRectangularCoordinates.y;
                zMoon = galDetails.satellite4.apparentShadowRectangularCoordinates.z * 0.9;
                shadow = galDetails.satellite4.bInShadowTransit;
                break;
        }
        var xTemp;
        var yTemp;
        var radians = jupPhisical.p / 180 * 3.1415927;
        xTemp = xMoon * Math.cos(radians) - yMoon * Math.sin(radians);
        yTemp = xMoon * Math.sin(radians) + yMoon * Math.cos(radians);
        xMoon = xTemp;
        yMoon = yTemp;
        return new AstroRaDec(jupDetails.apparentGeocentricRA - (xMoon * raScale), jupDetails.apparentGeocentricDeclination + yMoon * scale, jupDetails.apparentGeocentricDistance + (zMoon * jupiterDiameter / 2), shadow, eclipsed);
    }
};

AstroCalc.getJulianDay = function (year, month, day) {
    return _astrocalc_date_js__WEBPACK_IMPORTED_MODULE_4__.DT.dateToJD(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(year), _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(month), day, true);
};

AstroCalc.eclipticToJ2000 = function (l, b, jNow) {
    var radec = _astrocalc_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_3__.CT.ec2Eq(l, b, _astrocalc_nutation_js__WEBPACK_IMPORTED_MODULE_5__.CAANutation.trueObliquityOfEcliptic(jNow));
    return new AstroRaDec(radec.x, radec.y, 0, false, false);
};

AstroCalc.galacticToJ2000 = function (l, b) {
    var radec = _astrocalc_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_3__.CT.g2Eq(l, b);
    return new AstroRaDec(radec.x, radec.y, 0, false, false);
};

AstroCalc.j2000ToGalactic = function (ra, dec) {
    var galactic = _astrocalc_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_3__.CT.eq2G(ra, dec);
    return new AstroRaDec(galactic.x, galactic.y, 0, false, false);
};

AstroCalc.getRiseTrinsitSet = function (jd, lat, lng, ra1, dec1, ra2, dec2, ra3, dec3, type) {
    var alt = -0.5667;

    switch (type) {
        case 0: // Planet or star
            alt = -0.5667;
            break;
        case 1: // Sun
            alt = -0.8333;
            break;
        case 2:
            alt = 0.125;
            break;
    }
    var RiseTransitSetTime = _astrocalc_rise_transit_set_js__WEBPACK_IMPORTED_MODULE_8__.CAARiseTransitSet.rise(jd, ra1, dec1, ra2, dec2, ra3, dec3, lng, lat, alt);
    var neverRises = false;
    if (!RiseTransitSetTime.bValid) {
        neverRises = _util_js__WEBPACK_IMPORTED_MODULE_2__.Util.sign(lat) !== _util_js__WEBPACK_IMPORTED_MODULE_2__.Util.sign(dec2);
    }
    return new RiseSetDetails(RiseTransitSetTime.bValid, RiseTransitSetTime.rise, RiseTransitSetTime.transit, RiseTransitSetTime.set, neverRises);
};

var AstroCalc$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("AstroCalc", [AstroCalc, AstroCalc$, null]);


/***/ }),

/***/ "./esm/astrocalc/aberration.js":
/*!*************************************!*\
  !*** ./esm/astrocalc/aberration.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ABR: () => (/* binding */ ABR),
/* harmony export */   ACFT: () => (/* binding */ ACFT)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _sun_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sun.js */ "./esm/astrocalc/sun.js");
// Originally `AAABERRATION.CPP`
// "Purpose: Implementation for the algorithms for Aberration"
// Last update of original: PJN / 21-04-2005
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.






// ACFT

function ACFT(L2, L3, L4, L5, L6, L7, L8, Ldash, D, Mdash, F, xsin, xsint, xcos, xcost, ysin, ysint, ycos, ycost, zsin, zsint, zcos, zcost) {
    this.l2 = 0;
    this.l3 = 0;
    this.l4 = 0;
    this.l5 = 0;
    this.l6 = 0;
    this.l7 = 0;
    this.l8 = 0;
    this.ldash = 0;
    this.d = 0;
    this.mdash = 0;
    this.f = 0;
    this.xsin = 0;
    this.xsint = 0;
    this.xcos = 0;
    this.xcost = 0;
    this.ysin = 0;
    this.ysint = 0;
    this.ycos = 0;
    this.ycost = 0;
    this.zsin = 0;
    this.zsint = 0;
    this.zcos = 0;
    this.zcost = 0;
    this.l2 = L2;
    this.l3 = L3;
    this.l4 = L4;
    this.l5 = L5;
    this.l6 = L6;
    this.l7 = L7;
    this.l8 = L8;
    this.ldash = Ldash;
    this.d = D;
    this.mdash = Mdash;
    this.f = F;
    this.xsin = xsin;
    this.xsint = xsint;
    this.xcos = xcos;
    this.xcost = xcost;
    this.ysin = ysin;
    this.ysint = ysint;
    this.ycos = ycos;
    this.ycost = ycost;
    this.zsin = zsin;
    this.zsint = zsint;
    this.zcos = zcos;
    this.zcost = zcost;
}

var ACFT$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("ACFT", [ACFT, ACFT$, null]);


// Coefficients

const g_ACft = [new ACFT(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1719914, -2, -25, 0, 25, -13, 1578089, 156, 10, 32, 684185, -358), new ACFT(0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6434, 141, 28007, -107, 25697, -95, -5904, -130, 11141, -48, -2559, -55), new ACFT(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 715, 0, 0, 0, 6, 0, -657, 0, -15, 0, -282, 0), new ACFT(0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 715, 0, 0, 0, 0, 0, -656, 0, 0, 0, -285, 0), new ACFT(0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 486, -5, -236, -4, -216, -4, -446, 5, -94, 0, -193, 0), new ACFT(0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 159, 0, 0, 0, 2, 0, -147, 0, -6, 0, -61, 0), new ACFT(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, -59, 0), new ACFT(0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 39, 0, 0, 0, 0, 0, -36, 0, 0, 0, -16, 0), new ACFT(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 33, 0, -10, 0, -9, 0, -30, 0, -5, 0, -13, 0), new ACFT(0, 2, 0, -1, 0, 0, 0, 0, 0, 0, 0, 31, 0, 1, 0, 1, 0, -28, 0, 0, 0, -12, 0), new ACFT(0, 3, -8, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, -28, 0, 25, 0, 8, 0, 11, 0, 3, 0), new ACFT(0, 5, -8, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, -28, 0, -25, 0, -8, 0, -11, 0, -3, 0), new ACFT(2, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, -19, 0, 0, 0, -8, 0), new ACFT(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -19, 0, 0, 0, 0, 0, 17, 0, 0, 0, 8, 0), new ACFT(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, -16, 0, 0, 0, -7, 0), new ACFT(0, 1, 0, -2, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 15, 0, 1, 0, 7, 0), new ACFT(0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 16, 0, 0, 0, 1, 0, -15, 0, -3, 0, -6, 0), new ACFT(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 11, 0, -1, 0, -1, 0, -10, 0, -1, 0, -5, 0), new ACFT(2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -11, 0, -10, 0, 0, 0, -4, 0, 0, 0), new ACFT(0, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, -11, 0, -2, 0, -2, 0, 9, 0, -1, 0, 4, 0), new ACFT(0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, -8, 0, -8, 0, 6, 0, -3, 0, 3, 0), new ACFT(0, 3, 0, -2, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 9, 0, 0, 0, 4, 0), new ACFT(1, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, -9, 0, 0, 0, -4, 0), new ACFT(2, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, -8, 0, 0, 0, -4, 0), new ACFT(0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, -8, 0, 0, 0, -3, 0, 0, 0), new ACFT(2, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 8, 0, 0, 0, 3, 0, 0, 0), new ACFT(0, 3, -2, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, -8, 0, 0, 0, -3, 0), new ACFT(0, 0, 0, 0, 0, 0, 0, 1, 2, -1, 0, 8, 0, 0, 0, 0, 0, -7, 0, 0, 0, -3, 0), new ACFT(8, -12, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, -7, 0, -6, 0, 4, 0, -3, 0, 2, 0), new ACFT(8, -14, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, -7, 0, 6, 0, -4, 0, 3, 0, -2, 0), new ACFT(0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, -5, 0, -4, 0, 5, 0, -2, 0, 2, 0), new ACFT(3, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, -2, 0, -7, 0, 1, 0, -4, 0), new ACFT(0, 2, 0, -2, 0, 0, 0, 0, 0, 0, 0, 4, 0, -6, 0, -5, 0, -4, 0, -2, 0, -2, 0), new ACFT(3, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, -6, 0, 0, 0, -3, 0, 0, 0), new ACFT(0, 2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, -5, 0, -4, 0, -5, 0, -2, 0, -2, 0), new ACFT(0, 0, 0, 0, 0, 0, 0, 1, -2, 0, 0, 5, 0, 0, 0, 0, 0, -5, 0, 0, 0, -2, 0)];


// ABR - was CAAAberration

function ABR() { }

ABR.earthVelocity = function (JD) {
    var T = (JD - 2451545) / 36525;
    var L2 = 3.1761467 + 1021.3285546 * T;
    var L3 = 1.7534703 + 628.3075849 * T;
    var L4 = 6.2034809 + 334.0612431 * T;
    var L5 = 0.5995465 + 52.9690965 * T;
    var L6 = 0.8740168 + 21.3299095 * T;
    var L7 = 5.4812939 + 7.4781599 * T;
    var L8 = 5.3118863 + 3.8133036 * T;
    var Ldash = 3.8103444 + 8399.6847337 * T;
    var D = 5.1984667 + 7771.3771486 * T;
    var Mdash = 2.3555559 + 8328.6914289 * T;
    var F = 1.6279052 + 8433.4661601 * T;
    var velocity = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.C3D();
    var nAberrationCoefficients = g_ACft.length;
    for (var i = 0; i < nAberrationCoefficients; i++) {
        var Argument = g_ACft[i].l2 * L2 + g_ACft[i].l3 * L3 + g_ACft[i].l4 * L4 + g_ACft[i].l5 * L5 + g_ACft[i].l6 * L6 + g_ACft[i].l7 * L7 + g_ACft[i].l8 * L8 + g_ACft[i].ldash * Ldash + g_ACft[i].d * D + g_ACft[i].mdash * Mdash + g_ACft[i].f * F;
        velocity.x += (g_ACft[i].xsin + g_ACft[i].xsint * T) * Math.sin(Argument);
        velocity.x += (g_ACft[i].xcos + g_ACft[i].xcost * T) * Math.cos(Argument);
        velocity.y += (g_ACft[i].ysin + g_ACft[i].ysint * T) * Math.sin(Argument);
        velocity.y += (g_ACft[i].ycos + g_ACft[i].ycost * T) * Math.cos(Argument);
        velocity.z += (g_ACft[i].zsin + g_ACft[i].zsint * T) * Math.sin(Argument);
        velocity.z += (g_ACft[i].zcos + g_ACft[i].zcost * T) * Math.cos(Argument);
    }
    return velocity;
};

ABR.eclipticAberration = function (Lambda, Beta, JD) {
    var aberration = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.COR();
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var e = 0.016708634 - 4.2037E-05 * T - 1.267E-07 * Tsquared;
    var pi = 102.93735 + 1.71946 * T + 0.00046 * Tsquared;
    var k = 20.49552;
    var SunLongitude = _sun_js__WEBPACK_IMPORTED_MODULE_2__.CAASun.geometricEclipticLongitude(JD);
    pi = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(pi);
    Lambda = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Lambda);
    Beta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Beta);
    SunLongitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(SunLongitude);
    aberration.x = (-k * Math.cos(SunLongitude - Lambda) + e * k * Math.cos(pi - Lambda)) / Math.cos(Beta) / 3600;
    aberration.y = -k * Math.sin(Beta) * (Math.sin(SunLongitude - Lambda) - e * Math.sin(pi - Lambda)) / 3600;
    return aberration;
};

ABR.equatorialAberration = function (Alpha, Delta, JD) {
    Alpha = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Alpha * 15);
    Delta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta);
    var cosAlpha = Math.cos(Alpha);
    var sinAlpha = Math.sin(Alpha);
    var cosDelta = Math.cos(Delta);
    var sinDelta = Math.sin(Delta);
    var velocity = ABR.earthVelocity(JD);
    var aberration = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.COR();
    aberration.x = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2H((velocity.y * cosAlpha - velocity.x * sinAlpha) / (17314463350 * cosDelta));
    aberration.y = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(-(((velocity.x * cosAlpha + velocity.y * sinAlpha) * sinDelta - velocity.z * cosDelta) / 17314463350));
    return aberration;
};

var ABR$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("ABR", [ABR, ABR$, null]);


/***/ }),

/***/ "./esm/astrocalc/angular_separation.js":
/*!*********************************************!*\
  !*** ./esm/astrocalc/angular_separation.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ASEP: () => (/* binding */ ASEP)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
// Originally `AAANGULARSEPARATION.CPP`
// "Purpose: Implementation for the algorithms which obtain various separation distances between celestial objects"
// Last update of original: PJN / 29-12-2003
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.





// ASEP - was CAAAngularSeparation

function ASEP() { }

ASEP.separation = function (Alpha1, Delta1, Alpha2, Delta2) {
    Delta1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta1);
    Delta2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta2);
    Alpha1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(Alpha1);
    Alpha2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(Alpha2);
    var x = Math.cos(Delta1) * Math.sin(Delta2) - Math.sin(Delta1) * Math.cos(Delta2) * Math.cos(Alpha2 - Alpha1);
    var y = Math.cos(Delta2) * Math.sin(Alpha2 - Alpha1);
    var z = Math.sin(Delta1) * Math.sin(Delta2) + Math.cos(Delta1) * Math.cos(Delta2) * Math.cos(Alpha2 - Alpha1);
    var vvalue = Math.atan2(Math.sqrt(x * x + y * y), z);
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue);
    if (vvalue < 0) {
        vvalue += 180;
    }
    return vvalue;
};

ASEP.positionAngle = function (alpha1, delta1, alpha2, delta2) {
    var Alpha1;
    var Delta1;
    var Alpha2;
    var Delta2;
    Delta1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(delta1);
    Delta2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(delta2);
    Alpha1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(alpha1);
    Alpha2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(alpha2);
    var DeltaAlpha = Alpha1 - Alpha2;
    var demoninator = Math.cos(Delta2) * Math.tan(Delta1) - Math.sin(Delta2) * Math.cos(DeltaAlpha);
    var numerator = Math.sin(DeltaAlpha);
    var vvalue = Math.atan2(numerator, demoninator);
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue);
    return vvalue;
};

ASEP.distanceFromGreatArc = function (Alpha1, Delta1, Alpha2, Delta2, Alpha3, Delta3) {
    Delta1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta1);
    Delta2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta2);
    Delta3 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta3);
    Alpha1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(Alpha1);
    Alpha2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(Alpha2);
    Alpha3 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(Alpha3);
    var X1 = Math.cos(Delta1) * Math.cos(Alpha1);
    var X2 = Math.cos(Delta2) * Math.cos(Alpha2);
    var Y1 = Math.cos(Delta1) * Math.sin(Alpha1);
    var Y2 = Math.cos(Delta2) * Math.sin(Alpha2);
    var Z1 = Math.sin(Delta1);
    var Z2 = Math.sin(Delta2);
    var A = Y1 * Z2 - Z1 * Y2;
    var B = Z1 * X2 - X1 * Z2;
    var C = X1 * Y2 - Y1 * X2;
    var m = Math.tan(Alpha3);
    var n = Math.tan(Delta3) / Math.cos(Alpha3);
    var vvalue = Math.asin((A + B * m + C * n) / (Math.sqrt(A * A + B * B + C * C) * Math.sqrt(1 + m * m + n * n)));
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue);
    if (vvalue < 0) {
        vvalue = Math.abs(vvalue);
    }
    return vvalue;
};

var ASEP$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("ASEP", [ASEP, ASEP$, null]);


/***/ }),

/***/ "./esm/astrocalc/coordinate_transformation.js":
/*!****************************************************!*\
  !*** ./esm/astrocalc/coordinate_transformation.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C3D: () => (/* binding */ C3D),
/* harmony export */   COR: () => (/* binding */ COR),
/* harmony export */   CT: () => (/* binding */ CT)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
// Originally `AACOORDINATETRANSFORMATION.CPP`
// "Purpose: Implementation for the algorithms which convert between the various celestial coordinate systems"
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.




// COR - was CAA2DCoordinate

function COR() {
    this.x = 0;
    this.y = 0;
    this.x = 0;
    this.y = 0;
}

COR.create = function (x, y) {
    var item = new COR();
    item.x = x;
    item.y = y;
    return item;
};

var COR$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("COR", [COR, COR$, null]);


// C3D - was CAA3DCoordinate

function C3D() {
    this.x = 0;
    this.y = 0;
    this.z = 0;
    this.x = 0;
    this.y = 0;
    this.z = 0;
}

C3D.create = function (x, y, z) {
    var item = new C3D();
    item.x = x;
    item.y = y;
    item.z = z;
    return item;
};

var C3D$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("C3D", [C3D, C3D$, null]);


// CT - was CAACoordinateTransformation

function CT() {
}

CT.eq2Ec = function (Alpha, Delta, Epsilon) {
    Alpha = CT.h2R(Alpha);
    Delta = CT.d2R(Delta);
    Epsilon = CT.d2R(Epsilon);
    var Ecliptic = new COR();
    Ecliptic.x = CT.r2D(Math.atan2(Math.sin(Alpha) * Math.cos(Epsilon) + Math.tan(Delta) * Math.sin(Epsilon), Math.cos(Alpha)));
    if (Ecliptic.x < 0) {
        Ecliptic.x += 360;
    }
    Ecliptic.y = CT.r2D(Math.asin(Math.sin(Delta) * Math.cos(Epsilon) - Math.cos(Delta) * Math.sin(Epsilon) * Math.sin(Alpha)));
    return Ecliptic;
};

CT.ec2Eq = function (Lambda, Beta, Epsilon) {
    Lambda = CT.d2R(Lambda);
    Beta = CT.d2R(Beta);
    Epsilon = CT.d2R(Epsilon);
    var Equatorial = new COR();
    Equatorial.x = CT.r2H(Math.atan2(Math.sin(Lambda) * Math.cos(Epsilon) - Math.tan(Beta) * Math.sin(Epsilon), Math.cos(Lambda)));
    if (Equatorial.x < 0) {
        Equatorial.x += 24;
    }
    Equatorial.y = CT.r2D(Math.asin(Math.sin(Beta) * Math.cos(Epsilon) + Math.cos(Beta) * Math.sin(Epsilon) * Math.sin(Lambda)));
    return Equatorial;
};

CT.eq2H = function (LocalHourAngle, Delta, Latitude) {
    LocalHourAngle = CT.h2R(LocalHourAngle);
    Delta = CT.d2R(Delta);
    Latitude = CT.d2R(Latitude);
    var Horizontal = new COR();
    Horizontal.x = CT.r2D(Math.atan2(Math.sin(LocalHourAngle), Math.cos(LocalHourAngle) * Math.sin(Latitude) - Math.tan(Delta) * Math.cos(Latitude)));
    if (Horizontal.x < 0) {
        Horizontal.x += 360;
    }
    Horizontal.y = CT.r2D(Math.asin(Math.sin(Latitude) * Math.sin(Delta) + Math.cos(Latitude) * Math.cos(Delta) * Math.cos(LocalHourAngle)));
    return Horizontal;
};

CT.h2Eq = function (Azimuth, Altitude, Latitude) {
    Azimuth = CT.d2R(Azimuth);
    Altitude = CT.d2R(Altitude);
    Latitude = CT.d2R(Latitude);
    var Equatorial = new COR();
    Equatorial.x = CT.r2H(Math.atan2(Math.sin(Azimuth), Math.cos(Azimuth) * Math.sin(Latitude) + Math.tan(Altitude) * Math.cos(Latitude)));
    if (Equatorial.x < 0) {
        Equatorial.x += 24;
    }
    Equatorial.y = CT.r2D(Math.asin(Math.sin(Latitude) * Math.sin(Altitude) - Math.cos(Latitude) * Math.cos(Altitude) * Math.cos(Azimuth)));
    return Equatorial;
};

CT.eq2G = function (Alpha, Delta) {
    Alpha = 192.25 - CT.h2D(Alpha);
    Alpha = CT.d2R(Alpha);
    Delta = CT.d2R(Delta);
    var Galactic = new COR();
    Galactic.x = CT.r2D(Math.atan2(Math.sin(Alpha), Math.cos(Alpha) * Math.sin(CT.d2R(27.4)) - Math.tan(Delta) * Math.cos(CT.d2R(27.4))));
    Galactic.x = 303 - Galactic.x;
    if (Galactic.x >= 360) {
        Galactic.x -= 360;
    }
    Galactic.y = CT.r2D(Math.asin(Math.sin(Delta) * Math.sin(CT.d2R(27.4)) + Math.cos(Delta) * Math.cos(CT.d2R(27.4)) * Math.cos(Alpha)));
    return Galactic;
};

CT.g2Eq = function (l, b) {
    l -= 123;
    l = CT.d2R(l);
    b = CT.d2R(b);
    var Equatorial = new COR();
    Equatorial.x = CT.r2D(Math.atan2(Math.sin(l), Math.cos(l) * Math.sin(CT.d2R(27.4)) - Math.tan(b) * Math.cos(CT.d2R(27.4))));
    Equatorial.x += 12.25;
    if (Equatorial.x < 0) {
        Equatorial.x += 360;
    }
    Equatorial.x = CT.d2H(Equatorial.x);
    Equatorial.y = CT.r2D(Math.asin(Math.sin(b) * Math.sin(CT.d2R(27.4)) + Math.cos(b) * Math.cos(CT.d2R(27.4)) * Math.cos(l)));
    return Equatorial;
};

CT.d2R = function (Degrees) {
    return Degrees * 0.0174532925199433;
};

CT.r2D = function (Radians) {
    return Radians * 57.2957795130823;
};

CT.r2H = function (Radians) {
    return Radians * 3.81971863420549;
};

CT.h2R = function (Hours) {
    return Hours * 0.261799387799149;
};

CT.h2D = function (Hours) {
    return Hours * 15;
};

CT.d2H = function (Degrees) {
    return Degrees / 15;
};

CT.PI = function () {
    return 3.14159265358979;
};

CT.m360 = function (Degrees) {
    return Degrees - Math.floor(Degrees / 360) * 360;
};

CT.m24 = function (HourAngle) {
    return HourAngle - Math.floor(HourAngle / 24) * 24;
};

CT.dmS2D = function (Degrees, Minutes, Seconds) {
    return CT.dmS2Dp(Degrees, Minutes, Seconds, true);
};

CT.dmS2Dp = function (Degrees, Minutes, Seconds, bPositive) {
    if (!bPositive) {
        console.assert(Degrees >= 0);
        console.assert(Minutes >= 0);
        console.assert(Seconds >= 0);
    }
    if (bPositive) {
        return Degrees + Minutes / 60 + Seconds / 3600;
    }
    else {
        return -Degrees - Minutes / 60 - Seconds / 3600;
    }
};

var CT$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CT", [CT, CT$, null]);


/***/ }),

/***/ "./esm/astrocalc/date.js":
/*!*******************************!*\
  !*** ./esm/astrocalc/date.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CalD: () => (/* binding */ CalD),
/* harmony export */   DAY_OF_WEEK: () => (/* binding */ DAY_OF_WEEK),
/* harmony export */   DT: () => (/* binding */ DT)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
// Originally `AADATE.CPP`
// "Purpose: Implementation for the algorithms which convert between the
// Gregorian and Julian calendars and the Julian Day"
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.





// CalD

function CalD() {
    this.year = 0;
    this.month = 0;
    this.day = 0;
    this.year = 0;
    this.month = 0;
    this.day = 0;
}

CalD.create = function (year, month, day) {
    var item = new CalD();
    item.year = year;
    item.month = month;
    item.day = day;
    return item;
};

var CalD$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("CalD", [CalD, CalD$, null]);


// DAY_OF_WEEK

var DAY_OF_WEEK = {
    SUNDAY: 0,
    MONDAY: 1,
    TUESDAY: 2,
    WEDNESDAY: 3,
    THURSDAY: 4,
    FRIDAY: 5,
    SATURDAY: 6
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("DAY_OF_WEEK", DAY_OF_WEEK);


// DT

function DT() {
    this.m_dblJulian = 0;
    this.m_bGregorianCalendar = false;
    this.m_dblJulian = 0;
    this.m_bGregorianCalendar = false;
}

DT.create = function (Year, Month, Day, bGregorianCalendar) {
    var item = new DT();
    item.set(Year, Month, Day, 0, 0, 0, bGregorianCalendar);
    return item;
};

DT.createHMS = function (Year, Month, Day, Hour, Minute, Second, bGregorianCalendar) {
    var item = new DT();
    item.set(Year, Month, Day, Hour, Minute, Second, bGregorianCalendar);
    return item;
};

DT.createJD = function (JD, bGregorianCalendar) {
    var item = new DT();
    item.setJD(JD, bGregorianCalendar);
    return item;
};

DT.dateToJD = function (Year, Month, Day, bGregorianCalendar) {
    var Y = Year;
    var M = Month;
    if (M < 3) {
        Y = Y - 1;
        M = M + 12;
    }
    var A = 0;
    var B = 0;
    if (bGregorianCalendar) {
        A = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((Y / 100));
        B = 2 - A + _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((A / 4));
    }
    return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((365.25 * (Y + 4716))) + _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((30.6001 * (M + 1))) + Day + B - 1524.5;
};

DT.isLeap = function (Year, bGregorianCalendar) {
    if (bGregorianCalendar) {
        if (!(Year % 100)) {
            return (!(Year % 400)) ? true : false;
        }
        else {
            return (!(Year % 4)) ? true : false;
        }
    }
    else {
        return (!(Year % 4)) ? true : false;
    }
};

DT.afterPapalReform = function (Year, Month, Day) {
    return ((Year > 1582) || ((Year === 1582) && (Month > 10)) || ((Year === 1582) && (Month === 10) && (Day >= 15)));
};

DT.afterPapalReformJD = function (JD) {
    return (JD >= 2299160.5);
};

DT.dayOfYearJD = function (JD, Year, bGregorianCalendar) {
    return JD - DT.dateToJD(Year, 1, 1, bGregorianCalendar) + 1;
};

DT.daysInMonthForMonth = function (Month, bLeap) {
    console.assert(Month >= 1 && Month <= 12);
    var MonthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 0];
    if (bLeap) {
        MonthLength[1]++;
    }
    return MonthLength[Month - 1];
};

DT.INT = function (vvalue) {
    if (vvalue >= 0) {
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(vvalue);
    }
    else {
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((vvalue - 1));
    }
};

var DT$ = {
    julian: function () {
        return this.m_dblJulian;
    },

    day: function () {
        var D = this.get();
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(D[2]);
    },

    month: function () {
        var D = this.get();
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(D[1]);
    },

    year: function () {
        var D = this.get();
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(D[0]);
    },

    hour: function () {
        var D = this.get();
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(D[3]);
    },

    minute: function () {
        var D = this.get();
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(D[4]);
    },

    second: function () {
        var D = this.get();
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(D[5]);
    },

    set: function (Year, Month, Day, Hour, Minute, Second, bGregorianCalendar) {
        var dblDay = Day + (Hour / 24) + (Minute / 1440) + (Second / 86400);
        this.setJD(DT.dateToJD(Year, Month, dblDay, bGregorianCalendar), bGregorianCalendar);
    },

    setJD: function (JD, bGregorianCalendar) {
        this.m_dblJulian = JD;
        this.setInGregorianCalendar(bGregorianCalendar);
    },

    setInGregorianCalendar: function (bGregorianCalendar) {
        var bAfterPapalReform = (this.m_dblJulian >= 2299160.5);
        this.m_bGregorianCalendar = bGregorianCalendar && bAfterPapalReform;
    },

    get: function () {
        var Year;
        var Month;
        var Day;
        var Hour;
        var Minute;
        var Second;
        var JD = this.m_dblJulian + 0.5;
        var tempZ = Math.floor(JD);
        var F = JD - tempZ;
        var Z = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(tempZ);
        var A;
        if (this.m_bGregorianCalendar) {
            var alpha = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((Z - 1867216.25) / 36524.25));
            A = Z + 1 + alpha - _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((alpha / 4));
        }
        else {
            A = Z;
        }
        var B = A + 1524;
        var C = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((B - 122.1) / 365.25));
        var D = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((365.25 * C));
        var E = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((B - D) / 30.6001));
        var dblDay = B - D - _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((30.6001 * E)) + F;
        Day = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(dblDay);
        if (E < 14) {
            Month = E - 1;
        }
        else {
            Month = E - 13;
        }
        if (Month > 2) {
            Year = C - 4716;
        }
        else {
            Year = C - 4715;
        }
        tempZ = Math.floor(dblDay);
        F = dblDay - tempZ;
        Hour = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((F * 24));
        Minute = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((F - Hour / 24) * 1440));
        Second = (F - (Hour / 24) - (Minute / 1440)) * 86400;
        return [Year, Month, Day, Hour, Minute, Second];
    },

    dayOfWeek: function () {
        return (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((this.m_dblJulian + 1.5)) % 7);
    },

    dayOfYear: function () {
        var year = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(this.get()[0]);
        return DT.dayOfYearJD(this.m_dblJulian, year, DT.afterPapalReform(year, 1, 1));
    },

    daysInMonth: function () {
        var D = this.get();
        var Year = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(D[0]);
        var Month = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(D[1]);
        return DT.daysInMonthForMonth(Month, DT.isLeap(Year, this.m_bGregorianCalendar));
    },

    daysInYear: function () {
        var D = this.get();
        var Year = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(D[0]);
        if (DT.isLeap(Year, this.m_bGregorianCalendar)) {
            return 366;
        }
        else {
            return 365;
        }
    },

    leap: function () {
        return DT.isLeap(this.year(), this.m_bGregorianCalendar);
    },

    inGregorianCalendar: function () {
        return this.m_bGregorianCalendar;
    },

    fractionalYear: function () {
        var D = this.get();
        var Year = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(D[0]);
        var Month = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(D[1]);
        var Day = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(D[2]);
        var Hour = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(D[3]);
        var Minute = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(D[4]);
        var Second = D[5];
        var DaysInYear;
        if (DT.isLeap(Year, this.m_bGregorianCalendar)) {
            DaysInYear = 366;
        }
        else {
            DaysInYear = 365;
        }
        return Year + ((this.m_dblJulian - DT.dateToJD(Year, 1, 1, DT.afterPapalReform(Year, 1, 1))) / DaysInYear);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("DT", [DT, DT$, null]);


/***/ }),

/***/ "./esm/astrocalc/dynamical_time.js":
/*!*****************************************!*\
  !*** ./esm/astrocalc/dynamical_time.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DYT: () => (/* binding */ DYT)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./date.js */ "./esm/astrocalc/date.js");
// Originally `AADYNAMICALTIME.CPP`
// "Purpose: Implementation for the algorithms which calculate the difference between Dynamical Time and Universal Time"
// Last update of original: PJN / 28-01-2007
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.






// Constants

const deltaTTable = [121, 112, 103, 95, 88, 82, 77, 72, 68, 63, 60, 56, 53, 51, 48, 46, 44, 42, 40, 38, 35, 33, 31, 29, 26, 24, 22, 20, 18, 16, 14, 12, 11, 10, 9, 8, 7, 7, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 15, 15, 14, 13, 13.1, 12.5, 12.2, 12, 12, 12, 12, 12, 12, 11.9, 11.6, 11, 10.2, 9.2, 8.2, 7.1, 6.2, 5.6, 5.4, 5.3, 5.4, 5.6, 5.9, 6.2, 6.5, 6.8, 7.1, 7.3, 7.5, 7.6, 7.7, 7.3, 6.2, 5.2, 2.7, 1.4, -1.2, -2.8, -3.8, -4.8, -5.5, -5.3, -5.6, -5.7, -5.9, -6, -6.3, -6.5, -6.2, -4.7, -2.8, -0.1, 2.6, 5.3, 7.7, 10.4, 13.3, 16, 18.2, 20.2, 21.2, 22.4, 23.5, 23.8, 24.3, 24, 23.9, 23.9, 23.7, 24, 24.3, 25.3, 26.2, 27.3, 28.2, 29.1, 30, 30.7, 31.4, 32.2, 33.1, 34, 35, 36.5, 38.3, 40.18, 42.2, 44.5, 46.5, 48.5, 50.54, 52.2, 53.8, 54.9, 55.8, 56.86, 58.31, 59.99, 61.63, 62.97];


// DYT - was CAADynamicalTime

function DYT() { }

DYT.deltaT = function (JD) {
    var date = _date_js__WEBPACK_IMPORTED_MODULE_2__.DT.createJD(JD, _date_js__WEBPACK_IMPORTED_MODULE_2__.DT.afterPapalReformJD(JD));
    var y = date.fractionalYear();
    var T = (y - 2000) / 100;
    var Delta;
    if (y < 948) {
        Delta = 2177 + (497 * T) + (44.1 * T * T);
    }
    else if (y < 1620) {
        Delta = 102 + (102 * T) + (25.3 * T * T);
    }
    else if (y < 1998) {
        var Index = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(((y - 1620) / 2));
        console.assert(Index < deltaTTable.length);
        y = y / 2 - Index - 810;
        Delta = (deltaTTable[Index] + (deltaTTable[Index + 1] - deltaTTable[Index]) * y);
    }
    else if (y <= 2000) {
        var nLookupSize = deltaTTable.length;
        Delta = deltaTTable[nLookupSize - 1];
    }
    else if (y < 2100) {
        Delta = 102 + (102 * T) + (25.3 * T * T) + 0.37 * (y - 2100);
    }
    else {
        Delta = 102 + (102 * T) + (25.3 * T * T);
    }
    return Delta;
};

var DYT$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("DYT", [DYT, DYT$, null]);


/***/ }),

/***/ "./esm/astrocalc/earth.js":
/*!********************************!*\
  !*** ./esm/astrocalc/earth.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAEarth: () => (/* binding */ CAAEarth),
/* harmony export */   VSC: () => (/* binding */ VSC)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
// Originally `AAEARTH.CPP`
// "Purpose: Implementation for the algorithms which calculate the position of Earth"
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.





// VSC

function VSC(a, b, c) {
    this.a = 0;
    this.b = 0;
    this.c = 0;
    this.a = a;
    this.b = b;
    this.c = c;
}

var VSC$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("VSC", [VSC, VSC$, null]);


// Coefficients

const g_L0EarthCoefficients = [new VSC(175347046, 0, 0), new VSC(3341656, 4.6692568, 6283.07585), new VSC(34894, 4.6261, 12566.1517), new VSC(3497, 2.7441, 5753.3849), new VSC(3418, 2.8289, 3.5231), new VSC(3136, 3.6277, 77713.7715), new VSC(2676, 4.4181, 7860.4194), new VSC(2343, 6.1352, 3930.2097), new VSC(1324, 0.7425, 11506.7698), new VSC(1273, 2.0371, 529.691), new VSC(1199, 1.1096, 1577.3435), new VSC(990, 5.233, 5884.927), new VSC(902, 2.045, 26.298), new VSC(857, 3.508, 398.149), new VSC(780, 1.179, 5223.694), new VSC(753, 2.533, 5507.553), new VSC(505, 4.583, 18849.228), new VSC(492, 4.205, 775.523), new VSC(357, 2.92, 0.067), new VSC(317, 5.849, 11790.629), new VSC(284, 1.899, 796.288), new VSC(271, 0.315, 10977.079), new VSC(243, 0.345, 5486.778), new VSC(206, 4.806, 2544.314), new VSC(205, 1.869, 5573.143), new VSC(202, 2.458, 6069.777), new VSC(156, 0.833, 213.299), new VSC(132, 3.411, 2942.463), new VSC(126, 1.083, 20.775), new VSC(115, 0.645, 0.98), new VSC(103, 0.636, 4694.003), new VSC(102, 0.976, 15720.839), new VSC(102, 4.267, 7.114), new VSC(99, 6.21, 2146.17), new VSC(98, 0.68, 155.42), new VSC(86, 5.98, 161000.69), new VSC(85, 1.3, 6275.96), new VSC(85, 3.67, 71430.7), new VSC(80, 1.81, 17260.15), new VSC(79, 3.04, 12036.46), new VSC(75, 1.76, 5088.63), new VSC(74, 3.5, 3154.69), new VSC(74, 4.68, 801.82), new VSC(70, 0.83, 9437.76), new VSC(62, 3.98, 8827.39), new VSC(61, 1.82, 7084.9), new VSC(57, 2.78, 6286.6), new VSC(56, 4.39, 14143.5), new VSC(56, 3.47, 6279.55), new VSC(52, 0.19, 12139.55), new VSC(52, 1.33, 1748.02), new VSC(51, 0.28, 5856.48), new VSC(49, 0.49, 1194.45), new VSC(41, 5.37, 8429.24), new VSC(41, 2.4, 19651.05), new VSC(39, 6.17, 10447.39), new VSC(37, 6.04, 10213.29), new VSC(37, 2.57, 1059.38), new VSC(36, 1.71, 2352.87), new VSC(36, 1.78, 6812.77), new VSC(33, 0.59, 17789.85), new VSC(30, 0.44, 83996.85), new VSC(30, 2.74, 1349.87), new VSC(25, 3.16, 4690.48)];
const g_L1EarthCoefficients = [new VSC(628331966747, 0, 0), new VSC(206059, 2.678235, 6283.07585), new VSC(4303, 2.6351, 12566.1517), new VSC(425, 1.59, 3.523), new VSC(119, 5.796, 26.298), new VSC(109, 2.966, 1577.344), new VSC(93, 2.59, 18849.23), new VSC(72, 1.14, 529.69), new VSC(68, 1.87, 398.15), new VSC(67, 4.41, 5507.55), new VSC(59, 2.89, 5223.69), new VSC(56, 2.17, 155.42), new VSC(45, 0.4, 796.3), new VSC(36, 0.47, 775.52), new VSC(29, 2.65, 7.11), new VSC(21, 5.43, 0.98), new VSC(19, 1.85, 5486.78), new VSC(19, 4.97, 213.3), new VSC(17, 2.99, 6275.96), new VSC(16, 0.03, 2544.31), new VSC(16, 1.43, 2146.17), new VSC(15, 1.21, 10977.08), new VSC(12, 2.83, 1748.02), new VSC(12, 3.26, 5088.63), new VSC(12, 5.27, 1194.45), new VSC(12, 2.08, 4694), new VSC(11, 0.77, 553.57), new VSC(10, 1.3, 6286.6), new VSC(10, 4.24, 1349.87), new VSC(9, 2.7, 242.73), new VSC(9, 5.64, 951.72), new VSC(8, 5.3, 2352.87), new VSC(6, 2.65, 9437.76), new VSC(6, 4.67, 4690.48)];
const g_L2EarthCoefficients = [new VSC(52919, 0, 0), new VSC(8720, 1.0721, 6283.0758), new VSC(309, 0.867, 12566.152), new VSC(27, 0.05, 3.52), new VSC(16, 5.19, 26.3), new VSC(16, 3.68, 155.42), new VSC(10, 0.76, 18849.23), new VSC(9, 2.06, 77713.77), new VSC(7, 0.83, 775.52), new VSC(5, 4.66, 1577.34), new VSC(4, 1.03, 7.11), new VSC(4, 3.44, 5573.14), new VSC(3, 5.14, 796.3), new VSC(3, 6.05, 5507.55), new VSC(3, 1.19, 242.73), new VSC(3, 6.12, 529.69), new VSC(3, 0.31, 398.15), new VSC(3, 2.28, 553.57), new VSC(2, 4.38, 5223.69), new VSC(2, 3.75, 0.98)];
const g_L3EarthCoefficients = [new VSC(289, 5.844, 6283.076), new VSC(35, 0, 0), new VSC(17, 5.49, 12566.15), new VSC(3, 5.2, 155.42), new VSC(1, 4.72, 3.52), new VSC(1, 5.3, 18849.23), new VSC(1, 5.97, 242.73)];
const g_L4EarthCoefficients = [new VSC(114, 3.142, 0), new VSC(8, 4.13, 6283.08), new VSC(1, 3.84, 12566.15)];
const g_L5EarthCoefficients = [new VSC(1, 3.14, 0)];
const g_B0EarthCoefficients = [new VSC(280, 3.199, 84334.662), new VSC(102, 5.422, 5507.553), new VSC(80, 3.88, 5223.69), new VSC(44, 3.7, 2352.87), new VSC(32, 4, 1577.34)];
const g_B1EarthCoefficients = [new VSC(9, 3.9, 5507.55), new VSC(6, 1.73, 5223.69)];
const g_B2EarthCoefficients = [new VSC(22378, 3.38509, 10213.28555), new VSC(282, 0, 0), new VSC(173, 5.256, 20426.571), new VSC(27, 3.87, 30639.86)];
const g_B3EarthCoefficients = [new VSC(647, 4.992, 10213.286), new VSC(20, 3.14, 0), new VSC(6, 0.77, 20426.57), new VSC(3, 5.44, 30639.86)];
const g_B4EarthCoefficients = [new VSC(14, 0.32, 10213.29)];
const g_R0EarthCoefficients = [new VSC(100013989, 0, 0), new VSC(1670700, 3.0984635, 6283.07585), new VSC(13956, 3.05525, 12566.1517), new VSC(3084, 5.1985, 77713.7715), new VSC(1628, 1.1739, 5753.3849), new VSC(1576, 2.8469, 7860.4194), new VSC(925, 5.453, 11506.77), new VSC(542, 4.564, 3930.21), new VSC(472, 3.661, 5884.927), new VSC(346, 0.964, 5507.553), new VSC(329, 5.9, 5223.694), new VSC(307, 0.299, 5573.143), new VSC(243, 4.273, 11790.629), new VSC(212, 5.847, 1577.344), new VSC(186, 5.022, 10977.079), new VSC(175, 3.012, 18849.228), new VSC(110, 5.055, 5486.778), new VSC(98, 0.89, 6069.78), new VSC(86, 5.69, 15720.84), new VSC(86, 1.27, 161000.69), new VSC(65, 0.27, 17260.15), new VSC(63, 0.92, 529.69), new VSC(57, 2.01, 83996.85), new VSC(56, 5.24, 71430.7), new VSC(49, 3.25, 2544.31), new VSC(47, 2.58, 775.52), new VSC(45, 5.54, 9437.76), new VSC(43, 6.01, 6275.96), new VSC(39, 5.36, 4694), new VSC(38, 2.39, 8827.39), new VSC(37, 0.83, 19651.05), new VSC(37, 4.9, 12139.55), new VSC(36, 1.67, 12036.46), new VSC(35, 1.84, 2942.46), new VSC(33, 0.24, 7084.9), new VSC(32, 0.18, 5088.63), new VSC(32, 1.78, 398.15), new VSC(28, 1.21, 6286.6), new VSC(28, 1.9, 6279.55), new VSC(26, 4.59, 10447.39)];
const g_R1EarthCoefficients = [new VSC(103019, 1.10749, 6283.07585), new VSC(1721, 1.0644, 12566.1517), new VSC(702, 3.142, 0), new VSC(32, 1.02, 18849.23), new VSC(31, 2.84, 5507.55), new VSC(25, 1.32, 5223.69), new VSC(18, 1.42, 1577.34), new VSC(10, 5.91, 10977.08), new VSC(9, 1.42, 6275.96), new VSC(9, 0.27, 5486.78)];
const g_R2EarthCoefficients = [new VSC(4359, 5.7846, 6283.0758), new VSC(124, 5.579, 12566.152), new VSC(12, 3.14, 0), new VSC(9, 3.63, 77713.77), new VSC(6, 1.87, 5573.14), new VSC(3, 5.47, 18849.23)];
const g_R3EarthCoefficients = [new VSC(145, 4.273, 6283.076), new VSC(7, 3.92, 12566.15)];
const g_R4EarthCoefficients = [new VSC(4, 2.56, 6283.08)];
const g_L1EarthCoefficientsJ2000 = [new VSC(628307584999, 0, 0), new VSC(206059, 2.678235, 6283.07585), new VSC(4303, 2.6351, 12566.1517), new VSC(425, 1.59, 3.523), new VSC(119, 5.796, 26.298), new VSC(109, 2.966, 1577.344), new VSC(93, 2.59, 18849.23), new VSC(72, 1.14, 529.69), new VSC(68, 1.87, 398.15), new VSC(67, 4.41, 5507.55), new VSC(59, 2.89, 5223.69), new VSC(56, 2.17, 155.42), new VSC(45, 0.4, 796.3), new VSC(36, 0.47, 775.52), new VSC(29, 2.65, 7.11), new VSC(21, 5.43, 0.98), new VSC(19, 1.85, 5486.78), new VSC(19, 4.97, 213.3), new VSC(17, 2.99, 6275.96), new VSC(16, 0.03, 2544.31), new VSC(16, 1.43, 2146.17), new VSC(15, 1.21, 10977.08), new VSC(12, 2.83, 1748.02), new VSC(12, 3.26, 5088.63), new VSC(12, 5.27, 1194.45), new VSC(12, 2.08, 4694), new VSC(11, 0.77, 553.57), new VSC(10, 1.3, 6286.6), new VSC(10, 4.24, 1349.87), new VSC(9, 2.7, 242.73), new VSC(9, 5.64, 951.72), new VSC(8, 5.3, 2352.87), new VSC(6, 2.65, 9437.76), new VSC(6, 4.67, 4690.48)];
const g_L2EarthCoefficientsJ2000 = [new VSC(8722, 1.0725, 6283.0758), new VSC(991, 3.1416, 0), new VSC(295, 0.437, 12566.152), new VSC(27, 0.05, 3.52), new VSC(16, 5.19, 26.3), new VSC(16, 3.69, 155.42), new VSC(9, 0.3, 18849.23), new VSC(9, 2.06, 77713.77), new VSC(7, 0.83, 775.52), new VSC(5, 4.66, 1577.34), new VSC(4, 1.03, 7.11), new VSC(4, 3.44, 5573.14), new VSC(3, 5.14, 796.3), new VSC(3, 6.05, 5507.55), new VSC(3, 1.19, 242.73), new VSC(3, 6.12, 529.69), new VSC(3, 0.3, 398.15), new VSC(3, 2.28, 553.57), new VSC(2, 4.38, 5223.69), new VSC(2, 3.75, 0.98)];
const g_L3EarthCoefficientsJ2000 = [new VSC(289, 5.842, 6283.076), new VSC(21, 6.05, 12566.15), new VSC(3, 5.2, 155.42), new VSC(3, 3.14, 0), new VSC(1, 4.72, 3.52), new VSC(1, 5.97, 242.73), new VSC(1, 5.54, 18849.23)];
const g_L4EarthCoefficientsJ2000 = [new VSC(8, 4.14, 6283.08), new VSC(1, 3.28, 12566.15)];
const g_B1EarthCoefficientsJ2000 = [new VSC(227778, 3.413766, 6283.07585), new VSC(3806, 3.3706, 12566.1517), new VSC(3620, 0, 0), new VSC(72, 3.33, 18849.23), new VSC(8, 3.89, 5507.55), new VSC(8, 1.79, 5223.69), new VSC(6, 5.2, 2352.87)];
const g_B2EarthCoefficientsJ2000 = [new VSC(9721, 5.1519, 6283.07585), new VSC(233, 3.1416, 0), new VSC(134, 0.644, 12566.152), new VSC(7, 1.07, 18849.23)];
const g_B3EarthCoefficientsJ2000 = [new VSC(276, 0.595, 6283.076), new VSC(17, 3.14, 0), new VSC(4, 0.12, 12566.15)];
const g_B4EarthCoefficientsJ2000 = [new VSC(6, 2.27, 6283.08), new VSC(1, 0, 0)];


// CAAEarth

function CAAEarth() { }

CAAEarth.eclipticLongitude = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var rho5 = rho4 * rho;
    var nL0Coefficients = g_L0EarthCoefficients.length;
    var L0 = 0;
    var i;
    for (i = 0; i < nL0Coefficients; i++) {
        L0 += g_L0EarthCoefficients[i].a * Math.cos(g_L0EarthCoefficients[i].b + g_L0EarthCoefficients[i].c * rho);
    }
    var nL1Coefficients = g_L1EarthCoefficients.length;
    var L1 = 0;
    for (i = 0; i < nL1Coefficients; i++) {
        L1 += g_L1EarthCoefficients[i].a * Math.cos(g_L1EarthCoefficients[i].b + g_L1EarthCoefficients[i].c * rho);
    }
    var nL2Coefficients = g_L2EarthCoefficients.length;
    var L2 = 0;
    for (i = 0; i < nL2Coefficients; i++) {
        L2 += g_L2EarthCoefficients[i].a * Math.cos(g_L2EarthCoefficients[i].b + g_L2EarthCoefficients[i].c * rho);
    }
    var nL3Coefficients = g_L3EarthCoefficients.length;
    var L3 = 0;
    for (i = 0; i < nL3Coefficients; i++) {
        L3 += g_L3EarthCoefficients[i].a * Math.cos(g_L3EarthCoefficients[i].b + g_L3EarthCoefficients[i].c * rho);
    }
    var nL4Coefficients = g_L4EarthCoefficients.length;
    var L4 = 0;
    for (i = 0; i < nL4Coefficients; i++) {
        L4 += g_L4EarthCoefficients[i].a * Math.cos(g_L4EarthCoefficients[i].b + g_L4EarthCoefficients[i].c * rho);
    }
    var nL5Coefficients = g_L5EarthCoefficients.length;
    var L5 = 0;
    for (i = 0; i < nL5Coefficients; i++) {
        L5 += g_L5EarthCoefficients[i].a * Math.cos(g_L5EarthCoefficients[i].b + g_L5EarthCoefficients[i].c * rho);
    }
    var vvalue = (L0 + L1 * rho + L2 * rhosquared + L3 * rhocubed + L4 * rho4 + L5 * rho5) / 100000000;
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue));
    return vvalue;
};

CAAEarth.eclipticLatitude = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var nB0Coefficients = g_B0EarthCoefficients.length;
    var B0 = 0;
    var i;
    for (i = 0; i < nB0Coefficients; i++) {
        B0 += g_B0EarthCoefficients[i].a * Math.cos(g_B0EarthCoefficients[i].b + g_B0EarthCoefficients[i].c * rho);
    }
    var nB1Coefficients = g_B1EarthCoefficients.length;
    var B1 = 0;
    for (i = 0; i < nB1Coefficients; i++) {
        B1 += g_B1EarthCoefficients[i].a * Math.cos(g_B1EarthCoefficients[i].b + g_B1EarthCoefficients[i].c * rho);
    }
    var nB2Coefficients = g_B2EarthCoefficients.length;
    var B2 = 0;
    for (i = 0; i < nB2Coefficients; i++) {
        B2 += g_B2EarthCoefficients[i].a * Math.cos(g_B2EarthCoefficients[i].b + g_B2EarthCoefficients[i].c * rho);
    }
    var nB3Coefficients = g_B3EarthCoefficients.length;
    var B3 = 0;
    for (i = 0; i < nB3Coefficients; i++) {
        B3 += g_B3EarthCoefficients[i].a * Math.cos(g_B3EarthCoefficients[i].b + g_B3EarthCoefficients[i].c * rho);
    }
    var nB4Coefficients = g_B4EarthCoefficients.length;
    var B4 = 0;
    for (i = 0; i < nB4Coefficients; i++) {
        B4 += g_B4EarthCoefficients[i].a * Math.cos(g_B4EarthCoefficients[i].b + g_B4EarthCoefficients[i].c * rho);
    }
    var vvalue = (B0 + B1 * rho + B2 * rhosquared + B3 * rhocubed + B4 * rho4) / 100000000;
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue);
    return vvalue;
};

CAAEarth.radiusVector = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var nR0Coefficients = g_R0EarthCoefficients.length;
    var R0 = 0;
    var i;
    for (i = 0; i < nR0Coefficients; i++) {
        R0 += g_R0EarthCoefficients[i].a * Math.cos(g_R0EarthCoefficients[i].b + g_R0EarthCoefficients[i].c * rho);
    }
    var nR1Coefficients = g_R1EarthCoefficients.length;
    var R1 = 0;
    for (i = 0; i < nR1Coefficients; i++) {
        R1 += g_R1EarthCoefficients[i].a * Math.cos(g_R1EarthCoefficients[i].b + g_R1EarthCoefficients[i].c * rho);
    }
    var nR2Coefficients = g_R2EarthCoefficients.length;
    var R2 = 0;
    for (i = 0; i < nR2Coefficients; i++) {
        R2 += g_R2EarthCoefficients[i].a * Math.cos(g_R2EarthCoefficients[i].b + g_R2EarthCoefficients[i].c * rho);
    }
    var nR3Coefficients = g_R3EarthCoefficients.length;
    var R3 = 0;
    for (i = 0; i < nR3Coefficients; i++) {
        R3 += g_R3EarthCoefficients[i].a * Math.cos(g_R3EarthCoefficients[i].b + g_R3EarthCoefficients[i].c * rho);
    }
    var nR4Coefficients = g_R4EarthCoefficients.length;
    var R4 = 0;
    for (i = 0; i < nR4Coefficients; i++) {
        R4 += g_R4EarthCoefficients[i].a * Math.cos(g_R4EarthCoefficients[i].b + g_R4EarthCoefficients[i].c * rho);
    }
    return (R0 + R1 * rho + R2 * rhosquared + R3 * rhocubed + R4 * rho4) / 100000000;
};

CAAEarth.sunMeanAnomaly = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(357.5291092 + 35999.0502909 * T - 0.0001536 * Tsquared + Tcubed / 24490000);
};

CAAEarth.eccentricity = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    return 1 - 0.002516 * T - 7.4E-06 * Tsquared;
};

CAAEarth.eclipticLongitudeJ2000 = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var nL0Coefficients = g_L0EarthCoefficients.length;
    var L0 = 0;
    var i;
    for (i = 0; i < nL0Coefficients; i++) {
        L0 += g_L0EarthCoefficients[i].a * Math.cos(g_L0EarthCoefficients[i].b + g_L0EarthCoefficients[i].c * rho);
    }
    var nL1Coefficients = g_L1EarthCoefficientsJ2000.length;
    var L1 = 0;
    for (i = 0; i < nL1Coefficients; i++) {
        L1 += g_L1EarthCoefficientsJ2000[i].a * Math.cos(g_L1EarthCoefficientsJ2000[i].b + g_L1EarthCoefficientsJ2000[i].c * rho);
    }
    var nL2Coefficients = g_L2EarthCoefficientsJ2000.length;
    var L2 = 0;
    for (i = 0; i < nL2Coefficients; i++) {
        L2 += g_L2EarthCoefficientsJ2000[i].a * Math.cos(g_L2EarthCoefficientsJ2000[i].b + g_L2EarthCoefficientsJ2000[i].c * rho);
    }
    var nL3Coefficients = g_L3EarthCoefficientsJ2000.length;
    var L3 = 0;
    for (i = 0; i < nL3Coefficients; i++) {
        L3 += g_L3EarthCoefficientsJ2000[i].a * Math.cos(g_L3EarthCoefficientsJ2000[i].b + g_L3EarthCoefficientsJ2000[i].c * rho);
    }
    var nL4Coefficients = g_L4EarthCoefficientsJ2000.length;
    var L4 = 0;
    for (i = 0; i < nL4Coefficients; i++) {
        L4 += g_L4EarthCoefficientsJ2000[i].a * Math.cos(g_L4EarthCoefficientsJ2000[i].b + g_L4EarthCoefficientsJ2000[i].c * rho);
    }
    var vvalue = (L0 + L1 * rho + L2 * rhosquared + L3 * rhocubed + L4 * rho4) / 100000000;
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue));
    return vvalue;
};

CAAEarth.eclipticLatitudeJ2000 = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var nB0Coefficients = g_B0EarthCoefficients.length;
    var B0 = 0;
    var i;
    for (i = 0; i < nB0Coefficients; i++) {
        B0 += g_B0EarthCoefficients[i].a * Math.cos(g_B0EarthCoefficients[i].b + g_B0EarthCoefficients[i].c * rho);
    }
    var nB1Coefficients = g_B1EarthCoefficientsJ2000.length;
    var B1 = 0;
    for (i = 0; i < nB1Coefficients; i++) {
        B1 += g_B1EarthCoefficientsJ2000[i].a * Math.cos(g_B1EarthCoefficientsJ2000[i].b + g_B1EarthCoefficientsJ2000[i].c * rho);
    }
    var nB2Coefficients = g_B2EarthCoefficientsJ2000.length;
    var B2 = 0;
    for (i = 0; i < nB2Coefficients; i++) {
        B2 += g_B2EarthCoefficientsJ2000[i].a * Math.cos(g_B2EarthCoefficientsJ2000[i].b + g_B2EarthCoefficientsJ2000[i].c * rho);
    }
    var nB3Coefficients = g_B3EarthCoefficientsJ2000.length;
    var B3 = 0;
    for (i = 0; i < nB3Coefficients; i++) {
        B3 += g_B3EarthCoefficientsJ2000[i].a * Math.cos(g_B3EarthCoefficientsJ2000[i].b + g_B3EarthCoefficientsJ2000[i].c * rho);
    }
    var nB4Coefficients = g_B4EarthCoefficientsJ2000.length;
    var B4 = 0;
    for (i = 0; i < nB4Coefficients; i++) {
        B4 += g_B4EarthCoefficientsJ2000[i].a * Math.cos(g_B4EarthCoefficientsJ2000[i].b + g_B4EarthCoefficientsJ2000[i].c * rho);
    }
    var vvalue = (B0 + B1 * rho + B2 * rhosquared + B3 * rhocubed + B4 * rho4) / 100000000;
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue);
    return vvalue;
};

var CAAEarth$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAEarth", [CAAEarth, CAAEarth$, null]);


/***/ }),

/***/ "./esm/astrocalc/ecliptical_elements.js":
/*!**********************************************!*\
  !*** ./esm/astrocalc/ecliptical_elements.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAEclipticalElementDetails: () => (/* binding */ CAAEclipticalElementDetails),
/* harmony export */   CAAEclipticalElements: () => (/* binding */ CAAEclipticalElements)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
// Originally `AAECLIPTICALELEMENTS.CPP`
// "Purpose: Implementation for the algorithms which map the ecliptical elements from one equinox to another"
// Last update of original: PJN / 29-11-2006
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.





// CAAEclipticalElementDetails

function CAAEclipticalElementDetails() {
    this.i = 0;
    this.w = 0;
    this.omega = 0;
    this.i = 0;
    this.w = 0;
    this.omega = 0;
}

var CAAEclipticalElementDetails$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAEclipticalElementDetails", [CAAEclipticalElementDetails, CAAEclipticalElementDetails$, null]);


// CAAEclipticalElements

function CAAEclipticalElements() { }

CAAEclipticalElements.calculate = function (i0, w0, omega0, JD0, JD) {
    var T = (JD0 - 2451545) / 36525;
    var Tsquared = T * T;
    var t = (JD - JD0) / 36525;
    var tsquared = t * t;
    var tcubed = tsquared * t;
    var i0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(i0);
    var omega0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(omega0);
    var eta = (47.0029 - 0.06603 * T + 0.000598 * Tsquared) * t + (-0.03302 + 0.000598 * T) * tsquared + 6E-05 * tcubed;
    eta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, eta));
    var pi = 174.876384 * 3600 + 3289.4789 * T + 0.60622 * Tsquared - (869.8089 + 0.50491 * T) * t + 0.03536 * tsquared;
    pi = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, pi));
    var p = (5029.0966 + 2.22226 * T - 4.2E-05 * Tsquared) * t + (1.11113 - 4.2E-05 * T) * tsquared - 6E-06 * tcubed;
    p = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, p));
    var sini0rad = Math.sin(i0rad);
    var cosi0rad = Math.cos(i0rad);
    var sinomega0rad_pi = Math.sin(omega0rad - pi);
    var cosomega0rad_pi = Math.cos(omega0rad - pi);
    var sineta = Math.sin(eta);
    var coseta = Math.cos(eta);
    var A = sini0rad * sinomega0rad_pi;
    var B = -sineta * cosi0rad + coseta * sini0rad * cosomega0rad_pi;
    var irad = Math.asin(Math.sqrt(A * A + B * B));
    var details = new CAAEclipticalElementDetails();
    details.i = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(irad);
    var cosi = cosi0rad * coseta + sini0rad * sineta * cosomega0rad_pi;
    if (cosi < 0) {
        details.i = 180 - details.i;
    }
    var phi = pi + p;
    details.omega = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.atan2(A, B) + phi));
    A = -sineta * sinomega0rad_pi;
    B = sini0rad * coseta - cosi0rad * sineta * cosomega0rad_pi;
    var deltaw = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.atan2(A, B));
    details.w = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(w0 + deltaw);
    return details;
};

CAAEclipticalElements.fK4B1950ToFK5J2000 = function (i0, w0, omega0) {
    var L = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(5.19856209);
    var J = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(0.00651966);
    var i0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(i0);
    var omega0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(omega0);
    var sini0rad = Math.sin(i0rad);
    var cosi0rad = Math.cos(i0rad);
    var cosJ = Math.cos(J);
    var sinJ = Math.sin(J);
    var W = L + omega0rad;
    var cosW = Math.cos(W);
    var sinW = Math.sin(W);
    var A = sinJ * sinW;
    var B = sini0rad * cosJ + cosi0rad * sinJ * cosW;
    var details = new CAAEclipticalElementDetails();
    details.i = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.asin(Math.sqrt(A * A + B * B)));
    var cosi = cosi0rad * cosJ - sini0rad * sinJ * cosW;
    if (cosi < 0) {
        details.i = 180 - details.i;
    }
    details.w = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(w0 + _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.atan2(A, B)));
    details.omega = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.atan2(sini0rad * sinW, cosi0rad * sinJ + sini0rad * cosJ * cosW)) - 4.50001688);
    return details;
};

var CAAEclipticalElements$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAEclipticalElements", [CAAEclipticalElements, CAAEclipticalElements$, null]);


/***/ }),

/***/ "./esm/astrocalc/elements_planetary_orbit.js":
/*!***************************************************!*\
  !*** ./esm/astrocalc/elements_planetary_orbit.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EPO: () => (/* binding */ EPO)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
// Originally `AAELEMENTSPLANETARYORBIT.CPP`
// "Purpose: Implementation for the algorithms to calculate the elements of the planetary orbits"
// Last update of original: PJN / 29-12-2003
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.





// EPO - was CAAElementsPlanetaryOrbit

function EPO() { }

EPO.mercuryMeanLongitude = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(252.250906 + 149474.0722491 * T + 0.0003035 * Tsquared + 1.8E-08 * Tcubed);
};

EPO.mercurySemimajorAxis = function (UnnamedParameter1) {
    return 0.38709831;
};

EPO.mercuryEccentricity = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return 0.20563175 + 2.0407E-05 * T - 2.83E-08 * Tsquared - 1.8E-10 * Tcubed;
};

EPO.mercuryInclination = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(7.004986 + 0.0018215 * T - 1.81E-05 * Tsquared + 5.6E-08 * Tcubed);
};

EPO.mercuryLongitudeAscendingNode = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(48.330893 + 1.1861883 * T + 0.00017542 * Tsquared + 2.15E-07 * Tcubed);
};

EPO.mercuryLongitudePerihelion = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(77.456119 + 1.5564776 * T + 0.00029544 * Tsquared + 9E-09 * Tcubed);
};

EPO.venusMeanLongitude = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(181.979801 + 58519.2130302 * T + 0.00031014 * Tsquared + 1.5E-08 * Tcubed);
};

EPO.venusSemimajorAxis = function (UnnamedParameter1) {
    return 0.72332982;
};

EPO.venusEccentricity = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return 0.00677192 - 4.7765E-05 * T + 9.81E-08 * Tsquared + 4.6E-10 * Tcubed;
};

EPO.venusInclination = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(3.394662 + 0.0010037 * T - 8.8E-07 * Tsquared - 7E-09 * Tcubed);
};

EPO.venusLongitudeAscendingNode = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(76.67992 + 0.9011206 * T + 0.00040618 * Tsquared - 9.3E-08 * Tcubed);
};

EPO.venusLongitudePerihelion = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(131.563703 + 1.4022288 * T - 0.00107618 * Tsquared - 5.678E-06 * Tcubed);
};

EPO.earthMeanLongitude = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(100.466457 + 36000.7698278 * T + 0.00030322 * Tsquared + 2E-08 * Tcubed);
};

EPO.earthSemimajorAxis = function (UnnamedParameter1) {
    return 1.000001018;
};

EPO.earthEccentricity = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return 0.01670863 - 4.2037E-05 * T - 1.267E-07 * Tsquared + 1.4E-10 * Tcubed;
};

EPO.earthInclination = function (UnnamedParameter1) {
    return 0;
};

EPO.earthLongitudePerihelion = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(102.937348 + 1.17195366 * T + 0.00045688 * Tsquared - 1.8E-08 * Tcubed);
};

EPO.marsMeanLongitude = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(355.433 + 19141.6964471 * T + 0.00031052 * Tsquared + 1.6E-08 * Tcubed);
};

EPO.marsSemimajorAxis = function (UnnamedParameter1) {
    return 1.523679342;
};

EPO.marsEccentricity = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return 0.09340065 + 9.0484E-05 * T - 8.06E-08 * Tsquared - 2.5E-10 * Tcubed;
};

EPO.marsInclination = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(1.849726 - 0.0006011 * T + 1.276E-05 * Tsquared - 7E-09 * Tcubed);
};

EPO.marsLongitudeAscendingNode = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(49.588093 + 0.7720959 * T + 1.557E-05 * Tsquared + 2.267E-06 * Tcubed);
};

EPO.marsLongitudePerihelion = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(336.060234 + 1.8410449 * T + 0.00013477 * Tsquared + 5.36E-07 * Tcubed);
};

EPO.jupiterMeanLongitude = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(34.351519 + 3036.3027748 * T + 0.0002233 * Tsquared + 3.7E-08 * Tcubed);
};

EPO.jupiterSemimajorAxis = function (JD) {
    var T = (JD - 2451545) / 36525;
    return 5.202603209 + 1.913E-07 * T;
};

EPO.jupiterEccentricity = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return 0.04849793 + 0.000163225 * T - 4.714E-07 * Tsquared - 2.01E-09 * Tcubed;
};

EPO.jupiterInclination = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(1.303267 - 0.0054965 * T + 4.66E-06 * Tsquared - 2E-09 * Tcubed);
};

EPO.jupiterLongitudeAscendingNode = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(100.464407 + 1.0209774 * T + 0.00040315 * Tsquared + 4.04E-07 * Tcubed);
};

EPO.jupiterLongitudePerihelion = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(14.331207 + 1.6126352 * T + 0.00103042 * Tsquared - 4.464E-06 * Tcubed);
};

EPO.saturnMeanLongitude = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(50.077444 + 1223.5110686 * T + 0.00051908 * Tsquared - 3E-08 * Tcubed);
};

EPO.saturnSemimajorAxis = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    return 9.554909192 - 2.139E-06 * T + 4E-09 * Tsquared;
};

EPO.saturnEccentricity = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return 0.05554814 - 0.0003446641 * T - 6.436E-07 * Tsquared + 3.4E-09 * Tcubed;
};

EPO.saturnInclination = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(2.488879 - 0.0037362 * T - 1.519E-05 * Tsquared + 8.7E-08 * Tcubed);
};

EPO.saturnLongitudeAscendingNode = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(113.665503 + 0.877088 * T - 0.00012176 * Tsquared - 2.249E-06 * Tcubed);
};

EPO.saturnLongitudePerihelion = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(93.057237 + 1.19637613 * T + 0.00083753 * Tsquared + 4.928E-06 * Tcubed);
};

EPO.uranusMeanLongitude = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(314.055005 + 429.8640561 * T + 0.0003039 * Tsquared + 2.6E-08 * Tcubed);
};

EPO.uranusSemimajorAxis = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    return 19.218446062 - 3.72E-08 * T + 9.8E-10 * Tsquared;
};

EPO.uranusEccentricity = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return 0.04638122 - 2.7293E-05 * T + 7.89E-08 * Tsquared + 2.4E-10 * Tcubed;
};

EPO.uranusInclination = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(0.773197 + 0.0007744 * T + 3.749E-05 * Tsquared - 9.2E-08 * Tcubed);
};

EPO.uranusLongitudeAscendingNode = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(74.005957 + 0.5211278 * T + 0.00133947 * Tsquared + 1.8484E-05 * Tcubed);
};

EPO.uranusLongitudePerihelion = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(173.005291 + 1.486379 * T + 0.00021406 * Tsquared + 4.34E-07 * Tcubed);
};

EPO.neptuneMeanLongitude = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(304.348665 + 219.8833092 * T + 0.00030882 * Tsquared + 1.8E-08 * Tcubed);
};

EPO.neptuneSemimajorAxis = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    return 30.110386869 - 1.663E-07 * T + 6.9E-10 * Tsquared;
};

EPO.neptuneEccentricity = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tcubed = T * T * T;
    return 0.00945575 + 6.033E-06 * T - 5E-11 * Tcubed;
};

EPO.neptuneInclination = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(1.769953 - 0.0093082 * T - 7.08E-06 * Tsquared + 2.7E-08 * Tcubed);
};

EPO.neptuneLongitudeAscendingNode = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(131.784057 + 1.1022039 * T + 0.00025952 * Tsquared - 6.37E-07 * Tcubed);
};

EPO.neptuneLongitudePerihelion = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(48.120276 + 1.4262957 * T + 0.00038434 * Tsquared + 2E-08 * Tcubed);
};

EPO.mercuryMeanLongitudeJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(252.250906 + 149472.6746358 * T - 5.36E-06 * Tsquared + 2E-09 * Tcubed);
};

EPO.mercuryInclinationJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(7.004986 - 0.0059516 * T + 8E-07 * Tsquared + 4.3E-08 * Tcubed);
};

EPO.mercuryLongitudeAscendingNodeJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(48.330893 - 0.1254227 * T - 8.833E-05 * Tsquared - 2E-07 * Tcubed);
};

EPO.mercuryLongitudePerihelionJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(77.456119 + 0.1588643 * T - 1.342E-05 * Tsquared - 7E-09 * Tcubed);
};

EPO.venusMeanLongitudeJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(181.979801 + 58517.815676 * T + 1.65E-06 * Tsquared - 2E-09 * Tcubed);
};

EPO.venusInclinationJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(3.394662 - 0.0008568 * T - 3.244E-05 * Tsquared + 9E-09 * Tcubed);
};

EPO.venusLongitudeAscendingNodeJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(76.67992 - 0.2780134 * T - 0.00014257 * Tsquared - 1.64E-07 * Tcubed);
};

EPO.venusLongitudePerihelionJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(131.563703 + 0.0048746 * T - 0.00138467 * Tsquared - 5.695E-06 * Tcubed);
};

EPO.earthMeanLongitudeJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(100.466457 + 35999.3728565 * T - 5.68E-06 * Tsquared - 1E-09 * Tcubed);
};

EPO.earthInclinationJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return 0.0130548 * T - 9.31E-06 * Tsquared - 3.4E-08 * Tcubed;
};

EPO.earthLongitudeAscendingNodeJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(174.873176 - 0.241098 * T + 4.262E-05 * Tsquared + 1E-09 * Tcubed);
};

EPO.earthLongitudePerihelionJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(102.937348 + 0.3225654 * T + 0.00014799 * Tsquared - 3.9E-08 * Tcubed);
};

EPO.marsMeanLongitudeJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(355.433 + 19140.2993039 * T + 2.62E-06 * Tsquared - 3E-09 * Tcubed);
};

EPO.marsInclinationJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(1.849726 - 0.0081477 * T - 2.255E-05 * Tsquared - 2.9E-08 * Tcubed);
};

EPO.marsLongitudeAscendingNodeJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(49.588093 - 0.295025 * T - 0.00064048 * Tsquared - 1.964E-06 * Tcubed);
};

EPO.marsLongitudePerihelionJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(336.060234 + 0.4439016 * T - 0.00017313 * Tsquared + 5.18E-07 * Tcubed);
};

EPO.jupiterMeanLongitudeJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(34.351519 + 3034.9056606 * T - 8.501E-05 * Tsquared + 1.6E-08 * Tcubed);
};

EPO.jupiterInclinationJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(1.303267 - 0.0019877 * T + 3.32E-05 * Tsquared + 9.7E-08 * Tcubed);
};

EPO.jupiterLongitudeAscendingNodeJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(100.464407 + 0.1767232 * T + 0.000907 * Tsquared - 7.272E-06 * Tcubed);
};

EPO.jupiterLongitudePerihelionJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(14.331207 + 0.2155209 * T + 0.00072211 * Tsquared - 4.485E-06 * Tcubed);
};

EPO.saturnMeanLongitudeJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(50.077444 + 1222.1138488 * T + 0.00021004 * Tsquared - 4.6E-08 * Tcubed);
};

EPO.saturnInclinationJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(2.488879 + 0.0025514 * T - 4.906E-05 * Tsquared + 1.7E-08 * Tcubed);
};

EPO.saturnLongitudeAscendingNodeJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(113.665503 - 0.2566722 * T - 0.00018399 * Tsquared + 4.8E-07 * Tcubed);
};

EPO.saturnLongitudePerihelionJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(93.057237 + 0.5665415 * T + 0.0005285 * Tsquared + 4.912E-06 * Tcubed);
};

EPO.uranusMeanLongitudeJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(314.055005 + 428.4669983 * T - 4.86E-06 * Tsquared + 6E-09 * Tcubed);
};

EPO.uranusInclinationJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(0.773197 - 0.0016869 * T + 3.49E-06 * Tsquared + 1.6E-08 * Tcubed);
};

EPO.uranusLongitudeAscendingNodeJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(74.005957 + 0.0741431 * T + 0.00040539 * Tsquared + 1.19E-07 * Tcubed);
};

EPO.uranusLongitudePerihelionJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(173.005291 + 0.0893212 * T - 9.47E-05 * Tsquared + 4.14E-07 * Tcubed);
};

EPO.neptuneMeanLongitudeJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(304.348665 + 218.4862002 * T + 5.9E-07 * Tsquared - 2E-09 * Tcubed);
};

EPO.neptuneInclinationJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(1.769953 + 0.0002256 * T + 2.3E-07 * Tsquared);
};

EPO.neptuneLongitudeAscendingNodeJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(131.784057 - 0.0061651 * T - 2.19E-06 * Tsquared - 7.8E-08 * Tcubed);
};

EPO.neptuneLongitudePerihelionJ2000 = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(48.120276 + 0.0291866 * T + 7.61E-05 * Tsquared);
};

var EPO$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("EPO", [EPO, EPO$, null]);


/***/ }),

/***/ "./esm/astrocalc/elliptical.js":
/*!*************************************!*\
  !*** ./esm/astrocalc/elliptical.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ELL: () => (/* binding */ ELL),
/* harmony export */   EO: () => (/* binding */ EO),
/* harmony export */   EOD: () => (/* binding */ EOD),
/* harmony export */   EOE: () => (/* binding */ EOE),
/* harmony export */   EPD: () => (/* binding */ EPD)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _earth_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./earth.js */ "./esm/astrocalc/earth.js");
/* harmony import */ var _fk5_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fk5.js */ "./esm/astrocalc/fk5.js");
/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./nutation.js */ "./esm/astrocalc/nutation.js");
/* harmony import */ var _sun_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./sun.js */ "./esm/astrocalc/sun.js");
/* harmony import */ var _mercury_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./mercury.js */ "./esm/astrocalc/mercury.js");
/* harmony import */ var _venus_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./venus.js */ "./esm/astrocalc/venus.js");
/* harmony import */ var _mars_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./mars.js */ "./esm/astrocalc/mars.js");
/* harmony import */ var _jupiter_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./jupiter.js */ "./esm/astrocalc/jupiter.js");
/* harmony import */ var _saturn_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./saturn.js */ "./esm/astrocalc/saturn.js");
/* harmony import */ var _uranus_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./uranus.js */ "./esm/astrocalc/uranus.js");
/* harmony import */ var _neptune_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./neptune.js */ "./esm/astrocalc/neptune.js");
/* harmony import */ var _pluto_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./pluto.js */ "./esm/astrocalc/pluto.js");
/* harmony import */ var _aberration_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./aberration.js */ "./esm/astrocalc/aberration.js");
/* harmony import */ var _kepler_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./kepler.js */ "./esm/astrocalc/kepler.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
// Originally `AAELLIPTICAL.CPP`
// "Purpose: Implementation for the algorithms for an elliptical orbit"
// Last update of original: PJN / 05-06-2006
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.





















// EOE - was CAAEllipticalObjectElements

function EOE() {
    this.a = 0;
    this.e = 0;
    this.i = 0;
    this.w = 0;
    this.omega = 0;
    this.jdEquinox = 0;
    this.t = 0;
    this.n = 0;
    this.meanAnnomolyOut = 0;
    this.a = 0;
    this.e = 0;
    this.i = 0;
    this.w = 0;
    this.omega = 0;
    this.jdEquinox = 0;
    this.t = 0;
}

EOE._create = function (br) {
    var tmp = new EOE();
    tmp.a = br.readSingle();
    tmp.e = br.readSingle();
    tmp.i = br.readSingle();
    tmp.w = br.readSingle();
    tmp.omega = br.readSingle();
    tmp.jdEquinox = br.readSingle();
    tmp.t = br.readSingle();
    return tmp;
};

var EOE$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("EOE", [EOE, EOE$, null]);


// EPD - was CAAEllipticalPlanetaryDetails

function EPD() {
    this.apparentGeocentricLongitude = 0;
    this.apparentGeocentricLatitude = 0;
    this.apparentGeocentricDistance = 0;
    this.apparentLightTime = 0;
    this.apparentGeocentricRA = 0;
    this.apparentGeocentricDeclination = 0;
    this.apparentGeocentricLongitude = 0;
    this.apparentGeocentricLatitude = 0;
    this.apparentGeocentricDistance = 0;
    this.apparentLightTime = 0;
    this.apparentGeocentricRA = 0;
    this.apparentGeocentricDeclination = 0;
}

var EPD$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("EPD", [EPD, EPD$, null]);


// EOD - was CAAEllipticalObjectDetails

function EOD() {
    this.heliocentricRectangularEquatorial = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.C3D();
    this.heliocentricRectangularEcliptical = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.C3D();
    this.heliocentricEclipticLongitude = 0;
    this.heliocentricEclipticLatitude = 0;
    this.trueGeocentricRA = 0;
    this.trueGeocentricDeclination = 0;
    this.trueGeocentricDistance = 0;
    this.trueGeocentricLightTime = 0;
    this.astrometricGeocenticRA = 0;
    this.astrometricGeocentricDeclination = 0;
    this.astrometricGeocentricDistance = 0;
    this.astrometricGeocentricLightTime = 0;
    this.elongation = 0;
    this.phaseAngle = 0;
    this.heliocentricEclipticLongitude = 0;
    this.heliocentricEclipticLatitude = 0;
    this.trueGeocentricRA = 0;
    this.trueGeocentricDeclination = 0;
    this.trueGeocentricDistance = 0;
    this.trueGeocentricLightTime = 0;
    this.astrometricGeocenticRA = 0;
    this.astrometricGeocentricDeclination = 0;
    this.astrometricGeocentricDistance = 0;
    this.astrometricGeocentricLightTime = 0;
    this.elongation = 0;
    this.phaseAngle = 0;
}

var EOD$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("EOD", [EOD, EOD$, null]);


// EO - was EllipticalObject

var EO = {
    SUN: 0,
    MERCURY: 1,
    VENUS: 2,
    MARS: 3,
    JUPITER: 4,
    SATURN: 5,
    URANUS: 6,
    NEPTUNE: 7,
    PLUTO: 8
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("EO", EO);


// ELL - was CAAElliptical

function ELL() { }

ELL.distanceToLightTime = function (Distance) {
    return Distance * 0.0057755183;
};

ELL.calculate = function (JD, oobject) {
    var details = new EPD();
    var JD0 = JD;
    var L0 = 0;
    var B0 = 0;
    var R0 = 0;
    var cosB0 = 0;
    if (!!oobject) {
        L0 = _earth_js__WEBPACK_IMPORTED_MODULE_3__.CAAEarth.eclipticLongitude(JD0);
        B0 = _earth_js__WEBPACK_IMPORTED_MODULE_3__.CAAEarth.eclipticLatitude(JD0);
        R0 = _earth_js__WEBPACK_IMPORTED_MODULE_3__.CAAEarth.radiusVector(JD0);
        L0 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(L0);
        B0 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(B0);
        cosB0 = Math.cos(B0);
    }
    var L = 0;
    var B = 0;
    var R = 0;
    var Lrad;
    var Brad;
    var cosB;
    var cosL;
    var x;
    var y;
    var z;
    var bRecalc = true;
    var bFirstRecalc = true;
    var LPrevious = 0;
    var BPrevious = 0;
    var RPrevious = 0;
    while (bRecalc) {
        switch (oobject) {
            case 0:
                L = _sun_js__WEBPACK_IMPORTED_MODULE_6__.CAASun.geometricEclipticLongitude(JD0);
                B = _sun_js__WEBPACK_IMPORTED_MODULE_6__.CAASun.geometricEclipticLatitude(JD0);
                R = _earth_js__WEBPACK_IMPORTED_MODULE_3__.CAAEarth.radiusVector(JD0);
                break;
            case 1:
                L = _mercury_js__WEBPACK_IMPORTED_MODULE_7__.CAAMercury.eclipticLongitude(JD0);
                B = _mercury_js__WEBPACK_IMPORTED_MODULE_7__.CAAMercury.eclipticLatitude(JD0);
                R = _mercury_js__WEBPACK_IMPORTED_MODULE_7__.CAAMercury.radiusVector(JD0);
                break;
            case 2:
                L = _venus_js__WEBPACK_IMPORTED_MODULE_8__.CAAVenus.eclipticLongitude(JD0);
                B = _venus_js__WEBPACK_IMPORTED_MODULE_8__.CAAVenus.eclipticLatitude(JD0);
                R = _venus_js__WEBPACK_IMPORTED_MODULE_8__.CAAVenus.radiusVector(JD0);
                break;
            case 3:
                L = _mars_js__WEBPACK_IMPORTED_MODULE_9__.CAAMars.eclipticLongitude(JD0);
                B = _mars_js__WEBPACK_IMPORTED_MODULE_9__.CAAMars.eclipticLatitude(JD0);
                R = _mars_js__WEBPACK_IMPORTED_MODULE_9__.CAAMars.radiusVector(JD0);
                break;
            case 4:
                L = _jupiter_js__WEBPACK_IMPORTED_MODULE_10__.CAAJupiter.eclipticLongitude(JD0);
                B = _jupiter_js__WEBPACK_IMPORTED_MODULE_10__.CAAJupiter.eclipticLatitude(JD0);
                R = _jupiter_js__WEBPACK_IMPORTED_MODULE_10__.CAAJupiter.radiusVector(JD0);
                break;
            case 5:
                L = _saturn_js__WEBPACK_IMPORTED_MODULE_11__.CAASaturn.eclipticLongitude(JD0);
                B = _saturn_js__WEBPACK_IMPORTED_MODULE_11__.CAASaturn.eclipticLatitude(JD0);
                R = _saturn_js__WEBPACK_IMPORTED_MODULE_11__.CAASaturn.radiusVector(JD0);
                break;
            case 6:
                L = _uranus_js__WEBPACK_IMPORTED_MODULE_12__.CAAUranus.eclipticLongitude(JD0);
                B = _uranus_js__WEBPACK_IMPORTED_MODULE_12__.CAAUranus.eclipticLatitude(JD0);
                R = _uranus_js__WEBPACK_IMPORTED_MODULE_12__.CAAUranus.radiusVector(JD0);
                break;
            case 7:
                L = _neptune_js__WEBPACK_IMPORTED_MODULE_13__.CAANeptune.eclipticLongitude(JD0);
                B = _neptune_js__WEBPACK_IMPORTED_MODULE_13__.CAANeptune.eclipticLatitude(JD0);
                R = _neptune_js__WEBPACK_IMPORTED_MODULE_13__.CAANeptune.radiusVector(JD0);
                break;
            case 8:
                L = _pluto_js__WEBPACK_IMPORTED_MODULE_14__.CAAPluto.eclipticLongitude(JD0);
                B = _pluto_js__WEBPACK_IMPORTED_MODULE_14__.CAAPluto.eclipticLatitude(JD0);
                R = _pluto_js__WEBPACK_IMPORTED_MODULE_14__.CAAPluto.radiusVector(JD0);
                break;
            default:
                console.assert(false);
                break;
        }
        if (!bFirstRecalc) {
            bRecalc = ((Math.abs(L - LPrevious) > 1E-05) || (Math.abs(B - BPrevious) > 1E-05) || (Math.abs(R - RPrevious) > 1E-06));
            LPrevious = L;
            BPrevious = B;
            RPrevious = R;
        }
        else {
            bFirstRecalc = false;
        }
        if (bRecalc) {
            var distance = 0;
            if (!!oobject) {
                Lrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(L);
                Brad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(B);
                cosB = Math.cos(Brad);
                cosL = Math.cos(Lrad);
                x = R * cosB * cosL - R0 * cosB0 * Math.cos(L0);
                y = R * cosB * Math.sin(Lrad) - R0 * cosB0 * Math.sin(L0);
                z = R * Math.sin(Brad) - R0 * Math.sin(B0);
                distance = Math.sqrt(x * x + y * y + z * z);
            }
            else {
                distance = R;
            }
            JD0 = JD - ELL.distanceToLightTime(distance);
        }
    }
    Lrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(L);
    Brad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(B);
    cosB = Math.cos(Brad);
    cosL = Math.cos(Lrad);
    x = R * cosB * cosL - R0 * cosB0 * Math.cos(L0);
    y = R * cosB * Math.sin(Lrad) - R0 * cosB0 * Math.sin(L0);
    z = R * Math.sin(Brad) - R0 * Math.sin(B0);
    var x2 = x * x;
    var y2 = y * y;
    details.apparentGeocentricLatitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.r2D(Math.atan2(z, Math.sqrt(x2 + y2)));
    details.apparentGeocentricDistance = Math.sqrt(x2 + y2 + z * z);
    details.apparentGeocentricLongitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.r2D(Math.atan2(y, x)));
    details.apparentLightTime = ELL.distanceToLightTime(details.apparentGeocentricDistance);
    var Aberration = _aberration_js__WEBPACK_IMPORTED_MODULE_15__.ABR.eclipticAberration(details.apparentGeocentricLongitude, details.apparentGeocentricLatitude, JD);
    details.apparentGeocentricLongitude += Aberration.x;
    details.apparentGeocentricLatitude += Aberration.y;
    var DeltaLong = _fk5_js__WEBPACK_IMPORTED_MODULE_4__.CAAFK5.correctionInLongitude(details.apparentGeocentricLongitude, details.apparentGeocentricLatitude, JD);
    details.apparentGeocentricLatitude += _fk5_js__WEBPACK_IMPORTED_MODULE_4__.CAAFK5.correctionInLatitude(details.apparentGeocentricLongitude, JD);
    details.apparentGeocentricLongitude += DeltaLong;
    var NutationInLongitude = _nutation_js__WEBPACK_IMPORTED_MODULE_5__.CAANutation.nutationInLongitude(JD);
    var Epsilon = _nutation_js__WEBPACK_IMPORTED_MODULE_5__.CAANutation.trueObliquityOfEcliptic(JD);
    details.apparentGeocentricLongitude += _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.dmS2D(0, 0, NutationInLongitude);
    var ApparentEqu = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.ec2Eq(details.apparentGeocentricLongitude, details.apparentGeocentricLatitude, Epsilon);
    details.apparentGeocentricRA = ApparentEqu.x;
    details.apparentGeocentricDeclination = ApparentEqu.y;
    return details;
};

ELL.semiMajorAxisFromPerihelionDistance = function (q, e) {
    return q / (1 - e);
};

ELL.meanMotionFromSemiMajorAxis = function (a) {
    return 0.9856076686 / (a * Math.sqrt(a));
};

ELL.calculateRectangularJD = function (JD, elements) {
    var JD0 = JD;
    var omega = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(elements.omega);
    var w = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(elements.w);
    var i = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(elements.i);
    var sinEpsilon = 0;
    var cosEpsilon = 1;
    var sinOmega = Math.sin(omega);
    var cosOmega = Math.cos(omega);
    var cosi = Math.cos(i);
    var sini = Math.sin(i);
    var F = cosOmega;
    var G = sinOmega * cosEpsilon;
    var H = sinOmega * sinEpsilon;
    var P = -sinOmega * cosi;
    var Q = cosOmega * cosi * cosEpsilon - sini * sinEpsilon;
    var R = cosOmega * cosi * sinEpsilon + sini * cosEpsilon;
    var a = Math.sqrt(F * F + P * P);
    var b = Math.sqrt(G * G + Q * Q);
    var c = Math.sqrt(H * H + R * R);
    var A = Math.atan2(F, P);
    var B = Math.atan2(G, Q);
    var C = Math.atan2(H, R);
    var M = elements.n * (JD0 - elements.t);
    elements.meanAnnomolyOut = M;
    var E = _kepler_js__WEBPACK_IMPORTED_MODULE_16__.CAAKepler.calculate(M, elements.e);
    E = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(E);
    var v = 2 * Math.atan(Math.sqrt((1 + elements.e) / (1 - elements.e)) * Math.tan(E / 2));
    var r = elements.a * (1 - elements.e * Math.cos(E));
    var x = r * a * Math.sin(A + w + v);
    var y = r * b * Math.sin(B + w + v);
    var z = r * c * Math.sin(C + w + v);
    return _double3d_js__WEBPACK_IMPORTED_MODULE_17__.Vector3d.create(x, z, y);
};

ELL.calculateRectangular = function (elements, meanAnomoly) {
    var omega = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(elements.omega);
    var w = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(elements.w);
    var i = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(elements.i);
    var sinEpsilon = 0;
    var cosEpsilon = 1;
    var sinOmega = Math.sin(omega);
    var cosOmega = Math.cos(omega);
    var cosi = Math.cos(i);
    var sini = Math.sin(i);
    var F = cosOmega;
    var G = sinOmega * cosEpsilon;
    var H = sinOmega * sinEpsilon;
    var P = -sinOmega * cosi;
    var Q = cosOmega * cosi * cosEpsilon - sini * sinEpsilon;
    var R = cosOmega * cosi * sinEpsilon + sini * cosEpsilon;
    var a = Math.sqrt(F * F + P * P);
    var b = Math.sqrt(G * G + Q * Q);
    var c = Math.sqrt(H * H + R * R);
    var A = Math.atan2(F, P);
    var B = Math.atan2(G, Q);
    var C = Math.atan2(H, R);
    var n = elements.n;
    var M = meanAnomoly;
    var E = _kepler_js__WEBPACK_IMPORTED_MODULE_16__.CAAKepler.calculate(M, elements.e);
    E = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(E);
    var v = 2 * Math.atan(Math.sqrt((1 + elements.e) / (1 - elements.e)) * Math.tan(E / 2));
    var r = elements.a * (1 - elements.e * Math.cos(E));
    var x = r * a * Math.sin(A + w + v);
    var y = r * b * Math.sin(B + w + v);
    var z = r * c * Math.sin(C + w + v);
    return _double3d_js__WEBPACK_IMPORTED_MODULE_17__.Vector3d.create(x, z, y);
};

ELL.calculateElements = function (JD, elements) {
    var Epsilon = _nutation_js__WEBPACK_IMPORTED_MODULE_5__.CAANutation.meanObliquityOfEcliptic(elements.jdEquinox);
    var JD0 = JD;
    var details = new EOD();
    Epsilon = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(Epsilon);
    var omega = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(elements.omega);
    var w = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(elements.w);
    var i = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(elements.i);
    var sinEpsilon = Math.sin(Epsilon);
    var cosEpsilon = Math.cos(Epsilon);
    var sinOmega = Math.sin(omega);
    var cosOmega = Math.cos(omega);
    var cosi = Math.cos(i);
    var sini = Math.sin(i);
    var F = cosOmega;
    var G = sinOmega * cosEpsilon;
    var H = sinOmega * sinEpsilon;
    var P = -sinOmega * cosi;
    var Q = cosOmega * cosi * cosEpsilon - sini * sinEpsilon;
    var R = cosOmega * cosi * sinEpsilon + sini * cosEpsilon;
    var a = Math.sqrt(F * F + P * P);
    var b = Math.sqrt(G * G + Q * Q);
    var c = Math.sqrt(H * H + R * R);
    var A = Math.atan2(F, P);
    var B = Math.atan2(G, Q);
    var C = Math.atan2(H, R);
    var n = ELL.meanMotionFromSemiMajorAxis(elements.a);
    var SunCoord = _sun_js__WEBPACK_IMPORTED_MODULE_6__.CAASun.equatorialRectangularCoordinatesAnyEquinox(JD, elements.jdEquinox);
    for (var j = 0; j < 2; j++) {
        var M = n * (JD0 - elements.t);
        var E = _kepler_js__WEBPACK_IMPORTED_MODULE_16__.CAAKepler.calculate(M, elements.e);
        E = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(E);
        var v = 2 * Math.atan(Math.sqrt((1 + elements.e) / (1 - elements.e)) * Math.tan(E / 2));
        var r = elements.a * (1 - elements.e * Math.cos(E));
        var x = r * a * Math.sin(A + w + v);
        var y = r * b * Math.sin(B + w + v);
        var z = r * c * Math.sin(C + w + v);
        if (!j) {
            details.heliocentricRectangularEquatorial.x = x;
            details.heliocentricRectangularEquatorial.y = y;
            details.heliocentricRectangularEquatorial.z = z;
            var u = omega + v;
            var cosu = Math.cos(u);
            var sinu = Math.sin(u);
            details.heliocentricRectangularEcliptical.x = r * (cosOmega * cosu - sinOmega * sinu * cosi);
            details.heliocentricRectangularEcliptical.y = r * (sinOmega * cosu + cosOmega * sinu * cosi);
            details.heliocentricRectangularEcliptical.z = r * sini * sinu;
            details.heliocentricEclipticLongitude = Math.atan2(y, x);
            details.heliocentricEclipticLongitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.m24(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.r2D(details.heliocentricEclipticLongitude) / 15);
            details.heliocentricEclipticLatitude = Math.asin(z / r);
            details.heliocentricEclipticLatitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.r2D(details.heliocentricEclipticLatitude);
        }
        var psi = SunCoord.x + x;
        var nu = SunCoord.y + y;
        var sigma = SunCoord.z + z;
        var Alpha = Math.atan2(nu, psi);
        Alpha = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.r2D(Alpha);
        var Delta = Math.atan2(sigma, Math.sqrt(psi * psi + nu * nu));
        Delta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.r2D(Delta);
        var Distance = Math.sqrt(psi * psi + nu * nu + sigma * sigma);
        if (!j) {
            details.trueGeocentricRA = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.m24(Alpha / 15);
            details.trueGeocentricDeclination = Delta;
            details.trueGeocentricDistance = Distance;
            details.trueGeocentricLightTime = ELL.distanceToLightTime(Distance);
        }
        else {
            details.astrometricGeocenticRA = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.m24(Alpha / 15);
            details.astrometricGeocentricDeclination = Delta;
            details.astrometricGeocentricDistance = Distance;
            details.astrometricGeocentricLightTime = ELL.distanceToLightTime(Distance);
            var RES = Math.sqrt(SunCoord.x * SunCoord.x + SunCoord.y * SunCoord.y + SunCoord.z * SunCoord.z);
            details.elongation = Math.acos((RES * RES + Distance * Distance - r * r) / (2 * RES * Distance));
            details.elongation = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.r2D(details.elongation);
            details.phaseAngle = Math.acos((r * r + Distance * Distance - RES * RES) / (2 * r * Distance));
            details.phaseAngle = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.r2D(details.phaseAngle);
        }
        if (!j) {
            JD0 = JD - details.trueGeocentricLightTime;
        }
    }
    return details;
};

ELL.instantaneousVelocity = function (r, a) {
    return 42.1219 * Math.sqrt((1 / r) - (1 / (2 * a)));
};

ELL.velocityAtPerihelion = function (e, a) {
    return 29.7847 / Math.sqrt(a) * Math.sqrt((1 + e) / (1 - e));
};

ELL.velocityAtAphelion = function (e, a) {
    return 29.7847 / Math.sqrt(a) * Math.sqrt((1 - e) / (1 + e));
};

ELL.lengthOfEllipse = function (e, a) {
    var b = a * Math.sqrt(1 - e * e);
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.PI() * (3 * (a + b) - Math.sqrt((a + 3 * b) * (3 * a + b)));
};

ELL.cometMagnitude = function (g, delta, k, r) {
    return g + 5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(delta) + k * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(r);
};

ELL.minorPlanetMagnitude = function (H, delta, G, r, PhaseAngle) {
    PhaseAngle = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(PhaseAngle);
    var phi1 = Math.exp(-3.33 * Math.pow(Math.tan(PhaseAngle / 2), 0.63));
    var phi2 = Math.exp(-1.87 * Math.pow(Math.tan(PhaseAngle / 2), 1.22));
    return H + 5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(r * delta) - 2.5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10((1 - G) * phi1 + G * phi2);
};

var ELL$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("ELL", [ELL, ELL$, null]);


/***/ }),

/***/ "./esm/astrocalc/equation_of_time.js":
/*!*******************************************!*\
  !*** ./esm/astrocalc/equation_of_time.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EOT: () => (/* binding */ EOT)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nutation.js */ "./esm/astrocalc/nutation.js");
/* harmony import */ var _sun_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sun.js */ "./esm/astrocalc/sun.js");
// Originally `AAEQUATIONOFTIME.CPP`
// "Purpose: Implementation for the algorithms to calculate the "Equation of Time""
// Last update of original: PJN / 05-07-2005
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.







// EOT

function EOT() { }

EOT.calculate = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var rho5 = rho4 * rho;
    var L0 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(280.4664567 + 360007.6982779 * rho + 0.03032028 * rhosquared + rhocubed / 49931 - rho4 / 15300 - rho5 / 2000000);
    var SunLong = _sun_js__WEBPACK_IMPORTED_MODULE_3__.CAASun.apparentEclipticLongitude(JD);
    var SunLat = _sun_js__WEBPACK_IMPORTED_MODULE_3__.CAASun.apparentEclipticLatitude(JD);
    var epsilon = _nutation_js__WEBPACK_IMPORTED_MODULE_2__.CAANutation.trueObliquityOfEcliptic(JD);
    var Equatorial = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.ec2Eq(SunLong, SunLat, epsilon);
    epsilon = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(epsilon);
    var E = L0 - 0.0057183 - Equatorial.x * 15 + _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, _nutation_js__WEBPACK_IMPORTED_MODULE_2__.CAANutation.nutationInLongitude(JD)) * Math.cos(epsilon);
    if (E > 180) {
        E = -(360 - E);
    }
    E *= 4;
    return E;
};

var EOT$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("EOT", [EOT, EOT$, null]);


/***/ }),

/***/ "./esm/astrocalc/fk5.js":
/*!******************************!*\
  !*** ./esm/astrocalc/fk5.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAFK5: () => (/* binding */ CAAFK5)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
// Originally `AAFK5.CPP`
// "Purpose: Implementation for the algorithms to convert to the FK5 standard reference frame"
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.





// CAAFK5

function CAAFK5() { }

CAAFK5.correctionInLongitude = function (Longitude, Latitude, JD) {
    var T = (JD - 2451545) / 36525;
    var Ldash = Longitude - 1.397 * T - 0.00031 * T * T;
    Ldash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Ldash);
    Longitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Longitude);
    Latitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Latitude);
    var vvalue = -0.09033 + 0.03916 * (Math.cos(Ldash) + Math.sin(Ldash)) * Math.tan(Latitude);
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, vvalue);
};

CAAFK5.correctionInLatitude = function (Longitude, JD) {
    var T = (JD - 2451545) / 36525;
    var Ldash = Longitude - 1.397 * T - 0.00031 * T * T;
    Ldash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Ldash);
    Longitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Longitude);
    var vvalue = 0.03916 * (Math.cos(Ldash) - Math.sin(Ldash));
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, vvalue);
};

CAAFK5.convertVSOPToFK5J2000 = function (vvalue) {
    var result = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.C3D();
    result.x = vvalue.x + 4.4036E-07 * vvalue.y - 1.90919E-07 * vvalue.z;
    result.y = -4.79966E-07 * vvalue.x + 0.917482137087 * vvalue.y - 0.397776982902 * vvalue.z;
    result.z = 0.397776982902 * vvalue.y + 0.917482137087 * vvalue.z;
    return result;
};

CAAFK5.convertVSOPToFK5B1950 = function (vvalue) {
    var result = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.C3D();
    result.x = 0.999925702634 * vvalue.x + 0.012189716217 * vvalue.y + 1.1134016E-05 * vvalue.z;
    result.y = -0.011179418036 * vvalue.x + 0.917413998946 * vvalue.y - 0.397777041885 * vvalue.z;
    result.z = -0.004859003787 * vvalue.x + 0.397747363646 * vvalue.y + 0.917482111428 * vvalue.z;
    return result;
};

CAAFK5.convertVSOPToFK5AnyEquinox = function (vvalue, JDEquinox) {
    var t = (JDEquinox - 2451545) / 36525;
    var tsquared = t * t;
    var tcubed = tsquared * t;
    var sigma = 2306.2181 * t + 0.30188 * tsquared + 0.017988 * tcubed;
    sigma = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, sigma));
    var zeta = 2306.2181 * t + 1.09468 * tsquared + 0.018203 * tcubed;
    zeta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, zeta));
    var phi = 2004.3109 * t - 0.42665 * tsquared - 0.041833 * tcubed;
    phi = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, phi));
    var cossigma = Math.cos(sigma);
    var coszeta = Math.cos(zeta);
    var cosphi = Math.cos(phi);
    var sinsigma = Math.sin(sigma);
    var sinzeta = Math.sin(zeta);
    var sinphi = Math.sin(phi);
    var xx = cossigma * coszeta * cosphi - sinsigma * sinzeta;
    var xy = sinsigma * coszeta + cossigma * sinzeta * cosphi;
    var xz = cossigma * sinphi;
    var yx = -cossigma * sinzeta - sinsigma * coszeta * cosphi;
    var yy = cossigma * coszeta - sinsigma * sinzeta * cosphi;
    var yz = -sinsigma * sinphi;
    var zx = -coszeta * sinphi;
    var zy = -sinzeta * sinphi;
    var zz = cosphi;
    var result = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.C3D();
    result.x = xx * vvalue.x + yx * vvalue.y + zx * vvalue.z;
    result.y = xy * vvalue.x + yy * vvalue.y + zy * vvalue.z;
    result.z = xz * vvalue.x + yz * vvalue.y + zz * vvalue.z;
    return result;
};

var CAAFK5$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAFK5", [CAAFK5, CAAFK5$, null]);


/***/ }),

/***/ "./esm/astrocalc/galilean_moons.js":
/*!*****************************************!*\
  !*** ./esm/astrocalc/galilean_moons.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GM: () => (/* binding */ GM),
/* harmony export */   GMD: () => (/* binding */ GMD),
/* harmony export */   GMDS: () => (/* binding */ GMDS)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _sun_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sun.js */ "./esm/astrocalc/sun.js");
/* harmony import */ var _earth_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./earth.js */ "./esm/astrocalc/earth.js");
/* harmony import */ var _jupiter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jupiter.js */ "./esm/astrocalc/jupiter.js");
/* harmony import */ var _elliptical_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./elliptical.js */ "./esm/astrocalc/elliptical.js");
/* harmony import */ var _elements_planetary_orbit_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./elements_planetary_orbit.js */ "./esm/astrocalc/elements_planetary_orbit.js");
// Originally `AAGALILEANMOONS.CPP`
// "Purpose: Implementation for the algorithms which obtain the positions of the 4 great moons of Jupiter"
// Last update of original: PJN / 06-01-2004
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.










// GMD - was CAAGalileanMoonDetail

function GMD() {
    this.meanLongitude = 0;
    this.trueLongitude = 0;
    this.tropicalLongitude = 0;
    this.equatorialLatitude = 0;
    this.r = 0;
    this.eclipticRectangularCoordinates = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.C3D();
    this.trueRectangularCoordinates = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.C3D();
    this.apparentRectangularCoordinates = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.C3D();
    this.bInTransit = false;
    this.bInOccultation = false;
    this.bInEclipse = false;
    this.bInShadowTransit = false;
    this.apparentShadowRectangularCoordinates = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.C3D();
    this.meanLongitude = 0;
    this.trueLongitude = 0;
    this.tropicalLongitude = 0;
    this.equatorialLatitude = 0;
    this.r = 0;
    this.bInTransit = false;
    this.bInOccultation = false;
    this.bInEclipse = false;
    this.bInShadowTransit = false;
}

var GMD$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("GMD", [GMD, GMD$, null]);


// GMDS - was CAAGalileanMoonsDetails

function GMDS() {
    this.satellite1 = new GMD();
    this.satellite2 = new GMD();
    this.satellite3 = new GMD();
    this.satellite4 = new GMD();
}

var GMDS$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("GMDS", [GMDS, GMDS$, null]);


// GM - was CAAGalileanMoons

function GM() { }

GM.calculate = function (JD) {
    var sunlong = _sun_js__WEBPACK_IMPORTED_MODULE_2__.CAASun.geometricEclipticLongitude(JD);
    var sunlongrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(sunlong);
    var beta = _sun_js__WEBPACK_IMPORTED_MODULE_2__.CAASun.geometricEclipticLatitude(JD);
    var betarad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(beta);
    var R = _earth_js__WEBPACK_IMPORTED_MODULE_3__.CAAEarth.radiusVector(JD);
    var DELTA = 5;
    var PreviousEarthLightTravelTime = 0;
    var EarthLightTravelTime = _elliptical_js__WEBPACK_IMPORTED_MODULE_5__.ELL.distanceToLightTime(DELTA);
    var JD1 = JD - EarthLightTravelTime;
    var bIterate = true;
    var x = 0;
    var y = 0;
    var z = 0;
    var l = 0;
    var lrad = 0;
    var b = 0;
    var brad = 0;
    var r = 0;
    while (bIterate) {
        l = _jupiter_js__WEBPACK_IMPORTED_MODULE_4__.CAAJupiter.eclipticLongitude(JD1);
        lrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(l);
        b = _jupiter_js__WEBPACK_IMPORTED_MODULE_4__.CAAJupiter.eclipticLatitude(JD1);
        brad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(b);
        r = _jupiter_js__WEBPACK_IMPORTED_MODULE_4__.CAAJupiter.radiusVector(JD1);
        x = r * Math.cos(brad) * Math.cos(lrad) + R * Math.cos(sunlongrad);
        y = r * Math.cos(brad) * Math.sin(lrad) + R * Math.sin(sunlongrad);
        z = r * Math.sin(brad) + R * Math.sin(betarad);
        DELTA = Math.sqrt(x * x + y * y + z * z);
        EarthLightTravelTime = _elliptical_js__WEBPACK_IMPORTED_MODULE_5__.ELL.distanceToLightTime(DELTA);
        bIterate = (Math.abs(EarthLightTravelTime - PreviousEarthLightTravelTime) > 2E-06);
        if (bIterate) {
            JD1 = JD - EarthLightTravelTime;
            PreviousEarthLightTravelTime = EarthLightTravelTime;
        }
    }
    var details1 = GM.calculateHelper(JD, sunlongrad, betarad, R);
    GM.fillInPhenomenaDetails(details1.satellite1);
    GM.fillInPhenomenaDetails(details1.satellite2);
    GM.fillInPhenomenaDetails(details1.satellite3);
    GM.fillInPhenomenaDetails(details1.satellite4);
    JD1 = JD - EarthLightTravelTime;
    l = _jupiter_js__WEBPACK_IMPORTED_MODULE_4__.CAAJupiter.eclipticLongitude(JD1);
    lrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(l);
    b = _jupiter_js__WEBPACK_IMPORTED_MODULE_4__.CAAJupiter.eclipticLatitude(JD1);
    brad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(b);
    r = _jupiter_js__WEBPACK_IMPORTED_MODULE_4__.CAAJupiter.radiusVector(JD1);
    x = r * Math.cos(brad) * Math.cos(lrad);
    y = r * Math.cos(brad) * Math.sin(lrad);
    z = r * Math.sin(brad);
    DELTA = Math.sqrt(x * x + y * y + z * z);
    var SunLightTravelTime = _elliptical_js__WEBPACK_IMPORTED_MODULE_5__.ELL.distanceToLightTime(DELTA);
    var details2 = GM.calculateHelper(JD + SunLightTravelTime - EarthLightTravelTime, sunlongrad, betarad, 0);
    GM.fillInPhenomenaDetails(details2.satellite1);
    GM.fillInPhenomenaDetails(details2.satellite2);
    GM.fillInPhenomenaDetails(details2.satellite3);
    GM.fillInPhenomenaDetails(details2.satellite4);
    details1.satellite1.bInEclipse = details2.satellite1.bInOccultation;
    details1.satellite2.bInEclipse = details2.satellite2.bInOccultation;
    details1.satellite3.bInEclipse = details2.satellite3.bInOccultation;
    details1.satellite4.bInEclipse = details2.satellite4.bInOccultation;
    details1.satellite1.bInShadowTransit = details2.satellite1.bInTransit;
    details1.satellite2.bInShadowTransit = details2.satellite2.bInTransit;
    details1.satellite3.bInShadowTransit = details2.satellite3.bInTransit;
    details1.satellite4.bInShadowTransit = details2.satellite4.bInTransit;
    details1.satellite1.apparentShadowRectangularCoordinates = details2.satellite1.apparentRectangularCoordinates;
    details1.satellite2.apparentShadowRectangularCoordinates = details2.satellite2.apparentRectangularCoordinates;
    details1.satellite3.apparentShadowRectangularCoordinates = details2.satellite3.apparentRectangularCoordinates;
    details1.satellite4.apparentShadowRectangularCoordinates = details2.satellite4.apparentRectangularCoordinates;
    return details1;
};

GM.calculateHelper = function (JD, sunlongrad, betarad, R) {
    var details = new GMDS();
    var DELTA = 5;
    var PreviousLightTravelTime = 0;
    var LightTravelTime = _elliptical_js__WEBPACK_IMPORTED_MODULE_5__.ELL.distanceToLightTime(DELTA);
    var x = 0;
    var y = 0;
    var z = 0;
    var l = 0;
    var lrad = 0;
    var b = 0;
    var brad = 0;
    var r = 0;
    var JD1 = JD - LightTravelTime;
    var bIterate = true;
    while (bIterate) {
        l = _jupiter_js__WEBPACK_IMPORTED_MODULE_4__.CAAJupiter.eclipticLongitude(JD1);
        lrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(l);
        b = _jupiter_js__WEBPACK_IMPORTED_MODULE_4__.CAAJupiter.eclipticLatitude(JD1);
        brad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(b);
        r = _jupiter_js__WEBPACK_IMPORTED_MODULE_4__.CAAJupiter.radiusVector(JD1);
        x = r * Math.cos(brad) * Math.cos(lrad) + R * Math.cos(sunlongrad);
        y = r * Math.cos(brad) * Math.sin(lrad) + R * Math.sin(sunlongrad);
        z = r * Math.sin(brad) + R * Math.sin(betarad);
        DELTA = Math.sqrt(x * x + y * y + z * z);
        LightTravelTime = _elliptical_js__WEBPACK_IMPORTED_MODULE_5__.ELL.distanceToLightTime(DELTA);
        bIterate = (Math.abs(LightTravelTime - PreviousLightTravelTime) > 2E-06);
        if (bIterate) {
            JD1 = JD - LightTravelTime;
            PreviousLightTravelTime = LightTravelTime;
        }
    }
    var lambda0 = Math.atan2(y, x);
    var beta0 = Math.atan(z / Math.sqrt(x * x + y * y));
    var t = JD - 2443000.5 - LightTravelTime;
    var l1 = 106.07719 + 203.48895579 * t;
    var l1rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(l1);
    var l2 = 175.73161 + 101.374724735 * t;
    var l2rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(l2);
    var l3 = 120.55883 + 50.317609207 * t;
    var l3rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(l3);
    var l4 = 84.44459 + 21.571071177 * t;
    var l4rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(l4);
    var pi1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(97.0881 + 0.16138586 * t));
    var pi2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(154.8663 + 0.04726307 * t));
    var pi3 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(188.184 + 0.00712734 * t));
    var pi4 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(335.2868 + 0.00184 * t));
    var w1 = 312.3346 - 0.13279386 * t;
    var w1rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(w1);
    var w2 = 100.4411 - 0.03263064 * t;
    var w2rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(w2);
    var w3 = 119.1942 - 0.00717703 * t;
    var w3rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(w3);
    var w4 = 322.6186 - 0.00175934 * t;
    var w4rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(w4);
    var GAMMA = 0.33033 * Math.sin(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(163.679 + 0.0010512 * t)) + 0.03439 * Math.sin(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(34.486 - 0.0161731 * t));
    var philambda = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(199.6766 + 0.1737919 * t);
    var psi = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(316.5182 - 2.08E-06 * t);
    var G = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(30.23756 + 0.0830925701 * t + GAMMA);
    var Gdash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(31.97853 + 0.0334597339 * t);
    var PI = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(13.469942);
    var Sigma1 = 0.47259 * Math.sin(2 * (l1rad - l2rad)) + -0.03478 * Math.sin(pi3 - pi4) + 0.01081 * Math.sin(l2rad - 2 * l3rad + pi3) + 0.00738 * Math.sin(philambda) + 0.00713 * Math.sin(l2rad - 2 * l3rad + pi2) + -0.00674 * Math.sin(pi1 + pi3 - 2 * PI - 2 * G) + 0.00666 * Math.sin(l2rad - 2 * l3rad + pi4) + 0.00445 * Math.sin(l1rad - pi3) + -0.00354 * Math.sin(l1rad - l2rad) + -0.00317 * Math.sin(2 * psi - 2 * PI) + 0.00265 * Math.sin(l1rad - pi4) + -0.00186 * Math.sin(G) + 0.00162 * Math.sin(pi2 - pi3) + 0.00158 * Math.sin(4 * (l1rad - l2rad)) + -0.00155 * Math.sin(l1rad - l3rad) + -0.00138 * Math.sin(psi + w3rad - 2 * PI - 2 * G) + -0.00115 * Math.sin(2 * (l1rad - 2 * l2rad + w2rad)) + 0.00089 * Math.sin(pi2 - pi4) + 0.00085 * Math.sin(l1rad + pi3 - 2 * PI - 2 * G) + 0.00083 * Math.sin(w2rad - w3rad) + 0.00053 * Math.sin(psi - w2rad);
    var Sigma2 = 1.06476 * Math.sin(2 * (l2rad - l3rad)) + 0.04256 * Math.sin(l1rad - 2 * l2rad + pi3) + 0.03581 * Math.sin(l2rad - pi3) + 0.02395 * Math.sin(l1rad - 2 * l2rad + pi4) + 0.01984 * Math.sin(l2rad - pi4) + -0.01778 * Math.sin(philambda) + 0.01654 * Math.sin(l2rad - pi2) + 0.01334 * Math.sin(l2rad - 2 * l3rad + pi2) + 0.01294 * Math.sin(pi3 - pi4) + -0.01142 * Math.sin(l2rad - l3rad) + -0.01057 * Math.sin(G) + -0.00775 * Math.sin(2 * (psi - PI)) + 0.00524 * Math.sin(2 * (l1rad - l2rad)) + -0.0046 * Math.sin(l1rad - l3rad) + 0.00316 * Math.sin(psi - 2 * G + w3rad - 2 * PI) + -0.00203 * Math.sin(pi1 + pi3 - 2 * PI - 2 * G) + 0.00146 * Math.sin(psi - w3rad) + -0.00145 * Math.sin(2 * G) + 0.00125 * Math.sin(psi - w4rad) + -0.00115 * Math.sin(l1rad - 2 * l3rad + pi3) + -0.00094 * Math.sin(2 * (l2rad - w2rad)) + 0.00086 * Math.sin(2 * (l1rad - 2 * l2rad + w2rad)) + -0.00086 * Math.sin(5 * Gdash - 2 * G + _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(52.225)) + -0.00078 * Math.sin(l2rad - l4rad) + -0.00064 * Math.sin(3 * l3rad - 7 * l4rad + 4 * pi4) + 0.00064 * Math.sin(pi1 - pi4) + -0.00063 * Math.sin(l1rad - 2 * l3rad + pi4) + 0.00058 * Math.sin(w3rad - w4rad) + 0.00056 * Math.sin(2 * (psi - PI - G)) + 0.00056 * Math.sin(2 * (l2rad - l4rad)) + 0.00055 * Math.sin(2 * (l1rad - l3rad)) + 0.00052 * Math.sin(3 * l3rad - 7 * l4rad + pi3 + 3 * pi4) + -0.00043 * Math.sin(l1rad - pi3) + 0.00041 * Math.sin(5 * (l2rad - l3rad)) + 0.00041 * Math.sin(pi4 - PI) + 0.00032 * Math.sin(w2rad - w3rad) + 0.00032 * Math.sin(2 * (l3rad - G - PI));
    var Sigma3 = 0.1649 * Math.sin(l3rad - pi3) + 0.09081 * Math.sin(l3rad - pi4) + -0.06907 * Math.sin(l2rad - l3rad) + 0.03784 * Math.sin(pi3 - pi4) + 0.01846 * Math.sin(2 * (l3rad - l4rad)) + -0.0134 * Math.sin(G) + -0.01014 * Math.sin(2 * (psi - PI)) + 0.00704 * Math.sin(l2rad - 2 * l3rad + pi3) + -0.0062 * Math.sin(l2rad - 2 * l3rad + pi2) + -0.00541 * Math.sin(l3rad - l4rad) + 0.00381 * Math.sin(l2rad - 2 * l3rad + pi4) + 0.00235 * Math.sin(psi - w3rad) + 0.00198 * Math.sin(psi - w4rad) + 0.00176 * Math.sin(philambda) + 0.0013 * Math.sin(3 * (l3rad - l4rad)) + 0.00125 * Math.sin(l1rad - l3rad) + -0.00119 * Math.sin(5 * Gdash - 2 * G + _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(52.225)) + 0.00109 * Math.sin(l1rad - l2rad) + -0.001 * Math.sin(3 * l3rad - 7 * l4rad + 4 * pi4) + 0.00091 * Math.sin(w3rad - w4rad) + 0.0008 * Math.sin(3 * l3rad - 7 * l4rad + pi3 + 3 * pi4) + -0.00075 * Math.sin(2 * l2rad - 3 * l3rad + pi3) + 0.00072 * Math.sin(pi1 + pi3 - 2 * PI - 2 * G) + 0.00069 * Math.sin(pi4 - PI) + -0.00058 * Math.sin(2 * l3rad - 3 * l4rad + pi4) + -0.00057 * Math.sin(l3rad - 2 * l4rad + pi4) + 0.00056 * Math.sin(l3rad + pi3 - 2 * PI - 2 * G) + -0.00052 * Math.sin(l2rad - 2 * l3rad + pi1) + -0.0005 * Math.sin(pi2 - pi3) + 0.00048 * Math.sin(l3rad - 2 * l4rad + pi3) + -0.00045 * Math.sin(2 * l2rad - 3 * l3rad + pi4) + -0.00041 * Math.sin(pi2 - pi4) + -0.00038 * Math.sin(2 * G) + -0.00037 * Math.sin(pi3 - pi4 + w3rad - w4rad) + -0.00032 * Math.sin(3 * l3rad - 7 * l4rad + 2 * pi3 + 2 * pi4) + 0.0003 * Math.sin(4 * (l3rad - l4rad)) + 0.00029 * Math.sin(l3rad + pi4 - 2 * PI - 2 * G) + -0.00028 * Math.sin(w3rad + psi - 2 * PI - 2 * G) + 0.00026 * Math.sin(l3rad - PI - G) + 0.00024 * Math.sin(l2rad - 3 * l3rad + 2 * l4rad) + 0.00021 * Math.sin(l3rad - PI - G) + -0.00021 * Math.sin(l3rad - pi2) + 0.00017 * Math.sin(2 * (l3rad - pi3));
    var Sigma4 = 0.84287 * Math.sin(l4rad - pi4) + 0.03431 * Math.sin(pi4 - pi3) + -0.03305 * Math.sin(2 * (psi - PI)) + -0.03211 * Math.sin(G) + -0.01862 * Math.sin(l4rad - pi3) + 0.01186 * Math.sin(psi - w4rad) + 0.00623 * Math.sin(l4rad + pi4 - 2 * G - 2 * PI) + 0.00387 * Math.sin(2 * (l4rad - pi4)) + -0.00284 * Math.sin(5 * Gdash - 2 * G + _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(52.225)) + -0.00234 * Math.sin(2 * (psi - pi4)) + -0.00223 * Math.sin(l3rad - l4rad) + -0.00208 * Math.sin(l4rad - PI) + 0.00178 * Math.sin(psi + w4rad - 2 * pi4) + 0.00134 * Math.sin(pi4 - PI) + 0.00125 * Math.sin(2 * (l4rad - G - PI)) + -0.00117 * Math.sin(2 * G) + -0.00112 * Math.sin(2 * (l3rad - l4rad)) + 0.00107 * Math.sin(3 * l3rad - 7 * l4rad + 4 * pi4) + 0.00102 * Math.sin(l4rad - G - PI) + 0.00096 * Math.sin(2 * l4rad - psi - w4rad) + 0.00087 * Math.sin(2 * (psi - w4rad)) + -0.00085 * Math.sin(3 * l3rad - 7 * l4rad + pi3 + 3 * pi4) + 0.00085 * Math.sin(l3rad - 2 * l4rad + pi4) + -0.00081 * Math.sin(2 * (l4rad - psi)) + 0.00071 * Math.sin(l4rad + pi4 - 2 * PI - 3 * G) + 0.00061 * Math.sin(l1rad - l4rad) + -0.00056 * Math.sin(psi - w3rad) + -0.00054 * Math.sin(l3rad - 2 * l4rad + pi3) + 0.00051 * Math.sin(l2rad - l4rad) + 0.00042 * Math.sin(2 * (psi - G - PI)) + 0.00039 * Math.sin(2 * (pi4 - w4rad)) + 0.00036 * Math.sin(psi + PI - pi4 - w4rad) + 0.00035 * Math.sin(2 * Gdash - G + _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(188.37)) + -0.00035 * Math.sin(l4rad - pi4 + 2 * PI - 2 * psi) + -0.00032 * Math.sin(l4rad + pi4 - 2 * PI - G) + 0.0003 * Math.sin(2 * Gdash - 2 * G + _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(149.15)) + 0.00029 * Math.sin(3 * l3rad - 7 * l4rad + 2 * pi3 + 2 * pi4) + 0.00028 * Math.sin(l4rad - pi4 + 2 * psi - 2 * PI) + -0.00028 * Math.sin(2 * (l4rad - w4rad)) + -0.00027 * Math.sin(pi3 - pi4 + w3rad - w4rad) + -0.00026 * Math.sin(5 * Gdash - 3 * G + _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(188.37)) + 0.00025 * Math.sin(w4rad - w3rad) + -0.00025 * Math.sin(l2rad - 3 * l3rad + 2 * l4rad) + -0.00023 * Math.sin(3 * (l3rad - l4rad)) + 0.00021 * Math.sin(2 * l4rad - 2 * PI - 3 * G) + -0.00021 * Math.sin(2 * l3rad - 3 * l4rad + pi4) + 0.00019 * Math.sin(l4rad - pi4 - G) + -0.00019 * Math.sin(2 * l4rad - pi3 - pi4) + -0.00018 * Math.sin(l4rad - pi4 + G) + -0.00016 * Math.sin(l4rad + pi3 - 2 * PI - 2 * G);
    details.satellite1.meanLongitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(l1);
    details.satellite1.trueLongitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(l1 + Sigma1);
    var L1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(details.satellite1.trueLongitude);
    details.satellite2.meanLongitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(l2);
    details.satellite2.trueLongitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(l2 + Sigma2);
    var L2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(details.satellite2.trueLongitude);
    details.satellite3.meanLongitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(l3);
    details.satellite3.trueLongitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(l3 + Sigma3);
    var L3 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(details.satellite3.trueLongitude);
    details.satellite4.meanLongitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(l4);
    details.satellite4.trueLongitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(l4 + Sigma4);
    var L4 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(details.satellite4.trueLongitude);
    var B1 = Math.atan(0.0006393 * Math.sin(L1 - w1rad) + 0.0001825 * Math.sin(L1 - w2rad) + 3.29E-05 * Math.sin(L1 - w3rad) + -3.11E-05 * Math.sin(L1 - psi) + 9.3E-06 * Math.sin(L1 - w4rad) + 7.5E-06 * Math.sin(3 * L1 - 4 * l2rad - 1.9927 * Sigma1 + w2rad) + 4.6E-06 * Math.sin(L1 + psi - 2 * PI - 2 * G));
    details.satellite1.equatorialLatitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(B1);
    var B2 = Math.atan(0.0081004 * Math.sin(L2 - w2rad) + 0.0004512 * Math.sin(L2 - w3rad) + -0.0003284 * Math.sin(L2 - psi) + 0.000116 * Math.sin(L2 - w4rad) + 2.72E-05 * Math.sin(l1rad - 2 * l3rad + 1.0146 * Sigma2 + w2rad) + -1.44E-05 * Math.sin(L2 - w1rad) + 1.43E-05 * Math.sin(L2 + psi - 2 * PI - 2 * G) + 3.5E-06 * Math.sin(L2 - psi + G) + -2.8E-06 * Math.sin(l1rad - 2 * l3rad + 1.0146 * Sigma2 + w3rad));
    details.satellite2.equatorialLatitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(B2);
    var B3 = Math.atan(0.0032402 * Math.sin(L3 - w3rad) + -0.0016911 * Math.sin(L3 - psi) + 0.0006847 * Math.sin(L3 - w4rad) + -0.0002797 * Math.sin(L3 - w2rad) + 3.21E-05 * Math.sin(L3 + psi - 2 * PI - 2 * G) + 5.1E-06 * Math.sin(L3 - psi + G) + -4.5E-06 * Math.sin(L3 - psi - G) + -4.5E-06 * Math.sin(L3 + psi - 2 * PI) + 3.7E-06 * Math.sin(L3 + psi - 2 * PI - 3 * G) + 3E-06 * Math.sin(2 * l2rad - 3 * L3 + 4.03 * Sigma3 + w2rad) + -2.1E-06 * Math.sin(2 * l2rad - 3 * L3 + 4.03 * Sigma3 + w3rad));
    details.satellite3.equatorialLatitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(B3);
    var B4 = Math.atan(-0.0076579 * Math.sin(L4 - psi) + 0.0044134 * Math.sin(L4 - w4rad) + -0.0005112 * Math.sin(L4 - w3rad) + 7.73E-05 * Math.sin(L4 + psi - 2 * PI - 2 * G) + 1.04E-05 * Math.sin(L4 - psi + G) + -1.02E-05 * Math.sin(L4 - psi - G) + 8.8E-06 * Math.sin(L4 + psi - 2 * PI - 3 * G) + -3.8E-06 * Math.sin(L4 + psi - 2 * PI - G));
    details.satellite4.equatorialLatitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(B4);
    details.satellite1.r = 5.90569 * (1 + (-0.0041339 * Math.cos(2 * (l1rad - l2rad)) + -3.87E-05 * Math.cos(l1rad - pi3) + -2.14E-05 * Math.cos(l1rad - pi4) + 1.7E-05 * Math.cos(l1rad - l2rad) + -1.31E-05 * Math.cos(4 * (l1rad - l2rad)) + 1.06E-05 * Math.cos(l1rad - l3rad) + -6.6E-06 * Math.cos(l1rad + pi3 - 2 * PI - 2 * G)));
    details.satellite2.r = 9.39657 * (1 + (0.0093848 * Math.cos(l1rad - l2rad) + -0.0003116 * Math.cos(l2rad - pi3) + -0.0001744 * Math.cos(l2rad - pi4) + -0.0001442 * Math.cos(l2rad - pi2) + 5.53E-05 * Math.cos(l2rad - l3rad) + 5.23E-05 * Math.cos(l1rad - l3rad) + -2.9E-05 * Math.cos(2 * (l1rad - l2rad)) + 1.64E-05 * Math.cos(2 * (l2rad - w2rad)) + 1.07E-05 * Math.cos(l1rad - 2 * l3rad + pi3) + -1.02E-05 * Math.cos(l2rad - pi1) + -9.1E-06 * Math.cos(2 * (l1rad - l3rad))));
    details.satellite3.r = 14.98832 * (1 + (-0.0014388 * Math.cos(l3rad - pi3) + -0.0007919 * Math.cos(l3rad - pi4) + 0.0006342 * Math.cos(l2rad - l3rad) + -0.0001761 * Math.cos(2 * (l3rad - l4rad)) + 2.94E-05 * Math.cos(l3rad - l4rad) + -1.56E-05 * Math.cos(3 * (l3rad - l4rad)) + 1.56E-05 * Math.cos(l1rad - l3rad) + -1.53E-05 * Math.cos(l1rad - l2rad) + 7E-06 * Math.cos(2 * l2rad - 3 * l3rad + pi3) + -5.1E-06 * Math.cos(l3rad + pi3 - 2 * PI - 2 * G)));
    details.satellite4.r = 26.36273 * (1 + (-0.0073546 * Math.cos(l4rad - pi4) + 0.0001621 * Math.cos(l4rad - pi3) + 9.74E-05 * Math.cos(l3rad - l4rad) + -5.43E-05 * Math.cos(l4rad + pi4 - 2 * PI - 2 * G) + -2.71E-05 * Math.cos(2 * (l4rad - pi4)) + 1.82E-05 * Math.cos(l4rad - PI) + 1.77E-05 * Math.cos(2 * (l3rad - l4rad)) + -1.67E-05 * Math.cos(2 * l4rad - psi - w4rad) + 1.67E-05 * Math.cos(psi - w4rad) + -1.55E-05 * Math.cos(2 * (l4rad - PI - G)) + 1.42E-05 * Math.cos(2 * (l4rad - psi)) + 1.05E-05 * Math.cos(l1rad - l4rad) + 9.2E-06 * Math.cos(l2rad - l4rad) + -8.9E-06 * Math.cos(l4rad - PI - G) + -6.2E-06 * Math.cos(l4rad + pi4 - 2 * PI - 3 * G) + 4.8E-06 * Math.cos(2 * (l4rad - w4rad))));
    var T0 = (JD - 2433282.423) / 36525;
    var P = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(1.3966626 * T0 + 0.0003088 * T0 * T0);
    L1 += P;
    details.satellite1.tropicalLongitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(L1));
    L2 += P;
    details.satellite2.tropicalLongitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(L2));
    L3 += P;
    details.satellite3.tropicalLongitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(L3));
    L4 += P;
    details.satellite4.tropicalLongitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(L4));
    psi += P;
    var T = (JD - 2415020.5) / 36525;
    var I = 3.120262 + 0.0006 * T;
    var Irad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(I);
    var X1 = details.satellite1.r * Math.cos(L1 - psi) * Math.cos(B1);
    var X2 = details.satellite2.r * Math.cos(L2 - psi) * Math.cos(B2);
    var X3 = details.satellite3.r * Math.cos(L3 - psi) * Math.cos(B3);
    var X4 = details.satellite4.r * Math.cos(L4 - psi) * Math.cos(B4);
    var X5 = 0;
    var Y1 = details.satellite1.r * Math.sin(L1 - psi) * Math.cos(B1);
    var Y2 = details.satellite2.r * Math.sin(L2 - psi) * Math.cos(B2);
    var Y3 = details.satellite3.r * Math.sin(L3 - psi) * Math.cos(B3);
    var Y4 = details.satellite4.r * Math.sin(L4 - psi) * Math.cos(B4);
    var Y5 = 0;
    var Z1 = details.satellite1.r * Math.sin(B1);
    var Z2 = details.satellite2.r * Math.sin(B2);
    var Z3 = details.satellite3.r * Math.sin(B3);
    var Z4 = details.satellite4.r * Math.sin(B4);
    var Z5 = 1;
    var omega = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_elements_planetary_orbit_js__WEBPACK_IMPORTED_MODULE_6__.EPO.jupiterLongitudeAscendingNode(JD));
    var i = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_elements_planetary_orbit_js__WEBPACK_IMPORTED_MODULE_6__.EPO.jupiterInclination(JD));
    var A6 = 0;
    var B6 = 0;
    var C6 = 0;
    var north = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.C3D();
    var abc = GM.rotations(X5, Y5, Z5, Irad, psi, i, omega, lambda0, beta0, north);
    A6 = abc[0];
    B6 = abc[1];
    C6 = abc[2];
    var D = Math.atan2(A6, C6);
    abc = GM.rotations(X1, Y1, Z1, Irad, psi, i, omega, lambda0, beta0, details.satellite1.eclipticRectangularCoordinates);
    A6 = abc[0];
    B6 = abc[1];
    C6 = abc[2];
    details.satellite1.trueRectangularCoordinates.x = A6 * Math.cos(D) - C6 * Math.sin(D);
    details.satellite1.trueRectangularCoordinates.y = A6 * Math.sin(D) + C6 * Math.cos(D);
    details.satellite1.trueRectangularCoordinates.z = B6;
    abc = GM.rotations(X2, Y2, Z2, Irad, psi, i, omega, lambda0, beta0, details.satellite2.eclipticRectangularCoordinates);
    A6 = abc[0];
    B6 = abc[1];
    C6 = abc[2];
    details.satellite2.trueRectangularCoordinates.x = A6 * Math.cos(D) - C6 * Math.sin(D);
    details.satellite2.trueRectangularCoordinates.y = A6 * Math.sin(D) + C6 * Math.cos(D);
    details.satellite2.trueRectangularCoordinates.z = B6;
    abc = GM.rotations(X3, Y3, Z3, Irad, psi, i, omega, lambda0, beta0, details.satellite3.eclipticRectangularCoordinates);
    A6 = abc[0];
    B6 = abc[1];
    C6 = abc[2];
    details.satellite3.trueRectangularCoordinates.x = A6 * Math.cos(D) - C6 * Math.sin(D);
    details.satellite3.trueRectangularCoordinates.y = A6 * Math.sin(D) + C6 * Math.cos(D);
    details.satellite3.trueRectangularCoordinates.z = B6;
    abc = GM.rotations(X4, Y4, Z4, Irad, psi, i, omega, lambda0, beta0, details.satellite4.eclipticRectangularCoordinates);
    A6 = abc[0];
    B6 = abc[1];
    C6 = abc[2];
    details.satellite4.trueRectangularCoordinates.x = A6 * Math.cos(D) - C6 * Math.sin(D);
    details.satellite4.trueRectangularCoordinates.y = A6 * Math.sin(D) + C6 * Math.cos(D);
    details.satellite4.trueRectangularCoordinates.z = B6;
    details.satellite1.apparentRectangularCoordinates.x = details.satellite1.trueRectangularCoordinates.x + Math.abs(details.satellite1.trueRectangularCoordinates.z) / 17295 * Math.sqrt(1 - (details.satellite1.trueRectangularCoordinates.x / details.satellite1.r) * (details.satellite1.trueRectangularCoordinates.x / details.satellite1.r));
    details.satellite1.apparentRectangularCoordinates.y = details.satellite1.trueRectangularCoordinates.y;
    details.satellite1.apparentRectangularCoordinates.z = details.satellite1.trueRectangularCoordinates.z;
    details.satellite2.apparentRectangularCoordinates.x = details.satellite2.trueRectangularCoordinates.x + Math.abs(details.satellite2.trueRectangularCoordinates.z) / 21819 * Math.sqrt(1 - (details.satellite2.trueRectangularCoordinates.x / details.satellite2.r) * (details.satellite2.trueRectangularCoordinates.x / details.satellite2.r));
    details.satellite2.apparentRectangularCoordinates.y = details.satellite2.trueRectangularCoordinates.y;
    details.satellite2.apparentRectangularCoordinates.z = details.satellite2.trueRectangularCoordinates.z;
    details.satellite3.apparentRectangularCoordinates.x = details.satellite3.trueRectangularCoordinates.x + Math.abs(details.satellite3.trueRectangularCoordinates.z) / 27558 * Math.sqrt(1 - (details.satellite3.trueRectangularCoordinates.x / details.satellite3.r) * (details.satellite3.trueRectangularCoordinates.x / details.satellite3.r));
    details.satellite3.apparentRectangularCoordinates.y = details.satellite3.trueRectangularCoordinates.y;
    details.satellite3.apparentRectangularCoordinates.z = details.satellite3.trueRectangularCoordinates.z;
    details.satellite4.apparentRectangularCoordinates.x = details.satellite4.trueRectangularCoordinates.x + Math.abs(details.satellite4.trueRectangularCoordinates.z) / 36548 * Math.sqrt(1 - (details.satellite4.trueRectangularCoordinates.x / details.satellite4.r) * (details.satellite4.trueRectangularCoordinates.x / details.satellite4.r));
    details.satellite4.apparentRectangularCoordinates.y = details.satellite4.trueRectangularCoordinates.y;
    details.satellite4.apparentRectangularCoordinates.z = details.satellite4.trueRectangularCoordinates.z;
    var W = DELTA / (DELTA + details.satellite1.trueRectangularCoordinates.z / 2095);
    details.satellite1.apparentRectangularCoordinates.x *= W;
    details.satellite1.apparentRectangularCoordinates.y *= W;
    W = DELTA / (DELTA + details.satellite2.trueRectangularCoordinates.z / 2095);
    details.satellite2.apparentRectangularCoordinates.x *= W;
    details.satellite2.apparentRectangularCoordinates.y *= W;
    W = DELTA / (DELTA + details.satellite3.trueRectangularCoordinates.z / 2095);
    details.satellite3.apparentRectangularCoordinates.x *= W;
    details.satellite3.apparentRectangularCoordinates.y *= W;
    W = DELTA / (DELTA + details.satellite4.trueRectangularCoordinates.z / 2095);
    details.satellite4.apparentRectangularCoordinates.x *= W;
    details.satellite4.apparentRectangularCoordinates.y *= W;
    return details;
};

GM.rotations = function (X, Y, Z, I, psi, i, omega, lambda0, beta0, eclipticCoord) {
    var A6;
    var B6;
    var C6;
    var phi = psi - omega;
    var A1 = X;
    var B1 = Y * Math.cos(I) - Z * Math.sin(I);
    var C1 = Y * Math.sin(I) + Z * Math.cos(I);
    var A2 = A1 * Math.cos(phi) - B1 * Math.sin(phi);
    var B2 = A1 * Math.sin(phi) + B1 * Math.cos(phi);
    var C2 = C1;
    var A3 = A2;
    var B3 = B2 * Math.cos(i) - C2 * Math.sin(i);
    var C3 = B2 * Math.sin(i) + C2 * Math.cos(i);
    var A4 = A3 * Math.cos(omega) - B3 * Math.sin(omega);
    var B4 = A3 * Math.sin(omega) + B3 * Math.cos(omega);
    var C4 = C3;
    var JupiterRadiiToAU = 1 / 2095;
    eclipticCoord.x = A4 * JupiterRadiiToAU;
    eclipticCoord.y = B4 * JupiterRadiiToAU;
    eclipticCoord.z = C4 * JupiterRadiiToAU;
    var A5 = A4 * Math.sin(lambda0) - B4 * Math.cos(lambda0);
    var B5 = A4 * Math.cos(lambda0) + B4 * Math.sin(lambda0);
    var C5 = C4;
    A6 = A5;
    B6 = C5 * Math.sin(beta0) + B5 * Math.cos(beta0);
    C6 = C5 * Math.cos(beta0) - B5 * Math.sin(beta0);
    return [A6, B6, C6];
};

GM.fillInPhenomenaDetails = function (detail) {
    var Y1 = 1.071374 * detail.apparentRectangularCoordinates.y;
    var r = Y1 * Y1 + detail.apparentRectangularCoordinates.x * detail.apparentRectangularCoordinates.x;
    if (r < 1) {
        if (detail.apparentRectangularCoordinates.z < 0) {
            detail.bInTransit = true;
            detail.bInOccultation = false;
        }
        else {
            detail.bInTransit = false;
            detail.bInOccultation = true;
        }
    }
    else {
        detail.bInTransit = false;
        detail.bInOccultation = false;
    }
};

var GM$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("GM", [GM, GM$, null]);


/***/ }),

/***/ "./esm/astrocalc/globe.js":
/*!********************************!*\
  !*** ./esm/astrocalc/globe.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAGlobe: () => (/* binding */ CAAGlobe)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
// Originally `AAGLOBE.CPP`
// "Purpose: Implementation for the algorithms for the Earth's Globe"
// Last update of original: PJN / 29-12-2003
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.





// CAAGlobe

function CAAGlobe() { }

CAAGlobe.rhoSinThetaPrime = function (GeographicalLatitude, Height) {
    GeographicalLatitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(GeographicalLatitude);
    var U = Math.atan(0.99664719 * Math.tan(GeographicalLatitude));
    return 0.99664719 * Math.sin(U) + (Height / 6378149 * Math.sin(GeographicalLatitude));
};

CAAGlobe.rhoCosThetaPrime = function (GeographicalLatitude, Height) {
    GeographicalLatitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(GeographicalLatitude);
    var U = Math.atan(0.99664719 * Math.tan(GeographicalLatitude));
    return Math.cos(U) + (Height / 6378149 * Math.cos(GeographicalLatitude));
};

CAAGlobe.radiusOfParallelOfLatitude = function (GeographicalLatitude) {
    GeographicalLatitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(GeographicalLatitude);
    var sinGeo = Math.sin(GeographicalLatitude);
    return (6378.14 * Math.cos(GeographicalLatitude)) / Math.sqrt(1 - 0.0066943847614084 * sinGeo * sinGeo);
};

CAAGlobe.radiusOfCurvature = function (GeographicalLatitude) {
    GeographicalLatitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(GeographicalLatitude);
    var sinGeo = Math.sin(GeographicalLatitude);
    return (6378.14 * (1 - 0.0066943847614084)) / Math.pow((1 - 0.0066943847614084 * sinGeo * sinGeo), 1.5);
};

CAAGlobe.distanceBetweenPoints = function (GeographicalLatitude1, GeographicalLongitude1, GeographicalLatitude2, GeographicalLongitude2) {
    GeographicalLatitude1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(GeographicalLatitude1);
    GeographicalLatitude2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(GeographicalLatitude2);
    GeographicalLongitude1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(GeographicalLongitude1);
    GeographicalLongitude2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(GeographicalLongitude2);
    var F = (GeographicalLatitude1 + GeographicalLatitude2) / 2;
    var G = (GeographicalLatitude1 - GeographicalLatitude2) / 2;
    var lambda = (GeographicalLongitude1 - GeographicalLongitude2) / 2;
    var sinG = Math.sin(G);
    var cosG = Math.cos(G);
    var cosF = Math.cos(F);
    var sinF = Math.sin(F);
    var sinLambda = Math.sin(lambda);
    var cosLambda = Math.cos(lambda);
    var S = (sinG * sinG * cosLambda * cosLambda) + (cosF * cosF * sinLambda * sinLambda);
    var C = (cosG * cosG * cosLambda * cosLambda) + (sinF * sinF * sinLambda * sinLambda);
    var w = Math.atan(Math.sqrt(S / C));
    var R = Math.sqrt(S * C) / w;
    var D = 2 * w * 6378.14;
    var Hprime = (3 * R - 1) / (2 * C);
    var Hprime2 = (3 * R + 1) / (2 * S);
    var f = 0.00335281317789691;
    return D * (1 + (f * Hprime * sinF * sinF * cosG * cosG) - (f * Hprime2 * cosF * cosF * sinG * sinG));
};

var CAAGlobe$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAGlobe", [CAAGlobe, CAAGlobe$, null]);


/***/ }),

/***/ "./esm/astrocalc/illuminated_fraction.js":
/*!***********************************************!*\
  !*** ./esm/astrocalc/illuminated_fraction.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IFR: () => (/* binding */ IFR)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
// Originally `AAILLUMINATEDFRACTION.CPP`
// "Purpose: Implementation for the algorithms for a planet's Phase Angle, Illuminated Fraction and Magnitude"
// Last update of original: PJN / 21-01-2005
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.






// IFR

function IFR() { }

IFR.phaseAngle = function (r, R, Delta) {
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.r2D(Math.acos((r * r + Delta * Delta - R * R) / (2 * r * Delta))));
};

IFR.phaseAngle2 = function (R, R0, B, L, L0, Delta) {
    B = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(B);
    L = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(L);
    L0 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(L0);
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.r2D(Math.acos((R - R0 * Math.cos(B) * Math.cos(L - L0)) / Delta)));
};

IFR.phaseAngleRectangular = function (x, y, z, B, L, Delta) {
    B = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(B);
    L = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(L);
    var cosB = Math.cos(B);
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.r2D(Math.acos((x * cosB * Math.cos(L) + y * cosB * Math.sin(L) + z * Math.sin(B)) / Delta)));
};

IFR.illuminatedFraction = function (PhaseAngle) {
    PhaseAngle = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(PhaseAngle);
    return (1 + Math.cos(PhaseAngle)) / 2;
};

IFR.illuminatedFraction2 = function (r, R, Delta) {
    return (((r + Delta) * (r + Delta) - R * R) / (4 * r * Delta));
};

IFR.mercuryMagnitudeMuller = function (r, Delta, i) {
    var I_50 = i - 50;
    return 1.16 + 5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(r * Delta) + 0.02838 * I_50 + 0.0001023 * I_50 * I_50;
};

IFR.venusMagnitudeMuller = function (r, Delta, i) {
    return -4 + 5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(r * Delta) + 0.01322 * i + 4.247E-07 * i * i * i;
};

IFR.marsMagnitudeMuller = function (r, Delta, i) {
    return -1.3 + 5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(r * Delta) + 0.01486 * i;
};

IFR.jupiterMagnitudeMuller = function (r, Delta) {
    return -8.93 + 5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(r * Delta);
};

IFR.saturnMagnitudeMuller = function (r, Delta, DeltaU, B) {
    B = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(B);
    var sinB = Math.sin(B);
    return -8.68 + 5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(r * Delta) + 0.044 * Math.abs(DeltaU) - 2.6 * Math.sin(Math.abs(B)) + 1.25 * sinB * sinB;
};

IFR.uranusMagnitudeMuller = function (r, Delta) {
    return -6.85 + 5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(r * Delta);
};

IFR.neptuneMagnitudeMuller = function (r, Delta) {
    return -7.05 + 5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(r * Delta);
};

IFR.mercuryMagnitudeAA = function (r, Delta, i) {
    var i2 = i * i;
    var i3 = i2 * i;
    return -0.42 + 5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(r * Delta) + 0.038 * i - 0.000273 * i2 + 2E-06 * i3;
};

IFR.venusMagnitudeAA = function (r, Delta, i) {
    var i2 = i * i;
    var i3 = i2 * i;
    return -4.4 + 5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(r * Delta) + 0.0009 * i + 0.000239 * i2 - 6.5E-07 * i3;
};

IFR.marsMagnitudeAA = function (r, Delta, i) {
    return -1.52 + 5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(r * Delta) + 0.016 * i;
};

IFR.jupiterMagnitudeAA = function (r, Delta, i) {
    return -9.4 + 5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(r * Delta) + 0.005 * i;
};

IFR.saturnMagnitudeAA = function (r, Delta, DeltaU, B) {
    B = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(B);
    var sinB = Math.sin(B);
    return -8.88 + 5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(r * Delta) + 0.044 * Math.abs(DeltaU) - 2.6 * Math.sin(Math.abs(B)) + 1.25 * sinB * sinB;
};

IFR.uranusMagnitudeAA = function (r, Delta) {
    return -7.19 + 5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(r * Delta);
};

IFR.neptuneMagnitudeAA = function (r, Delta) {
    return -6.87 + 5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(r * Delta);
};

IFR.plutoMagnitudeAA = function (r, Delta) {
    return -1 + 5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(r * Delta);
};

var IFR$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("IFR", [IFR, IFR$, null]);


/***/ }),

/***/ "./esm/astrocalc/interpolate.js":
/*!**************************************!*\
  !*** ./esm/astrocalc/interpolate.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   INTP: () => (/* binding */ INTP)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
// Originally `AAINTERPOLATE.CPP`
// "Purpose: Implementation for the algorithms for Interpolation"
// Last update of original: PJN / 29-12-2003
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.




// INTP - was CAAInterpoate

function INTP() { }

INTP.interpolate = function (n, Y1, Y2, Y3) {
    var a = Y2 - Y1;
    var b = Y3 - Y2;
    var c = Y1 + Y3 - 2 * Y2;
    return Y2 + n / 2 * (a + b + n * c);
};

INTP.interpolate2 = function (n, Y1, Y2, Y3, Y4, Y5) {
    var A = Y2 - Y1;
    var B = Y3 - Y2;
    var C = Y4 - Y3;
    var D = Y5 - Y4;
    var E = B - A;
    var F = C - B;
    var G = D - C;
    var H = F - E;
    var J = G - F;
    var K = J - H;
    var N2 = n * n;
    var N3 = N2 * n;
    var N4 = N3 * n;
    return Y3 + n * ((B + C) / 2 - (H + J) / 12) + N2 * (F / 2 - K / 24) + N3 * ((H + J) / 12) + N4 * (K / 24);
};

INTP.interpolateToHalves = function (Y1, Y2, Y3, Y4) {
    return (9 * (Y2 + Y3) - Y1 - Y4) / 16;
};

INTP.lagrangeInterpolate = function (X, n, pX, pY) {
    var V = 0;
    for (var i = 1; i <= n; i++) {
        var C = 1;
        for (var j = 1; j <= n; j++) {
            if (j !== i) {
                C = C * (X - pX[j - 1]) / (pX[i - 1] - pX[j - 1]);
            }
        }
        V += C * pY[i - 1];
    }
    return V;
};

INTP.zero = function (Y1, Y2, Y3) {
    var a = Y2 - Y1;
    var b = Y3 - Y2;
    var c = Y1 + Y3 - 2 * Y2;
    var bRecalc = true;
    var n0prev = 0;
    var n0 = n0prev;
    while (bRecalc) {
        n0 = -2 * Y2 / (a + b + c * n0prev);
        bRecalc = (Math.abs(n0 - n0prev) > 1E-12);
        if (bRecalc) {
            n0prev = n0;
        }
    }
    return n0;
};

INTP.zeroB = function (Y1, Y2, Y3, Y4, Y5) {
    var A = Y2 - Y1;
    var B = Y3 - Y2;
    var C = Y4 - Y3;
    var D = Y5 - Y4;
    var E = B - A;
    var F = C - B;
    var G = D - C;
    var H = F - E;
    var J = G - F;
    var K = J - H;
    var bRecalc = true;
    var n0prev = 0;
    var n0 = n0prev;
    while (bRecalc) {
        var n0prev2 = n0prev * n0prev;
        var n0prev3 = n0prev2 * n0prev;
        var n0prev4 = n0prev3 * n0prev;
        n0 = (-24 * Y3 + n0prev2 * (K - 12 * F) - 2 * n0prev3 * (H + J) - n0prev4 * K) / (2 * (6 * B + 6 * C - H - J));
        bRecalc = (Math.abs(n0 - n0prev) > 1E-12);
        if (bRecalc) {
            n0prev = n0;
        }
    }
    return n0;
};

INTP.zero2 = function (Y1, Y2, Y3) {
    var a = Y2 - Y1;
    var b = Y3 - Y2;
    var c = Y1 + Y3 - 2 * Y2;
    var bRecalc = true;
    var n0prev = 0;
    var n0 = n0prev;
    while (bRecalc) {
        var deltan0 = -(2 * Y2 + n0prev * (a + b + c * n0prev)) / (a + b + 2 * c * n0prev);
        n0 = n0prev + deltan0;
        bRecalc = (Math.abs(deltan0) > 1E-12);
        if (bRecalc) {
            n0prev = n0;
        }
    }
    return n0;
};

INTP.zero2B = function (Y1, Y2, Y3, Y4, Y5) {
    var A = Y2 - Y1;
    var B = Y3 - Y2;
    var C = Y4 - Y3;
    var D = Y5 - Y4;
    var E = B - A;
    var F = C - B;
    var G = D - C;
    var H = F - E;
    var J = G - F;
    var K = J - H;
    var M = K / 24;
    var N = (H + J) / 12;
    var P = F / 2 - M;
    var Q = (B + C) / 2 - N;
    var bRecalc = true;
    var n0prev = 0;
    var n0 = n0prev;
    while (bRecalc) {
        var n0prev2 = n0prev * n0prev;
        var n0prev3 = n0prev2 * n0prev;
        var n0prev4 = n0prev3 * n0prev;
        var deltan0 = -(M * n0prev4 + N * n0prev3 + P * n0prev2 + Q * n0prev + Y3) / (4 * M * n0prev3 + 3 * N * n0prev2 + 2 * P * n0prev + Q);
        n0 = n0prev + deltan0;
        bRecalc = (Math.abs(deltan0) > 1E-12);
        if (bRecalc) {
            n0prev = n0;
        }
    }
    return n0;
};

var INTP$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("INTP", [INTP, INTP$, null]);


/***/ }),

/***/ "./esm/astrocalc/jupiter.js":
/*!**********************************!*\
  !*** ./esm/astrocalc/jupiter.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAJupiter: () => (/* binding */ CAAJupiter)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _earth_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./earth.js */ "./esm/astrocalc/earth.js");
// Originally `AAJUPITER.CPP`
// "Purpose: Implementation for the algorithms which obtain the heliocentric position of Uranus [sic]"
// Last update of original: PJN / 31-05-2004
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.






// Coefficients

const g_L0JupiterCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(59954691, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9695899, 5.0619179, 529.6909651), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(573610, 1.444062, 7.113547), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(306389, 5.417347, 1059.38193), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(97178, 4.14265, 632.78374), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(72903, 3.64043, 522.57742), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(64264, 3.41145, 103.09277), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(39806, 2.29377, 419.48464), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(38858, 1.27232, 316.39187), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27965, 1.78455, 536.80451), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13590, 5.77481, 1589.0729), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8769, 3.63, 949.1756), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8246, 3.5823, 206.1855), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7368, 5.081, 735.8765), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6263, 0.025, 213.2991), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6114, 4.5132, 1162.4747), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5305, 4.1863, 1052.2684), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5305, 1.3067, 14.2271), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4905, 1.3208, 110.2063), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4647, 4.6996, 3.9322), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3045, 4.3168, 426.5982), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2610, 1.5667, 846.0828), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2028, 1.0638, 3.1814), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1921, 0.9717, 639.8973), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1765, 2.1415, 1066.4955), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1723, 3.8804, 1265.5675), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1633, 3.582, 515.4639), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1432, 4.2968, 625.6702), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(973, 4.098, 95.979), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(884, 2.437, 412.371), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(733, 6.085, 838.969), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(731, 3.806, 1581.959), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(709, 1.293, 742.99), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(692, 6.134, 2118.764), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(614, 4.109, 1478.867), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(582, 4.54, 309.278), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(495, 3.756, 323.505), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(441, 2.958, 454.909), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(417, 1.036, 2.488), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(390, 4.897, 1692.166), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(376, 4.703, 1368.66), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(341, 5.715, 533.623), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(330, 4.74, 0.048), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(262, 1.877, 0.963), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(261, 0.82, 380.128), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(257, 3.724, 199.072), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(244, 5.22, 728.763), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(235, 1.227, 909.819), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(220, 1.651, 543.918), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(207, 1.855, 525.759), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(202, 1.807, 1375.774), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(197, 5.293, 1155.361), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(175, 3.73, 942.062), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(175, 3.226, 1898.351), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(175, 5.91, 956.289), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(158, 4.365, 1795.258), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(151, 3.906, 74.782), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(149, 4.377, 1685.052), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(141, 3.136, 491.558), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(138, 1.318, 1169.588), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(131, 4.169, 1045.155), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(117, 2.5, 1596.186), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(117, 3.389, 0.521), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(106, 4.554, 526.51)];
const g_L1JupiterCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(52993480757, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(489741, 4.220667, 529.690965), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(228919, 6.026475, 7.113547), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27655, 4.57266, 1059.38193), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20721, 5.45939, 522.57742), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12106, 0.16986, 536.80451), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6068, 4.4242, 103.0928), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5434, 3.9848, 419.4846), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4238, 5.8901, 14.2271), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2212, 5.2677, 206.1855), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1746, 4.9267, 1589.0729), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1296, 5.5513, 3.1814), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1173, 5.8565, 1052.2684), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1163, 0.5145, 3.9322), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1099, 5.307, 515.4639), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1007, 0.4648, 735.8765), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1004, 3.1504, 426.5982), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(848, 5.758, 110.206), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(827, 4.803, 213.299), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(816, 0.586, 1066.495), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(725, 5.518, 639.897), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(568, 5.989, 625.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(474, 4.132, 412.371), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(413, 5.737, 95.979), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(345, 4.242, 632.784), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(336, 3.732, 1162.475), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(234, 4.035, 949.176), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(234, 6.243, 309.278), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(199, 1.505, 838.969), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(195, 2.219, 323.505), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(187, 6.086, 742.99), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(184, 6.28, 543.918), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(171, 5.417, 199.072), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(131, 0.626, 728.763), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(115, 0.68, 846.083), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(115, 5.286, 2118.764), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(108, 4.493, 956.289), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(80, 5.82, 1045.15), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(72, 5.34, 942.06), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(70, 5.97, 532.87), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(67, 5.73, 21.34), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(66, 0.13, 526.51), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(65, 6.09, 1581.96), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(59, 0.59, 1155.36), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(58, 0.99, 1596.19), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(57, 5.97, 1169.59), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(57, 1.41, 533.62), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(55, 5.43, 10.29), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(52, 5.73, 117.32), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(52, 0.23, 1368.66), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(50, 6.08, 525.76), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(47, 3.63, 1478.87), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(47, 0.51, 1265.57), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(40, 4.16, 1692.17), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(34, 0.1, 302.16), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(33, 5.04, 220.41), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(32, 5.37, 508.35), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(29, 5.42, 1272.68), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(29, 3.36, 4.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(29, 0.76, 88.87), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(25, 1.61, 831.86)];
const g_L2JupiterCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(47234, 4.32148, 7.11355), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(38966, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(30629, 2.93021, 529.69097), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3189, 1.055, 522.5774), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2729, 4.8455, 536.8045), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2723, 3.4141, 1059.3819), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1721, 4.1873, 14.2271), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(383, 5.768, 419.485), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(378, 0.76, 515.464), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(367, 6.055, 103.093), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(337, 3.786, 3.181), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(308, 0.694, 206.186), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(218, 3.814, 1589.073), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(199, 5.34, 1066.495), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(197, 2.484, 3.932), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(156, 1.406, 1052.268), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(146, 3.814, 639.897), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(142, 1.634, 426.598), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(130, 5.837, 412.371), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(117, 1.414, 625.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(97, 4.03, 110.21), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(91, 1.11, 95.98), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(87, 2.52, 632.78), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(79, 4.64, 543.92), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(72, 2.22, 735.88), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(58, 0.83, 199.07), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(57, 3.12, 213.3), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(49, 1.67, 309.28), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(40, 4.02, 21.34), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(40, 0.62, 323.51), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(36, 2.33, 728.76), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(29, 3.61, 10.29), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(28, 3.24, 838.97), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(26, 4.5, 742.99), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(26, 2.51, 1162.47), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(25, 1.22, 1045.15), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(24, 3.01, 956.29), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(19, 4.29, 532.87), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(18, 0.81, 508.35), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(17, 4.2, 2118.76), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(17, 1.83, 526.51), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15, 5.81, 1596.19), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15, 0.68, 942.06), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15, 4, 117.32), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14, 5.95, 316.39), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14, 1.8, 302.16), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13, 2.52, 88.87), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13, 4.37, 1169.59), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 4.44, 525.76), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10, 1.72, 1581.96), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 2.18, 1155.36), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 3.29, 220.41), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 3.32, 831.86), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8, 5.76, 846.08), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8, 2.71, 533.62), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7, 2.18, 1265.57), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 0.5, 949.18)];
const g_L3JupiterCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6502, 2.5986, 7.1135), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1357, 1.3464, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(471, 2.475, 14.227), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(417, 3.245, 536.805), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(353, 2.974, 522.577), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(155, 2.076, 1059.382), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(87, 2.51, 515.46), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(44, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(34, 3.83, 1066.5), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(28, 2.45, 206.19), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(24, 1.28, 412.37), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(23, 2.98, 543.92), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20, 2.1, 639.9), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20, 1.4, 419.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(19, 1.59, 103.09), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(17, 2.3, 21.34), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(17, 2.6, 1589.07), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16, 3.15, 625.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16, 3.36, 1052.27), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13, 2.76, 95.98), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13, 2.54, 199.07), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13, 6.27, 426.6), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 1.76, 10.29), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 2.27, 110.21), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7, 3.43, 309.28), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7, 4.04, 728.76), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 2.52, 508.35), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5, 2.91, 1045.15), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5, 5.25, 323.51), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 4.3, 88.87), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 3.52, 302.16), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 4.09, 735.88), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 1.43, 956.29), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 4.36, 1596.19), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 1.25, 213.3), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 5.02, 838.97), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 2.24, 117.32), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 2.9, 742.99), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 2.36, 942.06)];
const g_L4JupiterCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(669, 0.853, 7.114), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(114, 3.142, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(100, 0.743, 14.227), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(50, 1.65, 536.8), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(44, 5.82, 529.69), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(32, 4.86, 522.58), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15, 4.29, 515.46), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 0.71, 1059.38), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5, 1.3, 543.92), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 2.32, 1066.5), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 0.48, 21.34), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 3, 412.37), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 0.4, 639.9), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 4.26, 199.07), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 4.91, 625.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 4.26, 206.19), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 5.26, 1052.27), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 4.72, 95.98), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 1.29, 1589.07)];
const g_L5JupiterCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(50, 5.26, 7.11), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16, 5.25, 14.23), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 0.01, 536.8), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 1.1, 522.58), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 3.14, 0)];
const g_B0JupiterCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2268616, 3.5585261, 529.6909651), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(110090, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(109972, 3.908093, 1059.38193), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8101, 3.6051, 522.5774), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6438, 0.3063, 536.8045), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6044, 4.2588, 1589.0729), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1107, 2.9853, 1162.4747), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(944, 1.675, 426.598), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(942, 2.936, 1052.268), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(894, 1.754, 7.114), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(836, 5.179, 103.093), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(767, 2.155, 632.784), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(684, 3.678, 213.299), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(629, 0.643, 1066.495), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(559, 0.014, 846.083), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(532, 2.703, 110.206), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(464, 1.173, 949.176), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(431, 2.608, 419.485), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(351, 4.611, 2118.764), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(132, 4.778, 742.99), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(123, 3.35, 1692.166), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(116, 1.387, 323.505), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(115, 5.049, 316.392), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(104, 3.701, 515.464), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(103, 2.319, 1478.867), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(102, 3.153, 1581.959)];
const g_B1JupiterCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(177352, 5.701665, 529.690965), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3230, 5.7794, 1059.3819), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3081, 5.4746, 522.5774), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2212, 4.7348, 536.8045), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1694, 3.1416, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(346, 4.746, 1052.268), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(234, 5.189, 1066.495), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(196, 6.186, 7.114), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(150, 3.927, 1589.073), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(114, 3.439, 632.784), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(97, 2.91, 949.18), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(82, 5.08, 1162.47), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(77, 2.51, 103.09), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(77, 0.61, 419.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(74, 5.5, 515.46), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(61, 5.45, 213.3), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(50, 3.95, 735.88), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(46, 0.54, 110.21), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(45, 1.9, 846.08), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(37, 4.7, 543.92), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(36, 6.11, 316.39), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(32, 4.92, 1581.96)];
const g_B2JupiterCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8094, 1.4632, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(813, 3.1416, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(742, 0.957, 522.577), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(399, 2.899, 536.805), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(342, 1.447, 1059.382), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(74, 0.41, 1052.27), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(46, 3.48, 1066.5), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(30, 1.93, 1589.07), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(29, 0.99, 515.46), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(23, 4.27, 7.11), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14, 2.92, 543.92), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12, 5.22, 632.78), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 4.88, 949.18), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 6.21, 1045.15)];
const g_B3JupiterCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(252, 3.381, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(122, 2.733, 522.577), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(49, 1.04, 536.8), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 2.31, 1052.27), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8, 2.77, 515.46), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7, 4.25, 1059.38), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 1.78, 1066.5), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 1.13, 543.92), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 3.14, 0)];
const g_B4JupiterCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15, 4.53, 522.58), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5, 4.47, 529.69), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 5.44, 536.8), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 4.52, 515.46), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 4.2, 1052.27)];
const g_B5JupiterCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 0.09, 522.58)];
const g_R0JupiterCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(520887429, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(25209327, 3.4910864, 529.69096509), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(610600, 3.841154, 1059.38193), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(282029, 2.574199, 632.783739), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(187647, 2.075904, 522.577418), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(86793, 0.71001, 419.48464), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(72063, 0.21466, 536.80451), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(65517, 5.97996, 316.39187), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(30135, 2.16132, 949.17561), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(29135, 1.67759, 103.09277), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(23947, 0.27458, 7.11355), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(23453, 3.54023, 735.87651), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(22284, 4.19363, 1589.0729), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13033, 2.96043, 1162.4747), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12749, 2.7155, 1052.26838), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9703, 1.9067, 206.1855), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9161, 4.4135, 213.2991), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7895, 2.4791, 426.5982), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7058, 2.1818, 1265.5675), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6138, 6.2642, 846.0828), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5477, 5.6573, 639.8973), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4170, 2.0161, 515.4639), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4137, 2.7222, 625.6702), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3503, 0.5653, 1066.4955), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2617, 2.0099, 1581.9593), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2500, 4.5518, 838.9693), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2128, 6.1275, 742.9901), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1912, 0.8562, 412.3711), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1611, 3.0887, 1368.6603), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1479, 2.6803, 1478.8666), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1231, 1.8904, 323.5054), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1217, 1.8017, 110.2063), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1015, 1.3867, 454.9094), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(999, 2.872, 309.278), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(961, 4.549, 2118.764), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(886, 4.148, 533.623), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(821, 1.593, 1898.351), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(812, 5.941, 909.819), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(777, 3.677, 728.763), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(727, 3.988, 1155.361), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(655, 2.791, 1685.052), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(654, 3.382, 1692.166), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(621, 4.823, 956.289), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(615, 2.276, 942.062), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(562, 0.081, 543.918), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(542, 0.284, 525.759)];
const g_R1JupiterCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1271802, 2.6493751, 529.6909651), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(61662, 3.00076, 1059.38193), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(53444, 3.89718, 522.57742), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(41390, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(31185, 4.88277, 536.80451), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11847, 2.4133, 419.48464), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9166, 4.7598, 7.1135), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3404, 3.3469, 1589.0729), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3203, 5.2108, 735.8765), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3176, 2.793, 103.0928), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2806, 3.7422, 515.4639), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2677, 4.3305, 1052.2684), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2600, 3.6344, 206.1855), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2412, 1.4695, 426.5982), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2101, 3.9276, 639.8973), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1646, 4.4163, 1066.4955), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1641, 4.4163, 625.6702), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1050, 3.1611, 213.2991), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1025, 2.5543, 412.3711), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(806, 2.678, 632.784), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(741, 2.171, 1162.475), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(677, 6.25, 838.969), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(567, 4.577, 742.99), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(485, 2.469, 949.176), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(469, 4.71, 543.918), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(445, 0.403, 323.505), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(416, 5.368, 728.763), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(402, 4.605, 309.278), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(347, 4.681, 14.227), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(338, 3.168, 956.289), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(261, 5.343, 846.083), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(247, 3.923, 942.062), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(220, 4.842, 1368.66), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(203, 5.6, 1155.361), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(200, 4.439, 1045.155), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(197, 3.706, 2118.764), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(196, 3.759, 199.072), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(184, 4.265, 95.979), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(180, 4.402, 532.872), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(170, 4.846, 526.51), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(146, 6.13, 533.623), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(133, 1.322, 110.206), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(132, 4.512, 525.759)];
const g_R2JupiterCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(79645, 1.35866, 529.69097), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8252, 5.7777, 522.5774), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7030, 3.2748, 536.8045), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5314, 1.8384, 1059.3819), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1861, 2.9768, 7.1135), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(964, 5.48, 515.464), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(836, 4.199, 419.485), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(498, 3.142, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(427, 2.228, 639.897), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(406, 3.783, 1066.495), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(377, 2.242, 1589.073), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(363, 5.368, 206.186), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(342, 6.099, 1052.268), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(339, 6.127, 625.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(333, 0.003, 426.598), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(280, 4.262, 412.371), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(257, 0.963, 632.784), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(230, 0.705, 735.877), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(201, 3.069, 543.918), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(200, 4.429, 103.093), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(139, 2.932, 14.227), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(114, 0.787, 728.763), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(95, 1.7, 838.97), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(86, 5.14, 323.51), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(83, 0.06, 309.28), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(80, 2.98, 742.99), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(75, 1.6, 956.29), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(70, 1.51, 213.3), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(67, 5.47, 199.07), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(62, 6.1, 1045.15), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(56, 0.96, 1162.47), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(52, 5.58, 942.06), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(50, 2.72, 532.87), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(45, 5.52, 508.35), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(44, 0.27, 526.51), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(40, 5.95, 95.98)];
const g_R3JupiterCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3519, 6.058, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1073, 1.6732, 536.8045), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(916, 1.413, 522.577), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(342, 0.523, 1059.382), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(255, 1.196, 7.114), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(222, 0.952, 515.464), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(90, 3.14, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(69, 2.27, 1066.5), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(58, 1.41, 543.92), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(58, 0.53, 639.9), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(51, 5.98, 412.37), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(47, 1.58, 625.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(43, 6.12, 419.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(37, 1.18, 14.23), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(34, 1.67, 1052.27), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(34, 0.85, 206.19), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(31, 1.04, 1589.07), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(30, 4.63, 426.6), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(21, 2.5, 728.76), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15, 0.89, 199.07), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14, 0.96, 508.35), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13, 1.5, 1045.15), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12, 2.61, 735.88), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12, 3.56, 323.51), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 1.79, 309.28), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 6.28, 956.29), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10, 6.26, 103.09), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 3.45, 838.97)];
const g_R4JupiterCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(129, 0.084, 536.805), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(113, 4.249, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(83, 3.3, 522.58), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(38, 2.73, 515.46), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27, 5.69, 7.11), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(18, 5.4, 1059.38), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13, 6.02, 543.92), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 0.77, 1066.5), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8, 5.68, 14.23), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7, 1.43, 412.37), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 5.12, 639.9), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5, 3.34, 625.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 3.4, 1052.27), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 4.16, 728.76), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 2.9, 426.6)];
const g_R5JupiterCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 4.75, 536.8), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 5.92, 522.58), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 5.57, 515.46), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 4.3, 543.92), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 3.69, 7.11), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 4.13, 1059.38), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 5.49, 1066.5)];



// CAAJupiter

function CAAJupiter() { }

CAAJupiter.eclipticLongitude = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var rho5 = rho4 * rho;
    var nL0Coefficients = g_L0JupiterCoefficients.length;
    var L0 = 0;
    var i;
    for (i = 0; i < nL0Coefficients; i++) {
        L0 += g_L0JupiterCoefficients[i].a * Math.cos(g_L0JupiterCoefficients[i].b + g_L0JupiterCoefficients[i].c * rho);
    }
    var nL1Coefficients = g_L1JupiterCoefficients.length;
    var L1 = 0;
    for (i = 0; i < nL1Coefficients; i++) {
        L1 += g_L1JupiterCoefficients[i].a * Math.cos(g_L1JupiterCoefficients[i].b + g_L1JupiterCoefficients[i].c * rho);
    }
    var nL2Coefficients = g_L2JupiterCoefficients.length;
    var L2 = 0;
    for (i = 0; i < nL2Coefficients; i++) {
        L2 += g_L2JupiterCoefficients[i].a * Math.cos(g_L2JupiterCoefficients[i].b + g_L2JupiterCoefficients[i].c * rho);
    }
    var nL3Coefficients = g_L3JupiterCoefficients.length;
    var L3 = 0;
    for (i = 0; i < nL3Coefficients; i++) {
        L3 += g_L3JupiterCoefficients[i].a * Math.cos(g_L3JupiterCoefficients[i].b + g_L3JupiterCoefficients[i].c * rho);
    }
    var nL4Coefficients = g_L4JupiterCoefficients.length;
    var L4 = 0;
    for (i = 0; i < nL4Coefficients; i++) {
        L4 += g_L4JupiterCoefficients[i].a * Math.cos(g_L4JupiterCoefficients[i].b + g_L4JupiterCoefficients[i].c * rho);
    }
    var nL5Coefficients = g_L5JupiterCoefficients.length;
    var L5 = 0;
    for (i = 0; i < nL5Coefficients; i++) {
        L5 += g_L5JupiterCoefficients[i].a * Math.cos(g_L5JupiterCoefficients[i].b + g_L5JupiterCoefficients[i].c * rho);
    }
    var vvalue = (L0 + L1 * rho + L2 * rhosquared + L3 * rhocubed + L4 * rho4 + L5 * rho5) / 100000000;
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue));
    return vvalue;
};

CAAJupiter.eclipticLatitude = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var rho5 = rho4 * rho;
    var nB0Coefficients = g_B0JupiterCoefficients.length;
    var B0 = 0;
    var i;
    for (i = 0; i < nB0Coefficients; i++) {
        B0 += g_B0JupiterCoefficients[i].a * Math.cos(g_B0JupiterCoefficients[i].b + g_B0JupiterCoefficients[i].c * rho);
    }
    var nB1Coefficients = g_B1JupiterCoefficients.length;
    var B1 = 0;
    for (i = 0; i < nB1Coefficients; i++) {
        B1 += g_B1JupiterCoefficients[i].a * Math.cos(g_B1JupiterCoefficients[i].b + g_B1JupiterCoefficients[i].c * rho);
    }
    var nB2Coefficients = g_B2JupiterCoefficients.length;
    var B2 = 0;
    for (i = 0; i < nB2Coefficients; i++) {
        B2 += g_B2JupiterCoefficients[i].a * Math.cos(g_B2JupiterCoefficients[i].b + g_B2JupiterCoefficients[i].c * rho);
    }
    var nB3Coefficients = g_B3JupiterCoefficients.length;
    var B3 = 0;
    for (i = 0; i < nB3Coefficients; i++) {
        B3 += g_B3JupiterCoefficients[i].a * Math.cos(g_B3JupiterCoefficients[i].b + g_B3JupiterCoefficients[i].c * rho);
    }
    var nB4Coefficients = g_B4JupiterCoefficients.length;
    var B4 = 0;
    for (i = 0; i < nB4Coefficients; i++) {
        B4 += g_B4JupiterCoefficients[i].a * Math.cos(g_B4JupiterCoefficients[i].b + g_B4JupiterCoefficients[i].c * rho);
    }
    var nB5Coefficients = g_B5JupiterCoefficients.length;
    var B5 = 0;
    for (i = 0; i < nB5Coefficients; i++) {
        B5 += g_B5JupiterCoefficients[i].a * Math.cos(g_B5JupiterCoefficients[i].b + g_B5JupiterCoefficients[i].c * rho);
    }
    var vvalue = (B0 + B1 * rho + B2 * rhosquared + B3 * rhocubed + B4 * rho4 + B5 * rho5) / 100000000;
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue);
    return vvalue;
};

CAAJupiter.radiusVector = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var rho5 = rho4 * rho;
    var nR0Coefficients = g_R0JupiterCoefficients.length;
    var R0 = 0;
    var i;
    for (i = 0; i < nR0Coefficients; i++) {
        R0 += g_R0JupiterCoefficients[i].a * Math.cos(g_R0JupiterCoefficients[i].b + g_R0JupiterCoefficients[i].c * rho);
    }
    var nR1Coefficients = g_R1JupiterCoefficients.length;
    var R1 = 0;
    for (i = 0; i < nR1Coefficients; i++) {
        R1 += g_R1JupiterCoefficients[i].a * Math.cos(g_R1JupiterCoefficients[i].b + g_R1JupiterCoefficients[i].c * rho);
    }
    var nR2Coefficients = g_R2JupiterCoefficients.length;
    var R2 = 0;
    for (i = 0; i < nR2Coefficients; i++) {
        R2 += g_R2JupiterCoefficients[i].a * Math.cos(g_R2JupiterCoefficients[i].b + g_R2JupiterCoefficients[i].c * rho);
    }
    var nR3Coefficients = g_R3JupiterCoefficients.length;
    var R3 = 0;
    for (i = 0; i < nR3Coefficients; i++) {
        R3 += g_R3JupiterCoefficients[i].a * Math.cos(g_R3JupiterCoefficients[i].b + g_R3JupiterCoefficients[i].c * rho);
    }
    var nR4Coefficients = g_R4JupiterCoefficients.length;
    var R4 = 0;
    for (i = 0; i < nR4Coefficients; i++) {
        R4 += g_R4JupiterCoefficients[i].a * Math.cos(g_R4JupiterCoefficients[i].b + g_R4JupiterCoefficients[i].c * rho);
    }
    var nR5Coefficients = g_R5JupiterCoefficients.length;
    var R5 = 0;
    for (i = 0; i < nR5Coefficients; i++) {
        R5 += g_R5JupiterCoefficients[i].a * Math.cos(g_R5JupiterCoefficients[i].b + g_R5JupiterCoefficients[i].c * rho);
    }
    return (R0 + R1 * rho + R2 * rhosquared + R3 * rhocubed + R4 * rho4 + R5 * rho5) / 100000000;
};

var CAAJupiter$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAJupiter", [CAAJupiter, CAAJupiter$, null]);


/***/ }),

/***/ "./esm/astrocalc/kepler.js":
/*!*********************************!*\
  !*** ./esm/astrocalc/kepler.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAKepler: () => (/* binding */ CAAKepler)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
// Originally `AAKEPLER.CPP`
// "Purpose: Implementation for the algorithms which solve Kepler's equation"
// Last update of original: PJN / 29-12-2003
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.






// CAAKepler

function CAAKepler() { }

CAAKepler.calculate = function (M, e) {
    return CAAKepler.calculateIter(M, e, 53);
};

CAAKepler.calculateIter = function (M, e, nIterations) {
    M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.d2R(M);
    var PI = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.PI();
    var F = 1;
    if (M < 0) {
        F = -1;
    }
    M = Math.abs(M) / (2 * PI);
    M = (M - _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(M)) * 2 * PI * F;
    if (M < 0) {
        M += 2 * PI;
    }
    F = 1;
    if (M > PI) {
        F = -1;
    }
    if (M > PI) {
        M = 2 * PI - M;
    }
    var E = PI / 2;
    var scale = PI / 4;
    for (var i = 0; i < nIterations; i++) {
        var R = E - e * Math.sin(E);
        if (M > R) {
            E += scale;
        }
        else {
            E -= scale;
        }
        scale /= 2;
    }
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_2__.CT.r2D(E) * F;
};

var CAAKepler$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAKepler", [CAAKepler, CAAKepler$, null]);


/***/ }),

/***/ "./esm/astrocalc/mars.js":
/*!*******************************!*\
  !*** ./esm/astrocalc/mars.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAMars: () => (/* binding */ CAAMars)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _earth_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./earth.js */ "./esm/astrocalc/earth.js");
// Originally `AAMARS.CPP`
// "Purpose: Implementation for the algorithms which obtain the heliocentric position of Uranus [sic]"
// Last update of original: PJN / 29-12-2003
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.






// Coefficients

const g_L0MarsCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(620347712, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(18656368, 5.050371, 3340.6124267), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1108217, 5.4009984, 6681.2248534), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(91798, 5.75479, 10021.83728), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27745, 5.9705, 3.52312), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12316, 0.84956, 2810.92146), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10610, 2.93959, 2281.2305), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8927, 4.157, 0.0173), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8716, 6.1101, 13362.4497), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7775, 3.3397, 5621.8429), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6798, 0.3646, 398.149), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4161, 0.2281, 2942.4634), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3575, 1.6619, 2544.3144), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3075, 0.857, 191.4483), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2938, 6.0789, 0.0673), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2628, 0.6481, 3337.0893), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2580, 0.03, 3344.1355), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2389, 5.039, 796.298), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1799, 0.6563, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1546, 2.9158, 1751.5395), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1528, 1.1498, 6151.5339), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1286, 3.068, 2146.1654), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1264, 3.6228, 5092.152), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1025, 3.6933, 8962.4553), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(892, 0.183, 16703.062), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(859, 2.401, 2914.014), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(833, 4.495, 3340.63), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(833, 2.464, 3340.595), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(749, 3.822, 155.42), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(724, 0.675, 3738.761), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(713, 3.663, 1059.382), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(655, 0.489, 3127.313), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(636, 2.922, 8432.764), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(553, 4.475, 1748.016), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(550, 3.81, 0.98), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(472, 3.625, 1194.447), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(426, 0.554, 6283.076), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(415, 0.497, 213.299), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(312, 0.999, 6677.702), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(307, 0.381, 6684.748), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(302, 4.486, 3532.061), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(299, 2.783, 6254.627), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(293, 4.221, 20.775), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(284, 5.769, 3149.164), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(281, 5.882, 1349.867), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(274, 0.542, 3340.545), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(274, 0.134, 3340.68), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(239, 5.372, 4136.91), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(236, 5.755, 3333.499), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(231, 1.282, 3870.303), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(221, 3.505, 382.897), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(204, 2.821, 1221.849), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(193, 3.357, 3.59), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(189, 1.491, 9492.146), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(179, 1.006, 951.718), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(174, 2.414, 553.569), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(172, 0.439, 5486.778), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(160, 3.949, 4562.461), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(144, 1.419, 135.065), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(140, 3.326, 2700.715), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(138, 4.301, 7.114), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(131, 4.045, 12303.068), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(128, 2.208, 1592.596), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(128, 1.807, 5088.629), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(117, 3.128, 7903.073), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(113, 3.701, 1589.073), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(110, 1.052, 242.729), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(105, 0.785, 8827.39), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(100, 3.243, 11773.377)];
const g_L1MarsCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(334085627474, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1458227, 3.6042605, 3340.6124267), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(164901, 3.926313, 6681.224853), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(19963, 4.26594, 10021.83728), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3452, 4.7321, 3.5231), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2485, 4.6128, 13362.4497), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(842, 4.459, 2281.23), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(538, 5.016, 398.149), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(521, 4.994, 3344.136), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(433, 2.561, 191.448), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(430, 5.316, 155.42), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(382, 3.539, 796.298), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(314, 4.963, 16703.062), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(283, 3.16, 2544.314), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(206, 4.569, 2146.165), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(169, 1.329, 3337.089), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(158, 4.185, 1751.54), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(134, 2.233, 0.98), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(134, 5.974, 1748.016), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(118, 6.024, 6151.534), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(117, 2.213, 1059.382), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(114, 2.129, 1194.447), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(114, 5.428, 3738.761), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(91, 1.1, 1349.87), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(85, 3.91, 553.57), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(83, 5.3, 6684.75), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(81, 4.43, 529.69), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(80, 2.25, 8962.46), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(73, 2.5, 951.72), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(73, 5.84, 242.73), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(71, 3.86, 2914.01), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(68, 5.02, 382.9), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(65, 1.02, 3340.6), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(65, 3.05, 3340.63), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(62, 4.15, 3149.16), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(57, 3.89, 4136.91), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(48, 4.87, 213.3), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(48, 1.18, 3333.5), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(47, 1.31, 3185.19), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(41, 0.71, 1592.6), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(40, 2.73, 7.11), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(40, 5.32, 20043.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(33, 5.41, 6283.08), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(28, 0.05, 9492.15), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27, 3.89, 1221.85), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27, 5.11, 2700.72)];
const g_L2MarsCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(58016, 2.04979, 3340.61243), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(54188, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13908, 2.45742, 6681.22485), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2465, 2.8, 10021.8373), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(398, 3.141, 13362.45), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(222, 3.194, 3.523), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(121, 0.543, 155.42), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(62, 3.49, 16703.06), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(54, 3.54, 3344.14), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(34, 6, 2281.23), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(32, 4.14, 191.45), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(30, 2, 796.3), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(23, 4.33, 242.73), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(22, 3.45, 398.15), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20, 5.42, 553.57), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16, 0.66, 0.98), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16, 6.11, 2146.17), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16, 1.22, 1748.02), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15, 6.1, 3185.19), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14, 4.02, 951.72), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14, 2.62, 1349.87), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13, 0.6, 1194.45), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12, 3.86, 6684.75), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 4.72, 2544.31), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10, 0.25, 382.9), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 0.68, 1059.38), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 3.83, 20043.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 3.88, 3738.76), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8, 5.46, 1751.54), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7, 2.58, 3149.16), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7, 2.38, 4136.91), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 5.48, 1592.6), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 2.34, 3097.88)];
const g_L3MarsCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1482, 0.4443, 3340.6124), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(662, 0.885, 6681.225), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(188, 1.288, 10021.837), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(41, 1.65, 13362.45), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(26, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(23, 2.05, 155.42), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10, 1.58, 3.52), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8, 2, 16703.06), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5, 2.82, 242.73), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 2.02, 3344.14), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 4.59, 3185.19), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 0.65, 553.57)];
const g_L4MarsCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(114, 3.1416, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(29, 5.64, 6681.22), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(24, 5.14, 3340.61), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 6.03, 10021.84), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 0.13, 13362.45), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 3.56, 155.42), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 0.49, 16703.06), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 1.32, 242.73)];
const g_L5MarsCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 3.14, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 4.04, 6681.22)];
const g_B0MarsCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3197135, 3.7683204, 3340.6124267), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(298033, 4.10617, 6681.224853), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(289105, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(31366, 4.44651, 10021.83728), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3484, 4.7881, 13362.4497), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(443, 5.026, 3344.136), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(443, 5.652, 3337.089), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(399, 5.131, 16703.062), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(293, 3.793, 2281.23), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(182, 6.136, 6151.534), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(163, 4.264, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(160, 2.232, 1059.382), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(149, 2.165, 5621.843), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(143, 1.182, 3340.595), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(143, 3.213, 3340.63), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(139, 2.418, 8962.455)];
const g_B1MarsCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(350069, 5.368478, 3340.612427), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14116, 3.14159, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9671, 5.4788, 6681.2249), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1472, 3.2021, 10021.8373), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(426, 3.408, 13362.45), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(102, 0.776, 3337.089), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(79, 3.72, 16703.06), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(33, 3.46, 5621.84), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(26, 2.48, 2281.23)];
const g_B2MarsCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16727, 0.60221, 3340.61243), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4987, 4.1416, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(302, 3.559, 6681.225), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(26, 1.9, 13362.45), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(21, 0.92, 10021.84), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12, 2.24, 3337.09), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8, 2.25, 16703.06)];
const g_B3MarsCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(607, 1.981, 3340.612), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(43, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14, 1.8, 6681.22), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 3.45, 10021.84)];
const g_B4MarsCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 3.46, 3340.61), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 0.5, 6681.22)];
const g_R0MarsCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(153033488, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14184953, 3.47971284, 3340.6124267), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(660776, 3.817834, 6681.224853), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(46179, 4.15595, 10021.83728), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8110, 5.5596, 2810.9215), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7485, 1.7724, 5621.8429), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5523, 1.3644, 2281.2305), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3825, 4.4941, 13362.4497), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2484, 4.9255, 2942.4634), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2307, 0.0908, 2544.3144), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1999, 5.3606, 3337.0893), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1960, 4.7425, 3344.1355), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1167, 2.1126, 5092.152), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1103, 5.0091, 398.149), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(992, 5.839, 6151.534), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(899, 4.408, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(807, 2.102, 1059.382), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(798, 3.448, 796.298), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(741, 1.499, 2146.165), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(726, 1.245, 8432.764), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(692, 2.134, 8962.455), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(633, 0.894, 3340.595), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(633, 2.924, 3340.63), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(630, 1.287, 1751.54), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(574, 0.829, 2914.014), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(526, 5.383, 3738.761), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(473, 5.199, 3127.313), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(348, 4.832, 16703.062), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(284, 2.907, 3532.061), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(280, 5.257, 6283.076), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(276, 1.218, 6254.627), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(275, 2.908, 1748.016), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(270, 3.764, 5884.927), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(239, 2.037, 1194.447), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(234, 5.105, 5486.778), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(228, 3.255, 6872.673), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(223, 4.199, 3149.164), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(219, 5.583, 191.448), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(208, 5.255, 3340.545), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(208, 4.846, 3340.68), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(186, 5.699, 6677.702), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(183, 5.081, 6684.748), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(179, 4.184, 3333.499), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(176, 5.953, 3870.303), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(164, 3.799, 4136.91)];
const g_R1MarsCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1107433, 2.0325052, 3340.6124267), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(103176, 2.370718, 6681.224853), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12877, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10816, 2.70888, 10021.83728), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1195, 3.047, 13362.4497), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(439, 2.888, 2281.23), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(396, 3.423, 3344.136), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(183, 1.584, 2544.314), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(136, 3.385, 16703.062), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(128, 6.043, 3337.089), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(128, 0.63, 1059.382), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(127, 1.954, 796.298), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(118, 2.998, 2146.165), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(88, 3.42, 398.15), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(83, 3.86, 3738.76), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(76, 4.45, 6151.53), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(72, 2.76, 529.69), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(67, 2.55, 1751.54), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(66, 4.41, 1748.02), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(58, 0.54, 1194.45), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(54, 0.68, 8962.46), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(51, 3.73, 6684.75), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(49, 5.73, 3340.6), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(49, 1.48, 3340.63), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(48, 2.58, 3149.16), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(48, 2.29, 2914.01), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(39, 2.32, 4136.91)];
const g_R2MarsCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(44242, 0.47931, 3340.61243), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8138, 0.87, 6681.2249), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1275, 1.2259, 10021.8373), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(187, 1.573, 13362.45), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(52, 3.14, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(41, 1.97, 3344.14), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27, 1.92, 16703.06), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(18, 4.43, 2281.23), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12, 4.53, 3185.19), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10, 5.39, 1059.38), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10, 0.42, 796.3)];
const g_R3MarsCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1113, 5.1499, 3340.6124), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(424, 5.613, 6681.225), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(100, 5.997, 10021.837), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20, 0.08, 13362.45), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5, 3.14, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 0.43, 16703.06)];
const g_R4MarsCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20, 3.58, 3340.61), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16, 4.05, 6681.22), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 4.46, 10021.84), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 4.84, 13362.45)];


// CAAMars

function CAAMars() { }

CAAMars.eclipticLongitude = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var rho5 = rho4 * rho;
    var nL0Coefficients = g_L0MarsCoefficients.length;
    var L0 = 0;
    var i;
    for (i = 0; i < nL0Coefficients; i++) {
        L0 += g_L0MarsCoefficients[i].a * Math.cos(g_L0MarsCoefficients[i].b + g_L0MarsCoefficients[i].c * rho);
    }
    var nL1Coefficients = g_L1MarsCoefficients.length;
    var L1 = 0;
    for (i = 0; i < nL1Coefficients; i++) {
        L1 += g_L1MarsCoefficients[i].a * Math.cos(g_L1MarsCoefficients[i].b + g_L1MarsCoefficients[i].c * rho);
    }
    var nL2Coefficients = g_L2MarsCoefficients.length;
    var L2 = 0;
    for (i = 0; i < nL2Coefficients; i++) {
        L2 += g_L2MarsCoefficients[i].a * Math.cos(g_L2MarsCoefficients[i].b + g_L2MarsCoefficients[i].c * rho);
    }
    var nL3Coefficients = g_L3MarsCoefficients.length;
    var L3 = 0;
    for (i = 0; i < nL3Coefficients; i++) {
        L3 += g_L3MarsCoefficients[i].a * Math.cos(g_L3MarsCoefficients[i].b + g_L3MarsCoefficients[i].c * rho);
    }
    var nL4Coefficients = g_L4MarsCoefficients.length;
    var L4 = 0;
    for (i = 0; i < nL4Coefficients; i++) {
        L4 += g_L4MarsCoefficients[i].a * Math.cos(g_L4MarsCoefficients[i].b + g_L4MarsCoefficients[i].c * rho);
    }
    var nL5Coefficients = g_L5MarsCoefficients.length;
    var L5 = 0;
    for (i = 0; i < nL5Coefficients; i++) {
        L5 += g_L5MarsCoefficients[i].a * Math.cos(g_L5MarsCoefficients[i].b + g_L5MarsCoefficients[i].c * rho);
    }
    var vvalue = (L0 + L1 * rho + L2 * rhosquared + L3 * rhocubed + L4 * rho4 + L5 * rho5) / 100000000;
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue));
    return vvalue;
};

CAAMars.eclipticLatitude = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var nB0Coefficients = g_B0MarsCoefficients.length;
    var B0 = 0;
    var i;
    for (i = 0; i < nB0Coefficients; i++) {
        B0 += g_B0MarsCoefficients[i].a * Math.cos(g_B0MarsCoefficients[i].b + g_B0MarsCoefficients[i].c * rho);
    }
    var nB1Coefficients = g_B1MarsCoefficients.length;
    var B1 = 0;
    for (i = 0; i < nB1Coefficients; i++) {
        B1 += g_B1MarsCoefficients[i].a * Math.cos(g_B1MarsCoefficients[i].b + g_B1MarsCoefficients[i].c * rho);
    }
    var nB2Coefficients = g_B2MarsCoefficients.length;
    var B2 = 0;
    for (i = 0; i < nB2Coefficients; i++) {
        B2 += g_B2MarsCoefficients[i].a * Math.cos(g_B2MarsCoefficients[i].b + g_B2MarsCoefficients[i].c * rho);
    }
    var nB3Coefficients = g_B3MarsCoefficients.length;
    var B3 = 0;
    for (i = 0; i < nB3Coefficients; i++) {
        B3 += g_B3MarsCoefficients[i].a * Math.cos(g_B3MarsCoefficients[i].b + g_B3MarsCoefficients[i].c * rho);
    }
    var nB4Coefficients = g_B4MarsCoefficients.length;
    var B4 = 0;
    for (i = 0; i < nB4Coefficients; i++) {
        B4 += g_B4MarsCoefficients[i].a * Math.cos(g_B4MarsCoefficients[i].b + g_B4MarsCoefficients[i].c * rho);
    }
    var vvalue = (B0 + B1 * rho + B2 * rhosquared + B3 * rhocubed + B4 * rho4) / 100000000;
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue);
    return vvalue;
};

CAAMars.radiusVector = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var nR0Coefficients = g_R0MarsCoefficients.length;
    var R0 = 0;
    var i;
    for (i = 0; i < nR0Coefficients; i++) {
        R0 += g_R0MarsCoefficients[i].a * Math.cos(g_R0MarsCoefficients[i].b + g_R0MarsCoefficients[i].c * rho);
    }
    var nR1Coefficients = g_R1MarsCoefficients.length;
    var R1 = 0;
    for (i = 0; i < nR1Coefficients; i++) {
        R1 += g_R1MarsCoefficients[i].a * Math.cos(g_R1MarsCoefficients[i].b + g_R1MarsCoefficients[i].c * rho);
    }
    var nR2Coefficients = g_R2MarsCoefficients.length;
    var R2 = 0;
    for (i = 0; i < nR2Coefficients; i++) {
        R2 += g_R2MarsCoefficients[i].a * Math.cos(g_R2MarsCoefficients[i].b + g_R2MarsCoefficients[i].c * rho);
    }
    var nR3Coefficients = g_R3MarsCoefficients.length;
    var R3 = 0;
    for (i = 0; i < nR3Coefficients; i++) {
        R3 += g_R3MarsCoefficients[i].a * Math.cos(g_R3MarsCoefficients[i].b + g_R3MarsCoefficients[i].c * rho);
    }
    var nR4Coefficients = g_R4MarsCoefficients.length;
    var R4 = 0;
    for (i = 0; i < nR4Coefficients; i++) {
        R4 += g_R4MarsCoefficients[i].a * Math.cos(g_R4MarsCoefficients[i].b + g_R4MarsCoefficients[i].c * rho);
    }
    return (R0 + R1 * rho + R2 * rhosquared + R3 * rhocubed + R4 * rho4) / 100000000;
};

var CAAMars$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAMars", [CAAMars, CAAMars$, null]);


/***/ }),

/***/ "./esm/astrocalc/mercury.js":
/*!**********************************!*\
  !*** ./esm/astrocalc/mercury.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAMercury: () => (/* binding */ CAAMercury)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _earth_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./earth.js */ "./esm/astrocalc/earth.js");
// Originally `AAMERCURY.CPP`
// "Purpose: Implementation for the algorithms which obtain the heliocentric position of Mercury"
// Last update of original: PJN / 12-05-2006
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.






// Coefficients

const g_L0MercuryCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(440250710, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(40989415, 1.48302034, 26087.90314157), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5046294, 4.47785449, 52175.8062831), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(855347, 1.165203, 78263.709425), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(165590, 4.119692, 104351.612566), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(34562, 0.77931, 130439.51571), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7583, 3.7135, 156527.4188), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3560, 1.512, 1109.3786), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1803, 4.1033, 5661.332), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1726, 0.3583, 182615.322), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1590, 2.9951, 25028.5212), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1365, 4.5992, 27197.2817), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1017, 0.8803, 31749.2352), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(714, 1.541, 24978.525), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(644, 5.303, 21535.95), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(451, 6.05, 51116.424), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(404, 3.282, 208703.225), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(352, 5.242, 20426.571), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(345, 2.792, 15874.618), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(343, 5.765, 955.6), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(339, 5.863, 25558.212), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(325, 1.337, 53285.185), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(273, 2.495, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(264, 3.917, 57837.138), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(260, 0.987, 4551.953), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(239, 0.113, 1059.382), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(235, 0.267, 11322.664), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(217, 0.66, 13521.751), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(209, 2.092, 47623.853), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(183, 2.629, 27043.503), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(182, 2.434, 25661.305), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(176, 4.536, 51066.428), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(173, 2.452, 24498.83), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(142, 3.36, 37410.567), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(138, 0.291, 10213.286), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(125, 3.721, 39609.655), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(118, 2.781, 77204.327), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(106, 4.206, 19804.827)];
const g_L1MercuryCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2608814706223, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1126008, 6.2170397, 26087.9031416), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(303471, 3.055655, 52175.806283), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(80538, 6.10455, 78263.70942), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(21245, 2.83532, 104351.61257), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5592, 5.8268, 130439.5157), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1472, 2.5185, 156527.4188), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(388, 5.48, 182615.322), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(352, 3.052, 1109.379), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(103, 2.149, 208703.225), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(94, 6.12, 27197.28), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(91, 0, 24978.52), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(52, 5.62, 5661.33), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(44, 4.57, 25028.52), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(28, 3.04, 51066.43), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27, 5.09, 234791.13)];
const g_L2MercuryCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(53050, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16904, 4.69072, 26087.90314), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7397, 1.3474, 52175.8063), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3018, 4.4564, 78263.7094), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1107, 1.264, 104351.6126), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(378, 4.32, 130439.516), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(123, 1.069, 156527.419), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(39, 4.08, 182615.32), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15, 4.63, 1109.38), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12, 0.79, 208703.23)];
const g_L3MercuryCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(188, 0.035, 52175.806), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(142, 3.125, 26087.903), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(97, 3, 78263.71), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(44, 6.02, 104351.61), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(35, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(18, 2.78, 130439.52), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7, 5.82, 156527.42), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 2.57, 182615.32)];
const g_L4MercuryCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(114, 3.1416, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 2.03, 26087.9), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 1.42, 78263.71), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 4.5, 52175.81), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 4.5, 104351.61), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 1.27, 130439.52)];
const g_L5MercuryCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 3.14, 0)];
const g_B0MercuryCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11737529, 1.98357499, 26087.90314157), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2388077, 5.0373896, 52175.8062831), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1222840, 3.1415927, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(543252, 1.796444, 78263.709425), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(129779, 4.832325, 104351.612566), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(31867, 1.58088, 130439.51571), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7963, 4.6097, 156527.4188), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2014, 1.3532, 182615.322), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(514, 4.378, 208703.325), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(209, 2.02, 24978.525), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(208, 4.918, 27197.282), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(132, 1.119, 234791.128), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(121, 1.813, 53285.185), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(100, 5.657, 20426.571)];
const g_B1MercuryCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(429151, 3.501698, 26087.903142), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(146234, 3.141593, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(22675, 0.01515, 52175.80628), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10895, 0.4854, 78263.70942), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6353, 3.4294, 104351.6126), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2496, 0.1605, 130439.5157), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(860, 3.185, 156527.419), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(278, 6.21, 182615.322), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(86, 2.95, 208703.23), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(28, 0.29, 27197.28), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(26, 5.98, 234791.13)];
const g_B2MercuryCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11831, 4.79066, 26087.90314), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1914, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1045, 1.2122, 52175.8063), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(266, 4.434, 78263.709), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(170, 1.623, 104351.613), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(96, 4.8, 130439.52), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(45, 1.61, 156527.42), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(18, 4.67, 182615.32), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7, 1.43, 208703.23)];
const g_B3MercuryCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(235, 0.354, 26087.903), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(161, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(19, 4.36, 52175.81), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 2.51, 78263.71), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5, 6.14, 104351.61), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 3.12, 130439.52), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 6.27, 156527.42)];
const g_B4MercuryCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 1.75, 26087.9), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 3.14, 0)];
const g_R0MercuryCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(39528272, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7834132, 6.1923372, 26087.9031416), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(795526, 2.959897, 52175.806283), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(121282, 6.010642, 78263.709425), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(21922, 2.7782, 104351.61257), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4354, 5.8289, 130439.5157), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(918, 2.597, 156527.419), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(290, 1.424, 25028.521), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(260, 3.028, 27197.282), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(202, 5.647, 182615.322), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(201, 5.592, 31749.235), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(142, 6.253, 24978.525), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(100, 3.734, 21535.95)];
const g_R1MercuryCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(217348, 4.656172, 26087.903142), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(44142, 1.42386, 52175.80628), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10094, 4.47466, 78263.70942), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2433, 1.2423, 104351.6126), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1624, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(604, 4.293, 130439.516), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(153, 1.061, 156527.419), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(39, 4.11, 182615.32)];
const g_R2MercuryCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3118, 3.0823, 26087.9031), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1245, 6.1518, 52175.8063), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(425, 2.926, 78263.709), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(136, 5.98, 104351.613), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(42, 2.75, 130439.52), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(22, 3.14, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13, 5.8, 156527.42)];
const g_R3MercuryCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(33, 1.68, 26087.9), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(24, 4.63, 52175.81), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12, 1.39, 78263.71), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5, 4.44, 104351.61), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 1.21, 130439.52)];


// CAAMercury

function CAAMercury() { }

CAAMercury.eclipticLongitude = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var rho5 = rho4 * rho;
    var nL0Coefficients = g_L0MercuryCoefficients.length;
    var L0 = 0;
    var i;
    for (i = 0; i < nL0Coefficients; i++) {
        L0 += g_L0MercuryCoefficients[i].a * Math.cos(g_L0MercuryCoefficients[i].b + g_L0MercuryCoefficients[i].c * rho);
    }
    var nL1Coefficients = g_L1MercuryCoefficients.length;
    var L1 = 0;
    for (i = 0; i < nL1Coefficients; i++) {
        L1 += g_L1MercuryCoefficients[i].a * Math.cos(g_L1MercuryCoefficients[i].b + g_L1MercuryCoefficients[i].c * rho);
    }
    var nL2Coefficients = g_L2MercuryCoefficients.length;
    var L2 = 0;
    for (i = 0; i < nL2Coefficients; i++) {
        L2 += g_L2MercuryCoefficients[i].a * Math.cos(g_L2MercuryCoefficients[i].b + g_L2MercuryCoefficients[i].c * rho);
    }
    var nL3Coefficients = g_L3MercuryCoefficients.length;
    var L3 = 0;
    for (i = 0; i < nL3Coefficients; i++) {
        L3 += g_L3MercuryCoefficients[i].a * Math.cos(g_L3MercuryCoefficients[i].b + g_L3MercuryCoefficients[i].c * rho);
    }
    var nL4Coefficients = g_L4MercuryCoefficients.length;
    var L4 = 0;
    for (i = 0; i < nL4Coefficients; i++) {
        L4 += g_L4MercuryCoefficients[i].a * Math.cos(g_L4MercuryCoefficients[i].b + g_L4MercuryCoefficients[i].c * rho);
    }
    var nL5Coefficients = g_L5MercuryCoefficients.length;
    var L5 = 0;
    for (i = 0; i < nL5Coefficients; i++) {
        L5 += g_L5MercuryCoefficients[i].a * Math.cos(g_L5MercuryCoefficients[i].b + g_L5MercuryCoefficients[i].c * rho);
    }
    var vvalue = (L0 + L1 * rho + L2 * rhosquared + L3 * rhocubed + L4 * rho4 + L5 * rho5) / 100000000;
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue));
    return vvalue;
};

CAAMercury.eclipticLatitude = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var nB0Coefficients = g_B0MercuryCoefficients.length;
    var B0 = 0;
    var i;
    for (i = 0; i < nB0Coefficients; i++) {
        B0 += g_B0MercuryCoefficients[i].a * Math.cos(g_B0MercuryCoefficients[i].b + g_B0MercuryCoefficients[i].c * rho);
    }
    var nB1Coefficients = g_B1MercuryCoefficients.length;
    var B1 = 0;
    for (i = 0; i < nB1Coefficients; i++) {
        B1 += g_B1MercuryCoefficients[i].a * Math.cos(g_B1MercuryCoefficients[i].b + g_B1MercuryCoefficients[i].c * rho);
    }
    var nB2Coefficients = g_B2MercuryCoefficients.length;
    var B2 = 0;
    for (i = 0; i < nB2Coefficients; i++) {
        B2 += g_B2MercuryCoefficients[i].a * Math.cos(g_B2MercuryCoefficients[i].b + g_B2MercuryCoefficients[i].c * rho);
    }
    var nB3Coefficients = g_B3MercuryCoefficients.length;
    var B3 = 0;
    for (i = 0; i < nB3Coefficients; i++) {
        B3 += g_B3MercuryCoefficients[i].a * Math.cos(g_B3MercuryCoefficients[i].b + g_B3MercuryCoefficients[i].c * rho);
    }
    var nB4Coefficients = g_B4MercuryCoefficients.length;
    var B4 = 0;
    for (i = 0; i < nB4Coefficients; i++) {
        B4 += g_B4MercuryCoefficients[i].a * Math.cos(g_B4MercuryCoefficients[i].b + g_B4MercuryCoefficients[i].c * rho);
    }
    var vvalue = (B0 + B1 * rho + B2 * rhosquared + B3 * rhocubed + B4 * rho4) / 100000000;
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue);
    return vvalue;
};

CAAMercury.radiusVector = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var nR0Coefficients = g_R0MercuryCoefficients.length;
    var R0 = 0;
    var i;
    for (i = 0; i < nR0Coefficients; i++) {
        R0 += g_R0MercuryCoefficients[i].a * Math.cos(g_R0MercuryCoefficients[i].b + g_R0MercuryCoefficients[i].c * rho);
    }
    var nR1Coefficients = g_R1MercuryCoefficients.length;
    var R1 = 0;
    for (i = 0; i < nR1Coefficients; i++) {
        R1 += g_R1MercuryCoefficients[i].a * Math.cos(g_R1MercuryCoefficients[i].b + g_R1MercuryCoefficients[i].c * rho);
    }
    var nR2Coefficients = g_R2MercuryCoefficients.length;
    var R2 = 0;
    for (i = 0; i < nR2Coefficients; i++) {
        R2 += g_R2MercuryCoefficients[i].a * Math.cos(g_R2MercuryCoefficients[i].b + g_R2MercuryCoefficients[i].c * rho);
    }
    var nR3Coefficients = g_R3MercuryCoefficients.length;
    var R3 = 0;
    for (i = 0; i < nR3Coefficients; i++) {
        R3 += g_R3MercuryCoefficients[i].a * Math.cos(g_R3MercuryCoefficients[i].b + g_R3MercuryCoefficients[i].c * rho);
    }
    return (R0 + R1 * rho + R2 * rhosquared + R3 * rhocubed) / 100000000;
};

var CAAMercury$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAMercury", [CAAMercury, CAAMercury$, null]);


/***/ }),

/***/ "./esm/astrocalc/moon.js":
/*!*******************************!*\
  !*** ./esm/astrocalc/moon.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAMoon: () => (/* binding */ CAAMoon),
/* harmony export */   MoonCoefficient1: () => (/* binding */ MoonCoefficient1),
/* harmony export */   MoonCoefficient2: () => (/* binding */ MoonCoefficient2)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _earth_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./earth.js */ "./esm/astrocalc/earth.js");
/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nutation.js */ "./esm/astrocalc/nutation.js");
// Originally `AAABERRATION.CPP`
// "Purpose: Implementation for the algorithms which obtain the position of the Moon"
// Last update of original: PJN / 29-12-2003
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.







// MoonCoefficient1

function MoonCoefficient1(d, m, mdash, f) {
    this.d = 0;
    this.m = 0;
    this.mdash = 0;
    this.f = 0;
    this.d = d;
    this.m = m;
    this.mdash = mdash;
    this.f = f;
}

var MoonCoefficient1$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("MoonCoefficient1", [MoonCoefficient1, MoonCoefficient1$, null]);


// MoonCoefficient2

function MoonCoefficient2(a, b) {
    this.a = 0;
    this.b = 0;
    this.a = a;
    this.b = b;
}

var MoonCoefficient2$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("MoonCoefficient2", [MoonCoefficient2, MoonCoefficient2$, null]);


// Constants

const g_MoonCoefficients1 = [new MoonCoefficient1(0, 0, 1, 0), new MoonCoefficient1(2, 0, -1, 0), new MoonCoefficient1(2, 0, 0, 0), new MoonCoefficient1(0, 0, 2, 0), new MoonCoefficient1(0, 1, 0, 0), new MoonCoefficient1(0, 0, 0, 2), new MoonCoefficient1(2, 0, -2, 0), new MoonCoefficient1(2, -1, -1, 0), new MoonCoefficient1(2, 0, 1, 0), new MoonCoefficient1(2, -1, 0, 0), new MoonCoefficient1(0, 1, -1, 0), new MoonCoefficient1(1, 0, 0, 0), new MoonCoefficient1(0, 1, 1, 0), new MoonCoefficient1(2, 0, 0, -2), new MoonCoefficient1(0, 0, 1, 2), new MoonCoefficient1(0, 0, 1, -2), new MoonCoefficient1(4, 0, -1, 0), new MoonCoefficient1(0, 0, 3, 0), new MoonCoefficient1(4, 0, -2, 0), new MoonCoefficient1(2, 1, -1, 0), new MoonCoefficient1(2, 1, 0, 0), new MoonCoefficient1(1, 0, -1, 0), new MoonCoefficient1(1, 1, 0, 0), new MoonCoefficient1(2, -1, 1, 0), new MoonCoefficient1(2, 0, 2, 0), new MoonCoefficient1(4, 0, 0, 0), new MoonCoefficient1(2, 0, -3, 0), new MoonCoefficient1(0, 1, -2, 0), new MoonCoefficient1(2, 0, -1, 2), new MoonCoefficient1(2, -1, -2, 0), new MoonCoefficient1(1, 0, 1, 0), new MoonCoefficient1(2, -2, 0, 0), new MoonCoefficient1(0, 1, 2, 0), new MoonCoefficient1(0, 2, 0, 0), new MoonCoefficient1(2, -2, -1, 0), new MoonCoefficient1(2, 0, 1, -2), new MoonCoefficient1(2, 0, 0, 2), new MoonCoefficient1(4, -1, -1, 0), new MoonCoefficient1(0, 0, 2, 2), new MoonCoefficient1(3, 0, -1, 0), new MoonCoefficient1(2, 1, 1, 0), new MoonCoefficient1(4, -1, -2, 0), new MoonCoefficient1(0, 2, -1, 0), new MoonCoefficient1(2, 2, -1, 0), new MoonCoefficient1(2, 1, -2, 0), new MoonCoefficient1(2, -1, 0, -2), new MoonCoefficient1(4, 0, 1, 0), new MoonCoefficient1(0, 0, 4, 0), new MoonCoefficient1(4, -1, 0, 0), new MoonCoefficient1(1, 0, -2, 0), new MoonCoefficient1(2, 1, 0, -2), new MoonCoefficient1(0, 0, 2, -2), new MoonCoefficient1(1, 1, 1, 0), new MoonCoefficient1(3, 0, -2, 0), new MoonCoefficient1(4, 0, -3, 0), new MoonCoefficient1(2, -1, 2, 0), new MoonCoefficient1(0, 2, 1, 0), new MoonCoefficient1(1, 1, -1, 0), new MoonCoefficient1(2, 0, 3, 0), new MoonCoefficient1(2, 0, -1, -2)];
const g_MoonCoefficients2 = [new MoonCoefficient2(6288774, -20905355), new MoonCoefficient2(1274027, -3699111), new MoonCoefficient2(658314, -2955968), new MoonCoefficient2(213618, -569925), new MoonCoefficient2(-185116, 48888), new MoonCoefficient2(-114332, -3149), new MoonCoefficient2(58793, 246158), new MoonCoefficient2(57066, -152138), new MoonCoefficient2(53322, -170733), new MoonCoefficient2(45758, -204586), new MoonCoefficient2(-40923, -129620), new MoonCoefficient2(-34720, 108743), new MoonCoefficient2(-30383, 104755), new MoonCoefficient2(15327, 10321), new MoonCoefficient2(-12528, 0), new MoonCoefficient2(10980, 79661), new MoonCoefficient2(10675, -34782), new MoonCoefficient2(10034, -23210), new MoonCoefficient2(8548, -21636), new MoonCoefficient2(-7888, 24208), new MoonCoefficient2(-6766, 30824), new MoonCoefficient2(-5163, -8379), new MoonCoefficient2(4987, -16675), new MoonCoefficient2(4036, -12831), new MoonCoefficient2(3994, -10445), new MoonCoefficient2(3861, -11650), new MoonCoefficient2(3665, 14403), new MoonCoefficient2(-2689, -7003), new MoonCoefficient2(-2602, 0), new MoonCoefficient2(2390, 10056), new MoonCoefficient2(-2348, 6322), new MoonCoefficient2(2236, -9884), new MoonCoefficient2(-2120, 5751), new MoonCoefficient2(-2069, 0), new MoonCoefficient2(2048, -4950), new MoonCoefficient2(-1773, 4130), new MoonCoefficient2(-1595, 0), new MoonCoefficient2(1215, -3958), new MoonCoefficient2(-1110, 0), new MoonCoefficient2(-892, 3258), new MoonCoefficient2(-810, 2616), new MoonCoefficient2(759, -1897), new MoonCoefficient2(-713, -2117), new MoonCoefficient2(-700, 2354), new MoonCoefficient2(691, 0), new MoonCoefficient2(596, 0), new MoonCoefficient2(549, -1423), new MoonCoefficient2(537, -1117), new MoonCoefficient2(520, -1571), new MoonCoefficient2(-487, -1739), new MoonCoefficient2(-399, 0), new MoonCoefficient2(-381, -4421), new MoonCoefficient2(351, 0), new MoonCoefficient2(-340, 0), new MoonCoefficient2(330, 0), new MoonCoefficient2(327, 0), new MoonCoefficient2(-323, 1165), new MoonCoefficient2(299, 0), new MoonCoefficient2(294, 0), new MoonCoefficient2(0, 8752)];
const g_MoonCoefficients3 = [new MoonCoefficient1(0, 0, 0, 1), new MoonCoefficient1(0, 0, 1, 1), new MoonCoefficient1(0, 0, 1, -1), new MoonCoefficient1(2, 0, 0, -1), new MoonCoefficient1(2, 0, -1, 1), new MoonCoefficient1(2, 0, -1, -1), new MoonCoefficient1(2, 0, 0, 1), new MoonCoefficient1(0, 0, 2, 1), new MoonCoefficient1(2, 0, 1, -1), new MoonCoefficient1(0, 0, 2, -1), new MoonCoefficient1(2, -1, 0, -1), new MoonCoefficient1(2, 0, -2, -1), new MoonCoefficient1(2, 0, 1, 1), new MoonCoefficient1(2, 1, 0, -1), new MoonCoefficient1(2, -1, -1, 1), new MoonCoefficient1(2, -1, 0, 1), new MoonCoefficient1(2, -1, -1, -1), new MoonCoefficient1(0, 1, -1, -1), new MoonCoefficient1(4, 0, -1, -1), new MoonCoefficient1(0, 1, 0, 1), new MoonCoefficient1(0, 0, 0, 3), new MoonCoefficient1(0, 1, -1, 1), new MoonCoefficient1(1, 0, 0, 1), new MoonCoefficient1(0, 1, 1, 1), new MoonCoefficient1(0, 1, 1, -1), new MoonCoefficient1(0, 1, 0, -1), new MoonCoefficient1(1, 0, 0, -1), new MoonCoefficient1(0, 0, 3, 1), new MoonCoefficient1(4, 0, 0, -1), new MoonCoefficient1(4, 0, -1, 1), new MoonCoefficient1(0, 0, 1, -3), new MoonCoefficient1(4, 0, -2, 1), new MoonCoefficient1(2, 0, 0, -3), new MoonCoefficient1(2, 0, 2, -1), new MoonCoefficient1(2, -1, 1, -1), new MoonCoefficient1(2, 0, -2, 1), new MoonCoefficient1(0, 0, 3, -1), new MoonCoefficient1(2, 0, 2, 1), new MoonCoefficient1(2, 0, -3, -1), new MoonCoefficient1(2, 1, -1, 1), new MoonCoefficient1(2, 1, 0, 1), new MoonCoefficient1(4, 0, 0, 1), new MoonCoefficient1(2, -1, 1, 1), new MoonCoefficient1(2, -2, 0, -1), new MoonCoefficient1(0, 0, 1, 3), new MoonCoefficient1(2, 1, 1, -1), new MoonCoefficient1(1, 1, 0, -1), new MoonCoefficient1(1, 1, 0, 1), new MoonCoefficient1(0, 1, -2, -1), new MoonCoefficient1(2, 1, -1, -1), new MoonCoefficient1(1, 0, 1, 1), new MoonCoefficient1(2, -1, -2, -1), new MoonCoefficient1(0, 1, 2, 1), new MoonCoefficient1(4, 0, -2, -1), new MoonCoefficient1(4, -1, -1, -1), new MoonCoefficient1(1, 0, 1, -1), new MoonCoefficient1(4, 0, 1, -1), new MoonCoefficient1(1, 0, -1, -1), new MoonCoefficient1(4, -1, 0, -1), new MoonCoefficient1(2, -2, 0, 1)];
const g_MoonCoefficients4 = [5128122, 280602, 277693, 173237, 55413, 46271, 32573, 17198, 9266, 8822, 8216, 4324, 4200, -3359, 2463, 2211, 2065, -1870, 1828, -1794, -1749, -1565, -1491, -1475, -1410, -1344, -1335, 1107, 1021, 833, 777, 671, 607, 596, 491, -451, 439, 422, 421, -366, -351, 331, 315, 302, -283, -229, 223, 223, -220, -220, -185, 181, -177, 176, 166, -164, 132, -119, 115, 107];


// CAAMoon

function CAAMoon() { }

CAAMoon.meanLongitude = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    var T4 = Tcubed * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(218.3164477 + 481267.88123421 * T - 0.0015786 * Tsquared + Tcubed / 538841 - T4 / 65194000);
};

CAAMoon.meanElongation = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    var T4 = Tcubed * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(297.8501921 + 445267.1114034 * T - 0.0018819 * Tsquared + Tcubed / 545868 - T4 / 113065000);
};

CAAMoon.meanAnomaly = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    var T4 = Tcubed * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(134.9633964 + 477198.8675055 * T + 0.0087414 * Tsquared + Tcubed / 69699 - T4 / 14712000);
};

CAAMoon.argumentOfLatitude = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    var T4 = Tcubed * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(93.272095 + 483202.0175233 * T - 0.0036539 * Tsquared - Tcubed / 3526000 + T4 / 863310000);
};

CAAMoon.meanLongitudeAscendingNode = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    var T4 = Tcubed * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(125.0445479 - 1934.1362891 * T + 0.0020754 * Tsquared + Tcubed / 467441 - T4 / 60616000);
};

CAAMoon.meanLongitudePerigee = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    var T4 = Tcubed * T;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(83.3532465 + 4069.0137287 * T - 0.01032 * Tsquared - Tcubed / 80053 + T4 / 18999000);
};

CAAMoon.trueLongitudeAscendingNode = function (JD) {
    var TrueAscendingNode = CAAMoon.meanLongitudeAscendingNode(JD);
    var D = CAAMoon.meanElongation(JD);
    D = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(D);
    var M = _earth_js__WEBPACK_IMPORTED_MODULE_2__.CAAEarth.sunMeanAnomaly(JD);
    M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(M);
    var Mdash = CAAMoon.meanAnomaly(JD);
    Mdash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Mdash);
    var F = CAAMoon.argumentOfLatitude(JD);
    F = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(F);
    TrueAscendingNode -= 1.4979 * Math.sin(2 * (D - F));
    TrueAscendingNode -= 0.15 * Math.sin(M);
    TrueAscendingNode -= 0.1226 * Math.sin(2 * D);
    TrueAscendingNode += 0.1176 * Math.sin(2 * F);
    TrueAscendingNode -= 0.0801 * Math.sin(2 * (Mdash - F));
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(TrueAscendingNode);
};

CAAMoon.eclipticLongitude = function (JD) {
    var Ldash = CAAMoon.meanLongitude(JD);
    var LdashDegrees = Ldash;
    Ldash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Ldash);
    var D = CAAMoon.meanElongation(JD);
    D = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(D);
    var M = _earth_js__WEBPACK_IMPORTED_MODULE_2__.CAAEarth.sunMeanAnomaly(JD);
    M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(M);
    var Mdash = CAAMoon.meanAnomaly(JD);
    Mdash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Mdash);
    var F = CAAMoon.argumentOfLatitude(JD);
    F = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(F);
    var E = _earth_js__WEBPACK_IMPORTED_MODULE_2__.CAAEarth.eccentricity(JD);
    var T = (JD - 2451545) / 36525;
    var A1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(119.75 + 131.849 * T);
    A1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A1);
    var A2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(53.09 + 479264.29 * T);
    A2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A2);
    var A3 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(313.45 + 481266.484 * T);
    A3 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A3);
    var nLCoefficients = g_MoonCoefficients1.length;
    console.assert(g_MoonCoefficients2.length === nLCoefficients);
    var SigmaL = 0;
    for (var i = 0; i < nLCoefficients; i++) {
        var ThisSigma = g_MoonCoefficients2[i].a * Math.sin(g_MoonCoefficients1[i].d * D + g_MoonCoefficients1[i].m * M + g_MoonCoefficients1[i].mdash * Mdash + g_MoonCoefficients1[i].f * F);
        if (!!g_MoonCoefficients1[i].m) {
            ThisSigma *= E;
        }
        SigmaL += ThisSigma;
    }
    SigmaL += 3958 * Math.sin(A1);
    SigmaL += 1962 * Math.sin(Ldash - F);
    SigmaL += 318 * Math.sin(A2);
    var NutationInLong = _nutation_js__WEBPACK_IMPORTED_MODULE_3__.CAANutation.nutationInLongitude(JD);
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(LdashDegrees + SigmaL / 1000000 + NutationInLong / 3600);
};

CAAMoon.eclipticLatitude = function (JD) {
    var Ldash = CAAMoon.meanLongitude(JD);
    Ldash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Ldash);
    var D = CAAMoon.meanElongation(JD);
    D = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(D);
    var M = _earth_js__WEBPACK_IMPORTED_MODULE_2__.CAAEarth.sunMeanAnomaly(JD);
    M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(M);
    var Mdash = CAAMoon.meanAnomaly(JD);
    Mdash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Mdash);
    var F = CAAMoon.argumentOfLatitude(JD);
    F = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(F);
    var E = _earth_js__WEBPACK_IMPORTED_MODULE_2__.CAAEarth.eccentricity(JD);
    var T = (JD - 2451545) / 36525;
    var A1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(119.75 + 131.849 * T);
    A1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A1);
    var A2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(53.09 + 479264.29 * T);
    A2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A2);
    var A3 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(313.45 + 481266.484 * T);
    A3 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A3);
    var nBCoefficients = g_MoonCoefficients3.length;
    console.assert(g_MoonCoefficients4.length === nBCoefficients);
    var SigmaB = 0;
    for (var i = 0; i < nBCoefficients; i++) {
        var ThisSigma = g_MoonCoefficients4[i] * Math.sin(g_MoonCoefficients3[i].d * D + g_MoonCoefficients3[i].m * M + g_MoonCoefficients3[i].mdash * Mdash + g_MoonCoefficients3[i].f * F);
        if (!!g_MoonCoefficients3[i].m) {
            ThisSigma *= E;
        }
        SigmaB += ThisSigma;
    }
    SigmaB -= 2235 * Math.sin(Ldash);
    SigmaB += 382 * Math.sin(A3);
    SigmaB += 175 * Math.sin(A1 - F);
    SigmaB += 175 * Math.sin(A1 + F);
    SigmaB += 127 * Math.sin(Ldash - Mdash);
    SigmaB -= 115 * Math.sin(Ldash + Mdash);
    return SigmaB / 1000000;
};

CAAMoon.radiusVector = function (JD) {
    var Ldash = CAAMoon.meanLongitude(JD);
    Ldash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Ldash);
    var D = CAAMoon.meanElongation(JD);
    D = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(D);
    var M = _earth_js__WEBPACK_IMPORTED_MODULE_2__.CAAEarth.sunMeanAnomaly(JD);
    M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(M);
    var Mdash = CAAMoon.meanAnomaly(JD);
    Mdash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Mdash);
    var F = CAAMoon.argumentOfLatitude(JD);
    F = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(F);
    var E = _earth_js__WEBPACK_IMPORTED_MODULE_2__.CAAEarth.eccentricity(JD);
    var T = (JD - 2451545) / 36525;
    var A1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(119.75 + 131.849 * T);
    A1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A1);
    var A2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(53.09 + 479264.29 * T);
    A2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A2);
    var A3 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(313.45 + 481266.484 * T);
    A3 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A3);
    var nRCoefficients = g_MoonCoefficients1.length;
    console.assert(g_MoonCoefficients2.length === nRCoefficients);
    var SigmaR = 0;
    for (var i = 0; i < nRCoefficients; i++) {
        var ThisSigma = g_MoonCoefficients2[i].b * Math.cos(g_MoonCoefficients1[i].d * D + g_MoonCoefficients1[i].m * M + g_MoonCoefficients1[i].mdash * Mdash + g_MoonCoefficients1[i].f * F);
        if (!!g_MoonCoefficients1[i].m) {
            ThisSigma *= E;
        }
        SigmaR += ThisSigma;
    }
    return 385000.56 + SigmaR / 1000;
};

CAAMoon.radiusVectorToHorizontalParallax = function (RadiusVector) {
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.asin(6378.14 / RadiusVector));
};

CAAMoon.horizontalParallaxToRadiusVector = function (Parallax) {
    return 6378.14 / Math.sin(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Parallax));
};

var CAAMoon$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAMoon", [CAAMoon, CAAMoon$, null]);


/***/ }),

/***/ "./esm/astrocalc/moon_illuminated_fraction.js":
/*!****************************************************!*\
  !*** ./esm/astrocalc/moon_illuminated_fraction.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MIFR: () => (/* binding */ MIFR)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
// Originally `AAMOONILLUMINATEDFRACTION.CPP`
// "Purpose: Implementation for the algorithms for the Moon's Elongation, Phase Angle and Illuminated Fraction"
// Last update of original: PJN / 26-01-2007
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.





// MIFR

function MIFR() {
}

MIFR.geocentricElongation = function (ObjectAlpha, ObjectDelta, SunAlpha, SunDelta) {
    ObjectAlpha = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(ObjectAlpha * 15);
    SunAlpha = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(SunAlpha * 15);
    ObjectDelta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(ObjectDelta);
    SunDelta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(SunDelta);
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.acos(Math.sin(SunDelta) * Math.sin(ObjectDelta) + Math.cos(SunDelta) * Math.cos(ObjectDelta) * Math.cos(SunAlpha - ObjectAlpha)));
};

MIFR.phaseAngle = function (GeocentricElongation, EarthObjectDistance, EarthSunDistance) {
    GeocentricElongation = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(GeocentricElongation);
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.atan2(EarthSunDistance * Math.sin(GeocentricElongation), EarthObjectDistance - EarthSunDistance * Math.cos(GeocentricElongation))));
};

MIFR.illuminatedFraction = function (PhaseAngle) {
    PhaseAngle = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(PhaseAngle);
    return (1 + Math.cos(PhaseAngle)) / 2;
};

MIFR.positionAngle = function (Alpha0, Delta0, Alpha, Delta) {
    Alpha0 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(Alpha0);
    Alpha = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(Alpha);
    Delta0 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta0);
    Delta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta);
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.atan2(Math.cos(Delta0) * Math.sin(Alpha0 - Alpha), Math.sin(Delta0) * Math.cos(Delta) - Math.cos(Delta0) * Math.sin(Delta) * Math.cos(Alpha0 - Alpha))));
};

var MIFR$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("MIFR", [MIFR, MIFR$, null]);


/***/ }),

/***/ "./esm/astrocalc/moon_nodes.js":
/*!*************************************!*\
  !*** ./esm/astrocalc/moon_nodes.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAMoonNodes: () => (/* binding */ CAAMoonNodes)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
// Originally `AAMOONNODES.CPP`
// "Purpose: Implementation for the algorithms which obtain the dates when the Moon passes thro its nodes"
// Last update of original: PJN / 29-12-2003
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.





// CAAMoonNodes

function CAAMoonNodes() { }

CAAMoonNodes.k = function (Year) {
    return 13.4223 * (Year - 2000.05);
};

CAAMoonNodes.passageThroNode = function (k) {
    var T = k / 1342.23;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    var T4 = Tcubed * T;
    var D = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(183.638 + 331.73735682 * k + 0.0014852 * Tsquared + 2.09E-06 * Tcubed - 1E-08 * T4);
    var M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(17.4006 + 26.8203725 * k + 0.0001186 * Tsquared + 6E-08 * Tcubed);
    var Mdash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(38.3776 + 355.52747313 * k + 0.0123499 * Tsquared + 1.4627E-05 * Tcubed - 6.9E-08 * T4);
    var omega = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(123.9767 - 1.44098956 * k + 0.0020608 * Tsquared + 2.14E-06 * Tcubed - 1.6E-08 * T4);
    var V = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(299.75 + 132.85 * T - 0.009173 * Tsquared);
    var P = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(omega + 272.75 - 2.3 * T);
    var E = 1 - 0.002516 * T - 7.4E-06 * Tsquared;
    D = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(D);
    var D2 = 2 * D;
    var D4 = D2 * D2;
    M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(M);
    Mdash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Mdash);
    var Mdash2 = 2 * Mdash;
    omega = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(omega);
    V = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(V);
    P = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(P);
    var JD = 2451565.1619 + 27.212220817 * k + 0.0002762 * Tsquared + 2.1E-08 * Tcubed - 8.8E-11 * T4 - 0.4721 * Math.sin(Mdash) - 0.1649 * Math.sin(D2) - 0.0868 * Math.sin(D2 - Mdash) + 0.0084 * Math.sin(D2 + Mdash) - E * 0.0083 * Math.sin(D2 - M) - E * 0.0039 * Math.sin(D2 - M - Mdash) + 0.0034 * Math.sin(Mdash2) - 0.0031 * Math.sin(D2 - Mdash2) + E * 0.003 * Math.sin(D2 + M) + E * 0.0028 * Math.sin(M - Mdash) + E * 0.0026 * Math.sin(M) + 0.0025 * Math.sin(D4) + 0.0024 * Math.sin(D) + E * 0.0022 * Math.sin(M + Mdash) + 0.0017 * Math.sin(omega) + 0.0014 * Math.sin(D4 - Mdash) + E * 0.0005 * Math.sin(D2 + M - Mdash) + E * 0.0004 * Math.sin(D2 - M + Mdash) - E * 0.0003 * Math.sin(D2 - M * M) + E * 0.0003 * Math.sin(D4 - M) + 0.0003 * Math.sin(V) + 0.0003 * Math.sin(P);
    return JD;
};

var CAAMoonNodes$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAMoonNodes", [CAAMoonNodes, CAAMoonNodes$, null]);


/***/ }),

/***/ "./esm/astrocalc/moon_perigee_apogee.js":
/*!**********************************************!*\
  !*** ./esm/astrocalc/moon_perigee_apogee.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAMoonPerigeeApogee: () => (/* binding */ CAAMoonPerigeeApogee),
/* harmony export */   MPAC: () => (/* binding */ MPAC)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
// Originally `AAMOONPERIGEEAPOGEE.CPP`
// "Purpose: Implementation for the algorithms which obtain the dates of Lunar Apogee and Perigee"
// Last update of original: PJN / 29-12-2003
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.





// MPAC - was MoonPerigeeApogeeCoefficient

function MPAC(D, M, F, C, T) {
    this.d = 0;
    this.m = 0;
    this.f = 0;
    this.c = 0;
    this.t = 0;
    this.d = D;
    this.m = M;
    this.f = F;
    this.c = C;
    this.t = T;
}

var MPAC$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("MPAC", [MPAC, MPAC$, null]);


// Constants

const g_MoonPerigeeApogeeCoefficients1 = [new MPAC(2, 0, 0, -1.6769, 0), new MPAC(4, 0, 0, 0.4589, 0), new MPAC(6, 0, 0, -0.1856, 0), new MPAC(8, 0, 0, 0.0883, 0), new MPAC(2, -1, 0, -0.0773, 0.00019), new MPAC(0, 1, 0, 0.0502, -0.00013), new MPAC(10, 0, 0, -0.046, 0), new MPAC(4, -1, 0, 0.0422, -0.00011), new MPAC(6, -1, 0, -0.0256, 0), new MPAC(12, 0, 0, 0.0253, 0), new MPAC(1, 0, 0, 0.0237, 0), new MPAC(8, -1, 0, 0.0162, 0), new MPAC(14, 0, 0, -0.0145, 0), new MPAC(0, 0, 2, 0.0129, 0), new MPAC(3, 0, 0, -0.0112, 0), new MPAC(10, -1, 0, -0.0104, 0), new MPAC(16, 0, 0, 0.0086, 0), new MPAC(12, -1, 0, 0.0069, 0), new MPAC(5, 0, 0, 0.0066, 0), new MPAC(2, 0, 2, -0.0053, 0), new MPAC(18, 0, 0, -0.0052, 0), new MPAC(14, -1, 0, -0.0046, 0), new MPAC(7, 0, 0, -0.0041, 0), new MPAC(2, 1, 0, 0.004, 0), new MPAC(20, 0, 0, 0.0032, 0), new MPAC(1, 1, 0, -0.0032, 0), new MPAC(16, -1, 0, 0.0031, 0), new MPAC(4, 1, 0, -0.0029, 0), new MPAC(9, 0, 0, 0.0027, 0), new MPAC(4, 0, 2, 0.0027, 0), new MPAC(2, -2, 0, -0.0027, 0), new MPAC(4, -2, 0, 0.0024, 0), new MPAC(6, -2, 0, -0.0021, 0), new MPAC(22, 0, 0, -0.0021, 0), new MPAC(18, -1, 0, -0.0021, 0), new MPAC(6, 1, 0, 0.0019, 0), new MPAC(11, 0, 0, -0.0018, 0), new MPAC(8, 1, 0, -0.0014, 0), new MPAC(4, 0, -2, -0.0014, 0), new MPAC(6, 0, 2, -0.0014, 0), new MPAC(3, 1, 0, 0.0014, 0), new MPAC(5, 1, 0, -0.0014, 0), new MPAC(13, 0, 0, 0.0013, 0), new MPAC(20, -1, 0, 0.0013, 0), new MPAC(3, 2, 0, 0.0011, 0), new MPAC(4, -2, 2, -0.0011, 0), new MPAC(1, 2, 0, -0.0011, 0), new MPAC(22, -1, 0, -0.0009, 0), new MPAC(0, 0, 4, -0.0008, 0), new MPAC(6, 0, -2, 0.0008, 0), new MPAC(2, 1, -2, 0.0008, 0), new MPAC(0, 2, 0, 0.0007, 0), new MPAC(0, -1, 2, 0.0007, 0), new MPAC(2, 0, 4, 0.0007, 0), new MPAC(0, -2, 2, -0.0006, 0), new MPAC(2, 2, -2, -0.0006, 0), new MPAC(24, 0, 0, 0.0006, 0), new MPAC(4, 0, -4, 0.0005, 0), new MPAC(2, 2, 0, 0.0005, 0), new MPAC(1, -1, 0, -0.0004, 0)];
const g_MoonPerigeeApogeeCoefficients2 = [new MPAC(2, 0, 0, 0.4392, 0), new MPAC(4, 0, 0, 0.0684, 0), new MPAC(0, 1, 0, 0.0456, -0.00011), new MPAC(2, -1, 0, 0.0426, -0.00011), new MPAC(0, 0, 2, 0.0212, 0), new MPAC(1, 0, 0, -0.0189, 0), new MPAC(6, 0, 0, 0.0144, 0), new MPAC(4, -1, 0, 0.0113, 0), new MPAC(2, 0, 2, 0.0047, 0), new MPAC(1, 1, 0, 0.0036, 0), new MPAC(8, 0, 0, 0.0035, 0), new MPAC(6, -1, 0, 0.0034, 0), new MPAC(2, 0, -2, -0.0034, 0), new MPAC(2, -2, 0, 0.0022, 0), new MPAC(3, 0, 0, -0.0017, 0), new MPAC(4, 0, 2, 0.0013, 0), new MPAC(8, -1, 0, 0.0011, 0), new MPAC(4, -2, 0, 0.001, 0), new MPAC(10, 0, 0, 0.0009, 0), new MPAC(3, 1, 0, 0.0007, 0), new MPAC(0, 2, 0, 0.0006, 0), new MPAC(2, 1, 0, 0.0005, 0), new MPAC(2, 2, 0, 0.0005, 0), new MPAC(6, 0, 2, 0.0004, 0), new MPAC(6, -2, 0, 0.0004, 0), new MPAC(10, -1, 0, 0.0004, 0), new MPAC(5, 0, 0, -0.0004, 0), new MPAC(4, 0, -2, -0.0004, 0), new MPAC(0, 1, 2, 0.0003, 0), new MPAC(12, 0, 0, 0.0003, 0), new MPAC(2, -1, 2, 0.0003, 0), new MPAC(1, -1, 0, -0.0003, 0)];
const g_MoonPerigeeApogeeCoefficients3 = [new MPAC(2, 0, 0, 63.224, 0), new MPAC(4, 0, 0, -6.99, 0), new MPAC(2, -1, 0, 2.834, 0), new MPAC(2, -1, 0, 0, -0.0071), new MPAC(6, 0, 0, 1.927, 0), new MPAC(1, 0, 0, -1.263, 0), new MPAC(8, 0, 0, -0.702, 0), new MPAC(0, 1, 0, 0.696, 0), new MPAC(0, 1, 0, 0, -0.0017), new MPAC(0, 0, 2, -0.69, 0), new MPAC(4, -1, 0, -0.629, 0), new MPAC(4, -1, 0, 0, 0.0016), new MPAC(2, 0, -2, -0.392, 0), new MPAC(10, 0, 0, 0.297, 0), new MPAC(6, -1, 0, 0.26, 0), new MPAC(3, 0, 0, 0.201, 0), new MPAC(2, 1, 0, -0.161, 0), new MPAC(1, 1, 0, 0.157, 0), new MPAC(12, 0, 0, -0.138, 0), new MPAC(8, -1, 0, -0.127, 0), new MPAC(2, 0, 2, 0.104, 0), new MPAC(2, -2, 0, 0.104, 0), new MPAC(5, 0, 0, -0.079, 0), new MPAC(14, 0, 0, 0.068, 0), new MPAC(10, -1, 0, 0.067, 0), new MPAC(4, 1, 0, 0.054, 0), new MPAC(12, -1, 0, -0.038, 0), new MPAC(4, -2, 0, -0.038, 0), new MPAC(7, 0, 0, 0.037, 0), new MPAC(4, 0, 2, -0.037, 0), new MPAC(16, 0, 0, -0.035, 0), new MPAC(3, 1, 0, -0.03, 0), new MPAC(1, -1, 0, 0.029, 0), new MPAC(6, 1, 0, -0.025, 0), new MPAC(0, 2, 0, 0.023, 0), new MPAC(14, -1, 0, 0.023, 0), new MPAC(2, 2, 0, -0.023, 0), new MPAC(6, -2, 0, 0.022, 0), new MPAC(2, -1, -2, -0.021, 0), new MPAC(9, 0, 0, -0.02, 0), new MPAC(18, 0, 0, 0.019, 0), new MPAC(6, 0, 2, 0.017, 0), new MPAC(0, -1, 2, 0.014, 0), new MPAC(16, -1, 0, -0.014, 0), new MPAC(4, 0, -20, 0.013, 0), new MPAC(8, 1, 0, 0.012, 0), new MPAC(11, 0, 0, 0.011, 0), new MPAC(5, 1, 0, 0.01, 0), new MPAC(20, 0, 0, -0.01, 0)];
const g_MoonPerigeeApogeeCoefficients4 = [new MPAC(2, 0, 0, -9.147, 0), new MPAC(1, 0, 0, -0.841, 0), new MPAC(0, 0, 2, 0.697, 0), new MPAC(0, 1, 0, -0.656, 0.0016), new MPAC(4, 0, 0, 0.355, 0), new MPAC(2, -1, 0, 0.159, 0), new MPAC(1, 1, 0, 0.127, 0), new MPAC(4, -1, 0, 0.065, 0), new MPAC(6, 0, 0, 0.052, 0), new MPAC(2, 1, 0, 0.043, 0), new MPAC(2, 0, 2, 0.031, 0), new MPAC(2, 0, -2, -0.023, 0), new MPAC(2, -2, 0, 0.022, 0), new MPAC(2, 2, 0, 0.019, 0), new MPAC(0, 2, 0, -0.016, 0), new MPAC(6, -1, 0, 0.014, 0), new MPAC(8, 0, 0, 0.01, 0)];


// CAAMoonPerigeeApogee

function CAAMoonPerigeeApogee() { }

CAAMoonPerigeeApogee.k = function (Year) {
    return 13.2555 * (Year - 1999.97);
};

CAAMoonPerigeeApogee.meanPerigee = function (k) {
    var T = k / 1325.55;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    var T4 = Tcubed * T;
    return 2451534.6698 + 27.55454989 * k - 0.0006691 * Tsquared - 1.098E-06 * Tcubed + 5.2E-09 * T4;
};

CAAMoonPerigeeApogee.meanApogee = function (k) {
    return CAAMoonPerigeeApogee.meanPerigee(k);
};

CAAMoonPerigeeApogee.truePerigee = function (k) {
    var MeanJD = CAAMoonPerigeeApogee.meanPerigee(k);
    var T = k / 1325.55;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    var T4 = Tcubed * T;
    var D = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(171.9179 + 335.9106046 * k - 0.0100383 * Tsquared - 1.156E-05 * Tcubed + 5.5E-08 * T4);
    D = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(D);
    var M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(347.3477 + 27.1577721 * k - 0.000813 * Tsquared - 1E-06 * Tcubed);
    M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(M);
    var F = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(316.6109 + 364.5287911 * k - 0.0125053 * Tsquared - 1.48E-05 * Tcubed);
    F = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(F);
    var nPerigeeCoefficients = g_MoonPerigeeApogeeCoefficients1.length;
    var Sigma = 0;
    for (var i = 0; i < nPerigeeCoefficients; i++) {
        Sigma += g_MoonPerigeeApogeeCoefficients1[i].c * Math.sin(D * g_MoonPerigeeApogeeCoefficients1[i].d + M * g_MoonPerigeeApogeeCoefficients1[i].m + F * g_MoonPerigeeApogeeCoefficients1[i].f + T * g_MoonPerigeeApogeeCoefficients1[i].t);
    }
    return MeanJD + Sigma;
};

CAAMoonPerigeeApogee.trueApogee = function (k) {
    var MeanJD = CAAMoonPerigeeApogee.meanApogee(k);
    var T = k / 1325.55;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    var T4 = Tcubed * T;
    var D = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(171.9179 + 335.9106046 * k - 0.0100383 * Tsquared - 1.156E-05 * Tcubed + 5.5E-08 * T4);
    D = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(D);
    var M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(347.3477 + 27.1577721 * k - 0.000813 * Tsquared - 1E-06 * Tcubed);
    M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(M);
    var F = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(316.6109 + 364.5287911 * k - 0.0125053 * Tsquared - 1.48E-05 * Tcubed);
    F = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(F);
    var nApogeeCoefficients = g_MoonPerigeeApogeeCoefficients2.length;
    var Sigma = 0;
    for (var i = 0; i < nApogeeCoefficients; i++) {
        Sigma += (g_MoonPerigeeApogeeCoefficients2[i].c + T * g_MoonPerigeeApogeeCoefficients2[i].t) * Math.sin(D * g_MoonPerigeeApogeeCoefficients2[i].d + M * g_MoonPerigeeApogeeCoefficients2[i].m + F * g_MoonPerigeeApogeeCoefficients2[i].f);
    }
    return MeanJD + Sigma;
};

CAAMoonPerigeeApogee.perigeeParallax = function (k) {
    var T = k / 1325.55;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    var T4 = Tcubed * T;
    var D = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(171.9179 + 335.9106046 * k - 0.0100383 * Tsquared - 1.156E-05 * Tcubed + 5.5E-08 * T4);
    D = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(D);
    var M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(347.3477 + 27.1577721 * k - 0.000813 * Tsquared - 1E-06 * Tcubed);
    M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(M);
    var F = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(316.6109 + 364.5287911 * k - 0.0125053 * Tsquared - 1.48E-05 * Tcubed);
    F = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(F);
    var nPerigeeCoefficients = g_MoonPerigeeApogeeCoefficients3.length;
    var Parallax = 3629.215;
    for (var i = 0; i < nPerigeeCoefficients; i++) {
        Parallax += (g_MoonPerigeeApogeeCoefficients3[i].c + T * g_MoonPerigeeApogeeCoefficients3[i].t) * Math.cos(D * g_MoonPerigeeApogeeCoefficients3[i].d + M * g_MoonPerigeeApogeeCoefficients3[i].m + F * g_MoonPerigeeApogeeCoefficients3[i].f);
    }
    return Parallax / 3600;
};

CAAMoonPerigeeApogee.apogeeParallax = function (k) {
    var T = k / 1325.55;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    var T4 = Tcubed * T;
    var D = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(171.9179 + 335.9106046 * k - 0.0100383 * Tsquared - 1.156E-05 * Tcubed + 5.5E-08 * T4);
    D = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(D);
    var M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(347.3477 + 27.1577721 * k - 0.000813 * Tsquared - 1E-06 * Tcubed);
    M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(M);
    var F = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(316.6109 + 364.5287911 * k - 0.0125053 * Tsquared - 1.48E-05 * Tcubed);
    F = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(F);
    var nApogeeCoefficients = g_MoonPerigeeApogeeCoefficients4.length;
    var Parallax = 3245.251;
    for (var i = 0; i < nApogeeCoefficients; i++) {
        Parallax += (g_MoonPerigeeApogeeCoefficients4[i].c + T * g_MoonPerigeeApogeeCoefficients4[i].t) * Math.cos(D * g_MoonPerigeeApogeeCoefficients4[i].d + M * g_MoonPerigeeApogeeCoefficients4[i].m + F * g_MoonPerigeeApogeeCoefficients4[i].f);
    }
    return Parallax / 3600;
};

var CAAMoonPerigeeApogee$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAMoonPerigeeApogee", [CAAMoonPerigeeApogee, CAAMoonPerigeeApogee$, null]);


/***/ }),

/***/ "./esm/astrocalc/moon_phases.js":
/*!**************************************!*\
  !*** ./esm/astrocalc/moon_phases.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAMoonPhases: () => (/* binding */ CAAMoonPhases)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
// Originally `AAMOONPHASES.CPP`
// "Purpose: Implementation for the algorithms which obtain the dates for the phases of the Moon"
// Last update of original: PJN / 22-02-2004
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.





// CAAMoonPhases

function CAAMoonPhases() { }

CAAMoonPhases.k = function (Year) {
    return 12.3685 * (Year - 2000);
};

CAAMoonPhases.meanPhase = function (k) {
    var T = k / 1236.85;
    var T2 = T * T;
    var T3 = T2 * T;
    var T4 = T3 * T;
    return 2451550.09766 + 29.530588861 * k + 0.00015437 * T2 - 1.5E-07 * T3 + 7.3E-10 * T4;
};

CAAMoonPhases.truePhase = function (k) {
    var JD = CAAMoonPhases.meanPhase(k);
    var T = k / 1236.85;
    var T2 = T * T;
    var T3 = T2 * T;
    var T4 = T3 * T;
    var E = 1 - 0.002516 * T - 7.4E-06 * T2;
    var E2 = E * E;
    var M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(2.5534 + 29.1053567 * k - 1.4E-06 * T2 - 1.1E-07 * T3);
    M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(M);
    var Mdash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(201.5643 + 385.81693528 * k + 0.0107582 * T2 + 1.238E-05 * T3 - 5.8E-08 * T4);
    Mdash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Mdash);
    var F = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(160.7108 + 390.67050284 * k - 0.0016118 * T2 - 2.27E-06 * T3 + 1E-08 * T4);
    F = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(F);
    var omega = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(124.7746 - 1.56375588 * k + 0.0020672 * T2 + 2.15E-06 * T3);
    omega = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(omega);
    var A1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(299.77 + 0.107408 * k - 0.009173 * T2);
    A1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A1);
    var A2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(251.88 + 0.016321 * k);
    A2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A2);
    var A3 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(251.83 + 26.651886 * k);
    A3 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A3);
    var A4 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(349.42 + 36.412478 * k);
    A4 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A4);
    var A5 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(84.66 + 18.206239 * k);
    A5 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A5);
    var A6 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(141.74 + 53.303771 * k);
    A6 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A6);
    var A7 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(207.14 + 2.453732 * k);
    A7 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A7);
    var A8 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(154.84 + 7.30686 * k);
    A8 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A8);
    var A9 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(34.52 + 27.261239 * k);
    A9 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A9);
    var A10 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(207.19 + 0.121824 * k);
    A10 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A10);
    var A11 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(291.34 + 1.844379 * k);
    A11 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A11);
    var A12 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(161.72 + 24.198154 * k);
    A12 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A12);
    var A13 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(239.56 + 25.513099 * k);
    A13 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A13);
    var A14 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(331.55 + 3.592518 * k);
    A14 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(A14);
    var kint = Math.floor(k);
    var kfrac = k - kint;
    if (kfrac < 0) {
        kfrac = 1 + kfrac;
    }
    if (!kfrac) {
        var DeltaJD = -0.4072 * Math.sin(Mdash) + 0.17241 * E * Math.sin(M) + 0.01608 * Math.sin(2 * Mdash) + 0.01039 * Math.sin(2 * F) + 0.00739 * E * Math.sin(Mdash - M) + -0.00514 * E * Math.sin(Mdash + M) + 0.00208 * E2 * Math.sin(2 * M) + -0.00111 * Math.sin(Mdash - 2 * F) + -0.00057 * Math.sin(Mdash + 2 * F) + 0.00056 * E * Math.sin(2 * Mdash + M) + -0.00042 * Math.sin(3 * Mdash) + 0.00042 * E * Math.sin(M + 2 * F) + 0.00038 * E * Math.sin(M - 2 * F) + -0.00024 * E * Math.sin(2 * Mdash - M) + -0.00017 * Math.sin(omega) + -7E-05 * Math.sin(Mdash + 2 * M) + 4E-05 * Math.sin(2 * Mdash - 2 * F) + 4E-05 * Math.sin(3 * M) + 3E-05 * Math.sin(Mdash + M - 2 * F) + 3E-05 * Math.sin(2 * Mdash + 2 * F) + -3E-05 * Math.sin(Mdash + M + 2 * F) + 3E-05 * Math.sin(Mdash - M + 2 * F) + -2E-05 * Math.sin(Mdash - M - 2 * F) + -2E-05 * Math.sin(3 * Mdash + M) + 2E-05 * Math.sin(4 * Mdash);
        JD += DeltaJD;
    }
    else if ((kfrac === 0.25) || (kfrac === 0.75)) {
        var DeltaJD = -0.62801 * Math.sin(Mdash) + 0.17172 * E * Math.sin(M) + -0.01183 * E * Math.sin(Mdash + M) + 0.00862 * Math.sin(2 * Mdash) + 0.00804 * Math.sin(2 * F) + 0.00454 * E * Math.sin(Mdash - M) + 0.00204 * E2 * Math.sin(2 * M) + -0.0018 * Math.sin(Mdash - 2 * F) + -0.0007 * Math.sin(Mdash + 2 * F) + -0.0004 * Math.sin(3 * Mdash) + -0.00034 * E * Math.sin(2 * Mdash - M) + 0.00032 * E * Math.sin(M + 2 * F) + 0.00032 * E * Math.sin(M - 2 * F) + -0.00028 * E2 * Math.sin(Mdash + 2 * M) + 0.00027 * E * Math.sin(2 * Mdash + M) + -0.00017 * Math.sin(omega) + -5E-05 * Math.sin(Mdash - M - 2 * F) + 4E-05 * Math.sin(2 * Mdash + 2 * F) + -4E-05 * Math.sin(Mdash + M + 2 * F) + 4E-05 * Math.sin(Mdash - 2 * M) + 3E-05 * Math.sin(Mdash + M - 2 * F) + 3E-05 * Math.sin(3 * M) + 2E-05 * Math.sin(2 * Mdash - 2 * F) + 2E-05 * Math.sin(Mdash - M + 2 * F) + -2E-05 * Math.sin(3 * Mdash + M);
        JD += DeltaJD;
        var W = 0.00306 - 0.00038 * E * Math.cos(M) + 0.00026 * Math.cos(Mdash) - 2E-05 * Math.cos(Mdash - M) + 2E-05 * Math.cos(Mdash + M) + 2E-05 * Math.cos(2 * F);
        if (kfrac === 0.25) {
            JD += W;
        }
        else {
            JD -= W;
        }
    }
    else if (kfrac === 0.5) {
        var DeltaJD = -0.40614 * Math.sin(Mdash) + 0.17302 * E * Math.sin(M) + 0.01614 * Math.sin(2 * Mdash) + 0.01043 * Math.sin(2 * F) + 0.00734 * E * Math.sin(Mdash - M) + -0.00514 * E * Math.sin(Mdash + M) + 0.00209 * E2 * Math.sin(2 * M) + -0.00111 * Math.sin(Mdash - 2 * F) + -0.00057 * Math.sin(Mdash + 2 * F) + 0.00056 * E * Math.sin(2 * Mdash + M) + -0.00042 * Math.sin(3 * Mdash) + 0.00042 * E * Math.sin(M + 2 * F) + 0.00038 * E * Math.sin(M - 2 * F) + -0.00024 * E * Math.sin(2 * Mdash - M) + -0.00017 * Math.sin(omega) + -7E-05 * Math.sin(Mdash + 2 * M) + 4E-05 * Math.sin(2 * Mdash - 2 * F) + 4E-05 * Math.sin(3 * M) + 3E-05 * Math.sin(Mdash + M - 2 * F) + 3E-05 * Math.sin(2 * Mdash + 2 * F) + -3E-05 * Math.sin(Mdash + M + 2 * F) + 3E-05 * Math.sin(Mdash - M + 2 * F) + -2E-05 * Math.sin(Mdash - M - 2 * F) + -2E-05 * Math.sin(3 * Mdash + M) + 2E-05 * Math.sin(4 * Mdash);
        JD += DeltaJD;
    }
    else {
        console.assert(false);
    }
    var DeltaJD2 = 0.000325 * Math.sin(A1) + 0.000165 * Math.sin(A2) + 0.000164 * Math.sin(A3) + 0.000126 * Math.sin(A4) + 0.00011 * Math.sin(A5) + 6.2E-05 * Math.sin(A6) + 6E-05 * Math.sin(A7) + 5.6E-05 * Math.sin(A8) + 4.7E-05 * Math.sin(A9) + 4.2E-05 * Math.sin(A10) + 4E-05 * Math.sin(A11) + 3.7E-05 * Math.sin(A12) + 3.5E-05 * Math.sin(A13) + 2.3E-05 * Math.sin(A14);
    JD += DeltaJD2;
    return JD;
};

var CAAMoonPhases$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAMoonPhases", [CAAMoonPhases, CAAMoonPhases$, null]);


/***/ }),

/***/ "./esm/astrocalc/neptune.js":
/*!**********************************!*\
  !*** ./esm/astrocalc/neptune.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAANeptune: () => (/* binding */ CAANeptune)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _earth_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./earth.js */ "./esm/astrocalc/earth.js");
// Originally `AANEPTUNE.CPP`
// "Purpose: Implementation for the algorithms which obtain the heliocentric position of Neptune"
// Last update of original: PJN / 29-12-2003
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.






// Coefficients

const g_L0NC = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(531188633, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1798476, 2.9010127, 38.1330356), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1019728, 0.4858092, 1.4844727), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(124532, 4.830081, 36.648563), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(42064, 5.41055, 2.96895), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(37715, 6.09222, 35.16409), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(33785, 1.24489, 76.26607), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16483, 8E-05, 491.55793), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9199, 4.9375, 39.6175), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8994, 0.2746, 175.1661), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4216, 1.9871, 73.2971), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3365, 1.0359, 33.6796), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2285, 4.2061, 4.4534), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1434, 2.7834, 74.7816), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(900, 2.076, 109.946), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(745, 3.19, 71.813), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(506, 5.748, 114.399), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(400, 0.35, 1021.249), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(345, 3.462, 41.102), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(340, 3.304, 77.751), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(323, 2.248, 32.195), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(306, 0.497, 0.521), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(287, 4.505, 0.048), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(282, 2.246, 146.594), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(267, 4.889, 0.963), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(252, 5.782, 388.465), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(245, 1.247, 9.561), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(233, 2.505, 137.033), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(227, 1.797, 453.425), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(170, 3.324, 108.461), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(151, 2.192, 33.94), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(150, 2.997, 5.938), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(148, 0.859, 111.43), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(119, 3.677, 2.448), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(109, 2.416, 183.243), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(103, 0.041, 0.261), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(103, 4.404, 70.328), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(102, 5.705, 0.112)];
const g_L1NC = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3837687717, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16604, 4.86319, 1.48447), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15807, 2.27923, 38.13304), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3335, 3.682, 76.2661), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1306, 3.6732, 2.9689), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(605, 1.505, 35.164), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(179, 3.453, 39.618), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(107, 2.451, 4.453), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(106, 2.755, 33.68), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(73, 5.49, 36.65), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(57, 1.86, 114.4), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(57, 5.22, 0.52), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(35, 4.52, 74.78), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(32, 5.9, 77.75), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(30, 3.67, 388.47), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(29, 5.17, 9.56), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(29, 5.17, 2.45), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(26, 5.25, 168.05)];
const g_L2NC = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(53893, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(296, 1.855, 1.484), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(281, 1.191, 38.133), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(270, 5.721, 76.266), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(23, 1.21, 2.97), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 4.43, 35.16), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7, 0.54, 2.45)];
const g_L3NC = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(31, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15, 1.35, 76.27), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12, 6.04, 1.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12, 6.11, 38.13)];
const g_L4NC = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(114, 3.142, 0)];
const g_B0NC = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3088623, 1.4410437, 38.1330356), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27789, 5.91272, 76.26607), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27624, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15448, 3.50877, 39.61751), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15355, 2.52124, 36.64856), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2000, 1.51, 74.7816), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1968, 4.3778, 1.4845), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1015, 3.2156, 35.1641), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(606, 2.802, 73.297), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(595, 2.129, 41.102), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(589, 3.187, 2.969), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(402, 4.169, 114.399), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(280, 1.682, 77.751), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(262, 3.767, 213.299), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(254, 3.271, 453.425), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(206, 4.257, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(140, 3.53, 137.033)];
const g_B1NC = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(227279, 3.807931, 38.133036), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1803, 1.9758, 76.2661), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1433, 3.1416, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1386, 4.8256, 36.6486), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1073, 6.0805, 39.6175), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(148, 3.858, 74.782), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(136, 0.478, 1.484), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(70, 6.19, 35.16), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(52, 5.05, 73.3), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(43, 0.31, 114.4), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(37, 4.89, 41.1), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(37, 5.76, 2.97), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(26, 5.22, 213.3)];
const g_B2NC = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9691, 5.5712, 38.133), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(79, 3.63, 76.27), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(72, 0.45, 36.65), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(59, 3.14, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(30, 1.61, 39.62), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 5.61, 74.78)];
const g_B3NC = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(273, 1.017, 38.133), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 2.37, 36.65), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 5.33, 76.27)];
const g_B4NC = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 2.67, 38.13)];
const g_R0NC = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3007013206, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27062259, 1.32999459, 38.13303564), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1691764, 3.2518614, 36.6485629), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(807831, 5.185928, 1.484473), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(537761, 4.521139, 35.16409), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(495726, 1.571057, 491.557929), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(274572, 1.845523, 175.16606), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(135134, 3.372206, 39.617508), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(121802, 5.797544, 76.266071), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(100895, 0.377027, 73.297126), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(69792, 3.79617, 2.96895), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(46688, 5.74938, 33.67962), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(24594, 0.50802, 109.94569), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16939, 1.59422, 71.81265), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14230, 1.07786, 74.7816), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12012, 1.92062, 1021.24889), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8395, 0.6782, 146.5943), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7572, 1.0715, 388.4652), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5721, 2.5906, 4.4534), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4840, 1.9069, 41.102), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4483, 2.9057, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4421, 1.7499, 108.4612), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4354, 0.6799, 32.1951), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4270, 3.4134, 453.4249), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3381, 0.8481, 183.2428), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2881, 1.986, 137.033), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2879, 3.6742, 350.3321), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2636, 3.0976, 213.2991), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2530, 5.7984, 490.0735), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2523, 0.4863, 493.0424), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2306, 2.8096, 70.3282), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2087, 0.6186, 33.9402)];
const g_R1NC = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(236339, 0.70498, 38.133036), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13220, 3.32015, 1.48447), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8622, 6.2163, 35.1641), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2702, 1.8814, 39.6175), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2155, 2.0943, 2.9689), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2153, 5.1687, 76.2661), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1603, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1464, 1.1842, 33.6796), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1136, 3.9189, 36.6486), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(898, 5.241, 388.465), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(790, 0.533, 168.053), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(760, 0.021, 182.28), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(607, 1.077, 1021.249), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(572, 3.401, 484.444), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(561, 2.887, 498.671)];
const g_R2NC = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4247, 5.8991, 38.133), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(218, 0.346, 1.484), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(163, 2.239, 168.053), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(156, 4.594, 182.28), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(127, 2.848, 35.164)];
const g_R3NC = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(166, 4.552, 38.133)];


// CAANeptune

function CAANeptune() { }

CAANeptune.eclipticLongitude = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var nL0Coefficients = g_L0NC.length;
    var L0 = 0;
    var i;
    for (i = 0; i < nL0Coefficients; i++) {
        L0 += g_L0NC[i].a * Math.cos(g_L0NC[i].b + g_L0NC[i].c * rho);
    }
    var nL1Coefficients = g_L1NC.length;
    var L1 = 0;
    for (i = 0; i < nL1Coefficients; i++) {
        L1 += g_L1NC[i].a * Math.cos(g_L1NC[i].b + g_L1NC[i].c * rho);
    }
    var nL2Coefficients = g_L2NC.length;
    var L2 = 0;
    for (i = 0; i < nL2Coefficients; i++) {
        L2 += g_L2NC[i].a * Math.cos(g_L2NC[i].b + g_L2NC[i].c * rho);
    }
    var nL3Coefficients = g_L3NC.length;
    var L3 = 0;
    for (i = 0; i < nL3Coefficients; i++) {
        L3 += g_L3NC[i].a * Math.cos(g_L3NC[i].b + g_L3NC[i].c * rho);
    }
    var nL4Coefficients = g_L4NC.length;
    var L4 = 0;
    for (i = 0; i < nL4Coefficients; i++) {
        L4 += g_L4NC[i].a * Math.cos(g_L4NC[i].b + g_L4NC[i].c * rho);
    }
    var vvalue = (L0 + L1 * rho + L2 * rhosquared + L3 * rhocubed + L4 * rho4) / 100000000;
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue));
    return vvalue;
};

CAANeptune.eclipticLatitude = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var nB0Coefficients = g_B0NC.length;
    var B0 = 0;
    var i;
    for (i = 0; i < nB0Coefficients; i++) {
        B0 += g_B0NC[i].a * Math.cos(g_B0NC[i].b + g_B0NC[i].c * rho);
    }
    var nB1Coefficients = g_B1NC.length;
    var B1 = 0;
    for (i = 0; i < nB1Coefficients; i++) {
        B1 += g_B1NC[i].a * Math.cos(g_B1NC[i].b + g_B1NC[i].c * rho);
    }
    var nB2Coefficients = g_B2NC.length;
    var B2 = 0;
    for (i = 0; i < nB2Coefficients; i++) {
        B2 += g_B2NC[i].a * Math.cos(g_B2NC[i].b + g_B2NC[i].c * rho);
    }
    var nB3Coefficients = g_B3NC.length;
    var B3 = 0;
    for (i = 0; i < nB3Coefficients; i++) {
        B3 += g_B3NC[i].a * Math.cos(g_B3NC[i].b + g_B3NC[i].c * rho);
    }
    var nB4Coefficients = g_B4NC.length;
    var B4 = 0;
    for (i = 0; i < nB4Coefficients; i++) {
        B4 += g_B4NC[i].a * Math.cos(g_B4NC[i].b + g_B4NC[i].c * rho);
    }
    var vvalue = (B0 + B1 * rho + B2 * rhosquared + B3 * rhocubed + B4 * rho4) / 100000000;
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue);
    return vvalue;
};

CAANeptune.radiusVector = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var nR0Coefficients = g_R0NC.length;
    var R0 = 0;
    var i;
    for (i = 0; i < nR0Coefficients; i++) {
        R0 += g_R0NC[i].a * Math.cos(g_R0NC[i].b + g_R0NC[i].c * rho);
    }
    var nR1Coefficients = g_R1NC.length;
    var R1 = 0;
    for (i = 0; i < nR1Coefficients; i++) {
        R1 += g_R1NC[i].a * Math.cos(g_R1NC[i].b + g_R1NC[i].c * rho);
    }
    var nR2Coefficients = g_R2NC.length;
    var R2 = 0;
    for (i = 0; i < nR2Coefficients; i++) {
        R2 += g_R2NC[i].a * Math.cos(g_R2NC[i].b + g_R2NC[i].c * rho);
    }
    var nR3Coefficients = g_R3NC.length;
    var R3 = 0;
    for (i = 0; i < nR3Coefficients; i++) {
        R3 += g_R3NC[i].a * Math.cos(g_R3NC[i].b + g_R3NC[i].c * rho);
    }
    return (R0 + R1 * rho + R2 * rhosquared + R3 * rhocubed) / 100000000;
};

var CAANeptune$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAANeptune", [CAANeptune, CAANeptune$, null]);


/***/ }),

/***/ "./esm/astrocalc/nutation.js":
/*!***********************************!*\
  !*** ./esm/astrocalc/nutation.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAANutation: () => (/* binding */ CAANutation),
/* harmony export */   NUC: () => (/* binding */ NUC)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _earth_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./earth.js */ "./esm/astrocalc/earth.js");
// Originally `AANUTATION.CPP`
// "Purpose: Implementation for the algorithms for Nutation"
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.






// NUC - was NutationCoefficient

function NUC(D, M, Mprime, F, omega, sincoeff1, sincoeff2, coscoeff1, coscoeff2) {
    this.d = 0;
    this.m = 0;
    this.mprime = 0;
    this.f = 0;
    this.omega = 0;
    this.sincoeff1 = 0;
    this.sincoeff2 = 0;
    this.coscoeff1 = 0;
    this.coscoeff2 = 0;
    this.d = D;
    this.m = M;
    this.mprime = Mprime;
    this.f = F;
    this.omega = omega;
    this.sincoeff1 = sincoeff1;
    this.sincoeff2 = sincoeff2;
    this.coscoeff1 = coscoeff1;
    this.coscoeff2 = coscoeff2;
}

var NUC$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("NUC", [NUC, NUC$, null]);


// Coefficients

const g_NuC = [new NUC(0, 0, 0, 0, 1, -171996, -174.2, 92025, 8.9), new NUC(-2, 0, 0, 2, 2, -13187, -1.6, 5736, -3.1), new NUC(0, 0, 0, 2, 2, -2274, -0.2, 977, -0.5), new NUC(0, 0, 0, 0, 2, 2062, 0.2, -895, 0.5), new NUC(0, 1, 0, 0, 0, 1426, -3.4, 54, -0.1), new NUC(0, 0, 1, 0, 0, 712, 0.1, -7, 0), new NUC(-2, 1, 0, 2, 2, -517, 1.2, 224, -0.6), new NUC(0, 0, 0, 2, 1, -386, -0.4, 200, 0), new NUC(0, 0, 1, 2, 2, -301, 0, 129, -0.1), new NUC(-2, -1, 0, 2, 2, 217, -0.5, -95, 0.3), new NUC(-2, 0, 1, 0, 0, -158, 0, 0, 0), new NUC(-2, 0, 0, 2, 1, 129, 0.1, -70, 0), new NUC(0, 0, -1, 2, 2, 123, 0, -53, 0), new NUC(2, 0, 0, 0, 0, 63, 0, 0, 0), new NUC(0, 0, 1, 0, 1, 63, 0.1, -33, 0), new NUC(2, 0, -1, 2, 2, -59, 0, 26, 0), new NUC(0, 0, -1, 0, 1, -58, -0.1, 32, 0), new NUC(0, 0, 1, 2, 1, -51, 0, 27, 0), new NUC(-2, 0, 2, 0, 0, 48, 0, 0, 0), new NUC(0, 0, -2, 2, 1, 46, 0, -24, 0), new NUC(2, 0, 0, 2, 2, -38, 0, 16, 0), new NUC(0, 0, 2, 2, 2, -31, 0, 13, 0), new NUC(0, 0, 2, 0, 0, 29, 0, 0, 0), new NUC(-2, 0, 1, 2, 2, 29, 0, -12, 0), new NUC(0, 0, 0, 2, 0, 26, 0, 0, 0), new NUC(-2, 0, 0, 2, 0, -22, 0, 0, 0), new NUC(0, 0, -1, 2, 1, 21, 0, -10, 0), new NUC(0, 2, 0, 0, 0, 17, -0.1, 0, 0), new NUC(2, 0, -1, 0, 1, 16, 0, -8, 0), new NUC(-2, 2, 0, 2, 2, -16, 0.1, 7, 0), new NUC(0, 1, 0, 0, 1, -15, 0, 9, 0), new NUC(-2, 0, 1, 0, 1, -13, 0, 7, 0), new NUC(0, -1, 0, 0, 1, -12, 0, 6, 0), new NUC(0, 0, 2, -2, 0, 11, 0, 0, 0), new NUC(2, 0, -1, 2, 1, -10, 0, 5, 0), new NUC(2, 0, 1, 2, 2, -8, 0, 3, 0), new NUC(0, 1, 0, 2, 2, 7, 0, -3, 0), new NUC(-2, 1, 1, 0, 0, -7, 0, 0, 0), new NUC(0, -1, 0, 2, 2, -7, 0, 3, 0), new NUC(2, 0, 0, 2, 1, -7, 0, 3, 0), new NUC(2, 0, 1, 0, 0, 6, 0, 0, 0), new NUC(-2, 0, 2, 2, 2, 6, 0, -3, 0), new NUC(-2, 0, 1, 2, 1, 6, 0, -3, 0), new NUC(2, 0, -2, 0, 1, -6, 0, 3, 0), new NUC(2, 0, 0, 0, 1, -6, 0, 3, 0), new NUC(0, -1, 1, 0, 0, 5, 0, 0, 0), new NUC(-2, -1, 0, 2, 1, -5, 0, 3, 0), new NUC(-2, 0, 0, 0, 1, -5, 0, 3, 0), new NUC(0, 0, 2, 2, 1, -5, 0, 3, 0), new NUC(-2, 0, 2, 0, 1, 4, 0, 0, 0), new NUC(-2, 1, 0, 2, 1, 4, 0, 0, 0), new NUC(0, 0, 1, -2, 0, 4, 0, 0, 0), new NUC(-1, 0, 1, 0, 0, -4, 0, 0, 0), new NUC(-2, 1, 0, 0, 0, -4, 0, 0, 0), new NUC(1, 0, 0, 0, 0, -4, 0, 0, 0), new NUC(0, 0, 1, 2, 0, 3, 0, 0, 0), new NUC(0, 0, -2, 2, 2, -3, 0, 0, 0), new NUC(-1, -1, 1, 0, 0, -3, 0, 0, 0), new NUC(0, 1, 1, 0, 0, -3, 0, 0, 0), new NUC(0, -1, 1, 2, 2, -3, 0, 0, 0), new NUC(2, -1, -1, 2, 2, -3, 0, 0, 0), new NUC(0, 0, 3, 2, 2, -3, 0, 0, 0), new NUC(2, -1, 0, 2, 2, -3, 0, 0, 0)];


// CAANutation

function CAANutation() { }

CAANutation.nutationInLongitude = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    var D = 297.85036 + 445267.11148 * T - 0.0019142 * Tsquared + Tcubed / 189474;
    D = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(D);
    var M = 357.52772 + 35999.05034 * T - 0.0001603 * Tsquared - Tcubed / 300000;
    M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(M);
    var Mprime = 134.96298 + 477198.867398 * T + 0.0086972 * Tsquared + Tcubed / 56250;
    Mprime = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(Mprime);
    var F = 93.27191 + 483202.017538 * T - 0.0036825 * Tsquared + Tcubed / 327270;
    F = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(F);
    var omega = 125.04452 - 1934.136261 * T + 0.0020708 * Tsquared + Tcubed / 450000;
    omega = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(omega);
    var nCoefficients = g_NuC.length;
    var vvalue = 0;
    for (var i = 0; i < nCoefficients; i++) {
        var argument = g_NuC[i].d * D + g_NuC[i].m * M + g_NuC[i].mprime * Mprime + g_NuC[i].f * F + g_NuC[i].omega * omega;
        var radargument = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(argument);
        vvalue += (g_NuC[i].sincoeff1 + g_NuC[i].sincoeff2 * T) * Math.sin(radargument) * 0.0001;
    }
    return vvalue;
};

CAANutation.nutationInObliquity = function (JD) {
    var T = (JD - 2451545) / 36525;
    var Tsquared = T * T;
    var Tcubed = Tsquared * T;
    var D = 297.85036 + 445267.11148 * T - 0.0019142 * Tsquared + Tcubed / 189474;
    D = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(D);
    var M = 357.52772 + 35999.05034 * T - 0.0001603 * Tsquared - Tcubed / 300000;
    M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(M);
    var Mprime = 134.96298 + 477198.867398 * T + 0.0086972 * Tsquared + Tcubed / 56250;
    Mprime = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(Mprime);
    var F = 93.27191 + 483202.017538 * T - 0.0036825 * Tsquared + Tcubed / 327270;
    F = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(F);
    var omega = 125.04452 - 1934.136261 * T + 0.0020708 * Tsquared + Tcubed / 450000;
    omega = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(omega);
    var nCoefficients = g_NuC.length;
    var vvalue = 0;
    for (var i = 0; i < nCoefficients; i++) {
        var argument = g_NuC[i].d * D + g_NuC[i].m * M + g_NuC[i].mprime * Mprime + g_NuC[i].f * F + g_NuC[i].omega * omega;
        var radargument = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(argument);
        vvalue += (g_NuC[i].coscoeff1 + g_NuC[i].coscoeff2 * T) * Math.cos(radargument) * 0.0001;
    }
    return vvalue;
};

CAANutation.nutationInRightAscension = function (Alpha, Delta, Obliquity, NutationInLongitude, NutationInObliquity) {
    Alpha = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(Alpha);
    Delta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta);
    Obliquity = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Obliquity);
    return (Math.cos(Obliquity) + Math.sin(Obliquity) * Math.sin(Alpha) * Math.tan(Delta)) * NutationInLongitude - Math.cos(Alpha) * Math.tan(Delta) * NutationInObliquity;
};

CAANutation.nutationInDeclination = function (Alpha, Delta, Obliquity, NutationInLongitude, NutationInObliquity) {
    Alpha = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(Alpha);
    Delta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta);
    Obliquity = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Obliquity);
    return Math.sin(Obliquity) * Math.cos(Alpha) * NutationInLongitude + Math.sin(Alpha) * NutationInObliquity;
};

CAANutation.meanObliquityOfEcliptic = function (JD) {
    var U = (JD - 2451545) / 3652500;
    var Usquared = U * U;
    var Ucubed = Usquared * U;
    var U4 = Ucubed * U;
    var U5 = U4 * U;
    var U6 = U5 * U;
    var U7 = U6 * U;
    var U8 = U7 * U;
    var U9 = U8 * U;
    var U10 = U9 * U;
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(23, 26, 21.448) - _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, 4680.93) * U - _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, 1.55) * Usquared + _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, 1999.25) * Ucubed - _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, 51.38) * U4 - _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, 249.67) * U5 - _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, 39.05) * U6 + _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, 7.12) * U7 + _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, 27.87) * U8 + _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, 5.79) * U9 + _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, 2.45) * U10;
};

CAANutation.trueObliquityOfEcliptic = function (JD) {
    return CAANutation.meanObliquityOfEcliptic(JD) + _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, CAANutation.nutationInObliquity(JD));
};

var CAANutation$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAANutation", [CAANutation, CAANutation$, null]);


/***/ }),

/***/ "./esm/astrocalc/parallax.js":
/*!***********************************!*\
  !*** ./esm/astrocalc/parallax.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAParallax: () => (/* binding */ CAAParallax),
/* harmony export */   CAATopocentricEclipticDetails: () => (/* binding */ CAATopocentricEclipticDetails)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _globe_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./globe.js */ "./esm/astrocalc/globe.js");
/* harmony import */ var _sidereal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sidereal.js */ "./esm/astrocalc/sidereal.js");
// Originally `AAPARALLAX.CPP`
// "Purpose: Implementation for the algorithms which convert a geocentric set of coordinates to their topocentric equivalent"
// Last update of original: PJN / 29-12-2003
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.







// CAATopocentricEclipticDetails

function CAATopocentricEclipticDetails() {
    this.lambda = 0;
    this.beta = 0;
    this.semidiameter = 0;
    this.lambda = 0;
    this.beta = 0;
    this.semidiameter = 0;
}

var CAATopocentricEclipticDetails$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAATopocentricEclipticDetails", [CAATopocentricEclipticDetails, CAATopocentricEclipticDetails$, null]);


// Constants

const g_AAParallax_C1 = Math.sin(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, 8.794)));


// CAAParallax

function CAAParallax() { }

CAAParallax.equatorial2TopocentricDelta = function (Alpha, Delta, Distance, Longitude, Latitude, Height, JD) {
    var RhoSinThetaPrime = _globe_js__WEBPACK_IMPORTED_MODULE_2__.CAAGlobe.rhoSinThetaPrime(Latitude, Height);
    var RhoCosThetaPrime = _globe_js__WEBPACK_IMPORTED_MODULE_2__.CAAGlobe.rhoCosThetaPrime(Latitude, Height);
    var theta = _sidereal_js__WEBPACK_IMPORTED_MODULE_3__.CAASidereal.apparentGreenwichSiderealTime(JD);
    Delta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta);
    var cosDelta = Math.cos(Delta);
    var pi = Math.asin(g_AAParallax_C1 / Distance);
    var H = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(theta - Longitude / 15 - Alpha);
    var cosH = Math.cos(H);
    var sinH = Math.sin(H);
    var DeltaTopocentric = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.COR();
    DeltaTopocentric.x = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2H(-pi * RhoCosThetaPrime * sinH / cosDelta);
    DeltaTopocentric.y = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(-pi * (RhoSinThetaPrime * cosDelta - RhoCosThetaPrime * cosH * Math.sin(Delta)));
    return DeltaTopocentric;
};

CAAParallax.equatorial2Topocentric = function (Alpha, Delta, Distance, Longitude, Latitude, Height, JD) {
    var RhoSinThetaPrime = _globe_js__WEBPACK_IMPORTED_MODULE_2__.CAAGlobe.rhoSinThetaPrime(Latitude, Height);
    var RhoCosThetaPrime = _globe_js__WEBPACK_IMPORTED_MODULE_2__.CAAGlobe.rhoCosThetaPrime(Latitude, Height);
    var theta = _sidereal_js__WEBPACK_IMPORTED_MODULE_3__.CAASidereal.apparentGreenwichSiderealTime(JD);
    Delta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta);
    var cosDelta = Math.cos(Delta);
    var pi = Math.asin(g_AAParallax_C1 / Distance);
    var sinpi = Math.sin(pi);
    var H = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(theta - Longitude / 15 - Alpha);
    var cosH = Math.cos(H);
    var sinH = Math.sin(H);
    var DeltaAlpha = Math.atan2(-RhoCosThetaPrime * sinpi * sinH, cosDelta - RhoCosThetaPrime * sinpi * cosH);
    var Topocentric = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.COR();
    Topocentric.x = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m24(Alpha + _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2H(DeltaAlpha));
    Topocentric.y = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.atan2((Math.sin(Delta) - RhoSinThetaPrime * sinpi) * Math.cos(DeltaAlpha), cosDelta - RhoCosThetaPrime * sinpi * cosH));
    return Topocentric;
};

CAAParallax.ecliptic2Topocentric = function (Lambda, Beta, Semidiameter, Distance, Epsilon, Longitude, Latitude, Height, JD) {
    var S = _globe_js__WEBPACK_IMPORTED_MODULE_2__.CAAGlobe.rhoSinThetaPrime(Latitude, Height);
    var C = _globe_js__WEBPACK_IMPORTED_MODULE_2__.CAAGlobe.rhoCosThetaPrime(Latitude, Height);
    Lambda = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Lambda);
    Beta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Beta);
    Epsilon = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Epsilon);
    Longitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Longitude);
    Latitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Latitude);
    Semidiameter = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Semidiameter);
    var sine = Math.sin(Epsilon);
    var cose = Math.cos(Epsilon);
    var cosBeta = Math.cos(Beta);
    var sinBeta = Math.sin(Beta);
    var theta = _sidereal_js__WEBPACK_IMPORTED_MODULE_3__.CAASidereal.apparentGreenwichSiderealTime(JD);
    theta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(theta);
    var sintheta = Math.sin(theta);
    var pi = Math.asin(g_AAParallax_C1 / Distance);
    var sinpi = Math.sin(pi);
    var N = Math.cos(Lambda) * cosBeta - C * sinpi * Math.cos(theta);
    var Topocentric = new CAATopocentricEclipticDetails();
    Topocentric.lambda = Math.atan2(Math.sin(Lambda) * cosBeta - sinpi * (S * sine + C * cose * sintheta), N);
    var cosTopocentricLambda = Math.cos(Topocentric.lambda);
    Topocentric.beta = Math.atan(cosTopocentricLambda * (sinBeta - sinpi * (S * cose - C * sine * sintheta)) / N);
    Topocentric.semidiameter = Math.asin(cosTopocentricLambda * Math.cos(Topocentric.beta) * Math.sin(Semidiameter) / N);
    Topocentric.semidiameter = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Topocentric.semidiameter);
    Topocentric.lambda = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Topocentric.lambda));
    Topocentric.beta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Topocentric.beta);
    return Topocentric;
};

CAAParallax.parallaxToDistance = function (Parallax) {
    return g_AAParallax_C1 / Math.sin(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Parallax));
};

CAAParallax.distanceToParallax = function (Distance) {
    var pi = Math.asin(g_AAParallax_C1 / Distance);
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(pi);
};

var CAAParallax$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAParallax", [CAAParallax, CAAParallax$, null]);


/***/ }),

/***/ "./esm/astrocalc/physical_jupiter.js":
/*!*******************************************!*\
  !*** ./esm/astrocalc/physical_jupiter.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAPhysicalJupiter: () => (/* binding */ CAAPhysicalJupiter),
/* harmony export */   CAAPhysicalJupiterDetails: () => (/* binding */ CAAPhysicalJupiterDetails)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nutation.js */ "./esm/astrocalc/nutation.js");
/* harmony import */ var _earth_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./earth.js */ "./esm/astrocalc/earth.js");
/* harmony import */ var _jupiter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jupiter.js */ "./esm/astrocalc/jupiter.js");
// Originally `AAPHYSICALJUPITER.CPP`
// "Purpose: Implementation for the algorithms which obtain the physical parameters of the Jupiter"
// Last update of original: PJN / 29-12-2003
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.








// CAAPhysicalJupiterDetails

function CAAPhysicalJupiterDetails() {
    this.DE = 0;
    this.DS = 0;
    this.geometricw1 = 0;
    this.geometricw2 = 0;
    this.apparentw1 = 0;
    this.apparentw2 = 0;
    this.p = 0;
    this.DE = 0;
    this.DS = 0;
    this.geometricw1 = 0;
    this.geometricw2 = 0;
    this.apparentw1 = 0;
    this.apparentw2 = 0;
    this.p = 0;
}

var CAAPhysicalJupiterDetails$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAPhysicalJupiterDetails", [CAAPhysicalJupiterDetails, CAAPhysicalJupiterDetails$, null]);


// CAAPhysicalJupiter

function CAAPhysicalJupiter() { }

CAAPhysicalJupiter.calculate = function (JD) {
    var details = new CAAPhysicalJupiterDetails();
    var d = JD - 2433282.5;
    var T1 = d / 36525;
    var alpha0 = 268 + 0.1061 * T1;
    var alpha0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(alpha0);
    var delta0 = 64.5 - 0.0164 * T1;
    var delta0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(delta0);
    var W1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(17.71 + 877.90003539 * d);
    var W2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(16.838 + 870.27003539 * d);
    var l0 = _earth_js__WEBPACK_IMPORTED_MODULE_3__.CAAEarth.eclipticLongitude(JD);
    var l0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(l0);
    var b0 = _earth_js__WEBPACK_IMPORTED_MODULE_3__.CAAEarth.eclipticLatitude(JD);
    var b0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(b0);
    var R = _earth_js__WEBPACK_IMPORTED_MODULE_3__.CAAEarth.radiusVector(JD);
    var l = _jupiter_js__WEBPACK_IMPORTED_MODULE_4__.CAAJupiter.eclipticLongitude(JD);
    var lrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(l);
    var b = _jupiter_js__WEBPACK_IMPORTED_MODULE_4__.CAAJupiter.eclipticLatitude(JD);
    var brad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(b);
    var r = _jupiter_js__WEBPACK_IMPORTED_MODULE_4__.CAAJupiter.radiusVector(JD);
    var x = r * Math.cos(brad) * Math.cos(lrad) - R * Math.cos(l0rad);
    var y = r * Math.cos(brad) * Math.sin(lrad) - R * Math.sin(l0rad);
    var z = r * Math.sin(brad) - R * Math.sin(b0rad);
    var DELTA = Math.sqrt(x * x + y * y + z * z);
    l -= 0.01299 * DELTA / (r * r);
    lrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(l);
    x = r * Math.cos(brad) * Math.cos(lrad) - R * Math.cos(l0rad);
    y = r * Math.cos(brad) * Math.sin(lrad) - R * Math.sin(l0rad);
    z = r * Math.sin(brad) - R * Math.sin(b0rad);
    DELTA = Math.sqrt(x * x + y * y + z * z);
    var e0 = _nutation_js__WEBPACK_IMPORTED_MODULE_2__.CAANutation.meanObliquityOfEcliptic(JD);
    var e0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(e0);
    var alphas = Math.atan2(Math.cos(e0rad) * Math.sin(lrad) - Math.sin(e0rad) * Math.tan(brad), Math.cos(lrad));
    var deltas = Math.asin(Math.cos(e0rad) * Math.sin(brad) + Math.sin(e0rad) * Math.cos(brad) * Math.sin(lrad));
    details.DS = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.asin(-Math.sin(delta0rad) * Math.sin(deltas) - Math.cos(delta0rad) * Math.cos(deltas) * Math.cos(alpha0rad - alphas)));
    var u = y * Math.cos(e0rad) - z * Math.sin(e0rad);
    var v = y * Math.sin(e0rad) + z * Math.cos(e0rad);
    var alpharad = Math.atan2(u, x);
    var alpha = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(alpharad);
    var deltarad = Math.atan2(v, Math.sqrt(x * x + u * u));
    var delta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(deltarad);
    var xi = Math.atan2(Math.sin(delta0rad) * Math.cos(deltarad) * Math.cos(alpha0rad - alpharad) - Math.sin(deltarad) * Math.cos(delta0rad), Math.cos(deltarad) * Math.sin(alpha0rad - alpharad));
    details.DE = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.asin(-Math.sin(delta0rad) * Math.sin(deltarad) - Math.cos(delta0rad) * Math.cos(deltarad) * Math.cos(alpha0rad - alpharad)));
    details.geometricw1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(W1 - _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(xi) - 5.07033 * DELTA);
    details.geometricw2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(W2 - _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(xi) - 5.02626 * DELTA);
    var C = 57.2958 * (2 * r * DELTA + R * R - r * r - DELTA * DELTA) / (4 * r * DELTA);
    if (Math.sin(lrad - l0rad) > 0) {
        details.apparentw1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(details.geometricw1 + C);
        details.apparentw2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(details.geometricw2 + C);
    }
    else {
        details.apparentw1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(details.geometricw1 - C);
        details.apparentw2 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(details.geometricw2 - C);
    }
    var NutationInLongitude = _nutation_js__WEBPACK_IMPORTED_MODULE_2__.CAANutation.nutationInLongitude(JD);
    var NutationInObliquity = _nutation_js__WEBPACK_IMPORTED_MODULE_2__.CAANutation.nutationInObliquity(JD);
    e0 += NutationInObliquity / 3600;
    e0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(e0);
    alpha += 0.005693 * (Math.cos(alpharad) * Math.cos(l0rad) * Math.cos(e0rad) + Math.sin(alpharad) * Math.sin(l0rad)) / Math.cos(deltarad);
    alpha = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(alpha);
    alpharad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(alpha);
    delta += 0.005693 * (Math.cos(l0rad) * Math.cos(e0rad) * (Math.tan(e0rad) * Math.cos(deltarad) - Math.sin(alpharad) * Math.sin(deltarad)) + Math.cos(alpharad) * Math.sin(deltarad) * Math.sin(l0rad));
    deltarad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(delta);
    var NutationRA = _nutation_js__WEBPACK_IMPORTED_MODULE_2__.CAANutation.nutationInRightAscension(alpha / 15, delta, e0, NutationInLongitude, NutationInObliquity);
    var alphadash = alpha + NutationRA / 3600;
    var alphadashrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(alphadash);
    var NutationDec = _nutation_js__WEBPACK_IMPORTED_MODULE_2__.CAANutation.nutationInDeclination(alpha / 15, delta, e0, NutationInLongitude, NutationInObliquity);
    var deltadash = delta + NutationDec / 3600;
    var deltadashrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(deltadash);
    NutationRA = _nutation_js__WEBPACK_IMPORTED_MODULE_2__.CAANutation.nutationInRightAscension(alpha0 / 15, delta0, e0, NutationInLongitude, NutationInObliquity);
    var alpha0dash = alpha0 + NutationRA / 3600;
    var alpha0dashrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(alpha0dash);
    NutationDec = _nutation_js__WEBPACK_IMPORTED_MODULE_2__.CAANutation.nutationInDeclination(alpha0 / 15, delta0, e0, NutationInLongitude, NutationInObliquity);
    var delta0dash = delta0 + NutationDec / 3600;
    var delta0dashrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(delta0dash);
    details.p = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.atan2(Math.cos(delta0dashrad) * Math.sin(alpha0dashrad - alphadashrad), Math.sin(delta0dashrad) * Math.cos(deltadashrad) - Math.cos(delta0dashrad) * Math.sin(deltadashrad) * Math.cos(alpha0dashrad - alphadashrad))));
    return details;
};

var CAAPhysicalJupiter$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAPhysicalJupiter", [CAAPhysicalJupiter, CAAPhysicalJupiter$, null]);


/***/ }),

/***/ "./esm/astrocalc/physical_mars.js":
/*!****************************************!*\
  !*** ./esm/astrocalc/physical_mars.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAPhysicalMars: () => (/* binding */ CAAPhysicalMars),
/* harmony export */   CAAPhysicalMarsDetails: () => (/* binding */ CAAPhysicalMarsDetails)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nutation.js */ "./esm/astrocalc/nutation.js");
/* harmony import */ var _sun_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sun.js */ "./esm/astrocalc/sun.js");
/* harmony import */ var _earth_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./earth.js */ "./esm/astrocalc/earth.js");
/* harmony import */ var _mars_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mars.js */ "./esm/astrocalc/mars.js");
/* harmony import */ var _elliptical_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./elliptical.js */ "./esm/astrocalc/elliptical.js");
/* harmony import */ var _illuminated_fraction_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./illuminated_fraction.js */ "./esm/astrocalc/illuminated_fraction.js");
/* harmony import */ var _moon_illuminated_fraction_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./moon_illuminated_fraction.js */ "./esm/astrocalc/moon_illuminated_fraction.js");
// Originally `AAPHYSICALMARS.CPP`
// "Purpose: Implementation for the algorithms which obtain the physical parameters of Mars"
// Last update of original: PJN / 04-01-2004
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.











// CAAPhysicalMarsDetails

function CAAPhysicalMarsDetails() {
    this.DE = 0;
    this.DS = 0;
    this.w = 0;
    this.p = 0;
    this.x = 0;
    this.k = 0;
    this.q = 0;
    this.d = 0;
    this.DE = 0;
    this.DS = 0;
    this.w = 0;
    this.p = 0;
    this.x = 0;
    this.k = 0;
    this.q = 0;
    this.d = 0;
}

var CAAPhysicalMarsDetails$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAPhysicalMarsDetails", [CAAPhysicalMarsDetails, CAAPhysicalMarsDetails$, null]);


// CAAPhysicalMars

function CAAPhysicalMars() { }

CAAPhysicalMars.calculate = function (JD) {
    var details = new CAAPhysicalMarsDetails();
    var T = (JD - 2451545) / 36525;
    var Lambda0 = 352.9065 + 1.1733 * T;
    var Lambda0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Lambda0);
    var Beta0 = 63.2818 - 0.00394 * T;
    var Beta0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Beta0);
    var l0 = _earth_js__WEBPACK_IMPORTED_MODULE_4__.CAAEarth.eclipticLongitude(JD);
    var l0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(l0);
    var b0 = _earth_js__WEBPACK_IMPORTED_MODULE_4__.CAAEarth.eclipticLatitude(JD);
    var b0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(b0);
    var R = _earth_js__WEBPACK_IMPORTED_MODULE_4__.CAAEarth.radiusVector(JD);
    var PreviousLightTravelTime = 0;
    var LightTravelTime = 0;
    var x = 0;
    var y = 0;
    var z = 0;
    var bIterate = true;
    var DELTA = 0;
    var l = 0;
    var lrad = 0;
    var b = 0;
    var brad = 0;
    var r = 0;
    while (bIterate) {
        var JD2 = JD - LightTravelTime;
        l = _mars_js__WEBPACK_IMPORTED_MODULE_5__.CAAMars.eclipticLongitude(JD2);
        lrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(l);
        b = _mars_js__WEBPACK_IMPORTED_MODULE_5__.CAAMars.eclipticLatitude(JD2);
        brad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(b);
        r = _mars_js__WEBPACK_IMPORTED_MODULE_5__.CAAMars.radiusVector(JD2);
        x = r * Math.cos(brad) * Math.cos(lrad) - R * Math.cos(l0rad);
        y = r * Math.cos(brad) * Math.sin(lrad) - R * Math.sin(l0rad);
        z = r * Math.sin(brad) - R * Math.sin(b0rad);
        DELTA = Math.sqrt(x * x + y * y + z * z);
        LightTravelTime = _elliptical_js__WEBPACK_IMPORTED_MODULE_6__.ELL.distanceToLightTime(DELTA);
        bIterate = (Math.abs(LightTravelTime - PreviousLightTravelTime) > 2E-06);
        if (bIterate) {
            PreviousLightTravelTime = LightTravelTime;
        }
    }
    var lambdarad = Math.atan2(y, x);
    var lambda = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(lambdarad);
    var betarad = Math.atan2(z, Math.sqrt(x * x + y * y));
    var beta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(betarad);
    details.DE = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.asin(-Math.sin(Beta0rad) * Math.sin(betarad) - Math.cos(Beta0rad) * Math.cos(betarad) * Math.cos(Lambda0rad - lambdarad)));
    var N = 49.5581 + 0.7721 * T;
    var Nrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(N);
    var ldash = l - 0.00697 / r;
    var ldashrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(ldash);
    var bdash = b - 0.000225 * (Math.cos(lrad - Nrad) / r);
    var bdashrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(bdash);
    details.DS = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.asin(-Math.sin(Beta0rad) * Math.sin(bdashrad) - Math.cos(Beta0rad) * Math.cos(bdashrad) * Math.cos(Lambda0rad - ldashrad)));
    var W = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(11.504 + 350.89200025 * (JD - LightTravelTime - 2433282.5));
    var e0 = _nutation_js__WEBPACK_IMPORTED_MODULE_2__.CAANutation.meanObliquityOfEcliptic(JD);
    var e0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(e0);
    var PoleEquatorial = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.ec2Eq(Lambda0, Beta0, e0);
    var alpha0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(PoleEquatorial.x);
    var delta0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(PoleEquatorial.y);
    var u = y * Math.cos(e0rad) - z * Math.sin(e0rad);
    var v = y * Math.sin(e0rad) + z * Math.cos(e0rad);
    var alpharad = Math.atan2(u, x);
    var alpha = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2H(alpharad);
    var deltarad = Math.atan2(v, Math.sqrt(x * x + u * u));
    var delta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(deltarad);
    var xi = Math.atan2(Math.sin(delta0rad) * Math.cos(deltarad) * Math.cos(alpha0rad - alpharad) - Math.sin(deltarad) * Math.cos(delta0rad), Math.cos(deltarad) * Math.sin(alpha0rad - alpharad));
    details.w = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(W - _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(xi));
    var NutationInLongitude = _nutation_js__WEBPACK_IMPORTED_MODULE_2__.CAANutation.nutationInLongitude(JD);
    var NutationInObliquity = _nutation_js__WEBPACK_IMPORTED_MODULE_2__.CAANutation.nutationInObliquity(JD);
    lambda += 0.005693 * Math.cos(l0rad - lambdarad) / Math.cos(betarad);
    beta += 0.005693 * Math.sin(l0rad - lambdarad) * Math.sin(betarad);
    Lambda0 += NutationInLongitude / 3600;
    Lambda0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Lambda0);
    lambda += NutationInLongitude / 3600;
    lambdarad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(lambda);
    e0 += NutationInObliquity / 3600;
    e0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(e0rad);
    var ApparentPoleEquatorial = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.ec2Eq(Lambda0, Beta0, e0);
    var alpha0dash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(ApparentPoleEquatorial.x);
    var delta0dash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(ApparentPoleEquatorial.y);
    var ApparentMars = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.ec2Eq(lambda, beta, e0);
    var alphadash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(ApparentMars.x);
    var deltadash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(ApparentMars.y);
    details.p = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.atan2(Math.cos(delta0dash) * Math.sin(alpha0dash - alphadash), Math.sin(delta0dash) * Math.cos(deltadash) - Math.cos(delta0dash) * Math.sin(deltadash) * Math.cos(alpha0dash - alphadash))));
    var SunLambda = _sun_js__WEBPACK_IMPORTED_MODULE_3__.CAASun.geometricEclipticLongitude(JD);
    var SunBeta = _sun_js__WEBPACK_IMPORTED_MODULE_3__.CAASun.geometricEclipticLatitude(JD);
    var SunEquatorial = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.ec2Eq(SunLambda, SunBeta, e0);
    details.x = _moon_illuminated_fraction_js__WEBPACK_IMPORTED_MODULE_8__.MIFR.positionAngle(SunEquatorial.x, SunEquatorial.y, alpha, delta);
    details.d = 9.36 / DELTA;
    details.k = _illuminated_fraction_js__WEBPACK_IMPORTED_MODULE_7__.IFR.illuminatedFraction2(r, R, DELTA);
    details.q = (1 - details.k) * details.d;
    return details;
};

var CAAPhysicalMars$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAPhysicalMars", [CAAPhysicalMars, CAAPhysicalMars$, null]);


/***/ }),

/***/ "./esm/astrocalc/physical_sun.js":
/*!***************************************!*\
  !*** ./esm/astrocalc/physical_sun.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAPhysicalSun: () => (/* binding */ CAAPhysicalSun),
/* harmony export */   CAAPhysicalSunDetails: () => (/* binding */ CAAPhysicalSunDetails)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nutation.js */ "./esm/astrocalc/nutation.js");
/* harmony import */ var _earth_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./earth.js */ "./esm/astrocalc/earth.js");
// Originally `AAPHYSICALSUN.CPP`
// "Purpose: Implementation for the algorithms which obtain the physical parameters of the Sun"
// Last update of original: PJN / 16-06-2004
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.







// CAAPhysicalSunDetails

function CAAPhysicalSunDetails() {
    this.p = 0;
    this.b0 = 0;
    this.l0 = 0;
    this.p = 0;
    this.b0 = 0;
    this.l0 = 0;
}

var CAAPhysicalSunDetails$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAPhysicalSunDetails", [CAAPhysicalSunDetails, CAAPhysicalSunDetails$, null]);


// CAAPhysicalSun

function CAAPhysicalSun() { }

CAAPhysicalSun.calculate = function (JD) {
    var theta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360((JD - 2398220) * 360 / 25.38);
    var I = 7.25;
    var K = 73.6667 + 1.3958333 * (JD - 2396758) / 36525;
    var L = _earth_js__WEBPACK_IMPORTED_MODULE_3__.CAAEarth.eclipticLongitude(JD);
    var R = _earth_js__WEBPACK_IMPORTED_MODULE_3__.CAAEarth.radiusVector(JD);
    var SunLong = L + 180 - _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, 20.4898 / R);
    var SunLongDash = SunLong + _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, _nutation_js__WEBPACK_IMPORTED_MODULE_2__.CAANutation.nutationInLongitude(JD));
    var epsilon = _nutation_js__WEBPACK_IMPORTED_MODULE_2__.CAANutation.trueObliquityOfEcliptic(JD);
    epsilon = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(epsilon);
    SunLong = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(SunLong);
    SunLongDash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(SunLongDash);
    K = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(K);
    I = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(I);
    theta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(theta);
    var x = Math.atan(-Math.cos(SunLong) * Math.tan(epsilon));
    var y = Math.atan(-Math.cos(SunLong - K) * Math.tan(I));
    var details = new CAAPhysicalSunDetails();
    details.p = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(x + y);
    details.b0 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.asin(Math.sin(SunLong - K) * Math.sin(I)));
    var eta = Math.atan(Math.tan(SunLong - K) * Math.cos(I));
    details.l0 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(eta - theta));
    return details;
};

CAAPhysicalSun.timeOfStartOfRotation = function (C) {
    var JED = 2398140.227 + 27.2752316 * C;
    var M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(281.96 + 26.882476 * C);
    M = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(M);
    JED += (0.1454 * Math.sin(M) - 0.0085 * Math.sin(2 * M) - 0.0141 * Math.cos(2 * M));
    return JED;
};

var CAAPhysicalSun$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAPhysicalSun", [CAAPhysicalSun, CAAPhysicalSun$, null]);


/***/ }),

/***/ "./esm/astrocalc/pluto.js":
/*!********************************!*\
  !*** ./esm/astrocalc/pluto.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAPluto: () => (/* binding */ CAAPluto),
/* harmony export */   PlutoCoefficient1: () => (/* binding */ PlutoCoefficient1),
/* harmony export */   PlutoCoefficient2: () => (/* binding */ PlutoCoefficient2)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
// Originally `AAPLUTO.CPP`
// "Purpose: Implementation for the algorithms which obtain the heliocentric position of Pluto"
// Last update of original: PJN / 29-12-2003
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.





// PlutoCoefficient1

function PlutoCoefficient1(j, s, p) {
    this.j = 0;
    this.s = 0;
    this.p = 0;
    this.j = j;
    this.s = s;
    this.p = p;
}

var PlutoCoefficient1$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PlutoCoefficient1", [PlutoCoefficient1, PlutoCoefficient1$, null]);


// PlutoCoefficient2

function PlutoCoefficient2(a, b) {
    this.a = 0;
    this.b = 0;
    this.a = a;
    this.b = b;
}

var PlutoCoefficient2$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PlutoCoefficient2", [PlutoCoefficient2, PlutoCoefficient2$, null]);


// Coefficients

const g_PlutoArgumentCoefficients = [new PlutoCoefficient1(0, 0, 1), new PlutoCoefficient1(0, 0, 2), new PlutoCoefficient1(0, 0, 3), new PlutoCoefficient1(0, 0, 4), new PlutoCoefficient1(0, 0, 5), new PlutoCoefficient1(0, 0, 6), new PlutoCoefficient1(0, 1, -1), new PlutoCoefficient1(0, 1, 0), new PlutoCoefficient1(0, 1, 1), new PlutoCoefficient1(0, 1, 2), new PlutoCoefficient1(0, 1, 3), new PlutoCoefficient1(0, 2, -2), new PlutoCoefficient1(0, 2, -1), new PlutoCoefficient1(0, 2, 0), new PlutoCoefficient1(1, -1, 0), new PlutoCoefficient1(1, -1, 1), new PlutoCoefficient1(1, 0, -3), new PlutoCoefficient1(1, 0, -2), new PlutoCoefficient1(1, 0, -1), new PlutoCoefficient1(1, 0, 0), new PlutoCoefficient1(1, 0, 1), new PlutoCoefficient1(1, 0, 2), new PlutoCoefficient1(1, 0, 3), new PlutoCoefficient1(1, 0, 4), new PlutoCoefficient1(1, 1, -3), new PlutoCoefficient1(1, 1, -2), new PlutoCoefficient1(1, 1, -1), new PlutoCoefficient1(1, 1, 0), new PlutoCoefficient1(1, 1, 1), new PlutoCoefficient1(1, 1, 3), new PlutoCoefficient1(2, 0, -6), new PlutoCoefficient1(2, 0, -5), new PlutoCoefficient1(2, 0, -4), new PlutoCoefficient1(2, 0, -3), new PlutoCoefficient1(2, 0, -2), new PlutoCoefficient1(2, 0, -1), new PlutoCoefficient1(2, 0, 0), new PlutoCoefficient1(2, 0, 1), new PlutoCoefficient1(2, 0, 2), new PlutoCoefficient1(2, 0, 3), new PlutoCoefficient1(3, 0, -2), new PlutoCoefficient1(3, 0, -1), new PlutoCoefficient1(3, 0, 0)];
const g_PlutoLongitudeCoefficients = [new PlutoCoefficient2(-19799805, 19850055), new PlutoCoefficient2(897144, -4954829), new PlutoCoefficient2(611149, 1211027), new PlutoCoefficient2(-341243, -189585), new PlutoCoefficient2(129287, -34992), new PlutoCoefficient2(-38164, 30893), new PlutoCoefficient2(20442, -9987), new PlutoCoefficient2(-4063, -5071), new PlutoCoefficient2(-6016, -3336), new PlutoCoefficient2(-3956, 3039), new PlutoCoefficient2(-667, 3572), new PlutoCoefficient2(1276, 501), new PlutoCoefficient2(1152, -917), new PlutoCoefficient2(630, -1277), new PlutoCoefficient2(2571, -459), new PlutoCoefficient2(899, -1449), new PlutoCoefficient2(-1016, 1043), new PlutoCoefficient2(-2343, -1012), new PlutoCoefficient2(7042, 788), new PlutoCoefficient2(1199, -338), new PlutoCoefficient2(418, -67), new PlutoCoefficient2(120, -274), new PlutoCoefficient2(-60, -159), new PlutoCoefficient2(-82, -29), new PlutoCoefficient2(-36, -29), new PlutoCoefficient2(-40, 7), new PlutoCoefficient2(-14, 22), new PlutoCoefficient2(4, 13), new PlutoCoefficient2(5, 2), new PlutoCoefficient2(-1, 0), new PlutoCoefficient2(2, 0), new PlutoCoefficient2(-4, 5), new PlutoCoefficient2(4, -7), new PlutoCoefficient2(14, 24), new PlutoCoefficient2(-49, -34), new PlutoCoefficient2(163, -48), new PlutoCoefficient2(9, -24), new PlutoCoefficient2(-4, 1), new PlutoCoefficient2(-3, 1), new PlutoCoefficient2(1, 3), new PlutoCoefficient2(-3, -1), new PlutoCoefficient2(5, -3), new PlutoCoefficient2(0, 0)];
const g_PlutoLatitudeCoefficients = [new PlutoCoefficient2(-5452852, -14974862), new PlutoCoefficient2(3527812, 1672790), new PlutoCoefficient2(-1050748, 327647), new PlutoCoefficient2(178690, -292153), new PlutoCoefficient2(18650, 100340), new PlutoCoefficient2(-30697, -25823), new PlutoCoefficient2(4878, 11248), new PlutoCoefficient2(226, -64), new PlutoCoefficient2(2030, -836), new PlutoCoefficient2(69, -604), new PlutoCoefficient2(-247, -567), new PlutoCoefficient2(-57, 1), new PlutoCoefficient2(-122, 175), new PlutoCoefficient2(-49, -164), new PlutoCoefficient2(-197, 199), new PlutoCoefficient2(-25, 217), new PlutoCoefficient2(589, -248), new PlutoCoefficient2(-269, 711), new PlutoCoefficient2(185, 193), new PlutoCoefficient2(315, 807), new PlutoCoefficient2(-130, -43), new PlutoCoefficient2(5, 3), new PlutoCoefficient2(2, 17), new PlutoCoefficient2(2, 5), new PlutoCoefficient2(2, 3), new PlutoCoefficient2(3, 1), new PlutoCoefficient2(2, -1), new PlutoCoefficient2(1, -1), new PlutoCoefficient2(0, -1), new PlutoCoefficient2(0, 0), new PlutoCoefficient2(0, -2), new PlutoCoefficient2(2, 2), new PlutoCoefficient2(-7, 0), new PlutoCoefficient2(10, -8), new PlutoCoefficient2(-3, 20), new PlutoCoefficient2(6, 5), new PlutoCoefficient2(14, 17), new PlutoCoefficient2(-2, 0), new PlutoCoefficient2(0, 0), new PlutoCoefficient2(0, 0), new PlutoCoefficient2(0, 1), new PlutoCoefficient2(0, 0), new PlutoCoefficient2(1, 0)];
const g_PlutoRadiusCoefficients = [new PlutoCoefficient2(66865439, 68951812), new PlutoCoefficient2(-11827535, -332538), new PlutoCoefficient2(1593179, -1438890), new PlutoCoefficient2(-18444, 483220), new PlutoCoefficient2(-65977, -85431), new PlutoCoefficient2(31174, -6032), new PlutoCoefficient2(-5794, 22161), new PlutoCoefficient2(4601, 4032), new PlutoCoefficient2(-1729, 234), new PlutoCoefficient2(-415, 702), new PlutoCoefficient2(239, 723), new PlutoCoefficient2(67, -67), new PlutoCoefficient2(1034, -451), new PlutoCoefficient2(-129, 504), new PlutoCoefficient2(480, -231), new PlutoCoefficient2(2, -441), new PlutoCoefficient2(-3359, 265), new PlutoCoefficient2(7856, -7832), new PlutoCoefficient2(36, 45763), new PlutoCoefficient2(8663, 8547), new PlutoCoefficient2(-809, -769), new PlutoCoefficient2(263, -144), new PlutoCoefficient2(-126, 32), new PlutoCoefficient2(-35, -16), new PlutoCoefficient2(-19, -4), new PlutoCoefficient2(-15, 8), new PlutoCoefficient2(-4, 12), new PlutoCoefficient2(5, 6), new PlutoCoefficient2(3, 1), new PlutoCoefficient2(6, -2), new PlutoCoefficient2(2, 2), new PlutoCoefficient2(-2, -2), new PlutoCoefficient2(14, 13), new PlutoCoefficient2(-63, 13), new PlutoCoefficient2(136, -236), new PlutoCoefficient2(273, 1065), new PlutoCoefficient2(251, 149), new PlutoCoefficient2(-25, -9), new PlutoCoefficient2(9, -2), new PlutoCoefficient2(-8, 7), new PlutoCoefficient2(2, -10), new PlutoCoefficient2(19, 35), new PlutoCoefficient2(10, 3)];


// CAAPluto

function CAAPluto() { }

CAAPluto.eclipticLongitude = function (JD) {
    var T = (JD - 2451545) / 36525;
    var J = 34.35 + 3034.9057 * T;
    var S = 50.08 + 1222.1138 * T;
    var P = 238.96 + 144.96 * T;
    var L = 0;
    var nPlutoCoefficients = g_PlutoArgumentCoefficients.length;
    for (var i = 0; i < nPlutoCoefficients; i++) {
        var Alpha = g_PlutoArgumentCoefficients[i].j * J + g_PlutoArgumentCoefficients[i].s * S + g_PlutoArgumentCoefficients[i].p * P;
        Alpha = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Alpha);
        L += ((g_PlutoLongitudeCoefficients[i].a * Math.sin(Alpha)) + (g_PlutoLongitudeCoefficients[i].b * Math.cos(Alpha)));
    }
    L = L / 1000000;
    L += (238.958116 + 144.96 * T);
    L = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(L);
    return L;
};

CAAPluto.eclipticLatitude = function (JD) {
    var T = (JD - 2451545) / 36525;
    var J = 34.35 + 3034.9057 * T;
    var S = 50.08 + 1222.1138 * T;
    var P = 238.96 + 144.96 * T;
    var L = 0;
    var nPlutoCoefficients = g_PlutoArgumentCoefficients.length;
    for (var i = 0; i < nPlutoCoefficients; i++) {
        var Alpha = g_PlutoArgumentCoefficients[i].j * J + g_PlutoArgumentCoefficients[i].s * S + g_PlutoArgumentCoefficients[i].p * P;
        Alpha = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Alpha);
        L += ((g_PlutoLatitudeCoefficients[i].a * Math.sin(Alpha)) + (g_PlutoLatitudeCoefficients[i].b * Math.cos(Alpha)));
    }
    L = L / 1000000;
    L += -3.908239;
    return L;
};

CAAPluto.radiusVector = function (JD) {
    var T = (JD - 2451545) / 36525;
    var J = 34.35 + 3034.9057 * T;
    var S = 50.08 + 1222.1138 * T;
    var P = 238.96 + 144.96 * T;
    var R = 0;
    var nPlutoCoefficients = g_PlutoArgumentCoefficients.length;
    for (var i = 0; i < nPlutoCoefficients; i++) {
        var Alpha = g_PlutoArgumentCoefficients[i].j * J + g_PlutoArgumentCoefficients[i].s * S + g_PlutoArgumentCoefficients[i].p * P;
        Alpha = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Alpha);
        R += ((g_PlutoRadiusCoefficients[i].a * Math.sin(Alpha)) + (g_PlutoRadiusCoefficients[i].b * Math.cos(Alpha)));
    }
    R = R / 10000000;
    R += 40.7241346;
    return R;
};

var CAAPluto$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAPluto", [CAAPluto, CAAPluto$, null]);


/***/ }),

/***/ "./esm/astrocalc/precession.js":
/*!*************************************!*\
  !*** ./esm/astrocalc/precession.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAPrecession: () => (/* binding */ CAAPrecession)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
// Originally `AAPRECESSION.CPP`
// "Purpose: Implementation for the algorithms for Precession"
// Last update of original: PJN / 29-12-2003
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.





// CAAPrecession

function CAAPrecession() { }

CAAPrecession.precessEquatorial = function (Alpha, Delta, JD0, JD) {
    var T = (JD0 - 2451545) / 36525;
    var Tsquared = T * T;
    var t = (JD - JD0) / 36525;
    var tsquared = t * t;
    var tcubed = tsquared * t;
    Alpha = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(Alpha);
    Delta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta);
    var sigma = (2306.2181 + 1.39656 * T - 0.000139 * Tsquared) * t + (0.30188 - 3.44E-05 * T) * tsquared + 0.017988 * tcubed;
    sigma = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, sigma));
    var zeta = (2306.2181 + 1.39656 * T - 0.000138 * Tsquared) * t + (1.09468 + 6.6E-05 * T) * tsquared + 0.018203 * tcubed;
    zeta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, zeta));
    var phi = (2004.3109 - 0.8533 * T - 0.000217 * Tsquared) * t - (0.42665 + 0.000217 * T) * tsquared - 0.041833 * tcubed;
    phi = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, phi));
    var A = Math.cos(Delta) * Math.sin(Alpha + sigma);
    var B = Math.cos(phi) * Math.cos(Delta) * Math.cos(Alpha + sigma) - Math.sin(phi) * Math.sin(Delta);
    var C = Math.sin(phi) * Math.cos(Delta) * Math.cos(Alpha + sigma) + Math.cos(phi) * Math.sin(Delta);
    var vvalue = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.COR();
    vvalue.x = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2H(Math.atan2(A, B) + zeta);
    if (vvalue.x < 0) {
        vvalue.x += 24;
    }
    vvalue.y = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.asin(C));
    return vvalue;
};

CAAPrecession.precessEquatorialFK4 = function (Alpha, Delta, JD0, JD) {
    var T = (JD0 - 2415020.3135) / 36524.2199;
    var t = (JD - JD0) / 36524.2199;
    var tsquared = t * t;
    var tcubed = tsquared * t;
    Alpha = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(Alpha);
    Delta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta);
    var sigma = (2304.25 + 1.396 * T) * t + 0.302 * tsquared + 0.018 * tcubed;
    sigma = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, sigma));
    var zeta = 0.791 * tsquared + 0.001 * tcubed;
    zeta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, zeta));
    zeta += sigma;
    var phi = (2004.682 - 0.853 * T) * t - 0.426 * tsquared - 0.042 * tcubed;
    phi = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, phi));
    var A = Math.cos(Delta) * Math.sin(Alpha + sigma);
    var B = Math.cos(phi) * Math.cos(Delta) * Math.cos(Alpha + sigma) - Math.sin(phi) * Math.sin(Delta);
    var C = Math.sin(phi) * Math.cos(Delta) * Math.cos(Alpha + sigma) + Math.cos(phi) * Math.sin(Delta);
    var vvalue = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.COR();
    vvalue.x = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2H(Math.atan2(A, B) + zeta);
    if (vvalue.x < 0) {
        vvalue.x += 24;
    }
    vvalue.y = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.asin(C));
    return vvalue;
};

CAAPrecession.precessEcliptic = function (Lambda, Beta, JD0, JD) {
    var T = (JD0 - 2451545) / 36525;
    var Tsquared = T * T;
    var t = (JD - JD0) / 36525;
    var tsquared = t * t;
    var tcubed = tsquared * t;
    Lambda = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Lambda);
    Beta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Beta);
    var eta = (47.0029 - 0.06603 * T + 0.000598 * Tsquared) * t + (-0.03302 + 0.000598 * T) * tsquared + 6E-05 * tcubed;
    eta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, eta));
    var pi = 174.876384 * 3600 + 3289.4789 * T + 0.60622 * Tsquared - (869.8089 + 0.50491 * T) * t + 0.03536 * tsquared;
    pi = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, pi));
    var p = (5029.0966 + 2.22226 * T - 4.2E-05 * Tsquared) * t + (1.11113 - 4.2E-05 * T) * tsquared - 6E-06 * tcubed;
    p = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, p));
    var A = Math.cos(eta) * Math.cos(Beta) * Math.sin(pi - Lambda) - Math.sin(eta) * Math.sin(Beta);
    var B = Math.cos(Beta) * Math.cos(pi - Lambda);
    var C = Math.cos(eta) * Math.sin(Beta) + Math.sin(eta) * Math.cos(Beta) * Math.sin(pi - Lambda);
    var vvalue = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.COR();
    vvalue.x = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(p + pi - Math.atan2(A, B));
    if (vvalue.x < 0) {
        vvalue.x += 360;
    }
    vvalue.y = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.asin(C));
    return vvalue;
};

CAAPrecession.equatorialPMToEcliptic = function (Alpha, Delta, Beta, PMAlpha, PMDelta, Epsilon) {
    Epsilon = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Epsilon);
    Alpha = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(Alpha);
    Delta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta);
    Beta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Beta);
    var cosb = Math.cos(Beta);
    var sinEpsilon = Math.sin(Epsilon);
    var vvalue = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.COR();
    vvalue.x = (PMDelta * sinEpsilon * Math.cos(Alpha) + PMAlpha * Math.cos(Delta) * (Math.cos(Epsilon) * Math.cos(Delta) + sinEpsilon * Math.sin(Delta) * Math.sin(Alpha))) / (cosb * cosb);
    vvalue.y = (PMDelta * (Math.cos(Epsilon) * Math.cos(Delta) + sinEpsilon * Math.sin(Delta) * Math.sin(Alpha)) - PMAlpha * sinEpsilon * Math.cos(Alpha) * Math.cos(Delta)) / cosb;
    return vvalue;
};

CAAPrecession.adjustPositionUsingUniformProperMotion = function (t, Alpha, Delta, PMAlpha, PMDelta) {
    var vvalue = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.COR();
    vvalue.x = Alpha + (PMAlpha * t / 3600);
    vvalue.y = Delta + (PMDelta * t / 3600);
    return vvalue;
};

CAAPrecession.adjustPositionUsingMotionInSpace = function (r, DeltaR, t, Alpha, Delta, PMAlpha, PMDelta) {
    DeltaR /= 977792;
    PMAlpha /= 13751;
    PMDelta /= 206265;
    Alpha = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(Alpha);
    Delta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta);
    var x = r * Math.cos(Delta) * Math.cos(Alpha);
    var y = r * Math.cos(Delta) * Math.sin(Alpha);
    var z = r * Math.sin(Delta);
    var DeltaX = x / r * DeltaR - z * PMDelta * Math.cos(Alpha) - y * PMAlpha;
    var DeltaY = y / r * DeltaR - z * PMDelta * Math.sin(Alpha) + x * PMAlpha;
    var DeltaZ = z / r * DeltaR + r * PMDelta * Math.cos(Delta);
    x += t * DeltaX;
    y += t * DeltaY;
    z += t * DeltaZ;
    var vvalue = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.COR();
    vvalue.x = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2H(Math.atan2(y, x));
    if (vvalue.x < 0) {
        vvalue.x += 24;
    }
    vvalue.y = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.atan2(z, Math.sqrt(x * x + y * y)));
    return vvalue;
};

var CAAPrecession$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAPrecession", [CAAPrecession, CAAPrecession$, null]);


/***/ }),

/***/ "./esm/astrocalc/rise_transit_set.js":
/*!*******************************************!*\
  !*** ./esm/astrocalc/rise_transit_set.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAARiseTransitSet: () => (/* binding */ CAARiseTransitSet),
/* harmony export */   CAARiseTransitSetDetails: () => (/* binding */ CAARiseTransitSetDetails)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _dynamical_time_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dynamical_time.js */ "./esm/astrocalc/dynamical_time.js");
/* harmony import */ var _interpolate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interpolate.js */ "./esm/astrocalc/interpolate.js");
/* harmony import */ var _sidereal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sidereal.js */ "./esm/astrocalc/sidereal.js");
// Originally `AARISETRANSITSET.CPP`
// "Purpose: Implementation for the algorithms which obtain the Rise, Transit and Set times"
// Last update of original: PJN / 15-10-2004
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.








// CAARiseTransitSetDetails

function CAARiseTransitSetDetails() {
    this.bValid = false;
    this.rise = 0;
    this.transit = 0;
    this.set = 0;
    this.bValid = false;
    this.rise = 0;
    this.transit = 0;
    this.set = 0;
}

var CAARiseTransitSetDetails$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAARiseTransitSetDetails", [CAARiseTransitSetDetails, CAARiseTransitSetDetails$, null]);


// CAARiseTransitSet

function CAARiseTransitSet() { }

CAARiseTransitSet.rise = function (JD, Alpha1, Delta1, Alpha2, Delta2, Alpha3, Delta3, Longitude, Latitude, h0) {
    var details = new CAARiseTransitSetDetails();
    details.bValid = false;
    var theta0 = _sidereal_js__WEBPACK_IMPORTED_MODULE_4__.CAASidereal.apparentGreenwichSiderealTime(JD);
    theta0 *= 15;
    var deltaT = _dynamical_time_js__WEBPACK_IMPORTED_MODULE_2__.DYT.deltaT(JD);
    var Delta2Rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta2);
    var LatitudeRad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Latitude);
    var h0Rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(h0);
    var cosH0 = (Math.sin(h0Rad) - Math.sin(LatitudeRad) * Math.sin(Delta2Rad)) / (Math.cos(LatitudeRad) * Math.cos(Delta2Rad));
    if ((cosH0 > 1) || (cosH0 < -1)) {
        return details;
    }
    var H0 = Math.acos(cosH0);
    H0 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(H0);
    var M0 = (Alpha2 * 15 + Longitude - theta0) / 360;
    var M1 = M0 - H0 / 360;
    var M2 = M0 + H0 / 360;
    if (M0 > 1) {
        M0 -= 1;
    }
    else if (M0 < 0) {
        M0 += 1;
    }
    if (M1 > 1) {
        M1 -= 1;
    }
    else if (M1 < 0) {
        M1 += 1;
    }
    if (M2 > 1) {
        M2 -= 1;
    }
    else if (M2 < 0) {
        M2 += 1;
    }
    for (var i = 0; i < 2; i++) {
        var theta1 = theta0 + 360.985647 * M1;
        theta1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(theta1);
        var n = M1 + deltaT / 86400;
        var Alpha = _interpolate_js__WEBPACK_IMPORTED_MODULE_3__.INTP.interpolate(n, Alpha1, Alpha2, Alpha3);
        var Delta = _interpolate_js__WEBPACK_IMPORTED_MODULE_3__.INTP.interpolate(n, Delta1, Delta2, Delta3);
        var H = theta1 - Longitude - Alpha * 15;
        var Horizontal = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.eq2H(H / 15, Delta, Latitude);
        var DeltaM = (Horizontal.y - h0) / (360 * Math.cos(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta)) * Math.cos(LatitudeRad) * Math.sin(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(H)));
        M1 += DeltaM;
        theta1 = theta0 + 360.985647 * M0;
        theta1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(theta1);
        n = M0 + deltaT / 86400;
        Alpha = _interpolate_js__WEBPACK_IMPORTED_MODULE_3__.INTP.interpolate(n, Alpha1, Alpha2, Alpha3);
        H = theta1 - Longitude - Alpha * 15;
        if (H < -180) {
            H += 360;
        }
        DeltaM = -H / 360;
        M0 += DeltaM;
        theta1 = theta0 + 360.985647 * M2;
        theta1 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(theta1);
        n = M2 + deltaT / 86400;
        Alpha = _interpolate_js__WEBPACK_IMPORTED_MODULE_3__.INTP.interpolate(n, Alpha1, Alpha2, Alpha3);
        Delta = _interpolate_js__WEBPACK_IMPORTED_MODULE_3__.INTP.interpolate(n, Delta1, Delta2, Delta3);
        H = theta1 - Longitude - Alpha * 15;
        Horizontal = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.eq2H(H / 15, Delta, Latitude);
        DeltaM = (Horizontal.y - h0) / (360 * Math.cos(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Delta)) * Math.cos(LatitudeRad) * Math.sin(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(H)));
        M2 += DeltaM;
    }
    details.bValid = true;
    details.rise = M1 * 24;
    details.set = M2 * 24;
    details.transit = M0 * 24;
    return details;
};

var CAARiseTransitSet$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAARiseTransitSet", [CAARiseTransitSet, CAARiseTransitSet$, null]);


/***/ }),

/***/ "./esm/astrocalc/saturn.js":
/*!*********************************!*\
  !*** ./esm/astrocalc/saturn.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAASaturn: () => (/* binding */ CAASaturn)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _earth_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./earth.js */ "./esm/astrocalc/earth.js");
// Originally `AASATURN.CPP`
// "Purpose: Implementation for the algorithms which obtain the heliocentric position of Saturn"
// Last update of original: PJN / 31-05-2004
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.






// Coefficients

const g_L0SaturnCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(87401354, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11107660, 3.9620509, 213.29909544), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1414151, 4.5858152, 7.113547), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(398379, 0.52112, 206.185548), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(350769, 3.303299, 426.598191), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(206816, 0.246584, 103.092774), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(79271, 3.84007, 220.41264), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(23990, 4.66977, 110.20632), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16574, 0.43719, 419.48464), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15820, 0.93809, 632.78374), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15054, 2.7167, 639.89729), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14907, 5.76903, 316.39187), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14610, 1.56519, 3.93215), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13160, 4.44891, 14.22709), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13005, 5.98119, 11.0457), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10725, 3.1294, 202.2534), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6126, 1.7633, 277.035), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5863, 0.2366, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5228, 4.2078, 3.1814), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5020, 3.1779, 433.7117), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4593, 0.6198, 199.072), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4006, 2.2448, 63.7359), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3874, 3.2228, 138.5175), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3269, 0.7749, 949.1756), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2954, 0.9828, 95.9792), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2461, 2.0316, 735.8765), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1758, 3.2658, 522.5774), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1640, 5.505, 846.0828), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1581, 4.3727, 309.2783), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1391, 4.0233, 323.5054), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1124, 2.8373, 415.5525), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1087, 4.1834, 2.4477), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1017, 3.717, 227.5262), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(957, 0.507, 1265.567), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(853, 3.421, 175.166), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(849, 3.191, 209.367), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(789, 5.007, 0.963), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(749, 2.144, 853.196), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(744, 5.253, 224.345), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(687, 1.747, 1052.268), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(654, 1.599, 0.048), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(634, 2.299, 412.371), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(625, 0.97, 210.118), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(580, 3.093, 74.782), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(546, 2.127, 350.332), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(543, 1.518, 9.561), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(530, 4.449, 117.32), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(478, 2.965, 137.033), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(474, 5.475, 742.99), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(452, 1.044, 490.334), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(449, 1.29, 127.472), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(372, 2.278, 217.231), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(355, 3.013, 838.969), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(347, 1.539, 340.771), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(343, 0.246, 0.521), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(330, 0.247, 1581.959), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(322, 0.961, 203.738), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(322, 2.572, 647.011), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(309, 3.495, 216.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(287, 2.37, 351.817), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(278, 0.4, 211.815), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(249, 1.47, 1368.66), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(227, 4.91, 12.53), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(220, 4.204, 200.769), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(209, 1.345, 625.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(208, 0.483, 1162.475), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(208, 1.283, 39.357), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(204, 6.011, 265.989), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(185, 3.503, 149.563), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(184, 0.973, 4.193), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(182, 5.491, 2.921), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(174, 1.863, 0.751), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(165, 0.44, 5.417), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(149, 5.736, 52.69), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(148, 1.535, 5.629), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(146, 6.231, 195.14), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(140, 4.295, 21.341), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(131, 4.068, 10.295), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(125, 6.277, 1898.351), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(122, 1.976, 4.666), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(118, 5.341, 554.07), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(117, 2.679, 1155.361), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(114, 5.594, 1059.382), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(112, 1.105, 191.208), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(110, 0.166, 1.484), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(109, 3.438, 536.805), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(107, 4.012, 956.289), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(104, 2.192, 88.866), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(103, 1.197, 1685.052), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(101, 4.965, 269.921)];
const g_L1SaturnCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(21354295596, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1296855, 1.8282054, 213.2990954), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(564348, 2.885001, 7.113547), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(107679, 2.277699, 206.185548), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(98323, 1.0807, 426.59819), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(40255, 2.04128, 220.41264), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(19942, 1.27955, 103.09277), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10512, 2.7488, 14.22709), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6939, 0.4049, 639.8973), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4803, 2.4419, 419.4846), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4056, 2.9217, 110.2063), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3769, 3.6497, 3.9322), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3385, 2.4169, 3.1814), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3302, 1.2626, 433.7117), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3071, 2.3274, 199.072), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1953, 3.5639, 11.0457), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1249, 2.628, 95.9792), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(922, 1.961, 227.526), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(706, 4.417, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(650, 6.174, 202.253), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(628, 6.111, 309.278), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(487, 6.04, 853.196), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(479, 4.988, 522.577), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(468, 4.617, 63.736), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(417, 2.117, 323.505), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(408, 1.299, 209.367), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(352, 2.317, 632.784), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(344, 3.959, 412.371), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(340, 3.634, 316.392), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(336, 3.772, 735.877), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(332, 2.861, 210.118), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(289, 2.733, 117.32), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(281, 5.744, 2.448), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(266, 0.543, 647.011), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(230, 1.644, 216.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(192, 2.965, 224.345), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(173, 4.077, 846.083), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(167, 2.597, 21.341), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(136, 2.286, 10.295), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(131, 3.441, 742.99), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(128, 4.095, 217.231), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(109, 6.161, 415.552), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(98, 4.73, 838.97), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(94, 3.48, 1052.27), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(92, 3.95, 88.87), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(87, 1.22, 440.83), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(83, 3.11, 625.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(78, 6.24, 302.16), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(67, 0.29, 4.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(66, 5.65, 9.56), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(62, 4.29, 127.47), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(62, 1.83, 195.14), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(58, 2.48, 191.96), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(57, 5.02, 137.03), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(55, 0.28, 74.78), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(54, 5.13, 490.33), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(51, 1.46, 536.8), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(47, 1.18, 149.56), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(47, 5.15, 515.46), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(46, 2.23, 956.29), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(44, 2.71, 5.42), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(40, 0.41, 269.92), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(40, 3.89, 728.76), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(38, 0.65, 422.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(38, 2.53, 12.53), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(37, 3.78, 2.92), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(35, 6.08, 5.63), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(34, 3.21, 1368.66), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(33, 4.64, 277.03), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(33, 5.43, 1066.5), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(33, 0.3, 351.82), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(32, 4.39, 1155.36), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(31, 2.43, 52.69), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(30, 2.84, 203), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(30, 6.19, 284.15), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(30, 3.39, 1059.38), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(29, 2.03, 330.62), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(28, 2.74, 265.99), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(26, 4.51, 340.77)];
const g_L2SaturnCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(116441, 1.179879, 7.113547), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(91921, 0.07425, 213.2991), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(90592, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15277, 4.06492, 206.18555), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10631, 0.25778, 220.41264), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10605, 5.40964, 426.59819), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4265, 1.046, 14.2271), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1216, 2.9186, 103.0928), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1165, 4.6094, 639.8973), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1082, 5.6913, 433.7117), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1045, 4.0421, 199.072), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1020, 0.6337, 3.1814), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(634, 4.388, 419.485), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(549, 5.573, 3.932), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(457, 1.268, 110.206), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(425, 0.209, 227.526), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(274, 4.288, 95.979), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(162, 1.381, 11.046), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(129, 1.566, 309.278), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(117, 3.881, 853.196), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(105, 4.9, 647.011), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(101, 0.893, 21.341), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(96, 2.91, 316.39), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(95, 5.63, 412.37), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(85, 5.73, 209.37), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(83, 6.05, 216.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(82, 1.02, 117.32), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(75, 4.76, 210.12), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(67, 0.46, 522.58), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(66, 0.48, 10.29), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(64, 0.35, 323.51), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(61, 4.88, 632.78), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(53, 2.75, 529.69), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(46, 5.69, 440.83), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(45, 1.67, 202.25), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(42, 5.71, 88.87), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(32, 0.07, 63.74), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(32, 1.67, 302.16), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(31, 4.16, 191.96), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27, 0.83, 224.34), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(25, 5.66, 735.88), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20, 5.94, 217.23), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(18, 4.9, 625.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(17, 1.63, 742.99), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16, 0.58, 515.46), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14, 0.21, 838.97), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14, 3.76, 195.14), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12, 4.72, 203), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12, 0.13, 234.64), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12, 3.12, 846.08), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 5.92, 536.8), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 5.6, 728.76), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 3.2, 1066.5), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10, 4.99, 422.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10, 0.26, 330.62), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10, 4.15, 860.31), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 0.46, 956.29), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8, 2.14, 269.92), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8, 5.25, 429.78), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8, 4.03, 9.56), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7, 5.4, 1052.27), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 4.46, 284.15), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 5.93, 405.26)];
const g_L3SaturnCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16039, 5.73945, 7.11355), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4250, 4.5854, 213.2991), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1907, 4.7608, 220.4126), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1466, 5.9133, 206.1855), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1162, 5.6197, 14.2271), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1067, 3.6082, 426.5982), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(239, 3.861, 433.712), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(237, 5.768, 199.072), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(166, 5.116, 3.181), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(151, 2.736, 639.897), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(131, 4.743, 227.526), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(63, 0.23, 419.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(62, 4.74, 103.09), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(40, 5.47, 21.34), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(40, 5.96, 95.98), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(39, 5.83, 110.21), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(28, 3.01, 647.01), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(25, 0.99, 3.93), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(19, 1.92, 853.2), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(18, 4.97, 10.29), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(18, 1.03, 412.37), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(18, 4.2, 216.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(18, 3.32, 309.28), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16, 3.9, 440.83), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16, 5.62, 117.32), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13, 1.18, 88.87), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 5.58, 11.05), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 5.93, 191.96), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10, 3.95, 209.37), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 3.39, 302.16), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8, 4.88, 323.51), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7, 0.38, 632.78), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 2.25, 522.58), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 1.06, 210.12), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5, 4.64, 234.64), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 3.14, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 2.31, 515.46), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 2.2, 860.31), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 0.59, 529.69), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 4.93, 224.34), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 0.42, 625.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 4.77, 330.62), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 3.35, 429.78), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 3.2, 202.25), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 1.19, 1066.5), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 1.35, 405.26), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 4.16, 223.59), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 3.07, 654.12)];
const g_L4SaturnCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1662, 3.9983, 7.1135), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(257, 2.984, 220.413), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(236, 3.902, 14.227), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(149, 2.741, 213.299), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(114, 3.142, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(110, 1.515, 206.186), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(68, 1.72, 426.6), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(40, 2.05, 433.71), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(38, 1.24, 199.07), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(31, 3.01, 227.53), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15, 0.83, 639.9), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 3.71, 21.34), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 2.42, 419.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 1.16, 647.01), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 1.45, 95.98), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 2.12, 440.83), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 4.09, 110.21), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 2.77, 412.37), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 3.01, 88.87), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 0, 853.2), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 0.39, 103.09), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 3.78, 117.32), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 2.83, 234.64), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 5.08, 309.28), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 2.24, 216.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 5.19, 302.16), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 1.55, 191.96)];
const g_L5SaturnCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(124, 2.259, 7.114), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(34, 2.16, 14.23), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(28, 1.2, 220.41), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 1.22, 227.53), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5, 0.24, 433.71), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 6.23, 426.6), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 2.97, 199.07), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 4.29, 206.19), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 6.25, 213.3), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 5.28, 639.9), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 0.24, 440.83), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 3.14, 0)];
const g_B0SaturnCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4330678, 3.6028443, 213.2990954), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(240348, 2.852385, 426.598191), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(84746, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(34116, 0.57297, 206.18555), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(30863, 3.48442, 220.41264), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14734, 2.11847, 639.89729), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9917, 5.79, 419.4846), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6994, 4.736, 7.1135), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4808, 5.4331, 316.3919), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4788, 4.9651, 110.2063), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3432, 2.7326, 433.7117), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1506, 6.013, 103.0928), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1060, 5.631, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(969, 5.204, 632.784), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(942, 1.396, 853.196), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(708, 3.803, 323.505), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(552, 5.131, 202.253), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(400, 3.359, 227.526), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(319, 3.626, 209.367), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(316, 1.997, 647.011), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(314, 0.465, 217.231), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(284, 4.886, 224.345), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(236, 2.139, 11.046), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(215, 5.95, 846.083), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(209, 2.12, 415.552), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(207, 0.73, 199.072), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(179, 2.954, 63.736), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(141, 0.644, 490.334), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(139, 4.595, 14.227), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(139, 1.998, 735.877), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(135, 5.245, 742.99), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(122, 3.115, 522.577), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(116, 3.109, 216.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(114, 0.963, 210.118)];
const g_B1SaturnCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(397555, 5.3329, 213.299095), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(49479, 3.14159, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(18572, 6.09919, 426.59819), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14801, 2.30586, 206.18555), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9644, 1.6967, 220.4126), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3757, 1.2543, 419.4846), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2717, 5.9117, 639.8973), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1455, 0.8516, 433.7117), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1291, 2.9177, 7.1135), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(853, 0.436, 316.392), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(298, 0.919, 632.784), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(292, 5.316, 853.196), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(284, 1.619, 227.526), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(275, 3.889, 103.093), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(172, 0.052, 647.011), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(166, 2.444, 199.072), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(158, 5.209, 110.206), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(128, 1.207, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(110, 2.457, 217.231), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(82, 2.76, 210.12), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(81, 2.86, 14.23), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(69, 1.66, 202.25), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(65, 1.26, 216.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(61, 1.25, 209.37), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(59, 1.82, 323.51), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(46, 0.82, 440.83), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(36, 1.82, 224.34), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(34, 2.84, 117.32), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(33, 1.31, 412.37), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(32, 1.19, 846.08), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27, 4.65, 1066.5), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27, 4.44, 11.05)];
const g_B2SaturnCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20630, 0.50482, 213.2991), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3720, 3.9983, 206.1855), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1627, 6.1819, 220.4126), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1346, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(706, 3.039, 419.485), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(365, 5.099, 426.598), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(330, 5.279, 433.712), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(219, 3.828, 639.897), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(139, 1.043, 7.114), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(104, 6.157, 227.526), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(93, 1.98, 316.39), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(71, 4.15, 199.07), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(52, 2.88, 632.78), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(49, 4.43, 647.01), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(41, 3.16, 853.2), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(29, 4.53, 210.12), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(24, 1.12, 14.23), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(21, 4.35, 217.23), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20, 5.31, 440.83), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(18, 0.85, 110.21), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(17, 5.68, 216.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16, 4.26, 103.09), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14, 3, 412.37), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12, 2.53, 529.69), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8, 3.32, 202.25), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7, 5.56, 209.37), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7, 0.29, 323.51), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 1.16, 117.32), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 3.61, 869.31)];
const g_B3SaturnCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(666, 1.99, 213.299), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(632, 5.698, 206.186), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(398, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(188, 4.338, 220.413), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(92, 4.84, 419.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(52, 3.42, 433.71), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(42, 2.38, 426.6), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(26, 4.4, 227.53), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(21, 5.85, 199.07), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(18, 1.99, 639.9), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 5.37, 7.11), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10, 2.55, 647.01), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7, 3.46, 316.39), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 4.8, 632.78), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 0.02, 210.12), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 3.52, 440.83), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5, 5.64, 14.23), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5, 1.22, 853.2), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 4.71, 412.37), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 0.63, 103.09), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 3.72, 216.48)];
const g_B4SaturnCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(80, 1.12, 206.19), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(32, 3.12, 213.3), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(17, 2.48, 220.41), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12, 3.14, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 0.38, 419.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 1.56, 433.71), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5, 2.63, 227.53), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5, 1.28, 199.07), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 1.43, 426.6), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 0.67, 647.01), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 1.72, 440.83), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 6.18, 639.9)];
const g_B5SaturnCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8, 2.82, 206.19), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 0.51, 220.41)];
const g_R0SaturnCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(955758136, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(52921382, 2.3922622, 213.29909544), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1873680, 5.2354961, 206.1855484), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1464664, 1.6476305, 426.5981909), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(821891, 5.9352, 316.39187), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(547507, 5.015326, 103.092774), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(371684, 2.271148, 220.412642), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(361778, 3.139043, 7.113547), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(140618, 5.704067, 632.783739), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(108975, 3.293136, 110.206321), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(69007, 5.941, 419.48464), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(61053, 0.94038, 639.89729), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(48913, 1.55733, 202.2534), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(34144, 0.19519, 277.03499), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(32402, 5.47085, 949.17561), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20937, 0.46349, 735.87651), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20839, 1.52103, 433.71174), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20747, 5.33256, 199.072), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15298, 3.05944, 529.69097), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14296, 2.60434, 323.50542), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12884, 1.64892, 138.5175), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11993, 5.98051, 846.08283), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11380, 1.73106, 522.57742), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9796, 5.2048, 1265.5675), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7753, 5.8519, 95.9792), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6771, 3.0043, 14.2271), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6466, 0.1773, 1052.2684), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5850, 1.4552, 415.5525), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5307, 0.5974, 63.7359), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4696, 2.1492, 227.5262), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4044, 1.6401, 209.3669), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3688, 0.7802, 412.3711), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3461, 1.8509, 175.1661), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3420, 4.9455, 1581.9593), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3401, 0.5539, 350.3321), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3376, 3.6953, 224.3448), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2976, 5.6847, 210.1177), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2885, 1.3876, 838.9693), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2881, 0.1796, 853.1964), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2508, 3.5385, 742.9901), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2448, 6.1841, 1368.6603), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2406, 2.9656, 117.3199), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2174, 0.0151, 340.7709), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2024, 5.0541, 11.0457)];
const g_R1SaturnCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6182981, 0.2584352, 213.2990954), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(506578, 0.711147, 206.185548), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(341394, 5.796358, 426.598191), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(188491, 0.472157, 220.412642), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(186262, 3.141593, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(143891, 1.407449, 7.113547), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(49621, 6.01744, 103.09277), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20928, 5.09246, 639.89729), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(19953, 1.1756, 419.48464), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(18840, 1.6082, 110.20632), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13877, 0.75886, 199.072), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12893, 5.9433, 433.71174), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5397, 1.2885, 14.2271), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4869, 0.8679, 323.5054), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4247, 0.393, 227.5262), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3252, 1.2585, 95.9792), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3081, 3.4366, 522.5774), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2909, 4.6068, 202.2534), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2856, 2.1673, 735.8765), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1988, 2.4505, 412.3711), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1941, 6.0239, 209.3669), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1581, 1.2919, 210.1177), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1340, 4.308, 853.1964), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1316, 1.253, 117.3199), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1203, 1.8665, 316.3919), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1091, 0.0753, 216.4805), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(966, 0.48, 632.784), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(954, 5.152, 647.011), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(898, 0.983, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(882, 1.885, 1052.268), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(874, 1.402, 224.345), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(785, 3.064, 838.969), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(740, 1.382, 625.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(658, 4.144, 309.278), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(650, 1.725, 742.99), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(613, 3.033, 63.736), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(599, 2.549, 217.231), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(503, 2.13, 3.932)];
const g_R2SaturnCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(436902, 4.786717, 213.299095), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(71923, 2.5007, 206.18555), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(49767, 4.97168, 220.41264), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(43221, 3.8694, 426.59819), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(29646, 5.9631, 7.11355), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4721, 2.4753, 199.072), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4142, 4.1067, 433.7117), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3789, 3.0977, 639.8973), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2964, 1.3721, 103.0928), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2556, 2.8507, 419.4846), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2327, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2208, 6.2759, 110.2063), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2188, 5.8555, 14.2271), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1957, 4.9245, 227.5262), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(924, 5.464, 323.505), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(706, 2.971, 95.979), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(546, 4.129, 412.371), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(431, 5.178, 522.577), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(405, 4.173, 209.367), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(391, 4.481, 216.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(374, 5.834, 117.32), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(361, 3.277, 647.011), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(356, 3.192, 210.118), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(326, 2.269, 853.196), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(207, 4.022, 735.877), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(204, 0.088, 202.253), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(180, 3.597, 632.784), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(178, 4.097, 440.825), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(154, 3.135, 625.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(148, 0.136, 302.165), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(133, 2.594, 191.958), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(132, 5.933, 309.278)];
const g_R3SaturnCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20315, 3.02187, 213.2991), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8924, 3.1914, 220.4126), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6909, 4.3517, 206.1855), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4087, 4.2241, 7.1135), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3879, 2.0106, 426.5982), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1071, 4.2036, 199.072), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(907, 2.283, 433.712), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(606, 3.175, 227.526), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(597, 4.135, 14.227), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(483, 1.173, 639.897), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(393, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(229, 4.698, 419.485), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(188, 4.59, 110.206), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(150, 3.202, 103.093), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(121, 3.768, 323.505), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(102, 4.71, 95.979), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(101, 5.819, 412.371), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(93, 1.44, 647.01), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(84, 2.63, 216.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(73, 4.15, 117.32), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(62, 2.31, 440.83), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(55, 0.31, 853.2), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(50, 2.39, 209.37), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(45, 4.37, 191.96), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(41, 0.69, 522.58), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(40, 1.84, 302.16), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(38, 5.94, 88.87), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(32, 4.01, 21.34)];
const g_R4SaturnCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1202, 1.415, 220.4126), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(708, 1.162, 213.299), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(516, 6.24, 206.186), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(427, 2.469, 7.114), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(268, 0.187, 426.598), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(170, 5.959, 199.072), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(150, 0.48, 433.712), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(145, 1.442, 227.526), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(121, 2.405, 14.227), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(47, 5.57, 639.9), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(19, 5.86, 647.01), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(17, 0.53, 440.83), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16, 2.9, 110.21), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15, 0.3, 419.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14, 1.3, 412.37), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13, 2.09, 323.51), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 0.22, 95.98), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 2.46, 117.32), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10, 3.14, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 1.56, 88.87), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 2.28, 21.34), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 0.68, 216.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8, 1.27, 234.64)];
const g_R5SaturnCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(129, 5.913, 220.413), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(32, 0.69, 7.11), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27, 5.91, 227.53), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20, 4.95, 433.71), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20, 0.67, 14.23), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14, 2.67, 206.19), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14, 1.46, 199.07), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13, 4.59, 426.6), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7, 4.63, 213.3), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5, 3.61, 639.9), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 4.9, 440.83), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 4.07, 647.01), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 4.66, 191.96), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 0.49, 323.51), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 3.18, 419.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 3.7, 88.87), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 3.32, 95.98), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 0.56, 117.32)];


// CAASaturn

function CAASaturn() { }

CAASaturn.eclipticLongitude = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var rho5 = rho4 * rho;
    var nL0Coefficients = g_L0SaturnCoefficients.length;
    var L0 = 0;
    var i;
    for (i = 0; i < nL0Coefficients; i++) {
        L0 += g_L0SaturnCoefficients[i].a * Math.cos(g_L0SaturnCoefficients[i].b + g_L0SaturnCoefficients[i].c * rho);
    }
    var nL1Coefficients = g_L1SaturnCoefficients.length;
    var L1 = 0;
    for (i = 0; i < nL1Coefficients; i++) {
        L1 += g_L1SaturnCoefficients[i].a * Math.cos(g_L1SaturnCoefficients[i].b + g_L1SaturnCoefficients[i].c * rho);
    }
    var nL2Coefficients = g_L2SaturnCoefficients.length;
    var L2 = 0;
    for (i = 0; i < nL2Coefficients; i++) {
        L2 += g_L2SaturnCoefficients[i].a * Math.cos(g_L2SaturnCoefficients[i].b + g_L2SaturnCoefficients[i].c * rho);
    }
    var nL3Coefficients = g_L3SaturnCoefficients.length;
    var L3 = 0;
    for (i = 0; i < nL3Coefficients; i++) {
        L3 += g_L3SaturnCoefficients[i].a * Math.cos(g_L3SaturnCoefficients[i].b + g_L3SaturnCoefficients[i].c * rho);
    }
    var nL4Coefficients = g_L4SaturnCoefficients.length;
    var L4 = 0;
    for (i = 0; i < nL4Coefficients; i++) {
        L4 += g_L4SaturnCoefficients[i].a * Math.cos(g_L4SaturnCoefficients[i].b + g_L4SaturnCoefficients[i].c * rho);
    }
    var nL5Coefficients = g_L5SaturnCoefficients.length;
    var L5 = 0;
    for (i = 0; i < nL5Coefficients; i++) {
        L5 += g_L5SaturnCoefficients[i].a * Math.cos(g_L5SaturnCoefficients[i].b + g_L5SaturnCoefficients[i].c * rho);
    }
    var vvalue = (L0 + L1 * rho + L2 * rhosquared + L3 * rhocubed + L4 * rho4 + L5 * rho5) / 100000000;
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue));
    return vvalue;
};

CAASaturn.eclipticLatitude = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var rho5 = rho4 * rho;
    var nB0Coefficients = g_B0SaturnCoefficients.length;
    var B0 = 0;
    var i;
    for (i = 0; i < nB0Coefficients; i++) {
        B0 += g_B0SaturnCoefficients[i].a * Math.cos(g_B0SaturnCoefficients[i].b + g_B0SaturnCoefficients[i].c * rho);
    }
    var nB1Coefficients = g_B1SaturnCoefficients.length;
    var B1 = 0;
    for (i = 0; i < nB1Coefficients; i++) {
        B1 += g_B1SaturnCoefficients[i].a * Math.cos(g_B1SaturnCoefficients[i].b + g_B1SaturnCoefficients[i].c * rho);
    }
    var nB2Coefficients = g_B2SaturnCoefficients.length;
    var B2 = 0;
    for (i = 0; i < nB2Coefficients; i++) {
        B2 += g_B2SaturnCoefficients[i].a * Math.cos(g_B2SaturnCoefficients[i].b + g_B2SaturnCoefficients[i].c * rho);
    }
    var nB3Coefficients = g_B3SaturnCoefficients.length;
    var B3 = 0;
    for (i = 0; i < nB3Coefficients; i++) {
        B3 += g_B3SaturnCoefficients[i].a * Math.cos(g_B3SaturnCoefficients[i].b + g_B3SaturnCoefficients[i].c * rho);
    }
    var nB4Coefficients = g_B4SaturnCoefficients.length;
    var B4 = 0;
    for (i = 0; i < nB4Coefficients; i++) {
        B4 += g_B4SaturnCoefficients[i].a * Math.cos(g_B4SaturnCoefficients[i].b + g_B4SaturnCoefficients[i].c * rho);
    }
    var nB5Coefficients = g_B5SaturnCoefficients.length;
    var B5 = 0;
    for (i = 0; i < nB5Coefficients; i++) {
        B5 += g_B5SaturnCoefficients[i].a * Math.cos(g_B5SaturnCoefficients[i].b + g_B5SaturnCoefficients[i].c * rho);
    }
    var vvalue = (B0 + B1 * rho + B2 * rhosquared + B3 * rhocubed + B4 * rho4 + B5 * rho5) / 100000000;
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue);
    return vvalue;
};

CAASaturn.radiusVector = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var rho5 = rho4 * rho;
    var nR0Coefficients = g_R0SaturnCoefficients.length;
    var R0 = 0;
    var i;
    for (i = 0; i < nR0Coefficients; i++) {
        R0 += g_R0SaturnCoefficients[i].a * Math.cos(g_R0SaturnCoefficients[i].b + g_R0SaturnCoefficients[i].c * rho);
    }
    var nR1Coefficients = g_R1SaturnCoefficients.length;
    var R1 = 0;
    for (i = 0; i < nR1Coefficients; i++) {
        R1 += g_R1SaturnCoefficients[i].a * Math.cos(g_R1SaturnCoefficients[i].b + g_R1SaturnCoefficients[i].c * rho);
    }
    var nR2Coefficients = g_R2SaturnCoefficients.length;
    var R2 = 0;
    for (i = 0; i < nR2Coefficients; i++) {
        R2 += g_R2SaturnCoefficients[i].a * Math.cos(g_R2SaturnCoefficients[i].b + g_R2SaturnCoefficients[i].c * rho);
    }
    var nR3Coefficients = g_R3SaturnCoefficients.length;
    var R3 = 0;
    for (i = 0; i < nR3Coefficients; i++) {
        R3 += g_R3SaturnCoefficients[i].a * Math.cos(g_R3SaturnCoefficients[i].b + g_R3SaturnCoefficients[i].c * rho);
    }
    var nR4Coefficients = g_R4SaturnCoefficients.length;
    var R4 = 0;
    for (i = 0; i < nR4Coefficients; i++) {
        R4 += g_R4SaturnCoefficients[i].a * Math.cos(g_R4SaturnCoefficients[i].b + g_R4SaturnCoefficients[i].c * rho);
    }
    var nR5Coefficients = g_R5SaturnCoefficients.length;
    var R5 = 0;
    for (i = 0; i < nR5Coefficients; i++) {
        R5 += g_R5SaturnCoefficients[i].a * Math.cos(g_R5SaturnCoefficients[i].b + g_R5SaturnCoefficients[i].c * rho);
    }
    return (R0 + R1 * rho + R2 * rhosquared + R3 * rhocubed + R4 * rho4 + R5 * rho5) / 100000000;
};

var CAASaturn$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAASaturn", [CAASaturn, CAASaturn$, null]);


/***/ }),

/***/ "./esm/astrocalc/saturn_rings.js":
/*!***************************************!*\
  !*** ./esm/astrocalc/saturn_rings.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAASaturnRingDetails: () => (/* binding */ CAASaturnRingDetails),
/* harmony export */   CAASaturnRings: () => (/* binding */ CAASaturnRings)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _fk5_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fk5.js */ "./esm/astrocalc/fk5.js");
/* harmony import */ var _elliptical_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./elliptical.js */ "./esm/astrocalc/elliptical.js");
/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nutation.js */ "./esm/astrocalc/nutation.js");
/* harmony import */ var _earth_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./earth.js */ "./esm/astrocalc/earth.js");
/* harmony import */ var _saturn_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./saturn.js */ "./esm/astrocalc/saturn.js");
// Originally `AASATURNRINGS.CPP`
// "Purpose: Implementation for the algorithms which calculate various parameters related to the Rings of Saturn"
// Last update of original: PJN / 08-01-2004
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.









// CAASaturnRingDetails

function CAASaturnRingDetails() {
    this.b = 0;
    this.bdash = 0;
    this.p = 0;
    this.a = 0;
    this.b = 0;
    this.deltaU = 0;
    this.b = 0;
    this.bdash = 0;
    this.p = 0;
    this.a = 0;
    this.b = 0;
    this.deltaU = 0;
}

var CAASaturnRingDetails$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAASaturnRingDetails", [CAASaturnRingDetails, CAASaturnRingDetails$, null]);


// CAASaturnRings

function CAASaturnRings() { }

CAASaturnRings.calculate = function (JD) {
    var details = new CAASaturnRingDetails();
    var T = (JD - 2451545) / 36525;
    var T2 = T * T;
    var i = 28.075216 - 0.012998 * T + 4E-06 * T2;
    var irad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(i);
    var omega = 169.50847 + 1.394681 * T + 0.000412 * T2;
    var omegarad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(omega);
    var l0 = _earth_js__WEBPACK_IMPORTED_MODULE_5__.CAAEarth.eclipticLongitude(JD);
    var b0 = _earth_js__WEBPACK_IMPORTED_MODULE_5__.CAAEarth.eclipticLatitude(JD);
    l0 += _fk5_js__WEBPACK_IMPORTED_MODULE_2__.CAAFK5.correctionInLongitude(l0, b0, JD);
    var l0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(l0);
    b0 += _fk5_js__WEBPACK_IMPORTED_MODULE_2__.CAAFK5.correctionInLatitude(l0, JD);
    var b0rad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(b0);
    var R = _earth_js__WEBPACK_IMPORTED_MODULE_5__.CAAEarth.radiusVector(JD);
    var DELTA = 9;
    var PreviousEarthLightTravelTime = 0;
    var EarthLightTravelTime = _elliptical_js__WEBPACK_IMPORTED_MODULE_3__.ELL.distanceToLightTime(DELTA);
    var JD1 = JD - EarthLightTravelTime;
    var bIterate = true;
    var x = 0;
    var y = 0;
    var z = 0;
    var l = 0;
    var b = 0;
    var r = 0;
    while (bIterate) {
        l = _saturn_js__WEBPACK_IMPORTED_MODULE_6__.CAASaturn.eclipticLongitude(JD1);
        b = _saturn_js__WEBPACK_IMPORTED_MODULE_6__.CAASaturn.eclipticLatitude(JD1);
        l += _fk5_js__WEBPACK_IMPORTED_MODULE_2__.CAAFK5.correctionInLongitude(l, b, JD1);
        b += _fk5_js__WEBPACK_IMPORTED_MODULE_2__.CAAFK5.correctionInLatitude(l, JD1);
        var lrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(l);
        var brad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(b);
        r = _saturn_js__WEBPACK_IMPORTED_MODULE_6__.CAASaturn.radiusVector(JD1);
        x = r * Math.cos(brad) * Math.cos(lrad) - R * Math.cos(l0rad);
        y = r * Math.cos(brad) * Math.sin(lrad) - R * Math.sin(l0rad);
        z = r * Math.sin(brad) - R * Math.sin(b0rad);
        DELTA = Math.sqrt(x * x + y * y + z * z);
        EarthLightTravelTime = _elliptical_js__WEBPACK_IMPORTED_MODULE_3__.ELL.distanceToLightTime(DELTA);
        bIterate = (Math.abs(EarthLightTravelTime - PreviousEarthLightTravelTime) > 2E-06);
        if (bIterate) {
            JD1 = JD - EarthLightTravelTime;
            PreviousEarthLightTravelTime = EarthLightTravelTime;
        }
    }
    var lambda = Math.atan2(y, x);
    var beta = Math.atan2(z, Math.sqrt(x * x + y * y));
    details.b = Math.asin(Math.sin(irad) * Math.cos(beta) * Math.sin(lambda - omegarad) - Math.cos(irad) * Math.sin(beta));
    details.a = 375.35 / DELTA;
    details.b = details.a * Math.sin(Math.abs(details.b));
    details.b = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(details.b);
    var N = 113.6655 + 0.8771 * T;
    var Nrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(N);
    var ldash = l - 0.01759 / r;
    var ldashrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(ldash);
    var bdash = b - 0.000764 * Math.cos(ldashrad - Nrad) / r;
    var bdashrad = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(bdash);
    details.bdash = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.asin(Math.sin(irad) * Math.cos(bdashrad) * Math.sin(ldashrad - omegarad) - Math.cos(irad) * Math.sin(bdashrad)));
    var U1 = Math.atan2(Math.sin(irad) * Math.sin(bdashrad) + Math.cos(irad) * Math.cos(bdashrad) * Math.sin(ldashrad - omegarad), Math.cos(bdashrad) * Math.cos(ldashrad - omegarad));
    var U2 = Math.atan2(Math.sin(irad) * Math.sin(beta) + Math.cos(irad) * Math.cos(beta) * Math.sin(lambda - omegarad), Math.cos(beta) * Math.cos(lambda - omegarad));
    details.deltaU = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.abs(U1 - U2));
    var Obliquity = _nutation_js__WEBPACK_IMPORTED_MODULE_4__.CAANutation.trueObliquityOfEcliptic(JD);
    var NutationInLongitude = _nutation_js__WEBPACK_IMPORTED_MODULE_4__.CAANutation.nutationInLongitude(JD);
    var lambda0 = omega - 90;
    var beta0 = 90 - i;
    lambda += _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(0.005693 * Math.cos(l0rad - lambda) / Math.cos(beta));
    beta += _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(0.005693 * Math.sin(l0rad - lambda) * Math.sin(beta));
    lambda = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(lambda);
    lambda += NutationInLongitude / 3600;
    lambda = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(lambda);
    lambda0 += NutationInLongitude / 3600;
    lambda0 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(lambda0);
    beta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(beta);
    var GeocentricEclipticSaturn = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.ec2Eq(lambda, beta, Obliquity);
    var alpha = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(GeocentricEclipticSaturn.x);
    var delta = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(GeocentricEclipticSaturn.y);
    var GeocentricEclipticNorthPole = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.ec2Eq(lambda0, beta0, Obliquity);
    var alpha0 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.h2R(GeocentricEclipticNorthPole.x);
    var delta0 = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(GeocentricEclipticNorthPole.y);
    details.p = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(Math.atan2(Math.cos(delta0) * Math.sin(alpha0 - alpha), Math.sin(delta0) * Math.cos(delta) - Math.cos(delta0) * Math.sin(delta) * Math.cos(alpha0 - alpha)));
    return details;
};

var CAASaturnRings$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAASaturnRings", [CAASaturnRings, CAASaturnRings$, null]);


/***/ }),

/***/ "./esm/astrocalc/sidereal.js":
/*!***********************************!*\
  !*** ./esm/astrocalc/sidereal.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAASidereal: () => (/* binding */ CAASidereal)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./date.js */ "./esm/astrocalc/date.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nutation.js */ "./esm/astrocalc/nutation.js");
// Originally `AASIDEREAL.CPP`
// "Purpose: Implementation for the algorithms which obtain sidereal time"
// Last update of original: PJN / 28-01-2007
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.








// CAASidereal

function CAASidereal() { }

CAASidereal.meanGreenwichSiderealTime = function (JD) {
    var date = new _date_js__WEBPACK_IMPORTED_MODULE_2__.DT();
    date.setJD(JD, _date_js__WEBPACK_IMPORTED_MODULE_2__.DT.afterPapalReformJD(JD));
    var D = date.get();
    var Year = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(D[0]);
    var Month = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(D[1]);
    var Day = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(D[2]);
    var Hour = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(D[3]);
    var Minute = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(D[4]);
    var Second = D[5];
    date.set(Year, Month, Day, 0, 0, 0, date.inGregorianCalendar());
    var JDMidnight = date.julian();
    var T = (JDMidnight - 2451545) / 36525;
    var TSquared = T * T;
    var TCubed = TSquared * T;
    var Value = 100.46061837 + (36000.770053608 * T) + (0.000387933 * TSquared) - (TCubed / 38710000);
    Value += (((Hour * 15) + (Minute * 0.25) + (Second * 0.00416666666666667)) * 1.00273790935);
    Value = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_3__.CT.d2H(Value);
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_3__.CT.m24(Value);
};

CAASidereal.apparentGreenwichSiderealTime = function (JD) {
    var MeanObliquity = _nutation_js__WEBPACK_IMPORTED_MODULE_4__.CAANutation.meanObliquityOfEcliptic(JD);
    var TrueObliquity = MeanObliquity + _nutation_js__WEBPACK_IMPORTED_MODULE_4__.CAANutation.nutationInObliquity(JD) / 3600;
    var NutationInLongitude = _nutation_js__WEBPACK_IMPORTED_MODULE_4__.CAANutation.nutationInLongitude(JD);
    var Value = CAASidereal.meanGreenwichSiderealTime(JD) + (NutationInLongitude * Math.cos(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_3__.CT.d2R(TrueObliquity)) / 54000);
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_3__.CT.m24(Value);
};

var CAASidereal$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAASidereal", [CAASidereal, CAASidereal$, null]);


/***/ }),

/***/ "./esm/astrocalc/stellar_magnitudes.js":
/*!*********************************************!*\
  !*** ./esm/astrocalc/stellar_magnitudes.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAStellarMagnitudes: () => (/* binding */ CAAStellarMagnitudes)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../baseutil.js */ "./esm/baseutil.js");
// Originally `AASTELLARMAGNITUDES.CPP`
// "Purpose: Implementation for the algorithms which operate on the stellar magntidue system"
// Last update of original: PJN / 12-02-2004
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.





// CAAStellarMagnitudes

function CAAStellarMagnitudes() { }

CAAStellarMagnitudes.combinedMagnitude = function (m1, m2) {
    var x = 0.4 * (m2 - m1);
    return m2 - 2.5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(Math.pow(10, x) + 1);
};

CAAStellarMagnitudes.combinedMagnitude2 = function (Magnitudes, pMagnitudes) {
    var vvalue = 0;
    for (var i = 0; i < Magnitudes; i++) {
        vvalue += Math.pow(10, -0.4 * pMagnitudes[i]);
    }
    return -2.5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(vvalue);
};

CAAStellarMagnitudes.brightnessRatio = function (m1, m2) {
    var x = 0.4 * (m2 - m1);
    return Math.pow(10, x);
};

CAAStellarMagnitudes.magnitudeDifference = function (brightnessRatio) {
    return 2.5 * _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util.log10(brightnessRatio);
};

var CAAStellarMagnitudes$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAStellarMagnitudes", [CAAStellarMagnitudes, CAAStellarMagnitudes$, null]);


/***/ }),

/***/ "./esm/astrocalc/sun.js":
/*!******************************!*\
  !*** ./esm/astrocalc/sun.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAASun: () => (/* binding */ CAASun)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _earth_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./earth.js */ "./esm/astrocalc/earth.js");
/* harmony import */ var _fk5_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fk5.js */ "./esm/astrocalc/fk5.js");
/* harmony import */ var _nutation_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nutation.js */ "./esm/astrocalc/nutation.js");
// Originally `AASUN.CPP`
// "Purpose: Implementation for the algorithms which calculate the position of Earth"
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.







// CAASun

function CAASun() { }

CAASun.geometricEclipticLongitude = function (JD) {
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_earth_js__WEBPACK_IMPORTED_MODULE_2__.CAAEarth.eclipticLongitude(JD) + 180);
};

CAASun.geometricEclipticLatitude = function (JD) {
    return -_earth_js__WEBPACK_IMPORTED_MODULE_2__.CAAEarth.eclipticLatitude(JD);
};

CAASun.geometricEclipticLongitudeJ2000 = function (JD) {
    return _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_earth_js__WEBPACK_IMPORTED_MODULE_2__.CAAEarth.eclipticLongitudeJ2000(JD) + 180);
};

CAASun.geometricEclipticLatitudeJ2000 = function (JD) {
    return -_earth_js__WEBPACK_IMPORTED_MODULE_2__.CAAEarth.eclipticLatitudeJ2000(JD);
};

CAASun.geometricFK5EclipticLongitude = function (JD) {
    var Longitude = CAASun.geometricEclipticLongitude(JD);
    var Latitude = CAASun.geometricEclipticLatitude(JD);
    Longitude += _fk5_js__WEBPACK_IMPORTED_MODULE_3__.CAAFK5.correctionInLongitude(Longitude, Latitude, JD);
    return Longitude;
};

CAASun.geometricFK5EclipticLatitude = function (JD) {
    var Longitude = CAASun.geometricEclipticLongitude(JD);
    var Latitude = CAASun.geometricEclipticLatitude(JD);
    var SunLatCorrection = _fk5_js__WEBPACK_IMPORTED_MODULE_3__.CAAFK5.correctionInLatitude(Longitude, JD);
    Latitude += SunLatCorrection;
    return Latitude;
};

CAASun.apparentEclipticLongitude = function (JD) {
    var Longitude = CAASun.geometricFK5EclipticLongitude(JD);
    Longitude += _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, _nutation_js__WEBPACK_IMPORTED_MODULE_4__.CAANutation.nutationInLongitude(JD));
    var R = _earth_js__WEBPACK_IMPORTED_MODULE_2__.CAAEarth.radiusVector(JD);
    Longitude -= _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.dmS2D(0, 0, 20.4898 / R);
    return Longitude;
};

CAASun.apparentEclipticLatitude = function (JD) {
    return CAASun.geometricFK5EclipticLatitude(JD);
};

CAASun.eclipticRectangularCoordinatesMeanEquinox = function (JD) {
    var Longitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(CAASun.geometricFK5EclipticLongitude(JD));
    var Latitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(CAASun.geometricFK5EclipticLatitude(JD));
    var R = _earth_js__WEBPACK_IMPORTED_MODULE_2__.CAAEarth.radiusVector(JD);
    var epsilon = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(_nutation_js__WEBPACK_IMPORTED_MODULE_4__.CAANutation.meanObliquityOfEcliptic(JD));
    var vvalue = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.C3D();
    vvalue.x = R * Math.cos(Latitude) * Math.cos(Longitude);
    vvalue.y = R * (Math.cos(Latitude) * Math.sin(Longitude) * Math.cos(epsilon) - Math.sin(Latitude) * Math.sin(epsilon));
    vvalue.z = R * (Math.cos(Latitude) * Math.sin(Longitude) * Math.sin(epsilon) + Math.sin(Latitude) * Math.cos(epsilon));
    return vvalue;
};

CAASun.eclipticRectangularCoordinatesJ2000 = function (JD) {
    var Longitude = CAASun.geometricEclipticLongitudeJ2000(JD);
    Longitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Longitude);
    var Latitude = CAASun.geometricEclipticLatitudeJ2000(JD);
    Latitude = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.d2R(Latitude);
    var R = _earth_js__WEBPACK_IMPORTED_MODULE_2__.CAAEarth.radiusVector(JD);
    var vvalue = new _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.C3D();
    var coslatitude = Math.cos(Latitude);
    vvalue.x = R * coslatitude * Math.cos(Longitude);
    vvalue.y = R * coslatitude * Math.sin(Longitude);
    vvalue.z = R * Math.sin(Latitude);
    return vvalue;
};

CAASun.equatorialRectangularCoordinatesJ2000 = function (JD) {
    var vvalue = CAASun.eclipticRectangularCoordinatesJ2000(JD);
    vvalue = _fk5_js__WEBPACK_IMPORTED_MODULE_3__.CAAFK5.convertVSOPToFK5J2000(vvalue);
    return vvalue;
};

CAASun.equatorialRectangularCoordinatesB1950 = function (JD) {
    var vvalue = CAASun.eclipticRectangularCoordinatesJ2000(JD);
    vvalue = _fk5_js__WEBPACK_IMPORTED_MODULE_3__.CAAFK5.convertVSOPToFK5B1950(vvalue);
    return vvalue;
};

CAASun.equatorialRectangularCoordinatesAnyEquinox = function (JD, JDEquinox) {
    var vvalue = CAASun.equatorialRectangularCoordinatesJ2000(JD);
    vvalue = _fk5_js__WEBPACK_IMPORTED_MODULE_3__.CAAFK5.convertVSOPToFK5AnyEquinox(vvalue, JDEquinox);
    return vvalue;
};

var CAASun$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAASun", [CAASun, CAASun$, null]);


/***/ }),

/***/ "./esm/astrocalc/uranus.js":
/*!*********************************!*\
  !*** ./esm/astrocalc/uranus.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAUranus: () => (/* binding */ CAAUranus)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _earth_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./earth.js */ "./esm/astrocalc/earth.js");
// Originally `AAURANUS.CPP`
// "Purpose: Implementation for the algorithms which obtain the heliocentric position of Uranus"
// Last update of original: PJN / 29-12-2003
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.






// Coefficients

const g_L0UranusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(548129294, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9260408, 0.8910642, 74.7815986), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1504248, 3.6271926, 1.4844727), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(365982, 1.899622, 73.297126), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(272328, 3.358237, 149.563197), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(70328, 5.39254, 63.7359), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(68893, 6.09292, 76.26607), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(61999, 2.26952, 2.96895), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(61951, 2.85099, 11.0457), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(26469, 3.14152, 71.81265), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(25711, 6.1138, 454.90937), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(21079, 4.36059, 148.07872), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(17819, 1.74437, 36.64856), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14613, 4.73732, 3.93215), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11163, 5.82682, 224.3448), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10998, 0.48865, 138.5175), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9527, 2.9552, 35.1641), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7546, 5.2363, 109.9457), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4220, 3.2333, 70.8494), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4052, 2.2775, 151.0477), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3490, 5.4831, 146.5943), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3355, 1.0655, 4.4534), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3144, 4.752, 77.7505), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2927, 4.629, 9.5612), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2922, 5.3524, 85.8273), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2273, 4.366, 70.3282), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2149, 0.6075, 38.133), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2051, 1.5177, 0.1119), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1992, 4.9244, 277.035), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1667, 3.6274, 380.1278), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1533, 2.5859, 52.6902), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1376, 2.0428, 65.2204), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1372, 4.1964, 111.4302), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1284, 3.1135, 202.2534), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1282, 0.5427, 222.8603), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1244, 0.9161, 2.4477), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1221, 0.199, 108.4612), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1151, 4.179, 33.6796), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1150, 0.9334, 3.1814), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1090, 1.775, 12.5302), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1072, 0.2356, 62.2514), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(946, 1.192, 127.472), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(708, 5.183, 213.299), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(653, 0.966, 78.714), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(628, 0.182, 984.6), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(607, 5.432, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(559, 3.358, 0.521), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(524, 2.013, 299.126), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(483, 2.106, 0.963), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(471, 1.407, 184.727), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(467, 0.415, 145.11), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(434, 5.521, 183.243), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(405, 5.987, 8.077), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(399, 0.338, 415.552), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(396, 5.87, 351.817), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(379, 2.35, 56.622), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(310, 5.833, 145.631), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(300, 5.644, 22.091), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(294, 5.839, 39.618), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(252, 1.637, 221.376), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(249, 4.746, 225.829), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(239, 2.35, 137.033), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(224, 0.516, 84.343), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(223, 2.843, 0.261), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(220, 1.922, 67.668), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(217, 6.142, 5.938), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(216, 4.778, 340.771), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(208, 5.58, 68.844), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(202, 1.297, 0.048), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(199, 0.956, 152.532), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(194, 1.888, 456.394), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(193, 0.916, 453.425), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(187, 1.319, 0.16), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(182, 3.536, 79.235), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(173, 1.539, 160.609), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(172, 5.68, 219.891), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(170, 3.677, 5.417), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(169, 5.879, 18.159), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(165, 1.424, 106.977), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(163, 3.05, 112.915), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(158, 0.738, 54.175), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(147, 1.263, 59.804), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(143, 1.3, 35.425), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(139, 5.386, 32.195), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(139, 4.26, 909.819), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(124, 1.374, 7.114), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(110, 2.027, 554.07), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(109, 5.706, 77.963), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(104, 5.028, 0.751), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(104, 1.458, 24.379), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(103, 0.681, 14.978)];
const g_L1UranusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7502543122, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(154458, 5.242017, 74.781599), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(24456, 1.71256, 1.48447), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9258, 0.4284, 11.0457), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8266, 1.5022, 63.7359), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7842, 1.3198, 149.5632), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3899, 0.4648, 3.9322), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2284, 4.1737, 76.2661), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1927, 0.5301, 2.9689), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1233, 1.5863, 70.8494), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(791, 5.436, 3.181), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(767, 1.996, 73.297), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(482, 2.984, 85.827), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(450, 4.138, 138.517), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(446, 3.723, 224.345), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(427, 4.731, 71.813), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(354, 2.583, 148.079), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(348, 2.454, 9.561), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(317, 5.579, 52.69), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(206, 2.363, 2.448), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(189, 4.202, 56.622), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(184, 0.284, 151.048), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(180, 5.684, 12.53), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(171, 3.001, 78.714), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(158, 2.909, 0.963), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(155, 5.591, 4.453), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(154, 4.652, 35.164), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(152, 2.942, 77.751), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(143, 2.59, 62.251), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(121, 4.148, 127.472), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(116, 3.732, 65.22), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(102, 4.188, 145.631), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(102, 6.034, 0.112), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(88, 3.99, 18.16), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(88, 6.16, 202.25), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(81, 2.64, 22.09), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(72, 6.05, 70.33), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(69, 4.05, 77.96), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(59, 3.7, 67.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(47, 3.54, 351.82), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(44, 5.91, 7.11), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(43, 5.72, 5.42), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(39, 4.92, 222.86), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(36, 5.9, 33.68), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(36, 3.29, 8.08), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(36, 3.33, 71.6), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(35, 5.08, 38.13), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(31, 5.62, 984.6), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(31, 5.5, 59.8), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(31, 5.46, 160.61), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(30, 1.66, 447.8), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(29, 1.15, 462.02), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(29, 4.52, 84.34), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27, 5.54, 131.4), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27, 6.15, 299.13), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(26, 4.99, 137.03), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(25, 5.74, 380.13)];
const g_L2UranusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(53033, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2358, 2.2601, 74.7816), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(769, 4.526, 11.046), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(552, 3.258, 63.736), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(542, 2.276, 3.932), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(529, 4.923, 1.484), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(258, 3.691, 3.181), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(239, 5.858, 149.563), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(182, 6.218, 70.849), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(54, 1.44, 76.27), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(49, 6.03, 56.62), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(45, 3.91, 2.45), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(45, 0.81, 85.83), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(38, 1.78, 52.69), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(37, 4.46, 2.97), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(33, 0.86, 9.56), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(29, 5.1, 73.3), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(24, 2.11, 18.16), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(22, 5.99, 138.52), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(22, 4.82, 78.71), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(21, 2.4, 77.96), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(21, 2.17, 224.34), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(17, 2.54, 145.63), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(17, 3.47, 12.53), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12, 0.02, 22.09), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 0.08, 127.47), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10, 5.16, 71.6), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10, 4.46, 62.25), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 4.26, 7.11), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8, 5.5, 67.67), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7, 1.25, 5.42), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 3.36, 447.8), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 5.45, 65.22), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 4.52, 151.05), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 5.73, 462.02)];
const g_L3UranusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(121, 0.024, 74.782), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(68, 4.12, 3.93), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(53, 2.39, 11.05), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(46, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(45, 2.04, 3.18), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(44, 2.96, 1.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(25, 4.89, 63.74), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(21, 4.55, 70.85), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20, 2.31, 149.56), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9, 1.58, 56.62), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 0.23, 18.16), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 5.39, 76.27), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4, 0.95, 77.96), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 4.98, 85.83), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 4.13, 52.69), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 0.37, 78.71), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 0.86, 145.63), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 5.66, 9.56)];
const g_L4UranusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(114, 3.142, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 4.58, 74.78), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 0.35, 11.05), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 3.42, 56.62)];
const g_B0UranusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1346278, 2.6187781, 74.7815986), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(62341, 5.08111, 149.5632), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(61601, 3.14159, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9964, 1.616, 76.2661), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9926, 0.5763, 73.2971), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3259, 1.2612, 224.3448), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2972, 2.2437, 1.4845), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2010, 6.0555, 148.0787), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1522, 0.2796, 63.7359), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(924, 4.038, 151.048), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(761, 6.14, 71.813), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(522, 3.321, 138.517), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(463, 0.743, 85.827), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(437, 3.381, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(435, 0.341, 77.751), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(431, 3.554, 213.299), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(420, 5.213, 11.046), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(245, 0.788, 2.969), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(233, 2.257, 222.86), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(216, 1.591, 38.133), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(180, 3.725, 299.126), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(175, 1.236, 146.594), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(174, 1.937, 380.128), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(160, 5.336, 111.43), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(144, 5.962, 35.164), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(116, 5.739, 70.849), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(106, 0.941, 70.328), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(102, 2.619, 78.714)];
const g_B1UranusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(206366, 4.123943, 74.781599), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8563, 0.3382, 149.5632), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1726, 2.1219, 73.2971), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1374, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1369, 3.0686, 76.2661), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(451, 3.777, 1.484), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(400, 2.848, 224.345), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(307, 1.255, 148.079), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(154, 3.786, 63.736), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(112, 5.573, 151.048), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(111, 5.329, 138.517), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(83, 3.59, 71.81), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(56, 3.4, 85.83), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(54, 1.7, 77.75), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(42, 1.21, 11.05), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(41, 4.45, 78.71), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(32, 3.77, 222.86), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(30, 2.56, 2.97), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27, 5.34, 213.3), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(26, 0.42, 380.13)];
const g_B2UranusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9212, 5.8004, 74.7816), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(557, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(286, 2.177, 149.563), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(95, 3.84, 73.3), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(45, 4.88, 76.27), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20, 5.46, 1.48), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15, 0.88, 138.52), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14, 2.85, 148.08), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14, 5.07, 63.74), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10, 5, 224.34), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8, 6.27, 78.71)];
const g_B3UranusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(268, 1.251, 74.782), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11, 3.14, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 4.01, 149.56), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 5.78, 73.3)];
const g_B4UranusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 2.85, 74.78)];
const g_R0UranusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1921264848, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(88784984, 5.60377527, 74.78159857), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3440836, 0.328361, 73.2971259), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2055653, 1.7829517, 149.5631971), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(649322, 4.522473, 76.266071), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(602248, 3.860038, 63.735898), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(496404, 1.401399, 454.909367), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(338526, 1.580027, 138.517497), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(243508, 1.570866, 71.812653), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(190522, 1.998094, 1.484473), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(161858, 2.791379, 148.078724), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(143706, 1.383686, 11.0457), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(93192, 0.17437, 36.64856), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(89806, 3.66105, 109.94569), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(71424, 4.24509, 224.3448), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(46677, 1.39977, 35.16409), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(39026, 3.36235, 277.03499), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(39010, 1.66971, 70.84945), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(36755, 3.88649, 146.59425), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(30349, 0.701, 151.04767), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(29156, 3.18056, 77.75054), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(25786, 3.78538, 85.8273), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(25620, 5.25656, 380.12777), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(22637, 0.72519, 529.69097), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20473, 2.7964, 70.32818), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20472, 1.55589, 202.2534), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(17901, 0.55455, 2.96895), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(15503, 5.35405, 38.13304), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14702, 4.90434, 108.46122), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12897, 2.62154, 111.43016), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(12328, 5.96039, 127.4718), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11959, 1.75044, 984.60033), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11853, 0.99343, 52.6902), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11696, 3.29826, 3.93215), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11495, 0.43774, 65.22037), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10793, 1.42105, 213.2991), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(9111, 4.9964, 62.2514), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8421, 5.2535, 222.8603), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(8402, 5.0388, 415.5525), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7449, 0.7949, 351.8166), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7329, 3.9728, 183.2428), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6046, 5.6796, 78.7138), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5524, 3.115, 9.5612), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5445, 5.1058, 145.1098), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5238, 2.6296, 33.6796), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4079, 3.2206, 340.7709), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3919, 4.2502, 39.6175), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3802, 6.1099, 184.7273), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3781, 3.4584, 456.3938), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3687, 2.4872, 453.4249), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3102, 4.1403, 219.8914), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2963, 0.8298, 56.6224), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2942, 0.4239, 299.1264), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2940, 2.1464, 137.033), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2938, 3.6766, 140.002), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2865, 0.31, 12.5302), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2538, 4.8546, 131.4039), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2364, 0.4425, 554.07), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2183, 2.9404, 305.3462)];
const g_R1UranusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1479896, 3.6720571, 74.7815986), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(71212, 6.22601, 63.7359), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(68627, 6.13411, 149.5632), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(24060, 3.14159, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(21468, 2.60177, 76.26607), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20857, 5.24625, 11.0457), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(11405, 0.01848, 70.84945), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7497, 0.4236, 73.2971), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4244, 1.4169, 85.8273), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3927, 3.1551, 71.8127), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3578, 2.3116, 224.3448), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3506, 2.5835, 138.5175), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3229, 5.255, 3.9322), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3060, 0.1532, 1.4845), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2564, 0.9808, 148.0787), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2429, 3.9944, 52.6902), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1645, 2.6535, 127.4718), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1584, 1.4305, 78.7138), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1508, 5.06, 151.0477), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1490, 2.6756, 56.6224), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1413, 4.5746, 202.2534), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1403, 1.3699, 77.7505), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1228, 1.047, 62.2514), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1033, 0.2646, 131.4039), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(992, 2.172, 65.22), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(862, 5.055, 351.817), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(744, 3.076, 35.164), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(687, 2.499, 77.963), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(647, 4.473, 70.328), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(624, 0.863, 9.561), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(604, 0.907, 984.6), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(575, 3.231, 447.796), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(562, 2.718, 462.023), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(530, 5.917, 213.299), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(528, 5.151, 2.969)];
const g_R2UranusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(22440, 0.69953, 74.7816), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4727, 1.699, 63.7359), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1682, 4.6483, 70.8494), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1650, 3.0966, 11.0457), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1434, 3.5212, 149.5632), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(770, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(500, 6.172, 76.266), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(461, 0.767, 3.932), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(390, 4.496, 56.622), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(390, 5.527, 85.827), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(292, 0.204, 52.69), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(287, 3.534, 73.297), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(273, 3.847, 138.517), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(220, 1.964, 131.404), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(216, 0.848, 77.963), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(205, 3.248, 78.714), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(149, 4.898, 127.472), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(129, 2.081, 3.181)];
const g_R3UranusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1164, 4.7345, 74.7816), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(212, 3.343, 63.736), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(196, 2.98, 70.849), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(105, 0.958, 11.046), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(73, 1, 149.56), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(72, 0.03, 56.62), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(55, 2.59, 3.93), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(36, 5.65, 77.96), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(34, 3.82, 76.27), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(32, 3.6, 131.4)];
const g_R4UranusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(53, 3.01, 74.78), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10, 1.91, 56.62)];


// CAAUranus

function CAAUranus() { }

CAAUranus.eclipticLongitude = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var nL0Coefficients = g_L0UranusCoefficients.length;
    var L0 = 0;
    var i;
    for (i = 0; i < nL0Coefficients; i++) {
        L0 += g_L0UranusCoefficients[i].a * Math.cos(g_L0UranusCoefficients[i].b + g_L0UranusCoefficients[i].c * rho);
    }
    var nL1Coefficients = g_L1UranusCoefficients.length;
    var L1 = 0;
    for (i = 0; i < nL1Coefficients; i++) {
        L1 += g_L1UranusCoefficients[i].a * Math.cos(g_L1UranusCoefficients[i].b + g_L1UranusCoefficients[i].c * rho);
    }
    var nL2Coefficients = g_L2UranusCoefficients.length;
    var L2 = 0;
    for (i = 0; i < nL2Coefficients; i++) {
        L2 += g_L2UranusCoefficients[i].a * Math.cos(g_L2UranusCoefficients[i].b + g_L2UranusCoefficients[i].c * rho);
    }
    var nL3Coefficients = g_L3UranusCoefficients.length;
    var L3 = 0;
    for (i = 0; i < nL3Coefficients; i++) {
        L3 += g_L3UranusCoefficients[i].a * Math.cos(g_L3UranusCoefficients[i].b + g_L3UranusCoefficients[i].c * rho);
    }
    var nL4Coefficients = g_L4UranusCoefficients.length;
    var L4 = 0;
    for (i = 0; i < nL4Coefficients; i++) {
        L4 += g_L4UranusCoefficients[i].a * Math.cos(g_L4UranusCoefficients[i].b + g_L4UranusCoefficients[i].c * rho);
    }
    var vvalue = (L0 + L1 * rho + L2 * rhosquared + L3 * rhocubed + L4 * rho4) / 100000000;
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue));
    return vvalue;
};

CAAUranus.eclipticLatitude = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var nB0Coefficients = g_B0UranusCoefficients.length;
    var B0 = 0;
    var i;
    for (i = 0; i < nB0Coefficients; i++) {
        B0 += g_B0UranusCoefficients[i].a * Math.cos(g_B0UranusCoefficients[i].b + g_B0UranusCoefficients[i].c * rho);
    }
    var nB1Coefficients = g_B1UranusCoefficients.length;
    var B1 = 0;
    for (i = 0; i < nB1Coefficients; i++) {
        B1 += g_B1UranusCoefficients[i].a * Math.cos(g_B1UranusCoefficients[i].b + g_B1UranusCoefficients[i].c * rho);
    }
    var nB2Coefficients = g_B2UranusCoefficients.length;
    var B2 = 0;
    for (i = 0; i < nB2Coefficients; i++) {
        B2 += g_B2UranusCoefficients[i].a * Math.cos(g_B2UranusCoefficients[i].b + g_B2UranusCoefficients[i].c * rho);
    }
    var nB3Coefficients = g_B3UranusCoefficients.length;
    var B3 = 0;
    for (i = 0; i < nB3Coefficients; i++) {
        B3 += g_B3UranusCoefficients[i].a * Math.cos(g_B3UranusCoefficients[i].b + g_B3UranusCoefficients[i].c * rho);
    }
    var nB4Coefficients = g_B4UranusCoefficients.length;
    var B4 = 0;
    for (i = 0; i < nB4Coefficients; i++) {
        B4 += g_B4UranusCoefficients[i].a * Math.cos(g_B4UranusCoefficients[i].b + g_B4UranusCoefficients[i].c * rho);
    }
    var vvalue = (B0 + B1 * rho + B2 * rhosquared + B3 * rhocubed + B4 * rho4) / 100000000;
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue);
    return vvalue;
};

CAAUranus.radiusVector = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var nR0Coefficients = g_R0UranusCoefficients.length;
    var R0 = 0;
    var i;
    for (i = 0; i < nR0Coefficients; i++) {
        R0 += g_R0UranusCoefficients[i].a * Math.cos(g_R0UranusCoefficients[i].b + g_R0UranusCoefficients[i].c * rho);
    }
    var nR1Coefficients = g_R1UranusCoefficients.length;
    var R1 = 0;
    for (i = 0; i < nR1Coefficients; i++) {
        R1 += g_R1UranusCoefficients[i].a * Math.cos(g_R1UranusCoefficients[i].b + g_R1UranusCoefficients[i].c * rho);
    }
    var nR2Coefficients = g_R2UranusCoefficients.length;
    var R2 = 0;
    for (i = 0; i < nR2Coefficients; i++) {
        R2 += g_R2UranusCoefficients[i].a * Math.cos(g_R2UranusCoefficients[i].b + g_R2UranusCoefficients[i].c * rho);
    }
    var nR3Coefficients = g_R3UranusCoefficients.length;
    var R3 = 0;
    for (i = 0; i < nR3Coefficients; i++) {
        R3 += g_R3UranusCoefficients[i].a * Math.cos(g_R3UranusCoefficients[i].b + g_R3UranusCoefficients[i].c * rho);
    }
    var nR4Coefficients = g_R4UranusCoefficients.length;
    var R4 = 0;
    for (i = 0; i < nR4Coefficients; i++) {
        R4 += g_R4UranusCoefficients[i].a * Math.cos(g_R4UranusCoefficients[i].b + g_R4UranusCoefficients[i].c * rho);
    }
    return (R0 + R1 * rho + R2 * rhosquared + R3 * rhocubed + R4 * rho4) / 100000000;
};

var CAAUranus$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAUranus", [CAAUranus, CAAUranus$, null]);



/***/ }),

/***/ "./esm/astrocalc/venus.js":
/*!********************************!*\
  !*** ./esm/astrocalc/venus.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CAAVenus: () => (/* binding */ CAAVenus)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _earth_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./earth.js */ "./esm/astrocalc/earth.js");
// Originally `AAVENUS.CPP`
// "Purpose: Implementation for the algorithms which obtain the heliocentric position of Venus"
// Last update of original: PJN / 29-12-2003
//
// Translated into C# and released by Microsoft, then transpiled into JavaScript
// by ScriptSharp, for the WorldWide Telescope project.
//
// The legal notices in the original code are as follows:
//
// Copyright (c) 2003 - 2007 by PJ Naughter (Web: www.naughter.com, Email: pjna@naughter.com)
//
// All rights reserved.
//
// Copyright / Usage Details:
//
// You are allowed to include the source code in any product (commercial, shareware, freeware or otherwise)
// when your product is released in binary form. You are allowed to modify the source code in any way you want
// except you cannot modify the copyright details at the top of each module. If you want to distribute source
// code with your application, then you are only allowed to distribute versions released by the author. This is
// to maintain a single distribution point for the source code.






// Coefficients

const g_L0VenusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(317614667, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1353968, 5.5931332, 10213.2855462), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(89892, 5.3065, 20426.57109), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5477, 4.4163, 7860.4194), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3456, 2.6996, 11790.6291), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2372, 2.9938, 3930.2097), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1664, 4.2502, 1577.3435), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1438, 4.1575, 9683.5946), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1317, 5.1867, 26.2983), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1201, 6.1536, 30639.8566), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(769, 0.816, 9437.763), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(761, 1.95, 529.691), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(708, 1.065, 775.523), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(585, 3.998, 191.448), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(500, 4.123, 15720.839), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(429, 3.586, 19367.189), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(327, 5.677, 5507.553), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(326, 4.591, 10404.734), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(232, 3.163, 9153.904), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(180, 4.653, 1109.379), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(155, 5.57, 19651.048), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(128, 4.226, 20.775), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(128, 0.962, 5661.332), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(106, 1.537, 801.821)];
const g_L1VenusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1021352943053, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(95708, 2.46424, 10213.28555), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14445, 0.51625, 20426.57109), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(213, 1.795, 30639.857), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(174, 2.655, 26.298), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(152, 6.106, 1577.344), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(82, 5.7, 191.45), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(70, 2.68, 9437.76), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(52, 3.6, 775.52), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(38, 1.03, 529.69), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(30, 1.25, 5507.55), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(25, 6.11, 10404.73)];
const g_L2VenusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(54127, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3891, 0.3451, 10213.2855), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1338, 2.0201, 20426.5711), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(24, 2.05, 26.3), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(19, 3.54, 30639.86), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(10, 3.97, 775.52), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(7, 1.52, 1577.34), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 1, 191.45)];
const g_L3VenusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(136, 4.804, 10213.286), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(78, 3.67, 20426.57), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(26, 0, 0)];
const g_L4VenusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(114, 3.1416, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 5.21, 20426.57), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(2, 2.51, 10213.29)];
const g_L5VenusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 3.14, 0)];
const g_B0VenusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(5923638, 0.2670278, 10213.2855462), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(40108, 1.14737, 20426.57109), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(32815, 3.14737, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1011, 1.0895, 30639.8566), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(149, 6.254, 18073.705), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(138, 0.86, 1577.344), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(130, 3.672, 9437.763), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(120, 3.705, 2352.866), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(108, 4.539, 22003.915)];
const g_B1VenusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(513348, 1.803643, 10213.285546), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(4380, 3.3862, 20426.5711), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(199, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(197, 2.53, 30639.857)];
const g_B2VenusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(22378, 3.38509, 10213.28555), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(282, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(173, 5.256, 20426.571), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(27, 3.87, 30639.86)];
const g_B3VenusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(647, 4.992, 10213.286), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(20, 3.14, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(6, 0.77, 20426.57), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(3, 5.44, 30639.86)];
const g_B4VenusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(14, 0.32, 10213.29)];
const g_R0VenusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(72334821, 0, 0), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(489824, 4.021518, 10213.285546), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1658, 4.9021, 20426.5711), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1632, 2.8455, 7860.4194), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1378, 1.1285, 11790.6291), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(498, 2.587, 9683.595), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(374, 1.423, 3930.21), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(264, 5.529, 9437.763), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(237, 2.551, 15720.839), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(222, 2.013, 19367.189), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(126, 2.728, 1577.344), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(119, 3.02, 10404.734)];
const g_R1VenusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(34551, 0.89199, 10213.28555), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(234, 1.772, 20426.571), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(234, 3.142, 0)];
const g_R2VenusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1407, 5.0637, 10213.2855), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(16, 5.47, 20426.57), new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(13, 0, 0)];
const g_R3VenusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(50, 3.22, 10213.29)];
const g_R4VenusCoefficients = [new _earth_js__WEBPACK_IMPORTED_MODULE_2__.VSC(1, 0.92, 10213.29)];


// CAAVenus

function CAAVenus() { }

CAAVenus.eclipticLongitude = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var rho5 = rho4 * rho;
    var nL0Coefficients = g_L0VenusCoefficients.length;
    var L0 = 0;
    var i;
    for (i = 0; i < nL0Coefficients; i++) {
        L0 += g_L0VenusCoefficients[i].a * Math.cos(g_L0VenusCoefficients[i].b + g_L0VenusCoefficients[i].c * rho);
    }
    var nL1Coefficients = g_L1VenusCoefficients.length;
    var L1 = 0;
    for (i = 0; i < nL1Coefficients; i++) {
        L1 += g_L1VenusCoefficients[i].a * Math.cos(g_L1VenusCoefficients[i].b + g_L1VenusCoefficients[i].c * rho);
    }
    var nL2Coefficients = g_L2VenusCoefficients.length;
    var L2 = 0;
    for (i = 0; i < nL2Coefficients; i++) {
        L2 += g_L2VenusCoefficients[i].a * Math.cos(g_L2VenusCoefficients[i].b + g_L2VenusCoefficients[i].c * rho);
    }
    var nL3Coefficients = g_L3VenusCoefficients.length;
    var L3 = 0;
    for (i = 0; i < nL3Coefficients; i++) {
        L3 += g_L3VenusCoefficients[i].a * Math.cos(g_L3VenusCoefficients[i].b + g_L3VenusCoefficients[i].c * rho);
    }
    var nL4Coefficients = g_L4VenusCoefficients.length;
    var L4 = 0;
    for (i = 0; i < nL4Coefficients; i++) {
        L4 += g_L4VenusCoefficients[i].a * Math.cos(g_L4VenusCoefficients[i].b + g_L4VenusCoefficients[i].c * rho);
    }
    var nL5Coefficients = g_L5VenusCoefficients.length;
    var L5 = 0;
    for (i = 0; i < nL5Coefficients; i++) {
        L5 += g_L5VenusCoefficients[i].a * Math.cos(g_L5VenusCoefficients[i].b + g_L5VenusCoefficients[i].c * rho);
    }
    var vvalue = (L0 + L1 * rho + L2 * rhosquared + L3 * rhocubed + L4 * rho4 + L5 * rho5) / 100000000;
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.m360(_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue));
    return vvalue;
};

CAAVenus.eclipticLatitude = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var nB0Coefficients = g_B0VenusCoefficients.length;
    var B0 = 0;
    var i;
    for (i = 0; i < nB0Coefficients; i++) {
        B0 += g_B0VenusCoefficients[i].a * Math.cos(g_B0VenusCoefficients[i].b + g_B0VenusCoefficients[i].c * rho);
    }
    var nB1Coefficients = g_B1VenusCoefficients.length;
    var B1 = 0;
    for (i = 0; i < nB1Coefficients; i++) {
        B1 += g_B1VenusCoefficients[i].a * Math.cos(g_B1VenusCoefficients[i].b + g_B1VenusCoefficients[i].c * rho);
    }
    var nB2Coefficients = g_B2VenusCoefficients.length;
    var B2 = 0;
    for (i = 0; i < nB2Coefficients; i++) {
        B2 += g_B2VenusCoefficients[i].a * Math.cos(g_B2VenusCoefficients[i].b + g_B2VenusCoefficients[i].c * rho);
    }
    var nB3Coefficients = g_B3VenusCoefficients.length;
    var B3 = 0;
    for (i = 0; i < nB3Coefficients; i++) {
        B3 += g_B3VenusCoefficients[i].a * Math.cos(g_B3VenusCoefficients[i].b + g_B3VenusCoefficients[i].c * rho);
    }
    var nB4Coefficients = g_B4VenusCoefficients.length;
    var B4 = 0;
    for (i = 0; i < nB4Coefficients; i++) {
        B4 += g_B4VenusCoefficients[i].a * Math.cos(g_B4VenusCoefficients[i].b + g_B4VenusCoefficients[i].c * rho);
    }
    var vvalue = (B0 + B1 * rho + B2 * rhosquared + B3 * rhocubed + B4 * rho4) / 100000000;
    vvalue = _coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_1__.CT.r2D(vvalue);
    return vvalue;
};

CAAVenus.radiusVector = function (JD) {
    var rho = (JD - 2451545) / 365250;
    var rhosquared = rho * rho;
    var rhocubed = rhosquared * rho;
    var rho4 = rhocubed * rho;
    var nR0Coefficients = g_R0VenusCoefficients.length;
    var R0 = 0;
    var i;
    for (i = 0; i < nR0Coefficients; i++) {
        R0 += g_R0VenusCoefficients[i].a * Math.cos(g_R0VenusCoefficients[i].b + g_R0VenusCoefficients[i].c * rho);
    }
    var nR1Coefficients = g_R1VenusCoefficients.length;
    var R1 = 0;
    for (i = 0; i < nR1Coefficients; i++) {
        R1 += g_R1VenusCoefficients[i].a * Math.cos(g_R1VenusCoefficients[i].b + g_R1VenusCoefficients[i].c * rho);
    }
    var nR2Coefficients = g_R2VenusCoefficients.length;
    var R2 = 0;
    for (i = 0; i < nR2Coefficients; i++) {
        R2 += g_R2VenusCoefficients[i].a * Math.cos(g_R2VenusCoefficients[i].b + g_R2VenusCoefficients[i].c * rho);
    }
    var nR3Coefficients = g_R3VenusCoefficients.length;
    var R3 = 0;
    for (i = 0; i < nR3Coefficients; i++) {
        R3 += g_R3VenusCoefficients[i].a * Math.cos(g_R3VenusCoefficients[i].b + g_R3VenusCoefficients[i].c * rho);
    }
    var nR4Coefficients = g_R4VenusCoefficients.length;
    var R4 = 0;
    for (i = 0; i < nR4Coefficients; i++) {
        R4 += g_R4VenusCoefficients[i].a * Math.cos(g_R4VenusCoefficients[i].b + g_R4VenusCoefficients[i].c * rho);
    }
    return (R0 + R1 * rho + R2 * rhosquared + R3 * rhocubed + R4 * rho4) / 100000000;
};

var CAAVenus$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CAAVenus", [CAAVenus, CAAVenus$, null]);


/***/ }),

/***/ "./esm/baseplanets.js":
/*!****************************!*\
  !*** ./esm/baseplanets.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BasePlanets: () => (/* binding */ BasePlanets)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./graphics/primitives3d.js */ "./esm/graphics/primitives3d.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Planet-related code that can come lower in the dependency graph.






// BasePlanets

function BasePlanets() { }

BasePlanets.drawPointPlanet = function (renderContext, location, size, color, zOrder) {
    var center = location;
    var rad = size / 2;
    if (renderContext.gl != null) {
        var ppList = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_2__.PointList(renderContext);
        ppList.minSize = 20;
        ppList.addPoint(location.copy(), color._clone(), new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_2__.Dates(0, 1), size / 100);
        ppList.depthBuffered = true;
        ppList.draw(renderContext, 1, false);
    }
    else {
        var screenSpacePnt = renderContext.WVP.transform(center);
        if (screenSpacePnt.z < 0) {
            return;
        }
        if (!zOrder) {
            if (_double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.dot(renderContext.get_viewPoint(), center) < 0.55) {
                return;
            }
        }
        var ctx = renderContext.device;
        ctx.save();
        ctx.beginPath();
        ctx.arc(screenSpacePnt.x, screenSpacePnt.y, rad, 0, Math.PI * 2, true);
        ctx.lineWidth = 1;
        ctx.fillStyle = color.toString();
        if (true) {
            ctx.fill();
        }
        ctx.globalAlpha = 1;
        ctx.strokeStyle = color.toString();
        ctx.stroke();
        ctx.restore();
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("BasePlanets", [BasePlanets, {}, null]);


/***/ }),

/***/ "./esm/baseutil.js":
/*!*************************!*\
  !*** ./esm/baseutil.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Util: () => (/* binding */ Util)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Miscellaneous utilities.




// wwtlib.Util

function Util() {
}

Util.splitString = function (target, split) {
    var parts = [];
    var start = 0;
    var end = 0;
    for (var i = 0; i < target.length; i++) {
        var found = false;
        for (var j = 0; j < split.length; j++) {
            if (target[i] === split[j]) {
                parts.push(target.substring(start, end - start));
                found = true;
                continue;
            }
            start = i + 1;
            end = i + 1;
        }
        if (!found) {
            end++;
        }
    }
    if (end > start) {
        parts.push(target.substring(start, end - start));
    }
    return parts;
};

Util.stringContains = function (target, chars) {
    for (var i = 0; i < chars.length; i++) {
        if (target.indexOf(chars[i]) > -1) {
            return true;
        }
    }
    return false;
};

Util.getHashCode = function (target) {
    var hash = 0;
    if (!target.length) {
        return hash;
    }
    for (var i = 0; i < target.length; i++) {
        var c = target.charCodeAt(i);
        hash = ((hash << 5) - hash) + c;
    }
    return hash;
};

Util.compare = function (l, r) {
    if (l === r) {
        return 0;
    }
    if (l > r) {
        return 1;
    }
    return -1;
};

Util.logN = function (num, b) {
    return Math.log(num) / Math.log(b);
};

// Parse timespan into int with milliseconds
Util.parseTimeSpan = function (timespan) {
    var val = 0;
    var parts = timespan.split(':');
    if (parts.length === 3) {
        val += parseInt(parts[0]) * 3600000;
        val += parseInt(parts[1]) * 60000;
        val += _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate((parseFloat(parts[2]) * 1000));
    }
    return val;
};

// convert duration to HH:MM:SS.S
Util.xmlDuration = function (duration) {
    var s = duration / 1000;
    var hours = Math.floor(s / 3600);
    var min = Math.floor(s / 60) - (hours * 60);
    var sec = s - ((hours * 3600) + min * 60);
    return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('{0}:{1}:{2}', hours, min, sec);
};

Util.xmlDate = function (d) {
    var hours = d.getHours();
    var amPm = 'AM';
    if (hours > 12) {
        hours -= 12;
        amPm = 'PM';
    }
    return (d.getMonth() + 1).toString() + '/' + d.getDate().toString() + '/' + d.getFullYear().toString() + ' ' + hours.toString() + ':' + d.getMinutes().toString() + ':' + d.getSeconds().toString() + ' ' + amPm;
};

Util.selectSingleNode = function (parent, name) {
    var node = null;
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(parent.childNodes);
    while ($enum1.moveNext()) {
        var child = $enum1.current;
        if (child.nodeName === name) {
            node = child;
            break;
        }
    }
    return node;
};

Util.getInnerText = function (node) {
    if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.emptyString(node.text)) {
        var cn = node;
        return cn.textContent;
    }
    else {
        return node.text;
    }
};

Util.getWrappedText = function (ctx, text, width) {
    var lines = [];
    lines.push(text);
    return lines;
};

Util.toHex = function (number) {
    var num = Math.max(0, Math.min(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(number), 255));
    return '0123456789ABCDEF'.substr((num - num % 16) / 16, 1) + '0123456789ABCDEF'.substr(num % 16, 1);
};

Util.fromHex = function (data) {
    var val = 0;
    switch (data.substr(1, 1).toUpperCase()) {
        case 'A':
            val += 10;
            break;
        case 'B':
            val += 11;
            break;
        case 'C':
            val += 12;
            break;
        case 'D':
            val += 13;
            break;
        case 'E':
            val += 14;
            break;
        case 'F':
            val += 15;
            break;
        default:
            val += parseInt(data.substr(1, 1));
            break;
    }
    switch (data.substr(0, 1).toUpperCase()) {
        case 'A':
            val += 10 * 16;
            break;
        case 'B':
            val += 11 * 16;
            break;
        case 'C':
            val += 12 * 16;
            break;
        case 'D':
            val += 13 * 16;
            break;
        case 'E':
            val += 14 * 16;
            break;
        case 'F':
            val += 15 * 16;
            break;
        default:
            val += parseInt(data.substr(0, 1)) * 16;
            break;
    }
    return val;
};

Util._openUrl = function (url) {
    window.open(url);
};

Util.log10 = function (num) {
    return Math.log(num) / 2.30258509299405;
};

Util.sign = function (num) {
    if (num < 0) {
        return -1;
    }
    return 1;
};

var Util$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Util", [Util, Util$, null]);


/***/ }),

/***/ "./esm/blend_state.js":
/*!****************************!*\
  !*** ./esm/blend_state.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BlendState: () => (/* binding */ BlendState)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Blend state.





// wwtlib.BlendState

function BlendState() {
    this._switchedTime = new Date(1990, 0, 0, 0, 0, 0, 0);
    this._state = false;
    this._targetState = this._state;
    this._delayTime = 1000;
}

BlendState.create = function (initialState, delayTime) {
    var temp = new BlendState();
    temp._state = initialState;
    temp._targetState = initialState;
    temp._delayTime = delayTime;
    return temp;
};

var BlendState$ = {
    get_state: function () {
        if (this._targetState !== this._state) {
            var ts = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now() - this._switchedTime;
            if (ts > this._delayTime) {
                this._state = this._targetState;
            }
            return true;
        }
        return this._state;
    },

    set_state: function (value) {
        this._switchedTime = new Date(1990, 0, 0, 0, 0, 0, 0);
        this._state = value;
        this._targetState = this._state;
        return value;
    },

    get_targetState: function () {
        return this._targetState;
    },

    set_targetState: function (value) {
        if (this._targetState !== value) {
            this._switchedTime = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now();
            this._targetState = value;
        }
        return value;
    },

    get_opacity: function () {
        if (this._targetState !== this._state) {
            var ts = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now() - this._switchedTime;
            if (ts > this._delayTime) {
                this._state = this._targetState;
            }
            else {
                var opacity = (ts / this._delayTime);
                return (this._targetState) ? opacity : 1 - opacity;
            }
        }
        return (this._state) ? 1 : 0;
    },

    get_delayTime: function () {
        return this._delayTime;
    },

    set_delayTime: function (value) {
        this._delayTime = value;
        return value;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("BlendState", [BlendState, BlendState$, null]);


/***/ }),

/***/ "./esm/camera_parameters.js":
/*!**********************************!*\
  !*** ./esm/camera_parameters.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CameraParameters: () => (/* binding */ CameraParameters),
/* harmony export */   InterpolationType: () => (/* binding */ InterpolationType),
/* harmony export */   SolarSystemObjects: () => (/* binding */ SolarSystemObjects)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./coordinates.js */ "./esm/coordinates.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Camera parameters.







// wwtlib.SolarSystemObjects

var SolarSystemObjects = {
    sun: 0,
    mercury: 1,
    venus: 2,
    mars: 3,
    jupiter: 4,
    saturn: 5,
    uranus: 6,
    neptune: 7,
    pluto: 8,
    moon: 9,
    io: 10,
    europa: 11,
    ganymede: 12,
    callisto: 13,
    ioShadow: 14,
    europaShadow: 15,
    ganymedeShadow: 16,
    callistoShadow: 17,
    sunEclipsed: 18,
    earth: 19,
    custom: 20,
    undefined: 65536
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("SolarSystemObjects", SolarSystemObjects);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerEnum)("SolarSystemObjects", SolarSystemObjects);


// wwtlib.InterpolationType

var InterpolationType = {
    linear: 0,
    easeIn: 1,
    easeOut: 2,
    easeInOut: 3,
    exponential: 4,
    defaultV: 5
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("InterpolationType", InterpolationType);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerEnum)("InterpolationType", InterpolationType);



// wwtlib.CameraParameters

function CameraParameters() {
    this.lat = 0;
    this.lng = 0;
    this.zoom = 0;
    this.rotation = 0;
    this.angle = 0;
    this.raDec = false;
    this.opacity = 0;
    this.target = 0;
    this.zoom = 360;
    this.viewTarget = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
}

CameraParameters.create = function (lat, lng, zoom, rotation, angle, opactity) {
    var temp = new CameraParameters();
    temp.lat = lat;
    temp.lng = lng;
    temp.zoom = zoom;
    temp.rotation = rotation;
    temp.angle = angle;
    temp.raDec = false;
    temp.opacity = opactity;
    temp.viewTarget = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 0, 0);
    temp.target = 20;
    temp.targetReferenceFrame = '';
    return temp;
};

CameraParameters.logN = function (num, b) {
    return Math.log(num) / Math.log(b);
};

CameraParameters.sinh = function (v) {
    return (Math.exp(v) - Math.exp(-v)) / 2;
};

CameraParameters.interpolate = function (from, to, alphaIn, type, fastDirectionMove) {
    var result = new CameraParameters();
    var alpha = CameraParameters.easeCurve(alphaIn, type);
    var alphaBIn = Math.min(1, alphaIn * 2);
    var alphaB = CameraParameters.easeCurve(alphaBIn, type);
    result.angle = to.angle * alpha + from.angle * (1 - alpha);
    result.rotation = to.rotation * alpha + from.rotation * (1 - alpha);
    if (fastDirectionMove) {
        result.lat = to.lat * alphaB + from.lat * (1 - alphaB);
        result.lng = to.lng * alphaB + from.lng * (1 - alphaB);
    }
    else {
        result.lat = to.lat * alpha + from.lat * (1 - alpha);
        result.lng = to.lng * alpha + from.lng * (1 - alpha);
    }
    result.zoom = Math.pow(2, CameraParameters.logN(to.zoom, 2) * alpha + CameraParameters.logN(from.zoom, 2) * (1 - alpha));
    result.opacity = (to.opacity * alpha + from.opacity * (1 - alpha));
    result.viewTarget = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.lerp(from.viewTarget, to.viewTarget, alpha);
    result.targetReferenceFrame = to.targetReferenceFrame;
    if (to.target === from.target) {
        result.target = to.target;
    }
    else {
        result.target = 20;
    }
    return result;
};

CameraParameters.interpolateGreatCircle = function (from, to, alphaIn, type, fastDirectionMove) {
    var result = new CameraParameters();
    var alpha = CameraParameters.easeCurve(alphaIn, type);
    var alphaBIn = Math.min(1, alphaIn * 2);
    var alphaB = CameraParameters.easeCurve(alphaBIn, type);
    result.angle = to.angle * alpha + from.angle * (1 - alpha);
    result.rotation = to.rotation * alpha + from.rotation * (1 - alpha);
    var left = _coordinates_js__WEBPACK_IMPORTED_MODULE_3__.Coordinates.geoTo3dDouble(from.lat, from.lng);
    var right = _coordinates_js__WEBPACK_IMPORTED_MODULE_3__.Coordinates.geoTo3dDouble(to.lat, to.lng);
    var mid = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.slerp(left, right, alpha);
    var midV2 = _coordinates_js__WEBPACK_IMPORTED_MODULE_3__.Coordinates.cartesianToLatLng(mid);
    result.lat = midV2.y;
    result.lng = midV2.x;
    result.zoom = Math.pow(2, CameraParameters.logN(to.zoom, 2) * alpha + CameraParameters.logN(from.zoom, 2) * (1 - alpha));
    result.opacity = (to.opacity * alpha + from.opacity * (1 - alpha));
    result.viewTarget = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.lerp(from.viewTarget, to.viewTarget, alpha);
    result.targetReferenceFrame = to.targetReferenceFrame;
    if (to.target === from.target) {
        result.target = to.target;
    }
    else {
        result.target = 20;
    }
    return result;
};

CameraParameters.easeCurve = function (alpha, type) {
    switch (type) {
        case 0:
            return alpha;
        case 4:
            return Math.pow(alpha, 2);
        case 1:
            return ((1 - alpha) * CameraParameters.sinh(alpha / (0.1085712344 * 2)) / 100) + alpha * alpha;
        case 2:
            return (alpha * (1 - CameraParameters.sinh((1 - alpha) / (0.1085712344 * 2)) / 100)) + (1 - alpha) * alpha;
        case 3:
            if (alpha < 0.5) {
                return CameraParameters.sinh(alpha / 0.1085712344) / 100;
            }
            else {
                return 1 - (CameraParameters.sinh((1 - alpha) / 0.1085712344) / 100);
            }
        default:
            return alpha;
    }
};

var CameraParameters$ = {
    copy: function () {
        var temp = new CameraParameters();
        temp.lat = this.lat;
        temp.lng = this.lng;
        temp.zoom = this.zoom;
        temp.rotation = this.rotation;
        temp.angle = this.angle;
        temp.raDec = this.raDec;
        temp.opacity = this.opacity;
        temp.viewTarget = this.viewTarget.copy();
        temp.target = this.target;
        temp.targetReferenceFrame = this.targetReferenceFrame;
        return temp;
    },

    get_RA: function () {
        return ((((180 - (this.lng - 180)) / 360) * 24) % 24);
    },

    set_RA: function (value) {
        this.lng = 180 - (value / 24 * 360) - 180;
        this.raDec = true;
        return value;
    },

    get_dec: function () {
        return this.lat;
    },

    set_dec: function (value) {
        this.lat = value;
        return value;
    },

    equals: function (obj) {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.canCast(obj, CameraParameters)) {
            var cam = obj;
            if (Math.abs(cam.angle - this.angle) > 0.01 || Math.abs(cam.lat - this.lat) > (cam.zoom / 10000) || Math.abs(cam.get_RA() - this.get_RA()) > (cam.zoom / 1000) || Math.abs(cam.rotation - this.rotation) > 0.1 || Math.abs(cam.zoom - this.zoom) > (Math.abs(cam.zoom) / 1000)) {
                return false;
            }
            return true;
        } else {
            return false;
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CameraParameters", [CameraParameters, CameraParameters$, null]);


/***/ }),

/***/ "./esm/color.js":
/*!**********************!*\
  !*** ./esm/color.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Color: () => (/* binding */ Color),
/* harmony export */   Colors: () => (/* binding */ Colors)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util.js */ "./esm/util.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Basic color types.





// wwtlib.Color

function Color() {
    this.a = 255;
    this.b = 255;
    this.g = 255;
    this.r = 255;
    this.name = '';
}

Color.fromArgb = function (a, r, g, b) {
    var temp = new Color();
    temp.a = a;
    temp.r = r;
    temp.g = g;
    temp.b = b;
    return temp;
};

Color._fromArgbColor = function (a, col) {
    var temp = new Color();
    temp.a = a;
    temp.r = col.r;
    temp.g = col.g;
    temp.b = col.b;
    return temp;
};

Color.fromName = function (name) {
    var temp = Color.load(name);
    return temp;
};

Color.load = function (color) {
    var a = 255, r = 255, g = 255, b = 255;
    var pieces = color.split(':');
    if (pieces.length === 5) {
        a = parseInt(pieces[1]);
        r = parseInt(pieces[2]);
        g = parseInt(pieces[3]);
        b = parseInt(pieces[4]);
    }
    else if (pieces.length === 2) {
        return Color.fromName(pieces[1].toLowerCase());
    }
    else if (pieces.length === 1 && _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.startsWith(pieces[0], '#')) {
        return Color.fromHex(pieces[0]);
    }
    else if (pieces.length === 1 && pieces[0].length === 8) {
        return Color.fromSimpleHex(pieces[0]);
    }
    else if (pieces.length === 1) {
        return Color._fromWindowsNamedColor(pieces[0]);
    }
    return Color.fromArgb(a, r, g, b);
};

Color._fromWindowsNamedColor = function (color) {
    switch (color.toLowerCase()) {
        case 'activeborder':
            return Color.fromArgb(255, 180, 180, 180);
        case 'activecaption':
            return Color.fromArgb(255, 153, 180, 209);
        case 'activecaptiontext':
            return Color.fromArgb(255, 0, 0, 0);
        case 'appworkspace':
            return Color.fromArgb(255, 171, 171, 171);
        case 'control':
            return Color.fromArgb(255, 240, 240, 240);
        case 'controldark':
            return Color.fromArgb(255, 160, 160, 160);
        case 'controldarkdark':
            return Color.fromArgb(255, 105, 105, 105);
        case 'controllight':
            return Color.fromArgb(255, 227, 227, 227);
        case 'controllightlight':
            return Color.fromArgb(255, 255, 255, 255);
        case 'controltext':
            return Color.fromArgb(255, 0, 0, 0);
        case 'desktop':
            return Color.fromArgb(255, 255, 255, 255);
        case 'graytext':
            return Color.fromArgb(255, 109, 109, 109);
        case 'highlight':
            return Color.fromArgb(255, 51, 153, 255);
        case 'highlighttext':
            return Color.fromArgb(255, 255, 255, 255);
        case 'hottrack':
            return Color.fromArgb(255, 0, 102, 204);
        case 'inactiveborder':
            return Color.fromArgb(255, 244, 247, 252);
        case 'inactivecaption':
            return Color.fromArgb(255, 191, 205, 219);
        case 'inactivecaptiontext':
            return Color.fromArgb(255, 0, 0, 0);
        case 'info':
            return Color.fromArgb(255, 255, 255, 225);
        case 'infotext':
            return Color.fromArgb(255, 0, 0, 0);
        case 'menu':
            return Color.fromArgb(255, 240, 240, 240);
        case 'menutext':
            return Color.fromArgb(255, 0, 0, 0);
        case 'scrollbar':
            return Color.fromArgb(255, 200, 200, 200);
        case 'window':
            return Color.fromArgb(255, 255, 255, 255);
        case 'windowframe':
            return Color.fromArgb(255, 100, 100, 100);
        case 'windowtext':
            return Color.fromArgb(255, 0, 0, 0);
        case 'transparent':
            return Color.fromArgb(0, 255, 255, 255);
        case 'aliceblue':
            return Color.fromArgb(255, 240, 248, 255);
        case 'antiquewhite':
            return Color.fromArgb(255, 250, 235, 215);
        case 'aqua':
            return Color.fromArgb(255, 0, 255, 255);
        case 'aquamarine':
            return Color.fromArgb(255, 127, 255, 212);
        case 'azure':
            return Color.fromArgb(255, 240, 255, 255);
        case 'beige':
            return Color.fromArgb(255, 245, 245, 220);
        case 'bisque':
            return Color.fromArgb(255, 255, 228, 196);
        case 'black':
            return Color.fromArgb(255, 0, 0, 0);
        case 'blanchedalmond':
            return Color.fromArgb(255, 255, 235, 205);
        case 'blue':
            return Color.fromArgb(255, 0, 0, 255);
        case 'blueviolet':
            return Color.fromArgb(255, 138, 43, 226);
        case 'brown':
            return Color.fromArgb(255, 165, 42, 42);
        case 'burlywood':
            return Color.fromArgb(255, 222, 184, 135);
        case 'cadetblue':
            return Color.fromArgb(255, 95, 158, 160);
        case 'chartreuse':
            return Color.fromArgb(255, 127, 255, 0);
        case 'chocolate':
            return Color.fromArgb(255, 210, 105, 30);
        case 'coral':
            return Color.fromArgb(255, 255, 127, 80);
        case 'cornflowerblue':
            return Color.fromArgb(255, 100, 149, 237);
        case 'cornsilk':
            return Color.fromArgb(255, 255, 248, 220);
        case 'crimson':
            return Color.fromArgb(255, 220, 20, 60);
        case 'cyan':
            return Color.fromArgb(255, 0, 255, 255);
        case 'darkblue':
            return Color.fromArgb(255, 0, 0, 139);
        case 'darkcyan':
            return Color.fromArgb(255, 0, 139, 139);
        case 'darkgoldenrod':
            return Color.fromArgb(255, 184, 134, 11);
        case 'darkgray':
            return Color.fromArgb(255, 169, 169, 169);
        case 'darkgreen':
            return Color.fromArgb(255, 0, 100, 0);
        case 'darkkhaki':
            return Color.fromArgb(255, 189, 183, 107);
        case 'darkmagenta':
            return Color.fromArgb(255, 139, 0, 139);
        case 'darkolivegreen':
            return Color.fromArgb(255, 85, 107, 47);
        case 'darkorange':
            return Color.fromArgb(255, 255, 140, 0);
        case 'darkorchid':
            return Color.fromArgb(255, 153, 50, 204);
        case 'darkred':
            return Color.fromArgb(255, 139, 0, 0);
        case 'darksalmon':
            return Color.fromArgb(255, 233, 150, 122);
        case 'darkseagreen':
            return Color.fromArgb(255, 143, 188, 139);
        case 'darkslateblue':
            return Color.fromArgb(255, 72, 61, 139);
        case 'darkslategray':
            return Color.fromArgb(255, 47, 79, 79);
        case 'darkturquoise':
            return Color.fromArgb(255, 0, 206, 209);
        case 'darkviolet':
            return Color.fromArgb(255, 148, 0, 211);
        case 'deeppink':
            return Color.fromArgb(255, 255, 20, 147);
        case 'deepskyblue':
            return Color.fromArgb(255, 0, 191, 255);
        case 'dimgray':
            return Color.fromArgb(255, 105, 105, 105);
        case 'dodgerblue':
            return Color.fromArgb(255, 30, 144, 255);
        case 'firebrick':
            return Color.fromArgb(255, 178, 34, 34);
        case 'floralwhite':
            return Color.fromArgb(255, 255, 250, 240);
        case 'forestgreen':
            return Color.fromArgb(255, 34, 139, 34);
        case 'fuchsia':
            return Color.fromArgb(255, 255, 0, 255);
        case 'gainsboro':
            return Color.fromArgb(255, 220, 220, 220);
        case 'ghostwhite':
            return Color.fromArgb(255, 248, 248, 255);
        case 'gold':
            return Color.fromArgb(255, 255, 215, 0);
        case 'goldenrod':
            return Color.fromArgb(255, 218, 165, 32);
        case 'gray':
            return Color.fromArgb(255, 128, 128, 128);
        case 'green':
            return Color.fromArgb(255, 0, 128, 0);
        case 'greenyellow':
            return Color.fromArgb(255, 173, 255, 47);
        case 'honeydew':
            return Color.fromArgb(255, 240, 255, 240);
        case 'hotpink':
            return Color.fromArgb(255, 255, 105, 180);
        case 'indianred':
            return Color.fromArgb(255, 205, 92, 92);
        case 'indigo':
            return Color.fromArgb(255, 75, 0, 130);
        case 'ivory':
            return Color.fromArgb(255, 255, 255, 240);
        case 'khaki':
            return Color.fromArgb(255, 240, 230, 140);
        case 'lavender':
            return Color.fromArgb(255, 230, 230, 250);
        case 'lavenderblush':
            return Color.fromArgb(255, 255, 240, 245);
        case 'lawngreen':
            return Color.fromArgb(255, 124, 252, 0);
        case 'lemonchiffon':
            return Color.fromArgb(255, 255, 250, 205);
        case 'lightblue':
            return Color.fromArgb(255, 173, 216, 230);
        case 'lightcoral':
            return Color.fromArgb(255, 240, 128, 128);
        case 'lightcyan':
            return Color.fromArgb(255, 224, 255, 255);
        case 'lightgoldenrodyellow':
            return Color.fromArgb(255, 250, 250, 210);
        case 'lightgray':
            return Color.fromArgb(255, 211, 211, 211);
        case 'lightgreen':
            return Color.fromArgb(255, 144, 238, 144);
        case 'lightpink':
            return Color.fromArgb(255, 255, 182, 193);
        case 'lightsalmon':
            return Color.fromArgb(255, 255, 160, 122);
        case 'lightseagreen':
            return Color.fromArgb(255, 32, 178, 170);
        case 'lightskyblue':
            return Color.fromArgb(255, 135, 206, 250);
        case 'lightslategray':
            return Color.fromArgb(255, 119, 136, 153);
        case 'lightsteelblue':
            return Color.fromArgb(255, 176, 196, 222);
        case 'lightyellow':
            return Color.fromArgb(255, 255, 255, 224);
        case 'lime':
            return Color.fromArgb(255, 0, 255, 0);
        case 'limegreen':
            return Color.fromArgb(255, 50, 205, 50);
        case 'linen':
            return Color.fromArgb(255, 250, 240, 230);
        case 'magenta':
            return Color.fromArgb(255, 255, 0, 255);
        case 'maroon':
            return Color.fromArgb(255, 128, 0, 0);
        case 'mediumaquamarine':
            return Color.fromArgb(255, 102, 205, 170);
        case 'mediumblue':
            return Color.fromArgb(255, 0, 0, 205);
        case 'mediumorchid':
            return Color.fromArgb(255, 186, 85, 211);
        case 'mediumpurple':
            return Color.fromArgb(255, 147, 112, 219);
        case 'mediumseagreen':
            return Color.fromArgb(255, 60, 179, 113);
        case 'mediumslateblue':
            return Color.fromArgb(255, 123, 104, 238);
        case 'mediumspringgreen':
            return Color.fromArgb(255, 0, 250, 154);
        case 'mediumturquoise':
            return Color.fromArgb(255, 72, 209, 204);
        case 'mediumvioletred':
            return Color.fromArgb(255, 199, 21, 133);
        case 'midnightblue':
            return Color.fromArgb(255, 25, 25, 112);
        case 'mintcream':
            return Color.fromArgb(255, 245, 255, 250);
        case 'mistyrose':
            return Color.fromArgb(255, 255, 228, 225);
        case 'moccasin':
            return Color.fromArgb(255, 255, 228, 181);
        case 'navajowhite':
            return Color.fromArgb(255, 255, 222, 173);
        case 'navy':
            return Color.fromArgb(255, 0, 0, 128);
        case 'oldlace':
            return Color.fromArgb(255, 253, 245, 230);
        case 'olive':
            return Color.fromArgb(255, 128, 128, 0);
        case 'olivedrab':
            return Color.fromArgb(255, 107, 142, 35);
        case 'orange':
            return Color.fromArgb(255, 255, 165, 0);
        case 'orangered':
            return Color.fromArgb(255, 255, 69, 0);
        case 'orchid':
            return Color.fromArgb(255, 218, 112, 214);
        case 'palegoldenrod':
            return Color.fromArgb(255, 238, 232, 170);
        case 'palegreen':
            return Color.fromArgb(255, 152, 251, 152);
        case 'paleturquoise':
            return Color.fromArgb(255, 175, 238, 238);
        case 'palevioletred':
            return Color.fromArgb(255, 219, 112, 147);
        case 'papayawhip':
            return Color.fromArgb(255, 255, 239, 213);
        case 'peachpuff':
            return Color.fromArgb(255, 255, 218, 185);
        case 'peru':
            return Color.fromArgb(255, 205, 133, 63);
        case 'pink':
            return Color.fromArgb(255, 255, 192, 203);
        case 'plum':
            return Color.fromArgb(255, 221, 160, 221);
        case 'powderblue':
            return Color.fromArgb(255, 176, 224, 230);
        case 'purple':
            return Color.fromArgb(255, 128, 0, 128);
        case 'red':
            return Color.fromArgb(255, 255, 0, 0);
        case 'rosybrown':
            return Color.fromArgb(255, 188, 143, 143);
        case 'royalblue':
            return Color.fromArgb(255, 65, 105, 225);
        case 'saddlebrown':
            return Color.fromArgb(255, 139, 69, 19);
        case 'salmon':
            return Color.fromArgb(255, 250, 128, 114);
        case 'sandybrown':
            return Color.fromArgb(255, 244, 164, 96);
        case 'seagreen':
            return Color.fromArgb(255, 46, 139, 87);
        case 'seashell':
            return Color.fromArgb(255, 255, 245, 238);
        case 'sienna':
            return Color.fromArgb(255, 160, 82, 45);
        case 'silver':
            return Color.fromArgb(255, 192, 192, 192);
        case 'skyblue':
            return Color.fromArgb(255, 135, 206, 235);
        case 'slateblue':
            return Color.fromArgb(255, 106, 90, 205);
        case 'slategray':
            return Color.fromArgb(255, 112, 128, 144);
        case 'snow':
            return Color.fromArgb(255, 255, 250, 250);
        case 'springgreen':
            return Color.fromArgb(255, 0, 255, 127);
        case 'steelblue':
            return Color.fromArgb(255, 70, 130, 180);
        case 'tan':
            return Color.fromArgb(255, 210, 180, 140);
        case 'teal':
            return Color.fromArgb(255, 0, 128, 128);
        case 'thistle':
            return Color.fromArgb(255, 216, 191, 216);
        case 'tomato':
            return Color.fromArgb(255, 255, 99, 71);
        case 'turquoise':
            return Color.fromArgb(255, 64, 224, 208);
        case 'violet':
            return Color.fromArgb(255, 238, 130, 238);
        case 'wheat':
            return Color.fromArgb(255, 245, 222, 179);
        case 'white':
            return Color.fromArgb(255, 255, 255, 255);
        case 'whitesmoke':
            return Color.fromArgb(255, 245, 245, 245);
        case 'yellow':
            return Color.fromArgb(255, 255, 255, 0);
        case 'yellowgreen':
            return Color.fromArgb(255, 154, 205, 50);
        case 'buttonface':
            return Color.fromArgb(255, 240, 240, 240);
        case 'buttonhighlight':
            return Color.fromArgb(255, 255, 255, 255);
        case 'buttonshadow':
            return Color.fromArgb(255, 160, 160, 160);
        case 'gradientactivecaption':
            return Color.fromArgb(255, 185, 209, 234);
        case 'gradientinactivecaption':
            return Color.fromArgb(255, 215, 228, 242);
        case 'menubar':
            return Color.fromArgb(255, 240, 240, 240);
        case 'menuhighlight':
            return Color.fromArgb(255, 51, 153, 255);
    }
    return Color.fromArgb(255, 255, 255, 255);
};

Color.fromHex = function (data) {
    var r = _util_js__WEBPACK_IMPORTED_MODULE_2__.Util.fromHex(data.substr(1, 2));
    var g = _util_js__WEBPACK_IMPORTED_MODULE_2__.Util.fromHex(data.substr(3, 2));
    var b = _util_js__WEBPACK_IMPORTED_MODULE_2__.Util.fromHex(data.substr(5, 2));
    var a = 255;
    return Color.fromArgb(a, r, g, b);
};

Color.fromSimpleHex = function (data) {
    var a = _util_js__WEBPACK_IMPORTED_MODULE_2__.Util.fromHex(data.substr(0, 2));
    var r = _util_js__WEBPACK_IMPORTED_MODULE_2__.Util.fromHex(data.substr(2, 2));
    var g = _util_js__WEBPACK_IMPORTED_MODULE_2__.Util.fromHex(data.substr(4, 2));
    var b = _util_js__WEBPACK_IMPORTED_MODULE_2__.Util.fromHex(data.substr(6, 2));
    return Color.fromArgb(a, r, g, b);
};

Color.fromInt = function (color) {
    var r = (color & 4278190080) >>> 24;
    var g = (color & 16711680) >>> 16;
    var b = (color & 65280) >>> 8;
    var a = (color & 255);
    return Color.fromArgb(a, r, g, b);
};

var Color$ = {
    toFormat: function () {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.emptyString(this.name)) {
            return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('rgb({0},{1},{2})', this.r.toString(), this.g.toString(), this.b.toString());
        }
        else {
            return this.name;
        }
    },

    save: function () {
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.emptyString(this.name)) {
            return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('{0}:{1}', 0, this.name);
        }
        else {
            return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('{0}:{1}:{2}:{3}:{4}', 1, this.a, this.r, this.g, this.b);
        }
    },

    toString: function () {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.emptyString(this.name)) {
            return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('#{0}{1}{2}', _util_js__WEBPACK_IMPORTED_MODULE_2__.Util.toHex(this.r), _util_js__WEBPACK_IMPORTED_MODULE_2__.Util.toHex(this.g), _util_js__WEBPACK_IMPORTED_MODULE_2__.Util.toHex(this.b));
        }
        else {
            return this.name;
        }
    },

    toSimpleHex: function () {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.emptyString(this.name)) {
            return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('{0}{1}{2}{3}', _util_js__WEBPACK_IMPORTED_MODULE_2__.Util.toHex(this.a), _util_js__WEBPACK_IMPORTED_MODULE_2__.Util.toHex(this.r), _util_js__WEBPACK_IMPORTED_MODULE_2__.Util.toHex(this.g), _util_js__WEBPACK_IMPORTED_MODULE_2__.Util.toHex(this.b));
        }
        else {
            return this.name;
        }
    },

    _clone: function () {
        return Color.fromArgb(this.a, this.r, this.g, this.b);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Color", [Color, Color$, null]);


// wwtlib.Colors

function Colors() { }

Colors.get_black = function () {
    return Color.fromArgb(255, 0, 0, 0);
};

Colors.get_blue = function () {
    return Color.fromArgb(255, 0, 0, 255);
};

Colors.get_brown = function () {
    return Color.fromArgb(255, 165, 42, 42);
};

Colors.get_cyan = function () {
    return Color.fromArgb(255, 0, 255, 255);
};

Colors.get_darkGray = function () {
    return Color.fromArgb(255, 169, 169, 169);
};

Colors.get_gray = function () {
    return Color.fromArgb(255, 128, 128, 128);
};

Colors.get_green = function () {
    return Color.fromArgb(255, 0, 255, 0);
};

Colors.get_lightGray = function () {
    return Color.fromArgb(255, 211, 211, 211);
};

Colors.get_magenta = function () {
    return Color.fromArgb(255, 255, 0, 255);
};

Colors.get_orange = function () {
    return Color.fromArgb(255, 255, 165, 0);
};

Colors.get_purple = function () {
    return Color.fromArgb(255, 128, 0, 128);
};

Colors.get_red = function () {
    return Color.fromArgb(255, 255, 0, 0);
};

Colors.get_transparent = function () {
    return Color.fromArgb(0, 255, 255, 255);
};

Colors.get_white = function () {
    return Color.fromArgb(255, 255, 255, 255);
};

Colors.get_yellow = function () {
    return Color.fromArgb(255, 255, 255, 0);
};

var Colors$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Colors", [Colors, Colors$, null]);


/***/ }),

/***/ "./esm/constellation_filter.js":
/*!*************************************!*\
  !*** ./esm/constellation_filter.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ConstellationFilter: () => (/* binding */ ConstellationFilter)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _blend_state_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./blend_state.js */ "./esm/blend_state.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A filter that can match various sets of constellations.






// wwtlib.ConstellationFilter
//
// This type was defined in `Constellations.js`, but we've moved it here to
// break circular dependencies.

function ConstellationFilter() {
    this.bits = new Array(3);
    this.oldBits = new Array(3);
    this.blendState = _blend_state_js__WEBPACK_IMPORTED_MODULE_2__.BlendState.create(false, 1000);
    this.internal = false;
    this.settingsOwned = false;
    for (var i = 0; i < 3; i++) {
        this.bits[i] = ~this.bits[i];
        this.oldBits[i] = this.bits[i];
    }
}

ConstellationFilter.families = {};

// These are populated in `Constellations._centroidsReady()`.
ConstellationFilter.bitIDs = {};

ConstellationFilter.buildConstellationFilters = function () {
    var all = ConstellationFilter.get_allConstellation();
    all.internal = true;
    ConstellationFilter.families['AllConstellation'] = all;
    ConstellationFilter.families['Zodiacal'] = ConstellationFilter.get_zodiacal();
    ConstellationFilter.families['Ursa Major Family'] = ConstellationFilter.get_ursaMajorFamily();
    ConstellationFilter.families['Perseus Family'] = ConstellationFilter.get_perseusFamily();
    ConstellationFilter.families['Hercules Family'] = ConstellationFilter.get_herculesFamily();
    ConstellationFilter.families['Orion Family'] = ConstellationFilter.get_orionFamily();
    ConstellationFilter.families['Heavenly Waters'] = ConstellationFilter.get_heavenlyWaters();
    ConstellationFilter.families['Bayer Family'] = ConstellationFilter.get_bayerFamily();
    ConstellationFilter.families['La Caille Family'] = ConstellationFilter.get_laCaileFamily();
};

ConstellationFilter.saveCustomFilters = function () {
    var sb = new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.StringBuilder();
    var $dict1 = ConstellationFilter.families;
    for (var $key2 in $dict1) {
        var kv = { key: $key2, value: $dict1[$key2] };
        if (!kv.value.internal) {
            sb.append(kv.key);
            sb.append(';');
            sb.appendLine(kv.value.toString());
        }
    }
};

ConstellationFilter.get_allConstellation = function () {
    var all = new ConstellationFilter();
    all.setAll(true);
    return all;
};

ConstellationFilter.get_zodiacal = function () {
    var zodiacal = new ConstellationFilter();
    zodiacal.set('ARI', true);
    zodiacal.set('TAU', true);
    zodiacal.set('GEM', true);
    zodiacal.set('CNC', true);
    zodiacal.set('LEO', true);
    zodiacal.set('VIR', true);
    zodiacal.set('LIB', true);
    zodiacal.set('SCO', true);
    zodiacal.set('SGR', true);
    zodiacal.set('CAP', true);
    zodiacal.set('AQR', true);
    zodiacal.set('PSC', true);
    zodiacal.internal = true;
    return zodiacal;
};

ConstellationFilter.get_ursaMajorFamily = function () {
    var uma = new ConstellationFilter();
    uma.set('UMA', true);
    uma.set('UMI', true);
    uma.set('DRA', true);
    uma.set('CVN', true);
    uma.set('BOO', true);
    uma.set('COM', true);
    uma.set('CRB', true);
    uma.set('CAM', true);
    uma.set('LYN', true);
    uma.set('LMI', true);
    uma.internal = true;
    return uma;
};

ConstellationFilter.get_perseusFamily = function () {
    var Perseus = new ConstellationFilter();
    Perseus.set('CAS', true);
    Perseus.set('CEP', true);
    Perseus.set('AND', true);
    Perseus.set('PER', true);
    Perseus.set('PEG', true);
    Perseus.set('CET', true);
    Perseus.set('AUR', true);
    Perseus.set('LAC', true);
    Perseus.set('TRI', true);
    Perseus.internal = true;
    return Perseus;
};

ConstellationFilter.get_herculesFamily = function () {
    var hercules = new ConstellationFilter();
    hercules.set('HER', true);
    hercules.set('SGE', true);
    hercules.set('AQL', true);
    hercules.set('LYR', true);
    hercules.set('CYG', true);
    hercules.set('VUL', true);
    hercules.set('HYA', true);
    hercules.set('SEX', true);
    hercules.set('CRT', true);
    hercules.set('CRV', true);
    hercules.set('OPH', true);
    hercules.set('SER1', true);
    hercules.set('SER2', true);
    hercules.set('SCT', true);
    hercules.set('CEN', true);
    hercules.set('LUP', true);
    hercules.set('CRA', true);
    hercules.set('ARA', true);
    hercules.set('TRA', true);
    hercules.set('CRU', true);
    hercules.internal = true;
    return hercules;
};

ConstellationFilter.get_orionFamily = function () {
    var orion = new ConstellationFilter();
    orion.set('ORI', true);
    orion.set('CMA', true);
    orion.set('CMI', true);
    orion.set('MON', true);
    orion.set('LEP', true);
    orion.internal = true;
    return orion;
};

ConstellationFilter.get_heavenlyWaters = function () {
    var waters = new ConstellationFilter();
    waters.set('DEL', true);
    waters.set('EQU', true);
    waters.set('ERI', true);
    waters.set('PSA', true);
    waters.set('CAR', true);
    waters.set('PUP', true);
    waters.set('VEL', true);
    waters.set('PYX', true);
    waters.set('COL', true);
    waters.internal = true;
    return waters;
};

ConstellationFilter.get_bayerFamily = function () {
    var bayer = new ConstellationFilter();
    bayer.set('HYA', true);
    bayer.set('DOR', true);
    bayer.set('VOL', true);
    bayer.set('APS', true);
    bayer.set('PAV', true);
    bayer.set('GRU', true);
    bayer.set('PHE', true);
    bayer.set('TUC', true);
    bayer.set('IND', true);
    bayer.set('CHA', true);
    bayer.set('MUS', true);
    bayer.internal = true;
    return bayer;
};

ConstellationFilter.get_laCaileFamily = function () {
    var LaCaile = new ConstellationFilter();
    LaCaile.set('NOR', true);
    LaCaile.set('CIR', true);
    LaCaile.set('TEL', true);
    LaCaile.set('MIC', true);
    LaCaile.set('SCL', true);
    LaCaile.set('FOR', true);
    LaCaile.set('CAE', true);
    LaCaile.set('HOR', true);
    LaCaile.set('OCT', true);
    LaCaile.set('MEN', true);
    LaCaile.set('RET', true);
    LaCaile.set('PIC', true);
    LaCaile.set('ANT', true);
    LaCaile.internal = true;
    return LaCaile;
};

ConstellationFilter.parse = function (val) {
    var parts = (val).split(',');
    var cf = new ConstellationFilter();
    try {
        for (var i = 0; i < 3; i++) {
            cf.bits[i] = parseInt(parts[i]);
        }
    }
    catch ($e1) { }
    return cf;
};

var ConstellationFilter$ = {
    _saveBits: function () {
        for (var i = 0; i < 3; i++) {
            this.oldBits[i] = this.bits[i];
        }
    },

    _isChanged: function () {
        for (var i = 0; i < 3; i++) {
            if (this.oldBits[i] !== this.bits[i]) {
                return true;
            }
        }
        return false;
    },

    _checkChanged: function () {
        if (this._isChanged()) {
            this._fireChanged();
        }
    },

    isEnabled: function (abbrev) {
        var bitID = ConstellationFilter.bitIDs[abbrev];
        var index = bitID / 32;
        bitID = bitID % 32;
        return this.blendState.get_state() && !!((1 << bitID) & this.bits[index]);
    },

    isSet: function (abbrev) {
        this._saveBits();
        var bitID = ConstellationFilter.bitIDs[abbrev];
        var index = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((bitID / 32));
        bitID = bitID % 32;
        return !!((1 << bitID) & this.bits[index]);
    },

    set: function (abbrev, state) {
        this._saveBits();
        var bitID = ConstellationFilter.bitIDs[abbrev];
        var index = bitID / 32;
        bitID = bitID % 32;
        if (state) {
            this.bits[index] = this.bits[index] | (1 << bitID);
        } else {
            this.bits[index] = this.bits[index] ^ (1 << bitID);
        }
        this._checkChanged();
    },

    setAll: function (state) {
        this._saveBits();
        for (var bitID = 0; bitID < 89; bitID++) {
            var index = bitID / 32;
            var bit = bitID % 32;
            if (state) {
                this.bits[index] = this.bits[index] | (1 << bit);
            }
            else {
                this.bits[index] = this.bits[index] ^ (1 << bit);
            }
        }
        this._checkChanged();
    },

    setBits: function (bits) {
        this._saveBits();
        for (var i = 0; i < 3; i++) {
            this.bits[i] = (bits[i * 4]) + ((bits[i * 4 + 1]) << 8) + ((bits[i * 4 + 2]) << 16) + ((bits[i * 4 + 3]) << 24);
        }
        this._checkChanged();
    },

    getBits: function () {
        var bits = new Array(12);
        var index = 0;
        for (var i = 0; i < 3; i++) {
            bits[index++] = this.bits[i];
            bits[index++] = (this.bits[i] >> 8);
            bits[index++] = (this.bits[i] >> 16);
            bits[index++] = (this.bits[i] >> 24);
        }
        return bits;
    },

    cloneFilter: function (filter) {
        this._saveBits();
        for (var i = 0; i < 3; i++) {
            this.bits[i] = filter.bits[i];
        }
        this._checkChanged();
    },

    clone: function () {
        var newFilter = new ConstellationFilter();
        newFilter.cloneFilter(this);
        return newFilter;
    },

    combine: function (filter) {
        this._saveBits();
        for (var i = 0; i < 3; i++) {
            this.bits[i] = this.bits[i] | filter.bits[i];
        }
        this._checkChanged();
    },

    remove: function (filter) {
        this._saveBits();
        for (var i = 0; i < 3; i++) {
            this.bits[i] = this.bits[i] & ~filter.bits[i];
        }
        this._checkChanged();
    },

    _fireChanged: function () {
        if (this.settingsOwned) {
        }
    },

    toString: function () {
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0},{1},{2}', this.bits[0], this.bits[1], this.bits[2]);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ConstellationFilter", [ConstellationFilter, ConstellationFilter$, null]);


/***/ }),

/***/ "./esm/constellations.js":
/*!*******************************!*\
  !*** ./esm/constellations.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Constellations: () => (/* binding */ Constellations),
/* harmony export */   Linepoint: () => (/* binding */ Linepoint),
/* harmony export */   Lineset: () => (/* binding */ Lineset),
/* harmony export */   PointType: () => (/* binding */ PointType)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./graphics/primitives3d.js */ "./esm/graphics/primitives3d.js");
/* harmony import */ var _blend_state_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./blend_state.js */ "./esm/blend_state.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./color.js */ "./esm/color.js");
/* harmony import */ var _constellation_filter_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./constellation_filter.js */ "./esm/constellation_filter.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./coordinates.js */ "./esm/coordinates.js");
/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./settings.js */ "./esm/settings.js");
/* harmony import */ var _sky_text_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sky_text.js */ "./esm/sky_text.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _web_file_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./web_file.js */ "./esm/web_file.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Constellations in the sky.
















// wwtlib.PointType

var PointType = {
    move: 0,
    line: 1,
    dash: 2,
    start: 3
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("PointType", PointType);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("PointType", PointType);


// wwtlib.Lineset

function Lineset(name) {
    this._name = name;
    this.points = [];
}

var Lineset$ = {
    get_name: function () {
        return this._name;
    },

    set_name: function (value) {
        this._name = value;
        return value;
    },

    add: function (ra, dec, pointType, name) {
        this.points.push(new Linepoint(ra, dec, pointType, name));
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Lineset", [Lineset, Lineset$, null]);


// wwtlib.Linepoint

function Linepoint(ra, dec, type, name) {
    this.RA = 0;
    this.dec = 0;
    this.pointType = 0;
    this.name = null;
    this.RA = ra;
    this.dec = dec;
    this.pointType = type;
    this.name = name;
}

var Linepoint$ = {
    toString: function () {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this.name)) {
            return _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.formatDMS((((this.RA / 360) * 24 + 12) % 24)) + ', ' + _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.formatDMS(this.dec) + ', ' + this.pointType.toString();
        } else {
            return this.name + ', ' + this.pointType.toString();
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Linepoint", [Linepoint, Linepoint$, null]);


// wwtlib.Constellations

function Constellations() {
    this._pointCount = 0;
    this._boundry = false;
    this._noInterpollation = false;
    this.readOnly = false;
    this.radius = 1;
    this._drawCount = 0;
    this._constellationVertexBuffers = {};
}

Constellations.RC = 0.017453292519943;
Constellations._maxSeperation = 0.745;
Constellations.containment = null;  // initialized in InitializeConstellations
Constellations._constToDraw = '';
Constellations.selectedSegment = null;
Constellations._artFile = null;
Constellations.artwork = null;
Constellations.boundries = null;
Constellations.pictureBlendStates = {};

Constellations.createBasic = function (name) {
    var temp = new Constellations();
    temp._name = name;
    temp._url = null;
    temp.lines = [];
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(Constellations.fullNames));
    while ($enum1.moveNext()) {
        var abbrv = $enum1.current;
        temp.lines.push(new Lineset(abbrv));
    }
    return temp;
};

Constellations.create = function (name, url, boundry, noInterpollation, resource) {
    var temp = new Constellations();
    temp._noInterpollation = noInterpollation;
    temp._boundry = boundry;
    temp._name = name;
    temp._url = url;
    temp.getFile();
    return temp;
};

Constellations.drawConstellationNames = function (renderContext, opacity, drawColor) {
    if (Constellations._namesBatch == null) {
        Constellations.initializeConstellationNames();
        if (Constellations._namesBatch == null) {
            return;
        }
    }
    Constellations._namesBatch.draw(renderContext, opacity, drawColor);
};

Constellations.initializeConstellationNames = function () {
    if (Constellations.constellationCentroids == null) {
        return;
    }
    Constellations._namesBatch = new _sky_text_js__WEBPACK_IMPORTED_MODULE_10__.Text3dBatch(_settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_active().get_constellationLabelsHeight());
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(Constellations.constellationCentroids));
    while ($enum1.moveNext()) {
        var key = $enum1.current;
        var centroid = Constellations.constellationCentroids[key];
        var center = _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.raDecTo3dAu(centroid.get_RA(), centroid.get_dec(), 1);
        var up = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 1, 0);
        var name = centroid.get_name();
        if (centroid.get_name() === 'Triangulum Australe') {
            name = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(name, ' ', '\n   ');
        }
        Constellations._namesBatch.add(new _sky_text_js__WEBPACK_IMPORTED_MODULE_10__.Text3d(center, up, name, _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_active().get_constellationLabelsHeight(), 0.000125));
    }
};

// The WWTControl driver will not (and should not) call this function in
// "freestanding mode", because the functionality depends on a
// worldwidetelescope.org API.
Constellations.drawArtwork = function (renderContext) {
    if (Constellations.artwork == null) {
        if (Constellations._artFile == null) {
            Constellations._artFile = (0,_data_globals_js__WEBPACK_IMPORTED_MODULE_3__.makeNewFolder)();
            Constellations._artFile.loadFromUrl(_url_helpers_js__WEBPACK_IMPORTED_MODULE_11__.URLHelpers.singleton.coreStaticUrl('wwtweb/catalog.aspx?W=hevelius'), Constellations._onArtReady);
        }
        return;
    }
    Constellations._maxSeperation = Math.max(0.5, Math.cos((renderContext.get_fovAngle() * 2) / 180 * Math.PI));
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(Constellations.artwork);
    while ($enum1.moveNext()) {
        var place = $enum1.current;
        var bs = Constellations.pictureBlendStates[place.get_constellation()];
        bs.set_targetState(_settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_active().get_constellationArtFilter().isSet(place.get_constellation()));
        if (bs.get_state()) {
            var reverse = false;
            var centroid = Constellations.constellationCentroids[place.get_constellation()];
            if (centroid != null) {
                var pos = _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.raDecTo3d((reverse) ? -centroid.get_RA() - 6 : centroid.get_RA(), (reverse) ? centroid.get_dec() : centroid.get_dec());
                if (_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.dot(renderContext.get_viewPoint(), pos) > Constellations._maxSeperation) {
                    renderContext.drawImageSet(place.get_studyImageset(), 100);
                }
            }
        }
    }
};

Constellations._onArtReady = function () {
    Constellations._artFile.childLoadCallback(Constellations._loadArtList);
};

Constellations._loadArtList = function () {
    Constellations.artwork = Constellations._artFile.get_places();
};

// Repeated invocations of this function are OK.
Constellations.initializeConstellations = function () {
    if (Constellations.containment == null) {
        var url = _url_helpers_js__WEBPACK_IMPORTED_MODULE_11__.URLHelpers.singleton.engineAssetUrl('ConstellationNamePositions_EN.txt');
        Constellations._webFileConstNames = new _web_file_js__WEBPACK_IMPORTED_MODULE_12__.WebFile(url);
        Constellations._webFileConstNames.onStateChange = Constellations._loadNames;
        Constellations._webFileConstNames.send();
        Constellations.containment = Constellations.create(
            'Constellations',
            _url_helpers_js__WEBPACK_IMPORTED_MODULE_11__.URLHelpers.singleton.engineAssetUrl('constellations.txt'),
            true, // "boundry"
            true, // "noInterpollation"
            true, // "resource"
        );
    }
};

Constellations._loadNames = function () {
    if (Constellations._webFileConstNames.get_state() === 2) {
        alert(Constellations._webFileConstNames.get_message());
    }
    else if (Constellations._webFileConstNames.get_state() === 1) {
        Constellations._centroidsReady(Constellations._webFileConstNames.getText());
    }
};

Constellations._centroidsReady = function (file) {
    Constellations.constellationCentroids = {};
    Constellations.fullNames = {};
    Constellations.abbreviations = {};
    var rows = file.split('\r\n');
    var id = 0;
    var line;
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(rows);

    while ($enum1.moveNext()) {
        var row = $enum1.current;
        line = row;
        var data = line.split(',');
        Constellations.fullNames[data[1]] = data[0];
        Constellations.abbreviations[data[0]] = data[1];
        _constellation_filter_js__WEBPACK_IMPORTED_MODULE_7__.ConstellationFilter.bitIDs[data[1]] = id++;
        Constellations.pictureBlendStates[data[1]] = _blend_state_js__WEBPACK_IMPORTED_MODULE_5__.BlendState.create(true, 1000);
        Constellations.constellationCentroids[data[1]] = (0,_data_globals_js__WEBPACK_IMPORTED_MODULE_3__.createPlace)(data[0], parseFloat(data[3]), parseFloat(data[2]), 128, data[1], 2, 360);
    }

    _constellation_filter_js__WEBPACK_IMPORTED_MODULE_7__.ConstellationFilter.buildConstellationFilters();
};

Constellations.fullName = function (name) {
    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(Constellations.fullNames, name)) {
        return Constellations.fullNames[name];
    }
    return name;
};

Constellations.abbreviation = function (name) {
    if (Constellations.abbreviations != null && !_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(name) && _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(Constellations.abbreviations, name)) {
        return Constellations.abbreviations[name];
    }
    return name;
};

var Constellations$ = {
    get_name: function () {
        return this._name;
    },

    set_name: function (value) {
        this._name = value;
        return value;
    },

    getFile: function () {
        this._webFile = new _web_file_js__WEBPACK_IMPORTED_MODULE_12__.WebFile(this._url);
        this._webFile.onStateChange = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('fileStateChange', this);
        this._webFile.send();
    },

    fileStateChange: function () {
        if (this._webFile.get_state() === 2) {
            alert(this._webFile.get_message());
        } else if (this._webFile.get_state() === 1) {
            this._loadConstellationData(this._webFile.getText());
        }
    },

    _loadConstellationData: function (data) {
        if (this._boundry && !this._noInterpollation) {
            Constellations.boundries = {};
        }
        this.lines = [];
        var lineSet = null;
        try {
            var rows = data.split('\r\n');
            var abrv;
            var abrvOld = '';
            var ra;
            var dec;
            var lastRa = 0;
            var type = 0;
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(rows);
            while ($enum1.moveNext()) {
                var row = $enum1.current;
                var line = row;
                if (line.substr(11, 2) === '- ') {
                    line = line.substr(0, 11) + ' -' + line.substr(13, (line.length - 13));
                }
                if (line.substr(11, 2) === '+ ') {
                    line = line.substr(0, 11) + ' +' + line.substr(13, (line.length - 13));
                }
                dec = parseFloat(line.substr(11, 10));
                if (this._noInterpollation) {
                    ra = parseFloat(line.substr(0, 10));
                }
                else {
                    ra = parseFloat(line.substr(0, 10));
                }
                abrv = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(line.substr(23, 4));
                if (!this._boundry) {
                    if (!!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(line.substr(28, 1))) {
                        type = parseInt(line.substr(28, 1));
                    }
                }
                else {
                    if (this._noInterpollation && line.substr(28, 1) !== 'O') {
                        continue;
                    }
                }
                if (abrv !== abrvOld) {
                    type = 3;
                    lineSet = new Lineset(abrv);
                    this.lines.push(lineSet);
                    if (this._boundry && !this._noInterpollation) {
                        Constellations.boundries[abrv] = lineSet;
                    }
                    abrvOld = abrv;
                    lastRa = 0;
                }
                if (this._noInterpollation) {
                    if (Math.abs(ra - lastRa) > 12) {
                        ra = ra - (24 * (((ra - lastRa) < 0) ? -1 : 1));
                    }
                    lastRa = ra;
                }
                var starName = null;
                if (line.length > 30) {
                    starName = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(line.substr(30));
                }
                if (starName == null || starName !== 'Empty') {
                    lineSet.add(ra, dec, type, starName);
                }
                this._pointCount++;
                type = 1;
            }
        }
        catch ($e2) {
        }
    },

    draw: function (renderContext, showOnlySelected, focusConsteallation, clearExisting) {
        Constellations._maxSeperation = Math.max(0.6, Math.cos((renderContext.get_fovAngle() * 2) / 180 * Math.PI));
        this._drawCount = 0;
        var lsSelected = null;
        if (this.lines == null || Constellations.constellationCentroids == null) {
            return;
        }
        Constellations._constToDraw = focusConsteallation;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.lines);
        while ($enum1.moveNext()) {
            var ls = $enum1.current;
            if (Constellations._constToDraw === ls.get_name() && this._boundry) {
                lsSelected = ls;
            }
            else if (!showOnlySelected || !this._boundry) {
                this._drawSingleConstellation(renderContext, ls, 1);
            }
        }
        if (lsSelected != null) {
            this._drawSingleConstellation(renderContext, lsSelected, 1);
        }
    },

    _drawSingleConstellation: function (renderContext, ls, opacity) {
        var reverse = false;
        var centroid = Constellations.constellationCentroids[ls.get_name()];
        if (centroid != null) {
            var pos = _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.raDecTo3d((reverse) ? -centroid.get_RA() - 6 : centroid.get_RA(), (reverse) ? centroid.get_dec() : centroid.get_dec());
            if (_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.dot(renderContext.get_viewPoint(), pos) < Constellations._maxSeperation) {
                return;
            }
        }
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this._constellationVertexBuffers, ls.get_name())) {
            var count = ls.points.length;
            var linelist = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_4__.SimpleLineList();
            linelist.set_depthBuffered(false);
            this._constellationVertexBuffers[ls.get_name()] = linelist;
            var currentPoint = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
            var temp;
            for (var i = 0; i < count; i++) {
                if (!ls.points[i].pointType || !i) {
                    currentPoint = _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.raDecTo3d(ls.points[i].RA, ls.points[i].dec);
                }
                else {
                    temp = _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.raDecTo3d(ls.points[i].RA, ls.points[i].dec);
                    linelist.addLine(currentPoint, temp);
                    currentPoint = temp;
                }
            }
            if (this._boundry) {
                temp = _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.raDecTo3d(ls.points[0].RA, ls.points[0].dec);
                linelist.addLine(currentPoint, temp);
            }
        }
        var col = 'red';
        if (this._boundry) {
            if (Constellations._constToDraw !== ls.get_name()) {
                col = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().get_constellationBoundryColor();
            }
            else {
                col = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().get_constellationSelectionColor();
            }
        } else {
            col = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().get_constellationFigureColor();
        }
        this._constellationVertexBuffers[ls.get_name()].drawLines(renderContext, opacity, _color_js__WEBPACK_IMPORTED_MODULE_6__.Color.load(col));
    },

    _drawSingleConstellationOld: function (renderContext, ls) {
        var reverse = false;
        var centroid = Constellations.constellationCentroids[ls.get_name()];
        if (centroid != null) {
            var pos = _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.raDecTo3d((reverse) ? -centroid.get_RA() - 6 : centroid.get_RA(), (reverse) ? centroid.get_dec() : centroid.get_dec());
            if (_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.dot(renderContext.get_viewPoint(), pos) < Constellations._maxSeperation) {
                return;
            }
        }
        this._drawCount++;
        var col;
        if (this._boundry) {
            if (Constellations._constToDraw !== ls.get_name()) {
                col = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().get_constellationBoundryColor();
            }
            else {
                col = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().get_constellationSelectionColor();
            }
        } else {
            col = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().get_constellationFigureColor();
        }
        if (renderContext.gl == null) {
            var ctx = renderContext.device;
            var count = ls.points.length;
            var lastPoint = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
            ctx.save();
            var linePending = false;
            ctx.beginPath();
            ctx.strokeStyle = col;
            ctx.lineWidth = 2;
            ctx.globalAlpha = 0.25;
            for (var i = 0; i < count; i++) {
                if (!ls.points[i].pointType || !i) {
                    if (linePending) {
                        ctx.stroke();
                    }
                    lastPoint = renderContext.WVP.transform(_coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.raDecTo3d(ls.points[i].RA, ls.points[i].dec));
                    ctx.moveTo(lastPoint.x, lastPoint.y);
                }
                else {
                    var newPoint = renderContext.WVP.transform(_coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.raDecTo3d(ls.points[i].RA, ls.points[i].dec));
                    ctx.lineTo(newPoint.x, newPoint.y);
                    linePending = true;
                }
            }
            if (this._boundry) {
                ctx.closePath();
            }
            ctx.stroke();
            ctx.restore();
        } else {
            //todo add webgl method of drawing
        }
    },

    findConstellationForPoint: function (ra, dec) {
        if (dec > 88.402 || this.lines == null) {
            return 'UMI';
        }
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.lines);
        while ($enum1.moveNext()) {
            var ls = $enum1.current;
            var count = ls.points.length;
            var i;
            var j;
            var inside = false;
            for (i = 0, j = count - 1; i < count; j = i++) {
                if ((((ls.points[i].dec <= dec) && (dec < ls.points[j].dec)) || ((ls.points[j].dec <= dec) && (dec < ls.points[i].dec))) && (ra < (ls.points[j].RA - ls.points[i].RA) * (dec - ls.points[i].dec) / (ls.points[j].dec - ls.points[i].dec) + ls.points[i].RA)) {
                    inside = !inside;
                }
            }
            if (inside) {
                return ls.get_name();
            }
        }
        if (ra > 0) {
            return this.findConstellationForPoint(ra - 24, dec);
        }
        // Ursa Minor is tricky since it wraps around the poles. It can evade the point in rect test
        if (dec > 65.5) {
            return 'UMI';
        }
        if (dec < -65.5) {
            return 'OCT';
        }
        return 'Error';
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Constellations", [Constellations, Constellations$, null]);


/***/ }),

/***/ "./esm/coordinates.js":
/*!****************************!*\
  !*** ./esm/coordinates.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Coordinates: () => (/* binding */ Coordinates)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Routines for coordinate transformations
//
// NB: these functions are redundant in the webclient because we don't have the
// single-precision `Vector3` type that's distinguished from `Vector3d`. To
// minimize the code delta from Windows, we keep both names for simplicity. But
// the `...Rad` functions are added because ScriptSharp can't deal with
// overloads.







// wwtlib.Coordinates

function Coordinates(ascention, declination) {
    // Held in radians
    this._ascention = 0;
    this._declination = 0;
    this._ascention = ascention + (Math.PI * 80) % (Math.PI * 2);
    this._declination = declination;
}

Coordinates.RC = (3.1415927 / 180);
Coordinates.RCRA = (3.1415927 / 12);
Coordinates.radius = 1;
Coordinates._rotationMatrix = null;

Coordinates.geoTo3d = function (lat, lng) {
    return _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(lng * Coordinates.RC) * Math.cos(lat * Coordinates.RC) * 1, Math.sin(lat * Coordinates.RC) * 1, Math.sin(lng * Coordinates.RC) * Math.cos(lat * Coordinates.RC) * 1);
};

Coordinates.geoTo3dDouble = function (lat, lng) {
    return _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(lng * Coordinates.RC) * Math.cos(lat * Coordinates.RC) * 1, Math.sin(lat * Coordinates.RC) * 1, Math.sin(lng * Coordinates.RC) * Math.cos(lat * Coordinates.RC) * 1);
};

Coordinates.geoTo3dRad = function (lat, lng, radius) {
    return _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(lng * Coordinates.RC) * Math.cos(lat * Coordinates.RC) * radius, Math.sin(lat * Coordinates.RC) * radius, Math.sin(lng * Coordinates.RC) * Math.cos(lat * Coordinates.RC) * radius);
};

Coordinates.raDecTo3d = function (ra, dec) {
    return _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(ra * Coordinates.RCRA) * Math.cos(dec * Coordinates.RC) * 1, Math.sin(dec * Coordinates.RC) * 1, Math.sin(ra * Coordinates.RCRA) * Math.cos(dec * Coordinates.RC) * 1);
};

Coordinates.raDecTo3dAu = function (ra, dec, au) {
    return _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(ra * Coordinates.RCRA) * Math.cos(dec * Coordinates.RC) * au, Math.sin(dec * Coordinates.RC) * au, Math.sin(ra * Coordinates.RCRA) * Math.cos(dec * Coordinates.RC) * au);
};

Coordinates.raDecTo3dMat = function (ra, dec, mat) {
    return _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create((Math.cos(ra * Coordinates.RCRA) * Math.cos(dec * Coordinates.RC) * 1), (Math.sin(dec * Coordinates.RC) * 1), (Math.sin(ra * Coordinates.RCRA) * Math.cos(dec * Coordinates.RC) * 1)), mat);
};

Coordinates.raDecTo3dPointRad = function (point, radius) {
    point.set_dec(-point.get_dec());
    return _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create((Math.cos(point.get_RA() * Coordinates.RCRA) * Math.cos(point.get_dec() * Coordinates.RC) * radius), (Math.sin(point.get_dec() * Coordinates.RC) * radius), (Math.sin(point.get_RA() * Coordinates.RCRA) * Math.cos(point.get_dec() * Coordinates.RC) * radius));
};

Coordinates.sterographicTo3d = function (x, y, radius, standardLat, meridean, falseEasting, falseNorthing, scale, north) {
    var lat = 90;
    var lng = 0;
    x -= falseEasting;
    y -= falseNorthing;
    if (!!x || !!y) {
        var re = (1 + Math.sin(Math.abs(standardLat) / 180 * Math.PI)) * 6371000 / scale;
        var rere = re * re;
        var c1 = 180 / Math.PI;
        if (!x) {
            lng = (90 * y < 0) ? -1 : 1;
        } else {
            lng = Math.atan2(y, x) * c1;
        }
        var len = (x * x) + (y * y);
        lat = (rere - len) / (rere + len);
        lat = Math.asin(lat) * c1;
        if (!north) {
            lat = -lat;
            lng = -lng;
            meridean = -meridean;
        }
    }
    return Coordinates.geoTo3dRad(lat, 90 + lng + meridean, radius);
};

Coordinates.equitorialToHorizon = function (equitorial, location, utc) {
    var hourAngle = Coordinates.mstFromUTC2(utc, location.get_lng()) - (equitorial.get_RA() * 15);
    if (hourAngle < 0) {
        hourAngle += 360;
    }
    var ha = hourAngle * Coordinates.RC;
    var dec = equitorial.get_dec() * Coordinates.RC;
    var lat = location.get_lat() * Coordinates.RC;
    var sinAlt = Math.sin(dec) * Math.sin(lat) + Math.cos(dec) * Math.cos(lat) * Math.cos(ha);
    var altitude = Math.asin(sinAlt);
    var cosAzimith = (Math.sin(dec) - Math.sin(altitude) * Math.sin(lat)) / (Math.cos(altitude) * Math.cos(lat));
    var azimuth = Math.acos(cosAzimith);
    var altAz = new Coordinates(azimuth, altitude);
    if (Math.sin(ha) > 0) {
        altAz.set_az((360 - altAz.get_az()));
    }
    return altAz;
};

Coordinates.horizonToEquitorial = function (altAz, location, utc) {
    var hourAngle = Coordinates.mstFromUTC2(utc, location.get_lng());
    var haLocal;
    var declination;
    var raDec = Coordinates._altAzToRaDec(altAz.get_alt() * Coordinates.RC, altAz.get_az() * Coordinates.RC, location.get_lat() * Coordinates.RC);
    haLocal = raDec.x;
    declination = raDec.y;
    var ha = (haLocal / Coordinates.RC);
    hourAngle += ha;
    if (hourAngle < 0) {
        hourAngle += 360;
    }
    if (hourAngle > 360) {
        hourAngle -= 360;
    }
    return Coordinates.fromRaDec(hourAngle / 15, declination / Coordinates.RC);
};

Coordinates._altAzToRaDec = function (Altitude, Azimuth, Latitude) {
    var hrAngle = 0;
    var dec = 0;
    Azimuth = Math.PI - Azimuth;
    if (Azimuth < 0) {
        Azimuth += Math.PI * 2;
    }
    hrAngle = Math.atan2(Math.sin(Azimuth), Math.cos(Azimuth) * Math.sin(Latitude) + Math.tan(Altitude) * Math.cos(Latitude));
    if (hrAngle < 0) {
        hrAngle += Math.PI * 2;
    }
    dec = Math.asin(Math.sin(Latitude) * Math.sin(Altitude) - Math.cos(Latitude) * Math.cos(Altitude) * Math.cos(Azimuth));
    return _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.create(hrAngle, dec);
};

Coordinates.mstFromUTC2 = function (utc, lng) {
    var year = utc.getUTCFullYear();
    var month = utc.getUTCMonth() + 1;
    var day = utc.getUTCDate();
    var hour = utc.getUTCHours();
    var minute = utc.getUTCMinutes();
    var second = utc.getUTCSeconds() + utc.getUTCMilliseconds() / 1000;
    if (month === 1 || month === 2) {
        year -= 1;
        month += 12;
    }
    var a = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate((year / 100));
    var b = 2 - a + Math.floor((a / 4));
    var c = Math.floor(365.25 * year);
    var d = Math.floor(30.6001 * (month + 1));
    var julianDays;
    var julianCenturies;
    var mst;
    julianDays = b + c + d - 730550.5 + day + (hour + minute / 60 + second / 3600) / 24;
    julianCenturies = julianDays / 36525;
    mst = 280.46061837 + 360.98564736629 * julianDays + 0.000387933 * julianCenturies * julianCenturies - julianCenturies * julianCenturies * julianCenturies / 38710000 + lng;
    if (mst > 0) {
        while (mst > 360) {
            mst = mst - 360;
        }
    }
    else {
        while (mst < 0) {
            mst = mst + 360;
        }
    }
    return mst;
};

Coordinates.cartesianToSpherical = function (vector) {
    var ascention;
    var declination;
    var radius = Math.sqrt(vector.x * vector.x + vector.y * vector.y + vector.z * vector.z);
    var XZ = Math.sqrt(vector.x * vector.x + vector.z * vector.z);
    declination = Math.asin(vector.y / radius);
    if (0 < vector.x) {
        ascention = Math.asin(vector.z / XZ);
    }
    else if (0 > vector.x) {
        ascention = Math.PI - Math.asin(vector.z / XZ);
    }
    else {
        ascention = 0;
    }
    return new Coordinates(ascention, declination);
};

Coordinates.cartesianToSpherical2 = function (vector) {
    var rho = Math.sqrt(vector.x * vector.x + vector.y * vector.y + vector.z * vector.z);
    var longitude = Math.atan2(vector.z, vector.x);
    var latitude = Math.asin(vector.y / rho);
    return new Coordinates(longitude, latitude);
};

Coordinates.cartesianToSphericalSky = function (vector) {
    var rho = Math.sqrt(vector.x * vector.x + vector.y * vector.y + vector.z * vector.z);
    var ra = Math.atan2(vector.z, vector.x);
    var dec = Math.asin(-vector.y / rho);
    return _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.create(ra / Math.PI * 12, dec / Math.PI * 180);
};

Coordinates.sphericalSkyToCartesian = function (vector) {
    var ra = vector.x * (Math.PI / 12);
    var dec = vector.y * (Math.PI / 180);
    var x = Math.cos(ra) * Math.cos(dec);
    var y = -Math.sin(dec);
    var z = Math.sin(ra) * Math.cos(dec);
    return _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(x, y, z);
};

Coordinates.cartesianToLatLng = function (vector) {
    var rho = Math.sqrt(vector.x * vector.x + vector.y * vector.y + vector.z * vector.z);
    var longitude = Math.atan2(vector.z, vector.x);
    var latitude = Math.asin(vector.y / rho);
    return _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.create(longitude * 180 / Math.PI, latitude * 180 / Math.PI);
};

Coordinates.cartesianToSpherical3 = function (vector) {
    var rho = Math.sqrt(vector.x * vector.x + vector.y * vector.y + vector.z * vector.z);
    var longitude = Math.atan2(vector.z, vector.x);
    var latitude = Math.asin(vector.y / rho);
    return new Coordinates(longitude, latitude);
};

Coordinates.sign = function (target) {
    return (target < 0) ? -1 : 1;
};

Coordinates.formatDMSSign = function (angle, sign) {
    try {
        angle += (Coordinates.sign(angle) * 0.0001388888888889);
        var degrees = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(angle);
        var minutes = ((angle - _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(angle)) * 60);
        var seconds = ((minutes - _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(minutes)) * 60);
        if (sign) {
            var signString = (angle > 0) ? '+' : '-';
            return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('{3}{0:00;00}:{1:00}:{2:00}', degrees, Math.abs(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(minutes)), Math.abs(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(seconds)), signString);
        } else {
            return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('{0:00}:{1:00}:{2:00}', degrees, Math.abs(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(minutes)), Math.abs(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(seconds)));
        }
    }
    catch ($e1) {
        return '';
    }
};

Coordinates.twoPlaces = function (val) {
    var num = val.toString();
    if (num.length < 2) {
        num = '0' + num;
    }
    return num;
};

Coordinates.formatDMS = function (angle) {
    try {
        angle += (((angle < 0) ? -1 : 1) * 0.0001388888888889);
        var degrees = Math.abs(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(angle));
        var minutes = ((angle - _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(angle)) * 60);
        var seconds = ((minutes - _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(minutes)) * 60);
        var sign = (angle < 0) ? '-' : '';
        return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('{3}{0}:{1}:{2}', Math.abs(degrees), Coordinates.twoPlaces(Math.abs(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(minutes))), Coordinates.twoPlaces(Math.abs(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(seconds))), sign);
    }
    catch ($e1) {
        return '';
    }
};

Coordinates.formatDMSWide = function (angle) {
    try {
        angle += (Coordinates.sign(angle) * 0.0001388888888889);
        var degrees = Math.abs(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(angle));
        var minutes = ((angle - _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(angle)) * 60);
        var seconds = ((minutes - _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(minutes)) * 60);
        var sign = (angle < 0) ? '-' : '';
        return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('{3}{0:00} : {1:00} : {2:00}', degrees, Math.abs(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(minutes)), Math.abs(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(seconds)), sign);
    }
    catch ($e1) {
        return '';
    }
};

Coordinates.formatHMS = function (angle) {
    try {
        angle += (Coordinates.sign(angle) * 0.0001388888888889);
        var degrees = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(angle);
        var minutes = ((angle - _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(angle)) * 60);
        var seconds = ((minutes - _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(minutes)) * 60);
        return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('{0:00}h{1:00}m{2:00}s', degrees, Math.abs(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(minutes)), Math.abs(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(seconds)));
    }
    catch ($e1) {
        return '';
    }
};

Coordinates.parseRA = function (data, degrees) {
    data = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.trim(data).toLowerCase();
    if (data.indexOf('d') > -1 || data.indexOf('\u00b0') > -1) {
        degrees = true;
    }
    if (data.indexOf('h') > -1 || data.indexOf(':') > -1) {
        degrees = false;
    }
    var ra = Coordinates.parse(data) / ((degrees) ? 15 : 1);
    return Math.max(Math.min(ra, 24), 0);
};

Coordinates.parseDec = function (data) {
    var dec = Coordinates.parse(data);
    return Math.max(Math.min(dec, 90), -90);
};

Coordinates.parse = function (data) {
    try {
        data = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.trim(data).toLowerCase();
        data = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.replaceString(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.replaceString(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.replaceString(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.replaceString(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.replaceString(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.replaceString(data, 'd ', 'd'), 'h ', 'h'), 'm ', 'm'), 's ', 's'), "' ", "'"), '" ', '"');
        if (_baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.stringContains(data, [':', ' ', 'd', 'h', 'm', 's', "'", '"', '\u00b0'])) {
            var hours = 0;
            var minutes = 0;
            var seconds = 0;
            var sign = 0;
            var parts = _baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.splitString(data, [':', ' ', 'd', 'h', 'm', 's', "'", '"', '\u00b0']);
            if (parts.length > 0) {
                if (!_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.emptyString(parts[0])) {
                    hours = Math.abs(parseFloat(parts[0]));
                    sign = (parseFloat(parts[0]) < 0) ? -1 : 1;
                    if (parts[0].indexOf('-') > -1) {
                        sign = -1;
                    }
                }
            }
            if (parts.length > 1) {
                if (!_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.emptyString(parts[1])) {
                    minutes = parseFloat(parts[1]);
                }
            }
            if (parts.length > 2) {
                if (!_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.emptyString(parts[2])) {
                    seconds = parseFloat(parts[2]);
                }
            }
            if (!sign) {
                sign = 1;
            }
            return sign * (hours + minutes / 60 + seconds / 3600);
        } else {
            var val = 0;
            try {
                val = parseFloat(data);
            }
            catch ($e1) {
                val = 0;
            }
            return val;
        }
    }
    catch ($e2) {
        return 0;
    }
};

Coordinates.fromRaDec = function (ra, dec) {
    return new Coordinates((ra - 12) * 15 * Coordinates.RC, dec * Coordinates.RC);
};

Coordinates.fromLatLng = function (lat, lng) {
    return new Coordinates(lng * Coordinates.RC, lat * Coordinates.RC);
};

Coordinates.dmsToDegrees = function (Degrees, Minutes, Seconds) {
    return Degrees + Minutes / 60 + Seconds / 3600;
};

Coordinates.degreesToRadians = function (Degrees) {
    return Degrees * 0.0174532925199433;
};

Coordinates.radiansToDegrees = function (Radians) {
    return Radians * 57.2957795130823;
};

Coordinates.radiansToHours = function (Radians) {
    return Radians * 3.81971863420549;
};

Coordinates.hoursToRadians = function (Hours) {
    return Hours * 0.261799387799149;
};

Coordinates.hoursToDegrees = function (Hours) {
    return Hours * 15;
};

Coordinates.degreesToHours = function (Degrees) {
    return Degrees / 15;
};

Coordinates.PI = function () {
    return 3.14159265358979;
};

Coordinates.mapTo0To360Range = function (Degrees) {
    var Value = Degrees;
    while (Value < 0) {
        Value += 360;
    }
    while (Value > 360) {
        Value -= 360;
    }
    return Value;
};

Coordinates.mapTo0To24Range = function (HourAngle) {
    var Value = HourAngle;
    while (Value < 0) {
        Value += 24;
    }
    while (Value > 24) {
        Value -= 24;
    }
    return Value;
};

Coordinates.meanObliquityOfEcliptic = function (JD) {
    var U = (JD - 2451545) / 3652500;
    var Usquared = U * U;
    var Ucubed = Usquared * U;
    var U4 = Ucubed * U;
    var U5 = U4 * U;
    var U6 = U5 * U;
    var U7 = U6 * U;
    var U8 = U7 * U;
    var U9 = U8 * U;
    var U10 = U9 * U;
    return Coordinates.dmsToDegrees(23, 26, 21.448) - Coordinates.dmsToDegrees(0, 0, 4680.93) * U - Coordinates.dmsToDegrees(0, 0, 1.55) * Usquared + Coordinates.dmsToDegrees(0, 0, 1999.25) * Ucubed - Coordinates.dmsToDegrees(0, 0, 51.38) * U4 - Coordinates.dmsToDegrees(0, 0, 249.67) * U5 - Coordinates.dmsToDegrees(0, 0, 39.05) * U6 + Coordinates.dmsToDegrees(0, 0, 7.12) * U7 + Coordinates.dmsToDegrees(0, 0, 27.87) * U8 + Coordinates.dmsToDegrees(0, 0, 5.79) * U9 + Coordinates.dmsToDegrees(0, 0, 2.45) * U10;
};

Coordinates.j2000toGalactic = function (J2000RA, J2000DEC) {
    var J2000pos = [Math.cos(J2000RA / 180 * Math.PI) * Math.cos(J2000DEC / 180 * Math.PI), Math.sin(J2000RA / 180 * Math.PI) * Math.cos(J2000DEC / 180 * Math.PI), Math.sin(J2000DEC / 180 * Math.PI)];
    if (Coordinates._rotationMatrix == null) {
        Coordinates._rotationMatrix = new Array(3);
        Coordinates._rotationMatrix[0] = [-0.0548755604, -0.8734370902, -0.4838350155];
        Coordinates._rotationMatrix[1] = [0.4941094279, -0.44482963, 0.7469822445];
        Coordinates._rotationMatrix[2] = [-0.867666149, -0.1980763734, 0.4559837762];
    }
    var Galacticpos = new Array(3);
    for (var i = 0; i < 3; i++) {
        Galacticpos[i] = J2000pos[0] * Coordinates._rotationMatrix[i][0] + J2000pos[1] * Coordinates._rotationMatrix[i][1] + J2000pos[2] * Coordinates._rotationMatrix[i][2];
    }
    var GalacticL2 = Math.atan2(Galacticpos[1], Galacticpos[0]);
    if (GalacticL2 < 0) {
        GalacticL2 = GalacticL2 + 2 * Math.PI;
    }
    if (GalacticL2 > 2 * Math.PI) {
        GalacticL2 = GalacticL2 - 2 * Math.PI;
    }
    var GalacticB2 = Math.atan2(Galacticpos[2], Math.sqrt(Galacticpos[0] * Galacticpos[0] + Galacticpos[1] * Galacticpos[1]));
    return [GalacticL2 / Math.PI * 180, GalacticB2 / Math.PI * 180];
};

Coordinates.galacticTo3dDouble = function (l, b) {
    var result = Coordinates.galactictoJ2000(l, b);
    return Coordinates.raDecTo3dAu(result[0] / 15, result[1], 1);
};

Coordinates.galactictoJ2000 = function (GalacticL2, GalacticB2) {
    var Galacticpos = [Math.cos(GalacticL2 / 180 * Math.PI) * Math.cos(GalacticB2 / 180 * Math.PI), Math.sin(GalacticL2 / 180 * Math.PI) * Math.cos(GalacticB2 / 180 * Math.PI), Math.sin(GalacticB2 / 180 * Math.PI)];
    if (Coordinates._rotationMatrix == null) {
        Coordinates._rotationMatrix = new Array(3);
        Coordinates._rotationMatrix[0] = [-0.0548755604, -0.8734370902, -0.4838350155];
        Coordinates._rotationMatrix[1] = [0.4941094279, -0.44482963, 0.7469822445];
        Coordinates._rotationMatrix[2] = [-0.867666149, -0.1980763734, 0.4559837762];
    }
    var J2000pos = new Array(3);
    for (var i = 0; i < 3; i++) {
        J2000pos[i] = Galacticpos[0] * Coordinates._rotationMatrix[0][i] + Galacticpos[1] * Coordinates._rotationMatrix[1][i] + Galacticpos[2] * Coordinates._rotationMatrix[2][i];
    }
    var J2000RA = Math.atan2(J2000pos[1], J2000pos[0]);
    if (J2000RA < 0) {
        J2000RA = J2000RA + 2 * Math.PI;
    }
    if (J2000RA > 2 * Math.PI) {
        J2000RA = J2000RA - 2 * Math.PI;
    }
    var J2000DEC = Math.atan2(J2000pos[2], Math.sqrt(J2000pos[0] * J2000pos[0] + J2000pos[1] * J2000pos[1]));
    return [J2000RA / Math.PI * 180, J2000DEC / Math.PI * 180];
};

var Coordinates$ = {
    distance: function (pointB) {
        var y = this.get_lat();
        var x = this.get_lng() * Math.cos(y * Coordinates.RC);
        var y1 = pointB.get_lat();
        var x1 = pointB.get_lng() * Math.cos(y1 * Coordinates.RC);
        return Math.sqrt((y - y1) * (y - y1) + (x - x1) * (x - x1));
    },

    distance3d: function (pointB) {
        var pnt1 = Coordinates.geoTo3dDouble(pointB.get_lat(), pointB.get_lng());
        var pnt2 = Coordinates.geoTo3dDouble(this.get_lat(), this.get_lng());
        var pntDiff = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.subtractVectors(pnt1, pnt2);
        return pntDiff.length() / Coordinates.RC;
    },

    angle: function (pointB) {
        var y = this.get_lat();
        var x = this.get_lng() * Math.cos(y * Coordinates.RC);
        var y1 = pointB.get_lat();
        var x1 = pointB.get_lng() * Math.cos(y1 * Coordinates.RC);
        return Math.atan2((y1 - y), (x1 - x));
    },

    get_RA: function () {
        return (((this._ascention / Math.PI) * 12) + 12) % 24;
    },

    set_RA: function (value) {
        this._ascention = (value / 12) * Math.PI;
        return value;
    },

    get_dec: function () {
        return this._declination / Coordinates.RC;
    },

    set_dec: function (value) {
        this._declination = value * Coordinates.RC;
        return value;
    },

    get_lat: function () {
        return this._declination / Coordinates.RC;
    },

    set_lat: function (value) {
        this._declination = value * Coordinates.RC;
        return value;
    },

    get_lng: function () {
        var lng = this._ascention / Coordinates.RC;
        if (lng <= 180) {
            return lng;
        } else {
            return (-180 + (180 - lng));
        }
    },

    set_lng: function (value) {
        //todo This was broken check callers to see what effect it had.
        this._ascention = ((value * Coordinates.RC) + (Math.PI * 2) % (Math.PI * 2));
        return value;
    },

    get_alt: function () {
        return this._declination / Coordinates.RC;
    },

    set_alt: function (value) {
        this._declination = value * Coordinates.RC;
        return value;
    },

    get_az: function () {
        return this._ascention / Coordinates.RC;
    },

    set_az: function (value) {
        this._ascention = value * Coordinates.RC;
        return value;
    },

    toString: function () {
        return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('Lat: {0}, Lng: {1}', this.get_lat(), this.get_lng());
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Coordinates", [Coordinates, Coordinates$, null]);


/***/ }),

/***/ "./esm/data_globals.js":
/*!*****************************!*\
  !*** ./esm/data_globals.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createPlace: () => (/* binding */ createPlace),
/* harmony export */   freestandingMode: () => (/* binding */ freestandingMode),
/* harmony export */   globalScriptInterface: () => (/* binding */ globalScriptInterface),
/* harmony export */   globalWWTControl: () => (/* binding */ globalWWTControl),
/* harmony export */   layerManagerGetAllMaps: () => (/* binding */ layerManagerGetAllMaps),
/* harmony export */   loadWtmlFile: () => (/* binding */ loadWtmlFile),
/* harmony export */   makeNewFolder: () => (/* binding */ makeNewFolder),
/* harmony export */   makeNewHipsProperties: () => (/* binding */ makeNewHipsProperties),
/* harmony export */   setManagerVisibleLayerList: () => (/* binding */ setManagerVisibleLayerList),
/* harmony export */   set_createPlace: () => (/* binding */ set_createPlace),
/* harmony export */   set_freestandingMode: () => (/* binding */ set_freestandingMode),
/* harmony export */   set_globalScriptInterface: () => (/* binding */ set_globalScriptInterface),
/* harmony export */   set_globalWWTControl: () => (/* binding */ set_globalWWTControl),
/* harmony export */   set_layerManagerGetAllMaps: () => (/* binding */ set_layerManagerGetAllMaps),
/* harmony export */   set_loadWtmlFile: () => (/* binding */ set_loadWtmlFile),
/* harmony export */   set_makeNewFolder: () => (/* binding */ set_makeNewFolder),
/* harmony export */   set_makeNewHipsProperties: () => (/* binding */ set_makeNewHipsProperties),
/* harmony export */   set_setManagerVisibleLayerList: () => (/* binding */ set_setManagerVisibleLayerList),
/* harmony export */   set_tourDocumentFromUrlRaw: () => (/* binding */ set_tourDocumentFromUrlRaw),
/* harmony export */   tourDocumentFromUrlRaw: () => (/* binding */ tourDocumentFromUrlRaw)
/* harmony export */ });
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Various global variables associated with data assets.
//
// See `render_globals.js` for a general rationale for this kind of module.

// This used to be WWTControl(.singleton).freestandingMode. It sets whether the
// engine will avoid accessing the central WWT servers.
var freestandingMode = false;

function set_freestandingMode(value) {
    freestandingMode = !!value;
}

// This is equivalent to `new HipsProperties(imageset)`. We abstract
// the function to avoid circular dependencies in the type hierarchy.
var makeNewHipsProperties = null;

function set_makeNewHipsProperties(value) {
    makeNewHipsProperties = value;
}

// This is equivalent to `new Folder()`. We abstract
// the function to avoid circular dependencies in the type hierarchy.
var makeNewFolder = null;

function set_makeNewFolder(value) {
    makeNewFolder = value;
}

// This is equivalent to `Place.create(name, lat, lng, classification,
// constellation, type, zoomFactor)`. We abstract the function to avoid circular
// dependencies in the type hierarchy.
var createPlace = null;

function set_createPlace(value) {
    createPlace = value;
}

// This is another way to access `WWTControl.singleton`. It's the
// global singleton WWTControl instance.
var globalWWTControl = null;

function set_globalWWTControl(value) {
    globalWWTControl = value;
}

// This is another way to access the `WWTControl.scriptInterface` singleton. It's
// the global singleton ScriptInterface instance.
var globalScriptInterface = null;

function set_globalScriptInterface(value) {
    globalScriptInterface = value;
}

// This is another way to access `LayerManager.setVisibleLayerList()`. Once
// again, we need this to break some circular dependencies in the module
// structure.
var setManagerVisibleLayerList = null;

function set_setManagerVisibleLayerList(value) {
    setManagerVisibleLayerList = value;
}

// This is another way to access `TourDocument.fromUrlRaw()`.  Once again, we
// need this to break some circular dependencies in the module structure.

var tourDocumentFromUrlRaw = null;

function set_tourDocumentFromUrlRaw(value) {
    tourDocumentFromUrlRaw = value;
}

// This is another way to access `LayerManager.getAllMaps()`.  Once again, we
// need this to break some circular dependencies in the module structure.

var layerManagerGetAllMaps = null;

function set_layerManagerGetAllMaps(value) {
    layerManagerGetAllMaps = value;
}

// This is another way to access `Wtml.getWtmlFile()`.  Once again, we
// need this to break some circular dependencies in the module structure.

var loadWtmlFile = null;

function set_loadWtmlFile(value) {
    loadWtmlFile = value;
}


/***/ }),

/***/ "./esm/double3d.js":
/*!*************************!*\
  !*** ./esm/double3d.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ConvexHull: () => (/* binding */ ConvexHull),
/* harmony export */   DoubleUtilities: () => (/* binding */ DoubleUtilities),
/* harmony export */   LocationHint: () => (/* binding */ LocationHint),
/* harmony export */   Matrix2d: () => (/* binding */ Matrix2d),
/* harmony export */   Matrix3d: () => (/* binding */ Matrix3d),
/* harmony export */   PlaneD: () => (/* binding */ PlaneD),
/* harmony export */   PositionColored: () => (/* binding */ PositionColored),
/* harmony export */   PositionColoredTextured: () => (/* binding */ PositionColoredTextured),
/* harmony export */   PositionNormalTextured: () => (/* binding */ PositionNormalTextured),
/* harmony export */   PositionNormalTexturedTangent: () => (/* binding */ PositionNormalTexturedTangent),
/* harmony export */   PositionNormalTexturedX2: () => (/* binding */ PositionNormalTexturedX2),
/* harmony export */   PositionTexture: () => (/* binding */ PositionTexture),
/* harmony export */   SphereHull: () => (/* binding */ SphereHull),
/* harmony export */   Vector2d: () => (/* binding */ Vector2d),
/* harmony export */   Vector3d: () => (/* binding */ Vector3d),
/* harmony export */   Vector4d: () => (/* binding */ Vector4d)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./color.js */ "./esm/color.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./render_globals.js */ "./esm/render_globals.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Basic vector datatypes and the like.







// Break some circular dependencies
//
// `Vector2d.cartesianToSpherical2` is almost the same as
// `Coordinates.cartesianToSpherical2`, but the resulting angles are measured in
// degrees rather than radians, and the Coordinates class applies some
// transformations in various places. Out of an abundance of caution we
// reproduce its calculations rotely.

const RC = (3.1415927 / 180); // not thrilled about the low precision!

function geoTo3dDouble(lat, lng) {
    return Vector3d.create(
        Math.cos(lng * RC) * Math.cos(lat * RC) * 1,
        Math.sin(lat * RC) * 1,
        Math.sin(lng * RC) * Math.cos(lat * RC) * 1
    );
}

function coords_cartesianToSpherical2(vector) {
    var rho = Math.sqrt(vector.x * vector.x + vector.y * vector.y + vector.z * vector.z);
    var longitude = Math.atan2(vector.z, vector.x);
    var latitude = Math.asin(vector.y / rho);

    // I don't love this approach but it's what the Coords constructor does
    longitude = longitude + (Math.PI * 80) % (Math.PI * 2);

    // Coordinates.get_lng():
    var lng = longitude / RC;
    if (lng > 180) {
        lng = (-180 + (180 - lng));
    }

    // Coordinates.get_lat():
    var lat = latitude / RC;

    return [lat, lng];
}


// wwtlib.LocationHint
//
// Summary:
//     Describes a custom vertex format structure that contains position and one
//     set of texture coordinates.

var LocationHint = {
    slash: 0,
    backslash: 1,
    top: 2
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("LocationHint", LocationHint);


// wwtlib.PositionTexture

function PositionTexture() {
    this.tu = 0;
    this.tv = 0;
    this.position = new Vector3d();
}

// Summary:
//     Initializes a new instance of the Microsoft.DirectX.Direct3D.CustomVertex.PositionTextured
//     class.
//
// Parameters:
//   pos:
//     A Microsoft.DirectX.Vector3d object that contains the vertex position.
//
//   u:
//     Floating-point value that represents the Microsoft.DirectX.Direct3D.CustomVertex.PositionTextured.#ctor()
//     component of the texture coordinate.
//
//   v:
//     Floating-point value that represents the Microsoft.DirectX.Direct3D.CustomVertex.PositionTextured.#ctor()
//     component of the texture coordinate.
PositionTexture.createPos = function (pos, u, v) {
    var temp = new PositionTexture();
    temp.tu = u * _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileUvMultiple;
    temp.tv = v * _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileUvMultiple;
    temp.position = pos;
    return temp;
};

PositionTexture.createPosRaw = function (pos, u, v) {
    var temp = new PositionTexture();
    temp.tu = u;
    temp.tv = v;
    temp.position = pos;
    return temp;
};

PositionTexture.createPosSize = function (pos, u, v, width, height) {
    var temp = new PositionTexture();
    temp.tu = u * width;
    temp.tv = v * height;
    temp.position = pos;
    return temp;
};

// Summary:
//     Initializes a new instance of the Microsoft.DirectX.Direct3D.CustomVertex.PositionTextured
//     class.
//
// Parameters:
//   xvalue:
//     Floating-point value that represents the x coordinate of the position.
//
//   yvalue:
//     Floating-point value that represents the y coordinate of the position.
//
//   zvalue:
//     Floating-point value that represents the z coordinate of the position.
//
//   u:
//     Floating-point value that represents the Microsoft.DirectX.Direct3D.CustomVertex.PositionTextured.#ctor()
//     component of the texture coordinate.
//
//   v:
//     Floating-point value that represents the Microsoft.DirectX.Direct3D.CustomVertex.PositionTextured.#ctor()
//     component of the texture coordinate.
PositionTexture.create = function (xvalue, yvalue, zvalue, u, v) {
    var temp = new PositionTexture();
    temp.position = Vector3d.create(xvalue, yvalue, zvalue);
    temp.tu = u * _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileUvMultiple;
    temp.tv = v * _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileUvMultiple;
    return temp;
};

var PositionTexture$ = {
    copy: function () {
        var temp = new PositionTexture();
        temp.position = Vector3d.makeCopy(this.position);
        temp.tu = this.tu;
        temp.tv = this.tv;
        return temp;
    },

    toString: function () {
        return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('{0}, {1}, {2}, {3}, {4}', this.position.x, this.position.y, this.position.z, this.tu, this.tv);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PositionTexture", [PositionTexture, PositionTexture$, null]);


// wwtlib.PositionColoredTextured

function PositionColoredTextured() {
    this.tu = 0;
    this.tv = 0;
    this.color = new _color_js__WEBPACK_IMPORTED_MODULE_2__.Color();
    this.position = new Vector3d();
}

// Summary:
//     Initializes a new instance of the Microsoft.DirectX.Direct3D.CustomVertex.PositionTextured
//     class.
//
// Parameters:
//   pos:
//     A Microsoft.DirectX.Vector3d object that contains the vertex position.
//
//   u:
//     Floating-point value that represents the Microsoft.DirectX.Direct3D.CustomVertex.PositionTextured.#ctor()
//     component of the texture coordinate.
//
//   v:
//     Floating-point value that represents the Microsoft.DirectX.Direct3D.CustomVertex.PositionTextured.#ctor()
//     component of the texture coordinate.
PositionColoredTextured.createPos = function (pos, u, v) {
    var temp = new PositionColoredTextured();
    temp.tu = u * _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileUvMultiple;
    temp.tv = v * _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileUvMultiple;
    temp.position = pos;
    return temp;
};

PositionColoredTextured.createPosRaw = function (pos, u, v) {
    var temp = new PositionColoredTextured();
    temp.tu = u;
    temp.tv = v;
    temp.position = pos;
    return temp;
};

PositionColoredTextured.createPosSize = function (pos, u, v, width, height) {
    var temp = new PositionColoredTextured();
    temp.tu = u * width;
    temp.tv = v * height;
    temp.position = pos;
    return temp;
};

// ** Is it a mistake that this is creating a PositionTexture, not PositionColoredTextured? **
//
// Summary:
//     Initializes a new instance of the Microsoft.DirectX.Direct3D.CustomVertex.PositionTextured
//     class.
//
// Parameters:
//   xvalue:
//     Floating-point value that represents the x coordinate of the position.
//
//   yvalue:
//     Floating-point value that represents the y coordinate of the position.
//
//   zvalue:
//     Floating-point value that represents the z coordinate of the position.
//
//   u:
//     Floating-point value that represents the Microsoft.DirectX.Direct3D.CustomVertex.PositionTextured.#ctor()
//     component of the texture coordinate.
//
//   v:
//     Floating-point value that represents the Microsoft.DirectX.Direct3D.CustomVertex.PositionTextured.#ctor()
//     component of the texture coordinate.
PositionColoredTextured.create = function (xvalue, yvalue, zvalue, u, v) {
    var temp = new PositionTexture();
    temp.position = Vector3d.create(xvalue, yvalue, zvalue);
    temp.tu = u * _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileUvMultiple;
    temp.tv = v * _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileUvMultiple;
    return temp;
};

var PositionColoredTextured$ = {
    copy: function () {
        var temp = new PositionTexture();
        temp.position = Vector3d.makeCopy(this.position);
        temp.tu = this.tu;
        temp.tv = this.tv;
        return temp;
    },
    toString: function () {
        return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('{0}, {1}, {2}, {3}, {4}', this.position.x, this.position.y, this.position.z, this.tu, this.tv);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PositionColoredTextured", [PositionColoredTextured, PositionColoredTextured$, null]);


// wwtlib.PositionColored

function PositionColored(pos, color) {
    this.color = new _color_js__WEBPACK_IMPORTED_MODULE_2__.Color();
    this.color = color._clone();
    this.position = pos.copy();
}

var PositionColored$ = {
    copy: function () {
        var temp = new PositionColored(this.position, this.color);
        return temp;
    },

    toString: function () {
        return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('{0}, {1}, {2}, {3}', this.position.x, this.position.y, this.position.z, this.color.toString());
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PositionColored", [PositionColored, PositionColored$, null]);


// wwtlib.PositionNormalTexturedTangent
//
// Summary:
//    Custom vertex format with position, normal, texture coordinate, and tangent vector. The
//    tangent vector is stored in the second texture coordinate.

function PositionNormalTexturedTangent(position, normal, texCoord, tangent) {
    this.x = 0;
    this.y = 0;
    this.z = 0;
    this.nx = 0;
    this.ny = 0;
    this.nz = 0;
    this.tu = 0;
    this.tv = 0;
    this.tanx = 0;
    this.tany = 0;
    this.tanz = 0;
    this.x = position.x;
    this.y = position.y;
    this.z = position.z;
    this.nx = normal.x;
    this.ny = normal.y;
    this.nz = normal.z;
    this.tu = texCoord.x;
    this.tv = texCoord.y;
    this.tanx = tangent.x;
    this.tany = tangent.y;
    this.tanz = tangent.z;
}

var PositionNormalTexturedTangent$ = {
    get_normal: function () {
        return Vector3d.create(this.nx, this.ny, this.nz);
    },

    set_normal: function (value) {
        this.nx = value.x;
        this.ny = value.y;
        this.nz = value.z;
        return value;
    },

    get_position: function () {
        return Vector3d.create(this.x, this.y, this.z);
    },

    set_position: function (value) {
        this.x = value.x;
        this.y = value.y;
        this.z = value.z;
        return value;
    },

    get_texCoord: function () {
        return Vector2d.create(this.tu, this.tv);
    },

    set_texCoord: function (value) {
        this.tu = value.x;
        this.tv = value.y;
        return value;
    },

    get_tangent: function () {
        return Vector3d.create(this.tanx, this.tany, this.tanz);
    },

    set_tangent: function (value) {
        this.tanx = value.x;
        this.tany = value.y;
        this.tanz = value.z;
        return value;
    },

    toString: function () {
        return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('X={0}, Y={1}, Z={2}, Nx={3}, Ny={4}, Nz={5}, U={6}, V={7}, TanX={8}, TanY={9}, TanZ={10}', this.x, this.y, this.z, this.nx, this.ny, this.nz, this.tu, this.tv, this.tanx, this.tany, this.tanz);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PositionNormalTexturedTangent", [PositionNormalTexturedTangent, PositionNormalTexturedTangent$, null]);


// wwtlib.Vector3d

function Vector3d() {
    this.x = 0;
    this.y = 0;
    this.z = 0;
}

Vector3d.create = function (valueX, valueY, valueZ) {
    var temp = new Vector3d();
    temp.x = valueX;
    temp.y = valueY;
    temp.z = valueZ;
    return temp;
};

Vector3d.makeCopy = function (value) {
    var temp = new Vector3d();
    temp.x = value.x;
    temp.y = value.y;
    temp.z = value.z;
    return temp;
};

Vector3d.negate = function (vec) {
    return Vector3d.create(-vec.x, -vec.y, -vec.z);
};

Vector3d.midPoint = function (left, right) {
    var result = Vector3d.create((left.x + right.x) / 2, (left.y + right.y) / 2, (left.z + right.z) / 2);
    return result;
};

Vector3d.midPointByLength = function (left, right) {
    var result = Vector3d.create((left.x + right.x) / 2, (left.y + right.y) / 2, (left.z + right.z) / 2);
    result.normalize();
    result.multiply(left.length());
    return result;
};

Vector3d.get_empty = function () {
    return Vector3d.create(0, 0, 0);
};

Vector3d.addVectors = function (left, right) {
    return Vector3d.create(left.x + right.x, left.y + right.y, left.z + right.z);
};

Vector3d.cross = function (left, right) {
    return Vector3d.create(left.y * right.z - left.z * right.y, left.z * right.x - left.x * right.z, left.x * right.y - left.y * right.x);
};

Vector3d.dot = function (left, right) {
    return left.x * right.x + left.y * right.y + left.z * right.z;
};

Vector3d.getLength = function (source) {
    return Math.sqrt(source.x * source.x + source.y * source.y + source.z * source.z);
};

Vector3d.getLengthSq = function (source) {
    return source.x * source.x + source.y * source.y + source.z * source.z;
};

// Summary:
//     Performs a linear interpolation between two 3-D vectors.
//
// Parameters:
//   left:
//     Source Microsoft.DirectX.Vector3d structure.
//
//   right:
//     Source Microsoft.DirectX.Vector3d structure.
//
//   interpolater:
//     Parameter that linearly interpolates between the vectors.
//
// Returns:
//     A Microsoft.DirectX.Vector3d structure that is the result of the linear interpolation.
Vector3d.lerp = function (left, right, interpolater) {
    return Vector3d.create(left.x * (1 - interpolater) + right.x * interpolater, left.y * (1 - interpolater) + right.y * interpolater, left.z * (1 - interpolater) + right.z * interpolater);
};

Vector3d.midpoint = function (left, right) {
    var tmp = Vector3d.create(left.x * (0.5) + right.x * 0.5, left.y * (0.5) + right.y * 0.5, left.z * (0.5) + right.z * 0.5);
    tmp.normalize();
    return tmp;
};

Vector3d.slerp = function (left, right, interpolater) {
    var dot = Vector3d.dot(left, right);
    while (dot < 0.98) {
        var middle = Vector3d.midpoint(left, right);
        if (interpolater > 0.5) {
            left = middle;
            interpolater -= 0.5;
            interpolater *= 2;
        }
        else {
            right = middle;
            interpolater *= 2;
        }
        dot = Vector3d.dot(left, right);
    }
    var tmp = Vector3d.lerp(left, right, interpolater);
    tmp.normalize();
    return tmp;
};

Vector3d.multiplyScalar = function (source, f) {
    var result = source.copy();
    result.multiply(f);
    return result;
};

Vector3d.scale = function (source, scalingFactor) {
    var result = source;
    result.multiply(scalingFactor);
    return result;
};

Vector3d.subtractVectors = function (left, right) {
    var result = left.copy();
    result.subtract(right);
    return result;
};

Vector3d.parse = function (data) {
    var newVector = new Vector3d();
    var list = data.split(',');
    if (list.length === 3) {
        newVector.x = parseFloat(list[0]);
        newVector.y = parseFloat(list[1]);
        newVector.z = parseFloat(list[2]);
    }
    return newVector;
};

Vector3d._transformCoordinate = function (vector3d, mat) {
    return mat.transform(vector3d);
};

var Vector3d$ = {
    set: function (valueX, valueY, valueZ) {
        this.x = valueX;
        this.y = valueY;
        this.z = valueZ;
    },

    copy: function () {
        var temp = new Vector3d();
        temp.x = this.x;
        temp.y = this.y;
        temp.z = this.z;
        return temp;
    },

    round: function () {
        this.x = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate((this.x * 65536)) / 65536;
        this.y = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate((this.y * 65536)) / 65536;
        this.z = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate((this.z * 65536)) / 65536;
    },

    add: function (source) {
        this.x += source.x;
        this.y += source.y;
        this.z += source.z;
    },

    length: function () {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
    },

    lengthSq: function () {
        return this.x * this.x + this.y * this.y + this.z * this.z;
    },

    multiply: function (s) {
        this.x *= s;
        this.y *= s;
        this.z *= s;
    },

    normalize: function () {
        var length = this.length();
        if (!!length) {
            this.x /= length;
            this.y /= length;
            this.z /= length;
        }
    },

    rotateX: function (radians) {
        var zTemp;
        var yTemp;
        yTemp = this.y * Math.cos(radians) - this.z * Math.sin(radians);
        zTemp = this.y * Math.sin(radians) + this.z * Math.cos(radians);
        this.z = zTemp;
        this.y = yTemp;
    },

    rotateZ: function (radians) {
        var xTemp;
        var yTemp;
        xTemp = this.x * Math.cos(radians) - this.y * Math.sin(radians);
        yTemp = this.x * Math.sin(radians) + this.y * Math.cos(radians);
        this.y = yTemp;
        this.x = xTemp;
    },

    rotateY: function (radians) {
        var zTemp;
        var xTemp;
        zTemp = this.z * Math.cos(radians) - this.x * Math.sin(radians);
        xTemp = this.z * Math.sin(radians) + this.x * Math.cos(radians);
        this.x = xTemp;
        this.z = zTemp;
    },

    subtract: function (source) {
        this.x -= source.x;
        this.y -= source.y;
        this.z -= source.z;
        return this;
    },

    toString: function () {
        return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('{0}, {1}, {2}', this.x, this.y, this.z);
    },

    toSpherical: function () {
        var ascention;
        var declination;
        var radius = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
        var XZ = Math.sqrt(this.x * this.x + this.z * this.z);
        declination = Math.asin(this.y / radius);
        if (!XZ) {
            ascention = 0;
        }
        else if (0 <= this.x) {
            ascention = Math.asin(this.z / XZ);
        }
        else {
            ascention = Math.PI - Math.asin(this.z / XZ);
        }
        return Vector2d.create(((ascention + Math.PI) % (2 * Math.PI)), (declination + (Math.PI / 2)));
    },

    toRaDec: function () {
        var point = this.toSpherical();
        point.x = point.x / Math.PI * 12;
        point.y = (point.y / Math.PI * 180) - 90;
        return point;
    },

    distanceToLine: function (x1, x2) {
        var t1 = Vector3d.subtractVectors(x2, x1);
        var t2 = Vector3d.subtractVectors(x1, this);
        var t3 = Vector3d.cross(t1, t2);
        var d1 = t3.length();
        var t4 = Vector3d.subtractVectors(x2, x1);
        var d2 = t4.length();
        return d1 / d2;
    },

    _transformByMatrics: function (lookAtAdjust) {
        var temp = lookAtAdjust.transform(this);
        this.x = temp.x;
        this.y = temp.y;
        this.z = temp.z;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Vector3d", [Vector3d, Vector3d$, null]);

Vector3d.zero = new Vector3d();


// wwtlib.Vector2d

function Vector2d() {
    this.x = 0;
    this.y = 0;
}

Vector2d.lerp = function (left, right, interpolater) {
    return Vector2d.create(left.x * (1 - interpolater) + right.x * interpolater, left.y * (1 - interpolater) + right.y * interpolater);
};

Vector2d.cartesianToSpherical2 = function (vector) {
    var rho = Math.sqrt(vector.x * vector.x + vector.y * vector.y + vector.z * vector.z);
    var longitude = Math.atan2(vector.z, vector.x);
    var latitude = Math.asin(vector.y / rho);
    return Vector2d.create(longitude / Math.PI * 180, latitude / Math.PI * 180);
};

Vector2d.average3d = function (left, right) {
    var pntLeft = geoTo3dDouble(left.y, left.x);
    var pntRight = geoTo3dDouble(right.y, right.x);
    var pntOut = Vector3d.addVectors(pntLeft, pntRight);
    pntOut.multiply(0.5);
    pntOut.normalize();
    return Vector2d.cartesianToSpherical2(pntOut);
};

Vector2d.create = function (x, y) {
    var temp = new Vector2d();
    temp.x = x;
    temp.y = y;
    return temp;
};

Vector2d.subtract = function (left, right) {
    return Vector2d.create(left.x - right.x, left.y - right.y);
};

var Vector2d$ = {
    distance3d: function (pointB) {
        var pnt1 = geoTo3dDouble(pointB.y, pointB.x);
        var pnt2 = geoTo3dDouble(this.y, this.x);
        var pntDiff = Vector3d.subtractVectors(pnt1, pnt2);
        return pntDiff.length() / Math.PI * 180;
    },

    get_length: function () {
        return Math.sqrt(this.x * this.x + this.y * this.y);
    },

    normalize: function () {
        var length = this.get_length();
        if (!!length) {
            this.x /= length;
            this.y /= length;
        }
    },

    extend: function (factor) {
        this.x = this.x * factor;
        this.y = this.y * factor;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Vector2d", [Vector2d, Vector2d$, null]);


// wwtlib.Matrix3d

function Matrix3d() {
    this._m11 = 0;
    this._m12 = 0;
    this._m13 = 0;
    this._m14 = 0;
    this._m21 = 0;
    this._m22 = 0;
    this._m23 = 0;
    this._m24 = 0;
    this._m31 = 0;
    this._m32 = 0;
    this._m33 = 0;
    this._m34 = 0;
    this._offsetX = 0;
    this._offsetY = 0;
    this._offsetZ = 0;
    this._m44 = 0;
    this._isNotKnownToBeIdentity = false;
}

Matrix3d.create = function (m11, m12, m13, m14, m21, m22, m23, m24, m31, m32, m33, m34, offsetX, offsetY, offsetZ, m44) {
    var temp = new Matrix3d();
    temp._m11 = m11;
    temp._m12 = m12;
    temp._m13 = m13;
    temp._m14 = m14;
    temp._m21 = m21;
    temp._m22 = m22;
    temp._m23 = m23;
    temp._m24 = m24;
    temp._m31 = m31;
    temp._m32 = m32;
    temp._m33 = m33;
    temp._m34 = m34;
    temp._offsetX = offsetX;
    temp._offsetY = offsetY;
    temp._offsetZ = offsetZ;
    temp._m44 = m44;
    temp._isNotKnownToBeIdentity = true;
    return temp;
};

Matrix3d.get_identity = function () {
    var temp = new Matrix3d();
    temp.set(Matrix3d._s_identity);
    return temp;
};

Matrix3d.multiplyMatrix = function (matrix1, matrix2) {
    if (matrix1.get__isDistinguishedIdentity()) {
        return matrix2;
    }
    if (matrix2.get__isDistinguishedIdentity()) {
        return matrix1;
    }
    return Matrix3d.create((((matrix1._m11 * matrix2._m11) + (matrix1._m12 * matrix2._m21)) + (matrix1._m13 * matrix2._m31)) + (matrix1._m14 * matrix2._offsetX), (((matrix1._m11 * matrix2._m12) + (matrix1._m12 * matrix2._m22)) + (matrix1._m13 * matrix2._m32)) + (matrix1._m14 * matrix2._offsetY), (((matrix1._m11 * matrix2._m13) + (matrix1._m12 * matrix2._m23)) + (matrix1._m13 * matrix2._m33)) + (matrix1._m14 * matrix2._offsetZ), (((matrix1._m11 * matrix2._m14) + (matrix1._m12 * matrix2._m24)) + (matrix1._m13 * matrix2._m34)) + (matrix1._m14 * matrix2._m44), (((matrix1._m21 * matrix2._m11) + (matrix1._m22 * matrix2._m21)) + (matrix1._m23 * matrix2._m31)) + (matrix1._m24 * matrix2._offsetX), (((matrix1._m21 * matrix2._m12) + (matrix1._m22 * matrix2._m22)) + (matrix1._m23 * matrix2._m32)) + (matrix1._m24 * matrix2._offsetY), (((matrix1._m21 * matrix2._m13) + (matrix1._m22 * matrix2._m23)) + (matrix1._m23 * matrix2._m33)) + (matrix1._m24 * matrix2._offsetZ), (((matrix1._m21 * matrix2._m14) + (matrix1._m22 * matrix2._m24)) + (matrix1._m23 * matrix2._m34)) + (matrix1._m24 * matrix2._m44), (((matrix1._m31 * matrix2._m11) + (matrix1._m32 * matrix2._m21)) + (matrix1._m33 * matrix2._m31)) + (matrix1._m34 * matrix2._offsetX), (((matrix1._m31 * matrix2._m12) + (matrix1._m32 * matrix2._m22)) + (matrix1._m33 * matrix2._m32)) + (matrix1._m34 * matrix2._offsetY), (((matrix1._m31 * matrix2._m13) + (matrix1._m32 * matrix2._m23)) + (matrix1._m33 * matrix2._m33)) + (matrix1._m34 * matrix2._offsetZ), (((matrix1._m31 * matrix2._m14) + (matrix1._m32 * matrix2._m24)) + (matrix1._m33 * matrix2._m34)) + (matrix1._m34 * matrix2._m44), (((matrix1._offsetX * matrix2._m11) + (matrix1._offsetY * matrix2._m21)) + (matrix1._offsetZ * matrix2._m31)) + (matrix1._m44 * matrix2._offsetX), (((matrix1._offsetX * matrix2._m12) + (matrix1._offsetY * matrix2._m22)) + (matrix1._offsetZ * matrix2._m32)) + (matrix1._m44 * matrix2._offsetY), (((matrix1._offsetX * matrix2._m13) + (matrix1._offsetY * matrix2._m23)) + (matrix1._offsetZ * matrix2._m33)) + (matrix1._m44 * matrix2._offsetZ), (((matrix1._offsetX * matrix2._m14) + (matrix1._offsetY * matrix2._m24)) + (matrix1._offsetZ * matrix2._m34)) + (matrix1._m44 * matrix2._m44));
};

Matrix3d.lookAtLH = function (cameraPosition, cameraTarget, cameraUpVector) {
    var zaxis = Vector3d.subtractVectors(cameraTarget, cameraPosition);
    zaxis.normalize();
    var xaxis = Vector3d.cross(cameraUpVector, zaxis);
    xaxis.normalize();
    var yaxis = Vector3d.cross(zaxis, xaxis);
    var mat = Matrix3d.create(xaxis.x, yaxis.x, zaxis.x, 0, xaxis.y, yaxis.y, zaxis.y, 0, xaxis.z, yaxis.z, zaxis.z, 0, -Vector3d.dot(xaxis, cameraPosition), -Vector3d.dot(yaxis, cameraPosition), -Vector3d.dot(zaxis, cameraPosition), 1);
    return mat;
};

Matrix3d._createIdentity = function () {
    var matrixd = Matrix3d.create(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
    matrixd.set__isDistinguishedIdentity(true);
    return matrixd;
};

Matrix3d.equals = function (matrix1, matrix2) {
    if (matrix1.get__isDistinguishedIdentity() || matrix2.get__isDistinguishedIdentity()) {
        return (matrix1.get_isIdentity() === matrix2.get_isIdentity());
    }
    if ((((matrix1.get_m11() === matrix2.get_m11() && matrix1.get_m12() === matrix2.get_m12()) && (matrix1.get_m13() === matrix2.get_m13() && matrix1.get_m14() === matrix2.get_m14())) && ((matrix1.get_m21() === matrix2.get_m21() && matrix1.get_m22() === matrix2.get_m22()) && (matrix1.get_m23() === matrix2.get_m23() && matrix1.get_m24() === matrix2.get_m24()))) && (((matrix1.get_m31() === matrix2.get_m31() && matrix1.get_m32() === matrix2.get_m32()) && (matrix1.get_m33() === matrix2.get_m33() && matrix1.get_m34() === matrix2.get_m34())) && ((matrix1.get_offsetX() === matrix2.get_offsetX() && matrix1.get_offsetY() === matrix2.get_offsetY()) && matrix1.get_offsetZ() === matrix2.get_offsetZ()))) {
        return matrix1.get_m44() === matrix2.get_m44();
    }
    return false;
};

Matrix3d.fromMatrix2d = function (mat) {
    var mat3d = Matrix3d._createIdentity();
    mat3d.set_m11(mat.m11);
    mat3d.set_m12(mat.m12);
    mat3d.set_m13(mat.m13);
    mat3d.set_m21(mat.m21);
    mat3d.set_m22(mat.m22);
    mat3d.set_m23(mat.m23);
    mat3d.set_m31(mat.m31);
    mat3d.set_m32(mat.m32);
    mat3d.set_m33(mat.m33);
    mat3d._isNotKnownToBeIdentity = true;
    return mat3d;
};

Matrix3d.rotationYawPitchRoll = function (heading, pitch, roll) {
    var matX = Matrix3d._rotationX(pitch);
    var matY = Matrix3d._rotationY(heading);
    var matZ = Matrix3d._rotationZ(roll);
    return Matrix3d.multiplyMatrix(Matrix3d.multiplyMatrix(matY, matX), matZ);
};

Matrix3d._rotationY = function (p) {
    var v = p;
    var matNew = Matrix3d.get_identity();
    matNew._m11 = Math.cos(v);
    matNew._m22 = 1;
    matNew._m31 = Math.sin(v);
    matNew._m13 = -Math.sin(v);
    matNew._m33 = Math.cos(v);
    matNew._isNotKnownToBeIdentity = true;
    return matNew;
};

Matrix3d._rotationX = function (p) {
    var v = p;
    var matNew = Matrix3d.get_identity();
    matNew._m11 = 1;
    matNew._m22 = Math.cos(v);
    matNew._m32 = -Math.sin(v);
    matNew._m23 = Math.sin(v);
    matNew._m33 = Math.cos(v);
    matNew._isNotKnownToBeIdentity = true;
    return matNew;
};

Matrix3d._rotationZ = function (p) {
    var v = p;
    var matNew = Matrix3d.get_identity();
    matNew._m11 = Math.cos(v);
    matNew._m21 = -Math.sin(v);
    matNew._m12 = Math.sin(v);
    matNew._m22 = Math.cos(v);
    matNew._m33 = 1;
    matNew._isNotKnownToBeIdentity = true;
    return matNew;
};

Matrix3d._scaling = function (x, y, z) {
    var matNew = Matrix3d.get_identity();
    matNew._m11 = x;
    matNew._m22 = y;
    matNew._m33 = z;
    matNew._isNotKnownToBeIdentity = true;
    return matNew;
};

Matrix3d._translationXYZ = function (x, y, z) {
    var matNew = Matrix3d.get_identity();
    matNew.set_offsetX(x);
    matNew.set_offsetY(y);
    matNew.set_offsetZ(z);
    matNew._isNotKnownToBeIdentity = true;
    return matNew;
};

Matrix3d.perspectiveFovLH = function (fieldOfViewY, aspectRatio, znearPlane, zfarPlane) {
    var h = 1 / Math.tan(fieldOfViewY / 2);
    var w = h / aspectRatio;
    return Matrix3d.create(w, 0, 0, 0, 0, h, 0, 0, 0, 0, zfarPlane / (zfarPlane - znearPlane), 1, 0, 0, -znearPlane * zfarPlane / (zfarPlane - znearPlane), 0);
};

Matrix3d.perspectiveOffCenterLH = function (left, right, bottom, top, znearPlane, zfarPlane) {
    return Matrix3d.create(2 * znearPlane / (right - left), 0, 0, 0, 0, 2 * znearPlane / (top - bottom), 0, 0, (left + right) / (left - right), (top + bottom) / (bottom - top), zfarPlane / (zfarPlane - znearPlane), 1, 0, 0, znearPlane * zfarPlane / (znearPlane - zfarPlane), 0);
};

Matrix3d.invertMatrix = function (matrix3d) {
    var mat = matrix3d.clone();
    mat.invert();
    return mat;
};

Matrix3d.translation = function (vector3d) {
    return Matrix3d._translationXYZ(vector3d.x, vector3d.y, vector3d.z);
};

Matrix3d.getMapMatrix = function (center, fieldWidth, fieldHeight, rotation) {
    var offsetX = 0;
    var offsetY = 0;
    offsetX = -((center.get_lng() + 180 - (fieldWidth / 2)) / 360);
    offsetY = -(1 - ((center.get_lat() + 90 + (fieldHeight / 2)) / 180));
    var mat = new Matrix2d();
    var scaleX = 0;
    var scaleY = 0;
    scaleX = 360 / fieldWidth;
    scaleY = 180 / fieldHeight;
    mat = Matrix2d.multiply(mat, Matrix2d.translation(offsetX, offsetY));
    mat = Matrix2d.multiply(mat, Matrix2d.scaling(scaleX, scaleY));
    if (!!rotation) {
        mat = Matrix2d.multiply(mat, Matrix2d.translation(-0.5, -0.5));
        mat = Matrix2d.multiply(mat, Matrix2d.rotation(rotation));
        mat = Matrix2d.multiply(mat, Matrix2d.translation(0.5, 0.5));
    }
    return Matrix3d.fromMatrix2d(mat);
};

var Matrix3d$ = {
    clone: function () {
        var tmp = new Matrix3d();
        tmp.set(this);
        return tmp;
    },

    setIdentity: function () {
        this.set(Matrix3d._s_identity);
    },

    set: function (mat) {
        this._m11 = mat._m11;
        this._m12 = mat._m12;
        this._m13 = mat._m13;
        this._m14 = mat._m14;
        this._m21 = mat._m21;
        this._m22 = mat._m22;
        this._m23 = mat._m23;
        this._m24 = mat._m24;
        this._m31 = mat._m31;
        this._m32 = mat._m32;
        this._m33 = mat._m33;
        this._m34 = mat._m34;
        this._offsetX = mat._offsetX;
        this._offsetY = mat._offsetY;
        this._offsetZ = mat._offsetZ;
        this._m44 = mat._m44;
        this._isNotKnownToBeIdentity = true;
    },

    floatArray: function () {
        var array = new Array(16);
        array[0] = this._m11;
        array[1] = this._m12;
        array[2] = this._m13;
        array[3] = this._m14;
        array[4] = this._m21;
        array[5] = this._m22;
        array[6] = this._m23;
        array[7] = this._m24;
        array[8] = this._m31;
        array[9] = this._m32;
        array[10] = this._m33;
        array[11] = this._m34;
        array[12] = this._offsetX;
        array[13] = this._offsetY;
        array[14] = this._offsetZ;
        array[15] = this._m44;
        return array;
    },

    get_isIdentity: function () {
        if (this.get__isDistinguishedIdentity()) {
            return true;
        }
        if (((((this._m11 === 1) && (!this._m12)) && ((!this._m13) && (!this._m14))) && (((!this._m21) && (this._m22 === 1)) && ((!this._m23) && (!this._m24)))) && ((((!this._m31) && (!this._m32)) && ((this._m33 === 1) && (!this._m34))) && (((!this._offsetX) && (!this._offsetY)) && ((!this._offsetZ) && (this._m44 === 1))))) {
            this.set__isDistinguishedIdentity(true);
            return true;
        }
        return false;
    },

    prepend: function (matrix) {
        this.set(Matrix3d.multiplyMatrix(matrix, this));
    },

    append: function (matrix) {
        this._multiply(matrix);
    },

    scale: function (scale) {
        if (this.get__isDistinguishedIdentity()) {
            this._setScaleMatrix(scale);
        }
        else {
            this._m11 *= scale.x;
            this._m12 *= scale.y;
            this._m13 *= scale.z;
            this._m21 *= scale.x;
            this._m22 *= scale.y;
            this._m23 *= scale.z;
            this._m31 *= scale.x;
            this._m32 *= scale.y;
            this._m33 *= scale.z;
            this._offsetX *= scale.x;
            this._offsetY *= scale.y;
            this._offsetZ *= scale.z;
        }
    },

    scalePrepend: function (scale) {
        if (this.get__isDistinguishedIdentity()) {
            this._setScaleMatrix(scale);
        }
        else {
            this._m11 *= scale.x;
            this._m12 *= scale.x;
            this._m13 *= scale.x;
            this._m14 *= scale.x;
            this._m21 *= scale.y;
            this._m22 *= scale.y;
            this._m23 *= scale.y;
            this._m24 *= scale.y;
            this._m31 *= scale.z;
            this._m32 *= scale.z;
            this._m33 *= scale.z;
            this._m34 *= scale.z;
        }
    },

    scaleAt: function (scale, center) {
        if (this.get__isDistinguishedIdentity()) {
            this._setScaleMatrixCenter(scale, center);
        }
        else {
            var num = this._m14 * center.x;
            this._m11 = num + (scale.x * (this._m11 - num));
            num = this._m14 * center.y;
            this._m12 = num + (scale.y * (this._m12 - num));
            num = this._m14 * center.z;
            this._m13 = num + (scale.z * (this._m13 - num));
            num = this._m24 * center.x;
            this._m21 = num + (scale.x * (this._m21 - num));
            num = this._m24 * center.y;
            this._m22 = num + (scale.y * (this._m22 - num));
            num = this._m24 * center.z;
            this._m23 = num + (scale.z * (this._m23 - num));
            num = this._m34 * center.x;
            this._m31 = num + (scale.x * (this._m31 - num));
            num = this._m34 * center.y;
            this._m32 = num + (scale.y * (this._m32 - num));
            num = this._m34 * center.z;
            this._m33 = num + (scale.z * (this._m33 - num));
            num = this._m44 * center.x;
            this._offsetX = num + (scale.x * (this._offsetX - num));
            num = this._m44 * center.y;
            this._offsetY = num + (scale.y * (this._offsetY - num));
            num = this._m44 * center.z;
            this._offsetZ = num + (scale.z * (this._offsetZ - num));
        }
    },

    scaleAtPrepend: function (scale, center) {
        if (this.get__isDistinguishedIdentity()) {
            this._setScaleMatrixCenter(scale, center);
        }
        else {
            var num3 = center.x - (center.x * scale.x);
            var num2 = center.y - (center.y * scale.y);
            var num = center.z - (center.z * scale.z);
            this._offsetX += ((this._m11 * num3) + (this._m21 * num2)) + (this._m31 * num);
            this._offsetY += ((this._m12 * num3) + (this._m22 * num2)) + (this._m32 * num);
            this._offsetZ += ((this._m13 * num3) + (this._m23 * num2)) + (this._m33 * num);
            this._m44 += ((this._m14 * num3) + (this._m24 * num2)) + (this._m34 * num);
            this._m11 *= scale.x;
            this._m12 *= scale.x;
            this._m13 *= scale.x;
            this._m14 *= scale.x;
            this._m21 *= scale.y;
            this._m22 *= scale.y;
            this._m23 *= scale.y;
            this._m24 *= scale.y;
            this._m31 *= scale.z;
            this._m32 *= scale.z;
            this._m33 *= scale.z;
            this._m34 *= scale.z;
        }
    },

    translate: function (offset) {
        if (this.get__isDistinguishedIdentity()) {
            this._setTranslationMatrix(offset);
        }
        else {
            this._m11 += this._m14 * offset.x;
            this._m12 += this._m14 * offset.y;
            this._m13 += this._m14 * offset.z;
            this._m21 += this._m24 * offset.x;
            this._m22 += this._m24 * offset.y;
            this._m23 += this._m24 * offset.z;
            this._m31 += this._m34 * offset.x;
            this._m32 += this._m34 * offset.y;
            this._m33 += this._m34 * offset.z;
            this._offsetX += this._m44 * offset.x;
            this._offsetY += this._m44 * offset.y;
            this._offsetZ += this._m44 * offset.z;
        }
    },

    translatePrepend: function (offset) {
        if (this.get__isDistinguishedIdentity()) {
            this._setTranslationMatrix(offset);
        }
        else {
            this._offsetX += ((this._m11 * offset.x) + (this._m21 * offset.y)) + (this._m31 * offset.z);
            this._offsetY += ((this._m12 * offset.x) + (this._m22 * offset.y)) + (this._m32 * offset.z);
            this._offsetZ += ((this._m13 * offset.x) + (this._m23 * offset.y)) + (this._m33 * offset.z);
            this._m44 += ((this._m14 * offset.x) + (this._m24 * offset.y)) + (this._m34 * offset.z);
        }
    },

    transform: function (point) {
        var temp = new Vector3d();
        if (!this.get__isDistinguishedIdentity()) {
            var x = point.x;
            var y = point.y;
            var z = point.z;
            temp.x = (((x * this._m11) + (y * this._m21)) + (z * this._m31)) + this._offsetX;
            temp.y = (((x * this._m12) + (y * this._m22)) + (z * this._m32)) + this._offsetY;
            temp.z = (((x * this._m13) + (y * this._m23)) + (z * this._m33)) + this._offsetZ;
            if (!this.get_isAffine()) {
                var num4 = (((x * this._m14) + (y * this._m24)) + (z * this._m34)) + this._m44;
                temp.x /= num4;
                temp.y /= num4;
                temp.z /= num4;
            }
        }
        return temp;
    },

    _transformTo: function (input, output) {
        output.x = (((input.x * this._m11) + (input.y * this._m21)) + (input.z * this._m31)) + this._offsetX;
        output.y = (((input.x * this._m12) + (input.y * this._m22)) + (input.z * this._m32)) + this._offsetY;
        output.z = (((input.x * this._m13) + (input.y * this._m23)) + (input.z * this._m33)) + this._offsetZ;
        var num4 = (((input.x * this._m14) + (input.y * this._m24)) + (input.z * this._m34)) + this._m44;
        output.x /= num4;
        output.y /= num4;
        output.z /= num4;
    },

    transformArray: function (points) {
        if (points != null) {
            for (var i = 0; i < points.length; i++) {
                this._multiplyPoint(points[i]);
            }
        }
    },

    projectArrayToScreen: function (input, output) {
        if (input != null && output != null) {
            var affine = this.get_isAffine();
            for (var i = 0; i < input.length; i++) {
                var x = input[i].x;
                var y = input[i].y;
                var z = input[i].z;
                if (affine) {
                    output[i].x = ((((x * this._m11) + (y * this._m21)) + (z * this._m31)) + this._offsetX);
                    output[i].y = ((((x * this._m12) + (y * this._m22)) + (z * this._m32)) + this._offsetY);
                    output[i].z = (((x * this._m13) + (y * this._m23)) + (z * this._m33)) + this._offsetZ;
                }
                else {
                    var num4 = (((x * this._m14) + (y * this._m24)) + (z * this._m34)) + this._m44;
                    output[i].x = (((((x * this._m11) + (y * this._m21)) + (z * this._m31)) + this._offsetX) / num4);
                    output[i].y = (((((x * this._m12) + (y * this._m22)) + (z * this._m32)) + this._offsetY) / num4);
                    output[i].z = ((((x * this._m13) + (y * this._m23)) + (z * this._m33)) + this._offsetZ) / num4;
                }
            }
        }
    },

    projectToScreen: function (input, width, height) {
        var output = new Vector3d();
        var x = input.x;
        var y = input.y;
        var z = input.z;
        if (this.get_isAffine()) {
            output.x = (((((x * this._m11) + (y * this._m21)) + (z * this._m31)) + this._offsetX) + 0.5) * width;
            output.y = (-((((x * this._m12) + (y * this._m22)) + (z * this._m32)) + this._offsetY) + 0.5) * height;
            output.z = (((x * this._m13) + (y * this._m23)) + (z * this._m33)) + this._offsetZ;
        }
        else {
            var num4 = (((x * this._m14) + (y * this._m24)) + (z * this._m34)) + this._m44;
            output.x = ((((((x * this._m11) + (y * this._m21)) + (z * this._m31)) + this._offsetX) / num4) + 0.5) * width;
            output.y = (-(((((x * this._m12) + (y * this._m22)) + (z * this._m32)) + this._offsetY) / num4) + 0.5) * height;
            output.z = ((((x * this._m13) + (y * this._m23)) + (z * this._m33)) + this._offsetZ) / num4;
        }
        return output;
    },

    get_isAffine: function () {
        if (this.get__isDistinguishedIdentity()) {
            return true;
        }
        if (((!this._m14) && (!this._m24)) && (!this._m34)) {
            return (this._m44 === 1);
        }
        return false;
    },

    get_determinant: function () {
        if (this.get__isDistinguishedIdentity()) {
            return 1;
        }
        if (this.get_isAffine()) {
            return this._getNormalizedAffineDeterminant();
        }
        var num6 = (this._m13 * this._m24) - (this._m23 * this._m14);
        var num5 = (this._m13 * this._m34) - (this._m33 * this._m14);
        var num4 = (this._m13 * this._m44) - (this._offsetZ * this._m14);
        var num3 = (this._m23 * this._m34) - (this._m33 * this._m24);
        var num2 = (this._m23 * this._m44) - (this._offsetZ * this._m24);
        var num = (this._m33 * this._m44) - (this._offsetZ * this._m34);
        var num10 = ((this._m22 * num5) - (this._m32 * num6)) - (this._m12 * num3);
        var num9 = ((this._m12 * num2) - (this._m22 * num4)) + (this._offsetY * num6);
        var num8 = ((this._m32 * num4) - (this._offsetY * num5)) - (this._m12 * num);
        var num7 = ((this._m22 * num) - (this._m32 * num2)) + (this._offsetY * num3);
        return ((((this._offsetX * num10) + (this._m31 * num9)) + (this._m21 * num8)) + (this._m11 * num7));
    },

    get_hasInverse: function () {
        return !DoubleUtilities.isZero(this.get_determinant());
    },

    invert: function () {
        if (!this._invertCore()) {
            return;
        }
    },

    transpose: function () {
        var that = new Matrix3d();
        that.set(this);
        this._m12 = that._m21;
        this._m13 = that._m31;
        this._m14 = that._offsetX;
        this._m23 = that._m32;
        this._m24 = that._offsetY;
        this._m34 = that._offsetZ;
        this._m21 = that._m12;
        this._m31 = that._m13;
        this._offsetX = that._m14;
        this._m32 = that._m23;
        this._offsetY = that._m24;
        this._offsetZ = that._m34;
    },

    get_m11: function () {
        if (this.get__isDistinguishedIdentity()) {
            return 1;
        }
        return this._m11;
    },

    set_m11: function (value) {
        if (this.get__isDistinguishedIdentity()) {
            this.set(Matrix3d._s_identity);
            this.set__isDistinguishedIdentity(false);
        }
        this._m11 = value;
        return value;
    },

    get_m12: function () {
        return this._m12;
    },

    set_m12: function (value) {
        if (this.get__isDistinguishedIdentity()) {
            this.set(Matrix3d._s_identity);
            this.set__isDistinguishedIdentity(false);
        }
        this._m12 = value;
        return value;
    },

    get_m13: function () {
        return this._m13;
    },

    set_m13: function (value) {
        if (this.get__isDistinguishedIdentity()) {
            this.set(Matrix3d._s_identity);
            this.set__isDistinguishedIdentity(false);
        }
        this._m13 = value;
        return value;
    },

    get_m14: function () {
        return this._m14;
    },

    set_m14: function (value) {
        if (this.get__isDistinguishedIdentity()) {
            this.set(Matrix3d._s_identity);
            this.set__isDistinguishedIdentity(false);
        }
        this._m14 = value;
        return value;
    },

    get_m21: function () {
        return this._m21;
    },

    set_m21: function (value) {
        if (this.get__isDistinguishedIdentity()) {
            this.set(Matrix3d._s_identity);
            this.set__isDistinguishedIdentity(false);
        }
        this._m21 = value;
        return value;
    },

    get_m22: function () {
        if (this.get__isDistinguishedIdentity()) {
            return 1;
        }
        return this._m22;
    },

    set_m22: function (value) {
        if (this.get__isDistinguishedIdentity()) {
            this.set(Matrix3d._s_identity);
            this.set__isDistinguishedIdentity(false);
        }
        this._m22 = value;
        return value;
    },

    get_m23: function () {
        return this._m23;
    },

    set_m23: function (value) {
        if (this.get__isDistinguishedIdentity()) {
            this.set(Matrix3d._s_identity);
            this.set__isDistinguishedIdentity(false);
        }
        this._m23 = value;
        return value;
    },

    get_m24: function () {
        return this._m24;
    },

    set_m24: function (value) {
        if (this.get__isDistinguishedIdentity()) {
            this.set(Matrix3d._s_identity);
            this.set__isDistinguishedIdentity(false);
        }
        this._m24 = value;
        return value;
    },

    get_m31: function () {
        return this._m31;
    },

    set_m31: function (value) {
        if (this.get__isDistinguishedIdentity()) {
            this.set(Matrix3d._s_identity);
            this.set__isDistinguishedIdentity(false);
        }
        this._m31 = value;
        return value;
    },

    get_m32: function () {
        return this._m32;
    },

    set_m32: function (value) {
        if (this.get__isDistinguishedIdentity()) {
            this.set(Matrix3d._s_identity);
            this.set__isDistinguishedIdentity(false);
        }
        this._m32 = value;
        return value;
    },

    get_m33: function () {
        if (this.get__isDistinguishedIdentity()) {
            return 1;
        }
        return this._m33;
    },

    set_m33: function (value) {
        if (this.get__isDistinguishedIdentity()) {
            this.set(Matrix3d._s_identity);
            this.set__isDistinguishedIdentity(false);
        }
        this._m33 = value;
        return value;
    },

    get_m34: function () {
        return this._m34;
    },

    set_m34: function (value) {
        if (this.get__isDistinguishedIdentity()) {
            this.set(Matrix3d._s_identity);
            this.set__isDistinguishedIdentity(false);
        }
        this._m34 = value;
        return value;
    },

    get_m41: function () {
        return this.get_offsetX();
    },

    set_m41: function (value) {
        this.set_offsetX(value);
        return value;
    },

    get_m42: function () {
        return this.get_offsetY();
    },

    set_m42: function (value) {
        this.set_offsetY(value);
        return value;
    },

    get_m43: function () {
        return this.get_offsetZ();
    },

    set_m43: function (value) {
        this.set_offsetZ(value);
        return value;
    },

    get_offsetX: function () {
        return this._offsetX;
    },

    set_offsetX: function (value) {
        if (this.get__isDistinguishedIdentity()) {
            this.set(Matrix3d._s_identity);
            this.set__isDistinguishedIdentity(false);
        }
        this._offsetX = value;
        return value;
    },

    get_offsetY: function () {
        return this._offsetY;
    },

    set_offsetY: function (value) {
        if (this.get__isDistinguishedIdentity()) {
            this.set(Matrix3d._s_identity);
            this.set__isDistinguishedIdentity(false);
        }
        this._offsetY = value;
        return value;
    },

    get_offsetZ: function () {
        return this._offsetZ;
    },

    set_offsetZ: function (value) {
        if (this.get__isDistinguishedIdentity()) {
            this.set(Matrix3d._s_identity);
            this.set__isDistinguishedIdentity(false);
        }
        this._offsetZ = value;
        return value;
    },

    get_m44: function () {
        if (this.get__isDistinguishedIdentity()) {
            return 1;
        }
        return this._m44;
    },

    set_m44: function (value) {
        if (this.get__isDistinguishedIdentity()) {
            this.set(Matrix3d._s_identity);
            this.set__isDistinguishedIdentity(false);
        }
        this._m44 = value;
        return value;
    },

    _setScaleMatrix: function (scale) {
        this._m11 = scale.x;
        this._m22 = scale.y;
        this._m33 = scale.z;
        this._m44 = 1;
        this.set__isDistinguishedIdentity(false);
    },

    _setScaleMatrixCenter: function (scale, center) {
        this._m11 = scale.x;
        this._m22 = scale.y;
        this._m33 = scale.z;
        this._m44 = 1;
        this._offsetX = center.x - (center.x * scale.x);
        this._offsetY = center.y - (center.y * scale.y);
        this._offsetZ = center.z - (center.z * scale.z);
        this.set__isDistinguishedIdentity(false);
    },

    _setTranslationMatrix: function (offset) {
        this._m11 = this._m22 = this._m33 = this._m44 = 1;
        this._offsetX = offset.x;
        this._offsetY = offset.y;
        this._offsetZ = offset.z;
        this.set__isDistinguishedIdentity(false);
    },

    _multiplyPoint: function (point) {
        if (!this.get__isDistinguishedIdentity()) {
            var x = point.x;
            var y = point.y;
            var z = point.z;
            point.x = (((x * this._m11) + (y * this._m21)) + (z * this._m31)) + this._offsetX;
            point.y = (((x * this._m12) + (y * this._m22)) + (z * this._m32)) + this._offsetY;
            point.z = (((x * this._m13) + (y * this._m23)) + (z * this._m33)) + this._offsetZ;
            if (!this.get_isAffine()) {
                var num4 = (((x * this._m14) + (y * this._m24)) + (z * this._m34)) + this._m44;
                point.x /= num4;
                point.y /= num4;
                point.z /= num4;
            }
        }
    },

    multiplyVector: function (vector) {
        if (!this.get__isDistinguishedIdentity()) {
            var x = vector.x;
            var y = vector.y;
            var z = vector.z;
            vector.x = ((x * this._m11) + (y * this._m21)) + (z * this._m31);
            vector.y = ((x * this._m12) + (y * this._m22)) + (z * this._m32);
            vector.z = ((x * this._m13) + (y * this._m23)) + (z * this._m33);
        }
    },

    _getNormalizedAffineDeterminant: function () {
        var num3 = (this._m12 * this._m23) - (this._m22 * this._m13);
        var num2 = (this._m32 * this._m13) - (this._m12 * this._m33);
        var num = (this._m22 * this._m33) - (this._m32 * this._m23);
        return (((this._m31 * num3) + (this._m21 * num2)) + (this._m11 * num));
    },

    _normalizedAffineInvert: function () {
        var num11 = (this._m12 * this._m23) - (this._m22 * this._m13);
        var num10 = (this._m32 * this._m13) - (this._m12 * this._m33);
        var num9 = (this._m22 * this._m33) - (this._m32 * this._m23);
        var num8 = ((this._m31 * num11) + (this._m21 * num10)) + (this._m11 * num9);
        if (DoubleUtilities.isZero(num8)) {
            return false;
        }
        var num20 = (this._m21 * this._m13) - (this._m11 * this._m23);
        var num19 = (this._m11 * this._m33) - (this._m31 * this._m13);
        var num18 = (this._m31 * this._m23) - (this._m21 * this._m33);
        var num7 = (this._m11 * this._m22) - (this._m21 * this._m12);
        var num6 = (this._m11 * this._m32) - (this._m31 * this._m12);
        var num5 = (this._m11 * this._offsetY) - (this._offsetX * this._m12);
        var num4 = (this._m21 * this._m32) - (this._m31 * this._m22);
        var num3 = (this._m21 * this._offsetY) - (this._offsetX * this._m22);
        var num2 = (this._m31 * this._offsetY) - (this._offsetX * this._m32);
        var num17 = ((this._m23 * num5) - (this._offsetZ * num7)) - (this._m13 * num3);
        var num16 = ((this._m13 * num2) - (this._m33 * num5)) + (this._offsetZ * num6);
        var num15 = ((this._m33 * num3) - (this._offsetZ * num4)) - (this._m23 * num2);
        var num14 = num7;
        var num13 = -num6;
        var num12 = num4;
        var num = 1 / num8;
        this._m11 = num9 * num;
        this._m12 = num10 * num;
        this._m13 = num11 * num;
        this._m21 = num18 * num;
        this._m22 = num19 * num;
        this._m23 = num20 * num;
        this._m31 = num12 * num;
        this._m32 = num13 * num;
        this._m33 = num14 * num;
        this._offsetX = num15 * num;
        this._offsetY = num16 * num;
        this._offsetZ = num17 * num;
        return true;
    },

    _invertCore: function () {
        if (!this.get__isDistinguishedIdentity()) {
            if (this.get_isAffine()) {
                return this._normalizedAffineInvert();
            }
            var num7 = (this._m13 * this._m24) - (this._m23 * this._m14);
            var num6 = (this._m13 * this._m34) - (this._m33 * this._m14);
            var num5 = (this._m13 * this._m44) - (this._offsetZ * this._m14);
            var num4 = (this._m23 * this._m34) - (this._m33 * this._m24);
            var num3 = (this._m23 * this._m44) - (this._offsetZ * this._m24);
            var num2 = (this._m33 * this._m44) - (this._offsetZ * this._m34);
            var num12 = ((this._m22 * num6) - (this._m32 * num7)) - (this._m12 * num4);
            var num11 = ((this._m12 * num3) - (this._m22 * num5)) + (this._offsetY * num7);
            var num10 = ((this._m32 * num5) - (this._offsetY * num6)) - (this._m12 * num2);
            var num9 = ((this._m22 * num2) - (this._m32 * num3)) + (this._offsetY * num4);
            var num8 = (((this._offsetX * num12) + (this._m31 * num11)) + (this._m21 * num10)) + (this._m11 * num9);
            if (DoubleUtilities.isZero(num8)) {
                return false;
            }
            var num24 = ((this._m11 * num4) - (this._m21 * num6)) + (this._m31 * num7);
            var num23 = ((this._m21 * num5) - (this._offsetX * num7)) - (this._m11 * num3);
            var num22 = ((this._m11 * num2) - (this._m31 * num5)) + (this._offsetX * num6);
            var num21 = ((this._m31 * num3) - (this._offsetX * num4)) - (this._m21 * num2);
            num7 = (this._m11 * this._m22) - (this._m21 * this._m12);
            num6 = (this._m11 * this._m32) - (this._m31 * this._m12);
            num5 = (this._m11 * this._offsetY) - (this._offsetX * this._m12);
            num4 = (this._m21 * this._m32) - (this._m31 * this._m22);
            num3 = (this._m21 * this._offsetY) - (this._offsetX * this._m22);
            num2 = (this._m31 * this._offsetY) - (this._offsetX * this._m32);
            var num20 = ((this._m13 * num4) - (this._m23 * num6)) + (this._m33 * num7);
            var num19 = ((this._m23 * num5) - (this._offsetZ * num7)) - (this._m13 * num3);
            var num18 = ((this._m13 * num2) - (this._m33 * num5)) + (this._offsetZ * num6);
            var num17 = ((this._m33 * num3) - (this._offsetZ * num4)) - (this._m23 * num2);
            var num16 = ((this._m24 * num6) - (this._m34 * num7)) - (this._m14 * num4);
            var num15 = ((this._m14 * num3) - (this._m24 * num5)) + (this._m44 * num7);
            var num14 = ((this._m34 * num5) - (this._m44 * num6)) - (this._m14 * num2);
            var num13 = ((this._m24 * num2) - (this._m34 * num3)) + (this._m44 * num4);
            var num = 1 / num8;
            this._m11 = num9 * num;
            this._m12 = num10 * num;
            this._m13 = num11 * num;
            this._m14 = num12 * num;
            this._m21 = num21 * num;
            this._m22 = num22 * num;
            this._m23 = num23 * num;
            this._m24 = num24 * num;
            this._m31 = num13 * num;
            this._m32 = num14 * num;
            this._m33 = num15 * num;
            this._m34 = num16 * num;
            this._offsetX = num17 * num;
            this._offsetY = num18 * num;
            this._offsetZ = num19 * num;
            this._m44 = num20 * num;
        }
        return true;
    },

    get__isDistinguishedIdentity: function () {
        return !this._isNotKnownToBeIdentity;
    },

    set__isDistinguishedIdentity: function (value) {
        this._isNotKnownToBeIdentity = !value;
        return value;
    },

    _multiply: function (mat) {
        this.set(Matrix3d.multiplyMatrix(this, mat));
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Matrix3d", [Matrix3d, Matrix3d$, null]);

Matrix3d._s_identity = Matrix3d._createIdentity();


// wwtlib.Matrix2d

function Matrix2d() {
    this.m11 = 1;
    this.m12 = 0;
    this.m13 = 0;
    this.m21 = 0;
    this.m22 = 1;
    this.m23 = 0;
    this.m31 = 0;
    this.m32 = 0;
    this.m33 = 1;
}

Matrix2d.create = function (m11, m12, m13, m21, m22, m23, m31, m32, m33) {
    var mat = new Matrix2d();
    mat.m11 = m11;
    mat.m12 = m12;
    mat.m13 = m13;
    mat.m21 = m21;
    mat.m22 = m22;
    mat.m23 = m23;
    mat.m31 = m31;
    mat.m32 = m32;
    mat.m33 = m33;
    return mat;
};

Matrix2d.rotation = function (angle) {
    var mat = new Matrix2d();
    mat.m11 = Math.cos(angle);
    mat.m21 = -Math.sin(angle);
    mat.m12 = Math.sin(angle);
    mat.m22 = Math.cos(angle);
    return mat;
};

Matrix2d.translation = function (x, y) {
    var mat = new Matrix2d();
    mat.m31 = x;
    mat.m32 = y;
    return mat;
};

Matrix2d.scaling = function (x, y) {
    var mat = new Matrix2d();
    mat.m11 = x;
    mat.m22 = y;
    return mat;
};

Matrix2d.multiply = function (matrix1, matrix2) {
    return Matrix2d.create((((matrix1.m11 * matrix2.m11) + (matrix1.m12 * matrix2.m21)) + (matrix1.m13 * matrix2.m31)), (((matrix1.m11 * matrix2.m12) + (matrix1.m12 * matrix2.m22)) + (matrix1.m13 * matrix2.m32)), (((matrix1.m11 * matrix2.m13) + (matrix1.m12 * matrix2.m23)) + (matrix1.m13 * matrix2.m33)), (((matrix1.m21 * matrix2.m11) + (matrix1.m22 * matrix2.m21)) + (matrix1.m23 * matrix2.m31)), (((matrix1.m21 * matrix2.m12) + (matrix1.m22 * matrix2.m22)) + (matrix1.m23 * matrix2.m32)), (((matrix1.m21 * matrix2.m13) + (matrix1.m22 * matrix2.m23)) + (matrix1.m23 * matrix2.m33)), (((matrix1.m31 * matrix2.m11) + (matrix1.m32 * matrix2.m21)) + (matrix1.m33 * matrix2.m31)), (((matrix1.m31 * matrix2.m12) + (matrix1.m32 * matrix2.m22)) + (matrix1.m33 * matrix2.m32)), (((matrix1.m31 * matrix2.m13) + (matrix1.m32 * matrix2.m23)) + (matrix1.m33 * matrix2.m33)));
};

Matrix2d.rotateAt = function (angle, pnt) {
    var matT0 = Matrix2d.translation(-pnt.x, -pnt.y);
    var matR = Matrix2d.rotation(angle);
    var matT1 = Matrix2d.translation(pnt.x, pnt.y);
    return Matrix2d.multiply(Matrix2d.multiply(matT0, matR), matT1);
};

var Matrix2d$ = {
    _transformPoints: function (points) {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(points);
        while ($enum1.moveNext()) {
            var pnt = $enum1.current;
            this.multiplyPoint(pnt);
        }
    },

    multiplyPoint: function (point) {
        var x = point.x;
        var y = point.y;
        point.x = (((x * this.m11) + (y * this.m21)) + this.m31);
        point.y = (((x * this.m12) + (y * this.m22)) + this.m32);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Matrix2d", [Matrix2d, Matrix2d$, null]);


// wwtlib.DoubleUtilities

function DoubleUtilities() { }

DoubleUtilities.isZero = function (value) {
    return (Math.abs(value) < 2.22044604925031E-50);
};

DoubleUtilities.isOne = function (value) {
    return (Math.abs(value - 1) < 2.22044604925031E-50);
};

DoubleUtilities.radiansToDegrees = function (radians) {
    return radians * 180 / Math.PI;
};

DoubleUtilities.degreesToRadians = function (degrees) {
    return degrees * Math.PI / 180;
};

DoubleUtilities.clamp = function (x, min, max) {
    return Math.max(min, Math.min(x, max));
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("DoubleUtilities", [DoubleUtilities, null, null]);


// wwtlib.PlaneD

function PlaneD(valuePointA, valuePointB, valuePointC, valuePointD) {
    this.a = 0;
    this.b = 0;
    this.c = 0;
    this.d = 0;
    this.a = valuePointA;
    this.b = valuePointB;
    this.c = valuePointC;
    this.d = valuePointD;
}

var PlaneD$ = {
    normalize: function () {
        var length = Math.sqrt(this.a * this.a + this.b * this.b + this.c * this.c);
        this.a /= length;
        this.b /= length;
        this.c /= length;
        this.d /= length;
    },

    dot: function (v) {
        return this.b * v.y + this.c * v.z + this.d * v.w + this.a * v.x;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PlaneD", [PlaneD, PlaneD$, null]);


// wwtlib.Vector4d

function Vector4d(valueX, valueY, valueZ, valueW) {
    this.x = 0;
    this.y = 0;
    this.z = 0;
    this.w = 0;
    this.x = valueX;
    this.y = valueY;
    this.z = valueZ;
    this.w = valueW;
}

var Vector4d$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Vector4d", [Vector4d, Vector4d$, null]);


// wwtlib.PositionNormalTexturedX2

// Summary:
//     Initializes a new instance of the PositionNormalTexturedX2
//     class.
//
// Parameters:
//   pos:
//     A Microsoft.DirectX.Vector3 object that contains the vertex position.
//
//   nor:
//     A Microsoft.DirectX.Vector3 object that contains the vertex normal data.
//
//   u:
//     Floating-point value that represents the PositionNormalTexturedX2.#ctor()
//     component of the texture coordinate.
//
//   v:
//     Floating-point value that represents the PositionNormalTexturedX2.#ctor()
//     component of the texture coordinate.
function PositionNormalTexturedX2() {
    this.x = 0;
    this.y = 0;
    this.z = 0;
    this.nx = 0;
    this.ny = 0;
    this.nz = 0;
    this.tu = 0;
    this.tv = 0;
    this.tu1 = 0;
    this.tv1 = 0;
}

PositionNormalTexturedX2.create2UV = function (pos, nor, u, v, u1, v1) {
    var temp = new PositionNormalTexturedX2();
    temp.x = pos.x;
    temp.y = pos.y;
    temp.z = pos.z;
    temp.nx = nor.x;
    temp.ny = nor.y;
    temp.nz = nor.z;
    temp.tu = u;
    temp.tv = v;
    temp.tu1 = u1;
    temp.tv1 = v1;
    return temp;
};

PositionNormalTexturedX2.create = function (pos, nor, u, v) {
    var temp = new PositionNormalTexturedX2();
    temp.x = pos.x;
    temp.y = pos.y;
    temp.z = pos.z;
    temp.nx = nor.x;
    temp.ny = nor.y;
    temp.nz = nor.z;
    temp.tu = u;
    temp.tv = v;
    var result = coords_cartesianToSpherical2(nor);
    temp.tu1 = ((result[1] + 180) / 360);
    temp.tv1 = (1 - ((result[0] + 90) / 180));
    return temp;
};

// Summary:
//     Initializes a new instance of the PositionNormalTexturedX2
//     class.
//
// Parameters:
//   xvalue:
//     Floating-point value that represents the x coordinate of the position.
//
//   yvalue:
//     Floating-point value that represents the y coordinate of the position.
//
//   zvalue:
//     Floating-point value that represents the z coordinate of the position.
//
//   nxvalue:
//     Floating-point value that represents the nx coordinate of the vertex normal.
//
//   nyvalue:
//     Floating-point value that represents the ny coordinate of the vertex normal.
//
//   nzvalue:
//     Floating-point value that represents the nz coordinate of the vertex normal.
//
//   u:
//     Floating-point value that represents the PositionNormalTexturedX2.#ctor()
//     component of the texture coordinate.
//
//   v:
//     Floating-point value that represents the PositionNormalTexturedX2.#ctor()
//     component of the texture coordinate.
PositionNormalTexturedX2.createLong2UV = function (xvalue, yvalue, zvalue, nxvalue, nyvalue, nzvalue, u, v, u1, v1) {
    var temp = new PositionNormalTexturedX2();
    temp.x = xvalue;
    temp.y = yvalue;
    temp.z = zvalue;
    temp.nx = nxvalue;
    temp.ny = nyvalue;
    temp.nz = nzvalue;
    temp.tu = u;
    temp.tv = v;
    temp.tu1 = u1;
    temp.tv1 = v1;
    return temp;
};

PositionNormalTexturedX2.get_strideSize = function () {
    return 40;
};

var PositionNormalTexturedX2$ = {
    get_lat: function () {
        return (1 - this.tv1) * 180 - 90;
    },

    set_lat: function (value) {
        this.tv1 = (1 - ((value + 90) / 180));
        return value;
    },

    get_lng: function () {
        return this.tu1 * 360 - 180;
    },

    set_lng: function (value) {
        this.tu1 = ((value + 180) / 360);
        return value;
    },

    createLong: function (xvalue, yvalue, zvalue, nxvalue, nyvalue, nzvalue, u, v) {
        var temp = new PositionNormalTexturedX2();
        temp.x = xvalue;
        temp.y = yvalue;
        temp.z = zvalue;
        temp.nx = nxvalue;
        temp.ny = nyvalue;
        temp.nz = nzvalue;
        temp.tu = u;
        temp.tv = v;
        var result = coords_cartesianToSpherical2(Vector3d.create(this.nx, this.ny, this.nz));
        temp.tu1 = ((result[1] + 180) / 360);
        temp.tv1 = (1 - ((result[0] + 90) / 180));
        return temp;
    },

    get_normal: function () {
        return Vector3d.create(this.nx, this.ny, this.nz);
    },

    set_normal: function (value) {
        this.nx = value.x;
        this.ny = value.y;
        this.nz = value.z;
        return value;
    },

    get_position: function () {
        return Vector3d.create(this.x, this.y, this.y);
    },

    set_position: function (value) {
        this.x = value.x;
        this.y = value.y;
        this.z = value.z;
        return value;
    },

    toString: function () {
        return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('X={0}, Y={1}, Z={2}, Nx={3}, Ny={4}, Nz={5}, U={6}, V={7}, U1={8}, U2={9}', this.x, this.y, this.z, this.nx, this.ny, this.nz, this.tu, this.tv, this.tu1, this.tv1);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PositionNormalTexturedX2", [PositionNormalTexturedX2, PositionNormalTexturedX2$, null]);


// wwtlib.PositionNormalTextured

// Summary:
//     Initializes a new instance of the PositionNormalTextured
//     class.
//
// Parameters:
//   pos:
//     A Microsoft.DirectX.Vector3 object that contains the vertex position.
//
//   nor:
//     A Microsoft.DirectX.Vector3 object that contains the vertex normal data.
//
//   u:
//     Floating-point value that represents the PositionNormalTextured.#ctor()
//     component of the texture coordinate.
//
//   v:
//     Floating-point value that represents the PositionNormalTextured.#ctor()
//     component of the texture coordinate.
function PositionNormalTextured() {
    this.x = 0;
    this.y = 0;
    this.z = 0;
    this.nx = 0;
    this.ny = 0;
    this.nz = 0;
    this.tu = 0;
    this.tv = 0;
}

PositionNormalTextured.createShort = function (pos, nor, u, v) {
    var temp = new PositionNormalTextured();
    temp.x = pos.x;
    temp.y = pos.y;
    temp.z = pos.z;
    temp.nx = nor.x;
    temp.ny = nor.y;
    temp.nz = nor.z;
    temp.tu = u;
    temp.tv = v;
    return temp;
};

PositionNormalTextured._create = function (x, y, z, nx, ny, nz, tu, tv) {
    var temp = new PositionNormalTextured();
    temp.x = x;
    temp.y = y;
    temp.z = z;
    temp.nx = nx;
    temp.ny = ny;
    temp.nz = nz;
    temp.tu = tu;
    temp.tv = tv;
    return temp;
};

PositionNormalTextured.createUV = function (pos, nor, uv) {
    var temp = new PositionNormalTextured();
    temp.x = pos.x;
    temp.y = pos.y;
    temp.z = pos.z;
    temp.nx = nor.x;
    temp.ny = nor.y;
    temp.nz = nor.z;
    temp.tu = uv.x;
    temp.tv = uv.y;
    return temp;
};

var PositionNormalTextured$ = {
    // ** is it a mistake that this returns an X2 class? almost surely! **
    //
    // Summary:
    //     Initializes a new instance of the PositionNormalTextured
    //     class.
    //
    // Parameters:
    //   xvalue:
    //     Floating-point value that represents the x coordinate of the position.
    //
    //   yvalue:
    //     Floating-point value that represents the y coordinate of the position.
    //
    //   zvalue:
    //     Floating-point value that represents the z coordinate of the position.
    //
    //   nxvalue:
    //     Floating-point value that represents the nx coordinate of the vertex normal.
    //
    //   nyvalue:
    //     Floating-point value that represents the ny coordinate of the vertex normal.
    //
    //   nzvalue:
    //     Floating-point value that represents the nz coordinate of the vertex normal.
    //
    //   u:
    //     Floating-point value that represents the PositionNormalTexturedX2.#ctor()
    //     component of the texture coordinate.
    //
    //   v:
    //     Floating-point value that represents the PositionNormalTexturedX2.#ctor()
    //     component of the texture coordinate.
    createLong: function (xvalue, yvalue, zvalue, nxvalue, nyvalue, nzvalue, u, v) {
        var temp = new PositionNormalTexturedX2();
        temp.x = xvalue;
        temp.y = yvalue;
        temp.z = zvalue;
        temp.nx = nxvalue;
        temp.ny = nyvalue;
        temp.nz = nzvalue;
        temp.tu = u;
        temp.tv = v;
        return temp;
    },

    get_normal: function () {
        return Vector3d.create(this.nx, this.ny, this.nz);
    },

    set_normal: function (value) {
        this.nx = value.x;
        this.ny = value.y;
        this.nz = value.z;
        return value;
    },

    get_position: function () {
        return Vector3d.create(this.x, this.y, this.z);
    },

    set_position: function (value) {
        this.x = value.x;
        this.y = value.y;
        this.z = value.z;
        return value;
    },

    toString: function () {
        return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('X={0}, Y={1}, Z={2}, Nx={3}, Ny={4}, Nz={5}, U={6}, V={7}, U1={8}, U2={9}', this.x, this.y, this.z, this.nx, this.ny, this.nz, this.tu, this.tv);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PositionNormalTextured", [PositionNormalTextured, PositionNormalTextured$, null]);


// wwtlib.SphereHull

function SphereHull() {
    this.radius = 0;
}

SphereHull._create = function (Center, Radius) {
    var temp = new SphereHull();
    temp.center = Center;
    temp.radius = Radius;
    return temp;
};

var SphereHull$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("SphereHull", [SphereHull, SphereHull$, null]);



// wwtlib.ConvexHull

function ConvexHull() {
}

ConvexHull.findEnclosingSphereFast = function (points) {
    var result = new SphereHull();

    //Find the center of all points.

    var count = points.length;
    var center = Vector3d.zero;
    for (var i = 0; i < count; ++i) {
        center.add(points[i]);
    }

    //This is the center of our sphere.
    center.multiply(1 / count);

    //Find the radius of the sphere
    var radius = 0;
    for (var i = 0; i < count; ++i) {
        //We are doing a relative distance comparison to find the maximum
        //distance from the center of our sphere.
        var distance = Vector3d.getLengthSq(Vector3d.subtractVectors(points[i], center));
        if (distance > radius) {
            radius = distance;
        }
    }

    //Find the real distance from the DistanceSquared.
    radius = Math.sqrt(radius);

    //Construct the sphere.
    result.center = center;
    result.radius = radius;
    return result;
};

ConvexHull.findEnclosingSphere = function (list) {
    var Center = new Vector3d();
    var Radius = 0;
    var count = list.length;
    var i;
    var dx;
    var dy;
    var dz;
    var rad_sq;
    var xspan;
    var yspan;
    var zspan;
    var maxspan;
    var old_to_p;
    var old_to_p_sq;
    var old_to_new;
    var xmin = new Vector3d();
    var xmax = new Vector3d();
    var ymin = new Vector3d();
    var ymax = new Vector3d();
    var zmin = new Vector3d();
    var zmax = new Vector3d();
    var dia1 = new Vector3d();
    var dia2 = new Vector3d();

    // FIRST PASS: find 6 minima/maxima points
    xmin.x = ymin.y = zmin.z = 100000000;
    xmax.x = ymax.y = zmax.z = -1000000000;
    for (i = 0; i < count; i++) {
        var current = list[i];
        if (current.x < xmin.x) {
            xmin = current;
        }
        if (current.x > xmax.x) {
            xmax = current;
        }
        if (current.y < ymin.y) {
            ymin = current;
        }
        if (current.y > ymax.y) {
            ymax = current;
        }
        if (current.z < zmin.z) {
            zmin = current;
        }
        if (current.z > zmax.z) {
            zmax = current;
        }
    }

    // Set xspan = distance between the 2 points xmin & xmax (squared)
    dx = xmax.x - xmin.x;
    dy = xmax.y - xmin.y;
    dz = xmax.z - xmin.z;
    xspan = dx * dx + dy * dy + dz * dz;

    // Same for y & z spans
    dx = ymax.x - ymin.x;
    dy = ymax.y - ymin.y;
    dz = ymax.z - ymin.z;
    yspan = dx * dx + dy * dy + dz * dz;
    dx = zmax.x - zmin.x;
    dy = zmax.y - zmin.y;
    dz = zmax.z - zmin.z;
    zspan = dx * dx + dy * dy + dz * dz;
    dia1 = xmin;
    dia2 = xmax;
    maxspan = xspan;
    if (yspan > maxspan) {
        maxspan = yspan;
        dia1 = ymin;
        dia2 = ymax;
    }
    if (zspan > maxspan) {
        dia1 = zmin;
        dia2 = zmax;
    }

    // dia1,dia2 is a diameter of initial sphere
    // calc initial center
    Center.x = (dia1.x + dia2.x) / 2;
    Center.y = (dia1.y + dia2.y) / 2;
    Center.z = (dia1.z + dia2.z) / 2;

    // calculate initial radius**2 and radius
    dx = dia2.x - Center.x;
    dy = dia2.y - Center.y;
    dz = dia2.z - Center.z;
    rad_sq = dx * dx + dy * dy + dz * dz;
    Radius = Math.sqrt(rad_sq);

    // SECOND PASS: increment current sphere
    for (i = 0; i < count; i++) {
        var current = list[i];
        dx = current.x - Center.x;
        dy = current.y - Center.y;
        dz = current.z - Center.z;
        old_to_p_sq = dx * dx + dy * dy + dz * dz;
        if (old_to_p_sq > rad_sq) {
            // this point is outside of current sphere
            old_to_p = Math.sqrt(old_to_p_sq);

            // calc radius of new sphere
            Radius = (Radius + old_to_p) / 2;
            rad_sq = Radius * Radius;
            old_to_new = old_to_p - Radius;

            // calc center of new sphere
            Center.x = (Radius * Center.x + old_to_new * current.x) / old_to_p;
            Center.y = (Radius * Center.y + old_to_new * current.y) / old_to_p;
            Center.z = (Radius * Center.z + old_to_new * current.z) / old_to_p;
        }
    }

    return SphereHull._create(Center, Radius);
};

var ConvexHull$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("ConvexHull", [ConvexHull, ConvexHull$, null]);


/***/ }),

/***/ "./esm/equirectangular_tile.js":
/*!*************************************!*\
  !*** ./esm/equirectangular_tile.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EquirectangularTile: () => (/* binding */ EquirectangularTile)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./graphics/webgl_constants.js */ "./esm/graphics/webgl_constants.js");
/* harmony import */ var _render_triangle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./render_triangle.js */ "./esm/render_triangle.js");
/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tile.js */ "./esm/tile.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A tile in a pyramid that uses an equirectangular projection.










// wwtlib.EquirectangularTile

function EquirectangularTile() {
    this._tileDegrees$1 = 0;
    this._topDown$1 = true;
    this._subDivisionLevel$1 = 1;
    _tile_js__WEBPACK_IMPORTED_MODULE_6__.Tile.call(this);
}

EquirectangularTile.create = function (level, x, y, dataset, parent) {
    var temp = new EquirectangularTile();
    temp.parent = parent;
    temp.level = level;
    temp.tileX = x;
    temp.tileY = y;
    temp.dataset = dataset;
    temp._topDown$1 = !dataset.get_bottomsUp();
    temp.computeBoundingSphere();
    return temp;
};

var EquirectangularTile$ = {
    computeBoundingSphere: function () {
        if (!this._topDown$1) {
            this.computeBoundingSphereBottomsUp();
            return;
        }
        this._tileDegrees$1 = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level);
        var latMin = (90 - ((this.tileY) * this._tileDegrees$1));
        var latMax = (90 - (((this.tileY + 1)) * this._tileDegrees$1));
        var lngMin = ((this.tileX * this._tileDegrees$1) - 180);
        var lngMax = ((((this.tileX + 1)) * this._tileDegrees$1) - 180);
        var latCenter = (latMin + latMax) / 2;
        var lngCenter = (lngMin + lngMax) / 2;
        this.sphereCenter = this.geoTo3d(latCenter, lngCenter, false);
        this.topLeft = this.geoTo3d(latMin, lngMin, false);
        this.bottomRight = this.geoTo3d(latMax, lngMax, false);
        this.topRight = this.geoTo3d(latMin, lngMax, false);
        this.bottomLeft = this.geoTo3d(latMax, lngMin, false);
        var distVect = this.geoTo3d(latMin, lngMin, false);
        distVect.subtract(this.sphereCenter);
        this.sphereRadius = distVect.length();
        this._tileDegrees$1 = lngMax - lngMin;
    },

    computeBoundingSphereBottomsUp: function () {
        var tileDegrees = this.dataset.get_baseTileDegrees() / (Math.pow(2, this.level));
        var latMin = (-90 + (((this.tileY + 1)) * tileDegrees));
        var latMax = (-90 + ((this.tileY) * tileDegrees));
        var lngMin = ((this.tileX * tileDegrees) - 180);
        var lngMax = ((((this.tileX + 1)) * tileDegrees) - 180);
        var latCenter = (latMin + latMax) / 2;
        var lngCenter = (lngMin + lngMax) / 2;
        this.sphereCenter = this.geoTo3d(latCenter, lngCenter, false);
        this.topLeft = this.geoTo3d(latMin, lngMin, false);
        this.bottomRight = this.geoTo3d(latMax, lngMax, false);
        this.topRight = this.geoTo3d(latMin, lngMax, false);
        this.bottomLeft = this.geoTo3d(latMax, lngMin, false);
        var distVect = this.topLeft;
        distVect.subtract(this.sphereCenter);
        this.sphereRadius = distVect.length();
        tileDegrees = lngMax - lngMin;
    },

    createGeometry: function (renderContext) {
        _tile_js__WEBPACK_IMPORTED_MODULE_6__.Tile.prototype.createGeometry.call(this, renderContext);
        if (renderContext.gl == null) {
            if (!this.dataset.get_dataSetType() || this.dataset.get_dataSetType() === 1) {
                this._subDivisionLevel$1 = Math.max(2, (4 - this.level) * 2);
            }
        } else {
            this._subDivisionLevel$1 = 32;
        }
        try {
            for (var i = 0; i < 4; i++) {
                this._renderTriangleLists[i] = [];
            }
            if (!this._topDown$1) {
                return this._createGeometryBottomsUp$1(renderContext);
            }
            var lat, lng;
            var index = 0;
            var tileDegrees = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level);
            var latMin = (90 - ((this.tileY) * tileDegrees));
            var latMax = (90 - (((this.tileY + 1)) * tileDegrees));
            var lngMin = ((this.tileX * tileDegrees) - 180);
            var lngMax = ((((this.tileX + 1)) * tileDegrees) - 180);
            var tileDegreesX = lngMax - lngMin;
            var tileDegreesY = latMax - latMin;
            this.topLeft = this.geoTo3d(latMin, lngMin, false);
            this.bottomRight = this.geoTo3d(latMax, lngMax, false);
            this.topRight = this.geoTo3d(latMin, lngMax, false);
            this.bottomLeft = this.geoTo3d(latMax, lngMin, false);

            // Create a vertex buffer
            var verts = new Array((this._subDivisionLevel$1 + 1) * (this._subDivisionLevel$1 + 1));
            var x, y;
            var textureStep = 1 / this._subDivisionLevel$1;
            for (y = 0; y <= this._subDivisionLevel$1; y++) {
                if (y !== this._subDivisionLevel$1) {
                    lat = latMin + (textureStep * tileDegreesY * y);
                }
                else {
                    lat = latMax;
                }
                for (x = 0; x <= this._subDivisionLevel$1; x++) {
                    if (x !== this._subDivisionLevel$1) {
                        lng = lngMin + (textureStep * tileDegreesX * x);
                    }
                    else {
                        lng = lngMax;
                    }
                    index = y * (this._subDivisionLevel$1 + 1) + x;
                    verts[index] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(this.geoTo3d(lat, lng, false), x * textureStep, y * textureStep);
                }
            }
            this.triangleCount = this._subDivisionLevel$1 * this._subDivisionLevel$1 * 2;
            var quarterDivisions = this._subDivisionLevel$1 / 2;
            var part = 0;
            if (renderContext.gl == null) {
                for (var y2 = 0; y2 < 2; y2++) {
                    for (var x2 = 0; x2 < 2; x2++) {
                        index = 0;
                        for (var y1 = (quarterDivisions * y2); y1 < (quarterDivisions * (y2 + 1)); y1++) {
                            for (var x1 = (quarterDivisions * x2); x1 < (quarterDivisions * (x2 + 1)); x1++) {
                                var p1;
                                var p2;
                                var p3;

                                // First triangle in quad
                                p1 = verts[(y1 * (this._subDivisionLevel$1 + 1) + x1)];
                                p2 = verts[((y1 + 1) * (this._subDivisionLevel$1 + 1) + x1)];
                                p3 = verts[(y1 * (this._subDivisionLevel$1 + 1) + (x1 + 1))];
                                this._renderTriangleLists[part].push(_render_triangle_js__WEBPACK_IMPORTED_MODULE_5__.RenderTriangle.create(p1, p3, p2, this.texture, this.level));

                                // Second triangle in quad
                                p1 = verts[(y1 * (this._subDivisionLevel$1 + 1) + (x1 + 1))];
                                p2 = verts[((y1 + 1) * (this._subDivisionLevel$1 + 1) + x1)];
                                p3 = verts[((y1 + 1) * (this._subDivisionLevel$1 + 1) + (x1 + 1))];
                                this._renderTriangleLists[part].push(_render_triangle_js__WEBPACK_IMPORTED_MODULE_5__.RenderTriangle.create(p1, p3, p2, this.texture, this.level));
                            }
                        }
                        part++;
                    }
                }
            } else {
                //process vertex list
                this._vertexBuffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, this._vertexBuffer);
                var f32array = new Float32Array(verts.length * 5);
                var buffer = f32array;
                index = 0;
                var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(verts);
                while ($enum1.moveNext()) {
                    var pt = $enum1.current;
                    index = this.addVertex(buffer, index, pt);
                }
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, f32array, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.STATIC_DRAW);
                for (var y2 = 0; y2 < 2; y2++) {
                    for (var x2 = 0; x2 < 2; x2++) {
                        var ui16array = new Uint16Array(this.triangleCount * 3);
                        var indexArray = ui16array;
                        index = 0;
                        for (var y1 = (quarterDivisions * y2); y1 < (quarterDivisions * (y2 + 1)); y1++) {
                            for (var x1 = (quarterDivisions * x2); x1 < (quarterDivisions * (x2 + 1)); x1++) {
                                // First triangle in quad
                                indexArray[index++] = (y1 * (this._subDivisionLevel$1 + 1) + x1);
                                indexArray[index++] = ((y1 + 1) * (this._subDivisionLevel$1 + 1) + x1);
                                indexArray[index++] = (y1 * (this._subDivisionLevel$1 + 1) + (x1 + 1));

                                // Second triangle in quad
                                indexArray[index++] = (y1 * (this._subDivisionLevel$1 + 1) + (x1 + 1));
                                indexArray[index++] = ((y1 + 1) * (this._subDivisionLevel$1 + 1) + x1);
                                indexArray[index++] = ((y1 + 1) * (this._subDivisionLevel$1 + 1) + (x1 + 1));
                            }
                        }
                        this._indexBuffers[part] = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
                        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, this._indexBuffers[part]);
                        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, ui16array, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.STATIC_DRAW);
                        part++;
                    }
                }
            }
        }
        catch ($e2) {
        }
        return true;
    },

    _createGeometryBottomsUp$1: function (renderContext) {
        var lat, lng;
        var index = 0;
        var tileDegrees = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level);
        var latMin = (-90 + (((this.tileY + 1)) * tileDegrees));
        var latMax = (-90 + ((this.tileY) * tileDegrees));
        var lngMin = ((this.tileX * tileDegrees) - 180);
        var lngMax = ((((this.tileX + 1)) * tileDegrees) - 180);
        var tileDegreesX = lngMax - lngMin;
        var tileDegreesY = latMax - latMin;

        // Create a vertex buffer
        var verts = new Array((this._subDivisionLevel$1 + 1) * (this._subDivisionLevel$1 + 1));
        var x, y;
        var textureStep = 1 / this._subDivisionLevel$1;
        for (y = 0; y <= this._subDivisionLevel$1; y++) {
            if (y !== this._subDivisionLevel$1) {
                lat = latMin + (textureStep * tileDegreesY * y);
            }
            else {
                lat = latMax;
            }
            for (x = 0; x <= this._subDivisionLevel$1; x++) {
                if (x !== this._subDivisionLevel$1) {
                    lng = lngMin + (textureStep * tileDegreesX * x);
                }
                else {
                    lng = lngMax;
                }
                index = y * (this._subDivisionLevel$1 + 1) + x;
                verts[index] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(this.geoTo3d(lat, lng, false), x * textureStep, y * textureStep);
            }
        }
        this.triangleCount = this._subDivisionLevel$1 * this._subDivisionLevel$1 * 2;
        var quarterDivisions = this._subDivisionLevel$1 / 2;
        var part = 0;
        if (renderContext.gl == null) {
            for (var y2 = 0; y2 < 2; y2++) {
                for (var x2 = 0; x2 < 2; x2++) {
                    index = 0;
                    for (var y1 = (quarterDivisions * y2); y1 < (quarterDivisions * (y2 + 1)); y1++) {
                        for (var x1 = (quarterDivisions * x2); x1 < (quarterDivisions * (x2 + 1)); x1++) {
                            var p1;
                            var p2;
                            var p3;

                            // First triangle in quad
                            p1 = verts[(y1 * (this._subDivisionLevel$1 + 1) + x1)];
                            p2 = verts[((y1 + 1) * (this._subDivisionLevel$1 + 1) + x1)];
                            p3 = verts[(y1 * (this._subDivisionLevel$1 + 1) + (x1 + 1))];
                            this._renderTriangleLists[part].push(_render_triangle_js__WEBPACK_IMPORTED_MODULE_5__.RenderTriangle.create(p1, p3, p2, this.texture, this.level));

                            // Second triangle in quad
                            p1 = verts[(y1 * (this._subDivisionLevel$1 + 1) + (x1 + 1))];
                            p2 = verts[((y1 + 1) * (this._subDivisionLevel$1 + 1) + x1)];
                            p3 = verts[((y1 + 1) * (this._subDivisionLevel$1 + 1) + (x1 + 1))];
                            this._renderTriangleLists[part].push(_render_triangle_js__WEBPACK_IMPORTED_MODULE_5__.RenderTriangle.create(p1, p3, p2, this.texture, this.level));
                        }
                    }
                    part++;
                }
            }
        } else {
            //process vertex list
            this._vertexBuffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
            _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, this._vertexBuffer);
            var f32array = new Float32Array(verts.length * 5);
            var buffer = f32array;
            index = 0;
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(verts);
            while ($enum1.moveNext()) {
                var pt = $enum1.current;
                index = this.addVertex(buffer, index, pt);
            }
            _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, f32array, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.STATIC_DRAW);
            for (var y2 = 0; y2 < 2; y2++) {
                for (var x2 = 0; x2 < 2; x2++) {
                    var ui16array = new Uint16Array(this.triangleCount * 3);
                    var indexArray = ui16array;
                    index = 0;
                    for (var y1 = (quarterDivisions * y2); y1 < (quarterDivisions * (y2 + 1)); y1++) {
                        for (var x1 = (quarterDivisions * x2); x1 < (quarterDivisions * (x2 + 1)); x1++) {
                            // First triangle in quad
                            indexArray[index++] = (y1 * (this._subDivisionLevel$1 + 1) + x1);
                            indexArray[index++] = ((y1 + 1) * (this._subDivisionLevel$1 + 1) + x1);
                            indexArray[index++] = (y1 * (this._subDivisionLevel$1 + 1) + (x1 + 1));

                            // Second triangle in quad
                            indexArray[index++] = (y1 * (this._subDivisionLevel$1 + 1) + (x1 + 1));
                            indexArray[index++] = ((y1 + 1) * (this._subDivisionLevel$1 + 1) + x1);
                            indexArray[index++] = ((y1 + 1) * (this._subDivisionLevel$1 + 1) + (x1 + 1));
                        }
                    }
                    this._indexBuffers[part] = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
                    _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, this._indexBuffers[part]);
                    _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, ui16array, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.STATIC_DRAW);
                    part++;
                }
            }
        }

        return true;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("EquirectangularTile", [EquirectangularTile, EquirectangularTile$, _tile_js__WEBPACK_IMPORTED_MODULE_6__.Tile]);


/***/ }),

/***/ "./esm/fast_math.js":
/*!**************************!*\
  !*** ./esm/fast_math.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FastMath: () => (/* binding */ FastMath)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// "Fast math" routines "from Healpix Java package"




// wwtlib.FastMath

function FastMath() { }

const pI4_A = 0.785398155450821;
const pI4_B = 7.94662735614793E-09;
const pI4_C = 3.06161699786838E-17;
const m_1_PI = 0.318309886183791;

FastMath._mulsign = function (x, y) {
    return FastMath._sign(y) * x;
};

FastMath._isnan = function (d) {
    return d !== d;
};

FastMath._isinf = function (d) {
    // TODO: this was documented as checking for negative infinity as well, and
    // almost surely should do that!
    return Math.abs(d) === Number.POSITIVE_INFINITY;
};

FastMath._sign = function (d) {
    if (!d) {
        return 0;
    }
    return (d > 0) ? 1 : -1;
};

FastMath._atanhelper = function (s) {
    var t = s * s;
    var u = -1.88796008463073E-05;
    u = u * t + (0.000209850076645817);
    u = u * t + (-0.00110611831486672);
    u = u * t + (0.00370026744188713);
    u = u * t + (-0.00889896195887655);
    u = u * t + (0.0165993297735292);
    u = u * t + (-0.0254517624932313);
    u = u * t + (0.0337852580001353);
    u = u * t + (-0.0407629191276837);
    u = u * t + (0.0466667150077841);
    u = u * t + (-0.0523674852303482);
    u = u * t + (0.0587666392926674);
    u = u * t + (-0.0666573579361081);
    u = u * t + (0.076921953831177);
    u = u * t + (-0.090908995008245);
    u = u * t + (0.111111105648261);
    u = u * t + (-0.142857142667713);
    u = u * t + (0.199999999996591);
    u = u * t + (-0.333333333333311);
    return u * t * s + s;
};

FastMath._atan2k = function (y, x) {
    var q = 0;
    if (x < 0) {
        x = -x;
        q = -2;
    }
    if (y > x) {
        var t = x;
        x = y;
        y = -t;
        q += 1;
    }
    return FastMath._atanhelper(y / x) + q * (Math.PI / 2);
};

// This method calculates the arc tangent of y/x in radians, using the signs of
// the two arguments to determine the quadrant of the result. The results may
// have maximum error of 2 ulps.
FastMath.atan2 = function (y, x) {
    var r = FastMath._atan2k(Math.abs(y), x);
    r = FastMath._mulsign(r, x);
    if (FastMath._isinf(x) || !x) {
        r = Math.PI / 2 - ((FastMath._isinf(x)) ? (FastMath._sign(x) * (Math.PI / 2)) : 0);
    }
    if (FastMath._isinf(y)) {
        r = Math.PI / 2 - ((FastMath._isinf(x)) ? (FastMath._sign(x) * (Math.PI * 1 / 4)) : 0);
    }
    if (!y) {
        r = ((FastMath._sign(x) === -1) ? Math.PI : 0);
    }
    return (FastMath._isnan(x) || FastMath._isnan(y)) ? Number.NaN : FastMath._mulsign(r, y);
};

// This method calculates the arc sine of x in radians. The return value is in
// the range [-pi/2, pi/2]. The results may have maximum error of 3 ulps.
FastMath.asin = function (d) {
    return FastMath._mulsign(FastMath._atan2k(Math.abs(d), Math.sqrt((1 + d) * (1 - d))), d);
};

// This method calculates the arc cosine of x in radians. The return value is in
// the range [0, pi]. The results may have maximum error of 3 ulps.
FastMath.acos = function (d) {
    return FastMath._mulsign(FastMath._atan2k(Math.sqrt((1 + d) * (1 - d)), Math.abs(d)), d) + ((d < 0) ? Math.PI : 0);
};

// Returns the arc tangent of an angle. The results may have maximum error of 2
// ulps.
FastMath.atan = function (s) {
    var q = 0;
    if (s < 0) {
        s = -s;
        q = 2;
    }
    if (s > 1) {
        s = 1 / s;
        q |= 1;
    }
    var t = FastMath._atanhelper(s);
    if (!!(q & 1)) {
        t = 1.5707963267949 - t;
    }
    if (!!(q & 2)) {
        t = -t;
    }
    return t;
};

FastMath._sincoshelper = function (d) {
    var s = d * d;
    var u = -7.97255955009038E-18;
    u = u * s + 2.81009972710863E-15;
    u = u * s - 7.64712219118159E-13;
    u = u * s + 1.60590430605665E-10;
    u = u * s - 2.50521083763502E-08;
    u = u * s + 2.75573192239199E-06;
    u = u * s - 0.000198412698412696;
    u = u * s + 0.00833333333333333;
    u = u * s - 0.166666666666667;
    return s * u * d + d;
};

// Returns the trigonometric sine of an angle. The results may have maximum
// error of 2 ulps.
FastMath.sin = function (d) {
    var u = d * m_1_PI;
    var q = Math.floor((u < 0) ? u - 0.5 : u + 0.5);
    var x = 4 * q;
    d -= x * pI4_A;
    d -= x * pI4_B;
    d -= x * pI4_C;
    if (!!(q & 1)) {
        d = -d;
    }
    return FastMath._sincoshelper(d);
};

// Returns the trigonometric cosine of an angle. The results may have maximum
// error of 2 ulps.
FastMath.cos = function (d) {
    var u = d * m_1_PI - 0.5;
    var q = 1 + 2 * Math.floor((u < 0) ? u - 0.5 : u + 0.5);
    var x = 2 * q;
    d -= x * pI4_A;
    d -= x * pI4_B;
    d -= x * pI4_C;
    if (!(q & 2)) {
        d = -d;
    }
    return FastMath._sincoshelper(d);
};

var FastMath$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("FastMath", [FastMath, FastMath$, null]);


/***/ }),

/***/ "./esm/fits_properties.js":
/*!********************************!*\
  !*** ./esm/fits_properties.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FitsProperties: () => (/* binding */ FitsProperties),
/* harmony export */   ScaleTypes: () => (/* binding */ ScaleTypes)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Properties about FITS data.




// wwtlib.ScaleTypes

var ScaleTypes = {
    linear: 0,
    log: 1,
    power: 2,
    squareRoot: 3,
    histogramEqualization: 4
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("ScaleTypes", ScaleTypes);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerEnum)("ScaleTypes", ScaleTypes);


// wwtlib.FitsProperties

function FitsProperties() {
    this.bZero = 0;
    this.bScale = 1;
    this.containsBlanks = false;
    this.blankValue = Number.MIN_VALUE;
    this.maxVal = Number.MIN_VALUE;
    this.minVal = Number.MAX_VALUE;
    this.upperCut = Number.MIN_VALUE;
    this.lowerCut = Number.MAX_VALUE;
    this.transparentBlack = false;
    this.colorMapName = 'viridis';
    this.scaleType = 0;

    // This field exists to support non-HiPS tiled FITS imagesets. We need a
    // mechanism to notify callers when the top-level tile is loaded,
    // because only after that has happened is it possible to set up
    // trustworthy values for properties like LowerCut here. *HiPS* tiled
    // FITS imagesets don't need this because they have a separate top-level
    // "properties" file that can be used to trigger a callback.
    //
    // We need to load the top-level tile to properly set up the properties
    // here because (1) they can't be determined well from the level-0 tile
    // data alone, (2) we want to give the dataset author a chance to
    // customize them, and (3) the tiled FITS data-loaders don't calculate
    // min/max from the data for performance reasons. And we'd prefer not to
    // add the relevant values to the ImageSet XML definition.
    //
    // Anyway, the tangent tile image loading code will cause this action to
    // be triggered when the level-0 tile loads successfully. It would make
    // sense to also trigger this action for when a non-tiled FITS file is
    // loaded, but in that use case the existing WcsLoaded callback
    // suffices. The tiling framework already uses WcsLoaded so for that
    // case we need to add this extra hook.
    this.onMainImageLoaded = null;
    this.mainImageLoadedEventHasFired = false;
}

var FitsProperties$ = {
    // See description of the onMainImageLoaded field. This method exists to
    // help non-HiPS tiled FITS datasets notify callers when the initial
    // data have loaded and these FitsProperties can be trusted.
    _fireMainImageLoaded: function (image) {
        if (this.onMainImageLoaded != null && !this.mainImageLoadedEventHasFired) {
            this.mainImageLoadedEventHasFired = true;
            this.onMainImageLoaded(image);
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("FitsProperties", [FitsProperties, FitsProperties$, null]);


/***/ }),

/***/ "./esm/folder.js":
/*!***********************!*\
  !*** ./esm/folder.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Folder: () => (/* binding */ Folder),
/* harmony export */   FolderGroup: () => (/* binding */ FolderGroup),
/* harmony export */   FolderRefreshType: () => (/* binding */ FolderRefreshType),
/* harmony export */   FolderType: () => (/* binding */ FolderType)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./interfaces.js */ "./esm/interfaces.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _folder_up_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./folder_up.js */ "./esm/folder_up.js");
/* harmony import */ var _imageset_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./imageset.js */ "./esm/imageset.js");
/* harmony import */ var _place_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./place.js */ "./esm/place.js");
/* harmony import */ var _tour_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tour.js */ "./esm/tour.js");
/* harmony import */ var _web_file_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./web_file.js */ "./esm/web_file.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A WTML folder of different kinds of WWT content.














// wwtlib.FolderGroup

var FolderGroup = {
    explorer: 0,
    tour: 1,
    search: 2,
    constellation: 3,
    view: 4,
    goTo: 5,
    community: 6,
    context: 7,
    voTable: 8,
    imageStack: 9
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("FolderGroup", FolderGroup);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("FolderGroup", FolderGroup);


// wwtlib.FolderRefreshType

var FolderRefreshType = {
    interval: 0,
    conditionalGet: 1,
    viewChange: 2
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("FolderRefreshType", FolderRefreshType);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("FolderRefreshType", FolderRefreshType);


// wwtlib.FolderType

var FolderType = {
    earth: 0,
    planet: 1,
    sky: 2,
    panorama: 3
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("FolderType", FolderType);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("FolderType", FolderType);


// wwtlib.Folder

function Folder() {
    this.parent = null;
    this.isProxy = false;
    this._versionDependent = false;
    this._readOnly = true;
    this._dirty = false;
    this._thumbnail = null;
    this._proxyFolder = null;
    this._lastUpdate = new Date();
    this._childList = [];
    this._itemsField = [];
    this._imagesets = [];
    this._tours = [];
    this._folders = [];
    this._places = [];
    this._groupField = 0;
    this._refreshTypeField = 0;
    this._refreshTypeFieldSpecified = false;
    this._browseableField = true;
    this._browseableFieldSpecified = false;
    this._searchableField = false;
    this._typeField = 0;
    this._communityIdField = 0;
    this._componentIdField = 0;
    this._permissionField = 0;
}

var Folder$ = {
    toString: function () {
        return this._nameField;
    },

    get_versionDependent: function () {
        return this._versionDependent;
    },

    set_versionDependent: function (value) {
        this._versionDependent = value;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._folders);
        while ($enum1.moveNext()) {
            var folder = $enum1.current;
            folder.set_versionDependent(this._versionDependent);
        }
        return value;
    },

    get_readOnly: function () {
        return this._readOnly;
    },

    set_readOnly: function (value) {
        this._readOnly = value;
        return value;
    },

    get_dirty: function () {
        return this._dirty;
    },

    set_dirty: function (value) {
        this._dirty = value;
        return value;
    },

    loadFromUrlWithErrorCallback: function (url, complete, onError) {
        this._onError = onError;
        this.loadFromUrl(url, complete);
    },

    loadFromUrl: function (url, complete) {
        this._onComplete = complete;
        this._webFile = new _web_file_js__WEBPACK_IMPORTED_MODULE_10__.WebFile(_url_helpers_js__WEBPACK_IMPORTED_MODULE_5__.URLHelpers.singleton.rewrite(url, 1));
        this._webFile.onStateChange = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_loadData', this);
        this._webFile.send();
    },

    _loadData: function () {
        if (this._webFile.get_state() === 2) {
            console.error(this._webFile.get_message());
            if (this._onError != null) {
                this._onError();
            }
        } else if (this._webFile.get_state() === 1) {
            var node = _baseutil_js__WEBPACK_IMPORTED_MODULE_3__.Util.selectSingleNode(this._webFile.getXml(), 'Folder');
            if (node == null) {
                var doc = this._webFile.getXml();
                if (doc != null) {
                    node = _baseutil_js__WEBPACK_IMPORTED_MODULE_3__.Util.selectSingleNode(doc, 'Folder');
                }
            }
            if (node != null) {
                this._clearChildren();
                this._parseXML(node);
            }
            if (this._onComplete != null) {
                this._onComplete();
            }
        }
    },

    _clearChildren: function () {
        this._folders.length = 0;
        this._tours.length = 0;
        this._places.length = 0;
        this.get_imagesets().length = 0;
    },

    _parseXML: function (node) {
        if (node.attributes.getNamedItem('Name') != null) {
            this._nameField = node.attributes.getNamedItem('Name').nodeValue;
        } else {
            this._nameField = '';
        }
        if (node.attributes.getNamedItem('Url') != null) {
            this._urlField = node.attributes.getNamedItem('Url').nodeValue;
        }
        if (node.attributes.getNamedItem('Thumbnail') != null) {
            this._thumbnailUrlField = node.attributes.getNamedItem('Thumbnail').nodeValue;
        }

        // load Children

        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(node.childNodes);
        while ($enum1.moveNext()) {
            var child = $enum1.current;
            switch (child.nodeName) {
                case 'Folder':
                    var temp = new Folder();
                    temp.parent = this;
                    temp._parseXML(child);
                    this._folders.push(temp);
                    break;
                case 'Place':
                    this._places.push(_place_js__WEBPACK_IMPORTED_MODULE_8__.Place._fromXml(child));
                    break;
                case 'ImageSet':
                    this.get_imagesets().push(_imageset_js__WEBPACK_IMPORTED_MODULE_7__.Imageset.fromXMLNode(child));
                    break;
                case 'Tour':
                    this.get_tours().push(_tour_js__WEBPACK_IMPORTED_MODULE_9__.Tour._fromXml(child));
                    break;
            }
        }
    },

    addChildFolder: function (child) {
        this._folders.push(child);
        this._dirty = true;
    },

    removeChildFolder: function (child) {
        _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove(this._folders, child);
        this._dirty = true;
    },

    addChildPlace: function (child) {
        this._places.push(child);
        this._dirty = true;
    },

    removeChildPlace: function (child) {
        _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove(this._places, child);
        this._dirty = true;
    },

    get_thumbnail: function () {
        return this._thumbnail;
    },

    set_thumbnail: function (value) {
        this._thumbnail = value;
        return value;
    },

    get_bounds: function () {
        return this._bounds;
    },

    set_bounds: function (value) {
        this._bounds = value;
        return value;
    },

    get_isImage: function () {
        return false;
    },

    get_isTour: function () {
        return false;
    },

    get_isFolder: function () {
        return true;
    },

    get_isCloudCommunityItem: function () {
        return !!this._communityIdField || this._permissionField > 0;
    },

    refresh: function () {
        if (this._proxyFolder == null) {
            this._proxyFolder = new Folder();
            this._proxyFolder.isProxy = true;
            this._proxyFolder.parent = this.parent;
        }

        //Also listening to errors, to make sure clients do not wait forever in
        //the case of a 404 or similar. Especially useful for recursive
        //downloads, where potentially dozens of URL's are downloaded. In case
        //of errors during downloads, the clients will have an empty folder
        //during the callback.
        this._proxyFolder.loadFromUrlWithErrorCallback(this._urlField, this._childReadyCallback, this._childReadyCallback);
        this._childReadyCallback = null;
    },

    childLoadCallback: function (callback) {
        this._childReadyCallback = callback;
        var temp = this.get_children();
        if (this._proxyFolder == null) {
            callback();
        }
    },

    get_children: function () {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._urlField)) {
            this._childList.length = 0;
            if (this.parent != null) {
                var folderUp = new _folder_up_js__WEBPACK_IMPORTED_MODULE_6__.FolderUp();
                folderUp.parent = this.parent;
                this._childList.push(folderUp);
            }
            if (this.get_folders() != null) {
                var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.get_folders());
                while ($enum1.moveNext()) {
                    var folder = $enum1.current;
                    this._childList.push(folder);
                }
            }
            if (this.get_imagesets() != null) {
                var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.get_imagesets());
                while ($enum2.moveNext()) {
                    var imset = $enum2.current;
                    this._childList.push(imset);
                }
            }
            if (this.get_places() != null) {
                var $enum3 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.get_places());
                while ($enum3.moveNext()) {
                    var place = $enum3.current;
                    this._childList.push(place);
                }
            }
            if (this.get_tours() != null) {
                var $enum4 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.get_tours());
                while ($enum4.moveNext()) {
                    var tour = $enum4.current;
                    this._childList.push(tour);
                }
            }
            return this._childList;
        } else {
            var ts = (this._lastUpdate - _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now()) / 1000;
            if (this.get_refreshType() === 1 || this._proxyFolder == null || (!this.get_refreshType() && (parseInt(this._refreshIntervalField) < ts))) {
                this.refresh();
            }
            if (this._proxyFolder != null) {
                return this._proxyFolder.get_children();
            }
            else {
                return null;
            }
        }
    },

    get_msrCommunityId: function () {
        return this._communityIdField;
    },

    set_msrCommunityId: function (value) {
        this._communityIdField = value;
        return value;
    },

    get_msrComponentId: function () {
        return this._componentIdField;
    },

    set_msrComponentId: function (value) {
        this._componentIdField = value;
        return value;
    },

    get_permission: function () {
        return this._permissionField;
    },

    set_permission: function (value) {
        this._permissionField = value;
        return value;
    },

    get_folders: function () {
        return this._folders;
    },

    set_folders: function (value) {
        this._folders = value;
        return value;
    },

    get_places: function () {
        return this._places;
    },

    set_places: function (value) {
        this._places = value;
        return value;
    },

    get_imagesets: function () {
        return this._imagesets;
    },

    set_imagesets: function (value) {
        this._imagesets = value;
        return value;
    },

    get_tours: function () {
        return this._tours;
    },

    set_tours: function (value) {
        this._tours = value;
        return value;
    },

    get_name: function () {
        if (this._nameField == null) {
            return '';
        } else {
            return this._nameField;
        }
    },

    set_name: function (value) {
        this._nameField = value;
        return value;
    },

    get_group: function () {
        return this._groupField;
    },

    set_group: function (value) {
        this._groupField = value;
        return value;
    },

    get_url: function () {
        return this._urlField;
    },

    set_url: function (value) {
        this._urlField = value;
        return value;
    },

    get_thumbnailUrl: function () {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._thumbnailUrlField)) {
            return _url_helpers_js__WEBPACK_IMPORTED_MODULE_5__.URLHelpers.singleton.engineAssetUrl('thumb_folder.jpg');
        }
        return this._thumbnailUrlField;
    },

    set_thumbnailUrl: function (value) {
        this._thumbnailUrlField = value;
        return value;
    },

    get_refreshType: function () {
        return this._refreshTypeField;
    },

    set_refreshType: function (value) {
        this._refreshTypeField = value;
        this.set_refreshTypeSpecified(true);
        return value;
    },

    get_refreshTypeSpecified: function () {
        return this._refreshTypeFieldSpecified;
    },

    set_refreshTypeSpecified: function (value) {
        this._refreshTypeFieldSpecified = value;
        return value;
    },

    get_refreshInterval: function () {
        return this._refreshIntervalField;
    },

    set_refreshInterval: function (value) {
        this._refreshIntervalField = value;
        return value;
    },

    get_browseable: function () {
        return this._browseableField;
    },

    set_browseable: function (value) {
        this._browseableField = value;
        this._browseableFieldSpecified = true;
        return value;
    },

    get_browseableSpecified: function () {
        return this._browseableFieldSpecified;
    },

    set_browseableSpecified: function (value) {
        this._browseableFieldSpecified = value;
        return value;
    },

    get_searchable: function () {
        return this._searchableField;
    },

    set_searchable: function (value) {
        this._searchableField = value;
        return value;
    },

    get_type: function () {
        return this._typeField;
    },

    set_type: function (value) {
        this._typeField = value;
        return value;
    },

    get_subType: function () {
        return this._subTypeField;
    },

    set_subType: function (value) {
        this._subTypeField = value;
        return value;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Folder", [Folder, Folder$, null, _interfaces_js__WEBPACK_IMPORTED_MODULE_4__.IThumbnail]);

(0,_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.set_makeNewFolder)(function () {
    return new Folder();
});


/***/ }),

/***/ "./esm/folder_browser.js":
/*!*******************************!*\
  !*** ./esm/folder_browser.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FolderBrowser: () => (/* binding */ FolderBrowser),
/* harmony export */   ThumbnailSize: () => (/* binding */ ThumbnailSize)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _folder_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./folder.js */ "./esm/folder.js");
/* harmony import */ var _folder_up_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./folder_up.js */ "./esm/folder_up.js");
/* harmony import */ var _imageset_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./imageset.js */ "./esm/imageset.js");
/* harmony import */ var _place_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./place.js */ "./esm/place.js");
/* harmony import */ var _render_triangle_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./render_triangle.js */ "./esm/render_triangle.js");
/* harmony import */ var _tour_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./tour.js */ "./esm/tour.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./util.js */ "./esm/util.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Infrastructure for browsing the WWT folder structure.















// wwtlib.ThumbnailSize

var ThumbnailSize = {
    small: 0,
    big: 1
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ThumbnailSize", ThumbnailSize);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("ThumbnailSize", ThumbnailSize);


// wwtlib.FolderBrowser

function FolderBrowser() {
    this._items = [];
    this.top = 10;
    this.left = 10;
    this._indexTouchDown = -1;
    this._mouseDown = false;
    this._lastX = 0;
    this._lastY = 0;
    this._ignoreClick = false;
    this._thumbnailSize = 0;
    this._horzSpacing = 110;
    this._vertSpacing = 75;
    this._thumbHeight = 65;
    this._thumbWidth = 110;
    this._horzMultiple = 110;
    this._rowCount = 1;
    this._colCount = 6;
    this._dragging = false;
    this._startIndex = 0;
    this._startOffset = 0;
    this._selectedItem = -1;
    this._hoverItem = -1;
    this.showAddButton = false;
    this.width = 0;
    this.height = 0;
    this._addButtonHover = false;
    this.imageClicked = false;
}

FolderBrowser._downloading = false;
FolderBrowser._imagesLoaded = false;
FolderBrowser._imageLoadCount = 0;

FolderBrowser.create = function () {
    var temp = new FolderBrowser();
    temp.height = 85;
    temp.width = 1920;
    temp.canvas = document.createElement('canvas');
    temp.canvas.width = temp.width;
    temp.canvas.height = temp.height;
    temp.setup();
    temp.loadImages();
    return temp;
};

var FolderBrowser$ = {
    setup: function () {
        this.canvas.addEventListener('click', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onClick', this), false);
        this.canvas.addEventListener('dblclick', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onDoubleClick', this), false);
        this.canvas.addEventListener('mousemove', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onMouseMove', this), false);
        this.canvas.addEventListener('mouseup', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onMouseUp', this), false);
        this.canvas.addEventListener('mousedown', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onMouseDown', this), false);
        this.canvas.addEventListener('touchstart', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onTouchStart', this), false);
        this.canvas.addEventListener('touchmove', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onTouchMove', this), false);
        this.canvas.addEventListener('touchend', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onTouchEnd', this), false);
        this.canvas.addEventListener('mouseout', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onMouseUp', this), false);
    },

    onTouchStart: function (e) {
        var ev = e;
        ev.preventDefault();
        this._mouseDown = true;
        this._lastX = ev.targetTouches[0].pageX;
        this._lastY = ev.targetTouches[0].pageY;
        this._indexTouchDown = this._getItemIndexFromCursor(_double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector2d.create(ev.targetTouches[0].pageX, ev.targetTouches[0].pageY));
    },

    onTouchMove: function (e) {
        var ev = e;
        ev.preventDefault();
        if (this._mouseDown) {
            var curX = ev.targetTouches[0].pageX - this._lastX;
            var curY = ev.targetTouches[0].pageY - this._lastY;
            if (this._mouseDown) {
                this._dragging = true;
            }
            if (!this._dragging) {
                var newHover = this._getItemIndexFromCursor(_double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector2d.create(ev.targetTouches[0].pageX, ev.targetTouches[0].pageY));
                if (this._hoverItem !== newHover) {
                    this._hoverItem = newHover;
                }
            }
            else {
                var tiles = Math.round(((ev.targetTouches[0].pageX - this._lastX) + this._startOffset) / this._horzSpacing);
                var offset = Math.round(((ev.targetTouches[0].pageX - this._lastX) + this._startOffset) - (tiles * this._horzSpacing));
                this._startOffset = offset;
                this._startIndex -= tiles;
                if (this._startIndex < 0) {
                    this._startOffset -= (this._horzSpacing * this._startIndex);
                    this._startIndex = 0;
                }
                this._lastX = ev.targetTouches[0].pageX;
                this._lastY = ev.targetTouches[0].pageY;
            }
            this.refresh();
        }
    },

    onTouchEnd: function (e) {
        var ev = e;
        ev.preventDefault();
        if (this._dragging) {
            this._dragging = false;
            this._ignoreClick = true;
        } else if (this._indexTouchDown > -1 && this._mouseDown) {
            this._handleClick(this._indexTouchDown);
        }
        this._startOffset = 0;
        this._mouseDown = false;
        this.refresh();
    },

    onClick: function (e) {
        if (!this._ignoreClick) {
            var index = this._getItemIndexFromCursor(_double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector2d.create(e.offsetX, e.offsetY));
            this._handleClick(index);
        } else {
            this._ignoreClick = false;
        }
    },

    _handleClick: function (index) {
        var $this = this;

        if (index > -1) {
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(this._items[index], _place_js__WEBPACK_IMPORTED_MODULE_8__.Place)) {
                var place = this._items[index];
                _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.gotoTarget(place, false, false, true);
                return;
            }
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(this._items[index], _imageset_js__WEBPACK_IMPORTED_MODULE_7__.Imageset)) {
                var imageset = this._items[index];
                _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.set_backgroundImageset(imageset);
                return;
            }
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(this._items[index], _tour_js__WEBPACK_IMPORTED_MODULE_10__.Tour)) {
                var tour = this._items[index];
                _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.playTour(tour.get_tourUrl());
                return;
            }
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(this._items[index], _folder_js__WEBPACK_IMPORTED_MODULE_5__.Folder)) {
                var folder = this._items[index];
                this._startIndex = 0;
                folder.childLoadCallback(function () {
                    $this._items = folder.get_children();
                    $this.refresh();
                });
                return;
            }
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(this._items[index], _folder_up_js__WEBPACK_IMPORTED_MODULE_6__.FolderUp)) {
                var folderUp = this._items[index];
                if (folderUp.parent != null) {
                    this._startIndex = 0;
                    folderUp.parent.childLoadCallback(function () {
                        $this._items = folderUp.parent.get_children();
                        $this.refresh();
                    });
                }
                return;
            }
        }
        return;
    },

    onDoubleClick: function (e) {
        _render_triangle_js__WEBPACK_IMPORTED_MODULE_9__.RenderTriangle.renderingOn = !_render_triangle_js__WEBPACK_IMPORTED_MODULE_9__.RenderTriangle.renderingOn;
    },

    onGestureChange: function (e) {
        var g = e;
        this._mouseDown = false;
        var delta = g.scale;
    },

    onMouseDown: function (e) {
        this._mouseDown = true;
        this._lastX = _util_js__WEBPACK_IMPORTED_MODULE_11__.Mouse.offsetX(this.canvas, e);
        this._lastY = _util_js__WEBPACK_IMPORTED_MODULE_11__.Mouse.offsetY(this.canvas, e);
    },

    onMouseMove: function (e) {
        if (this._mouseDown) {
            this._dragging = true;
        }
        if (!this._dragging) {
            var newHover = this._getItemIndexFromCursor(_double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector2d.create(_util_js__WEBPACK_IMPORTED_MODULE_11__.Mouse.offsetX(this.canvas, e), _util_js__WEBPACK_IMPORTED_MODULE_11__.Mouse.offsetY(this.canvas, e)));
            if (this._hoverItem !== newHover) {
                this._hoverItem = newHover;
            }
        } else {
            var tiles = Math.round(((_util_js__WEBPACK_IMPORTED_MODULE_11__.Mouse.offsetX(this.canvas, e) - this._lastX) + this._startOffset) / this._horzSpacing);
            var offset = Math.round(((_util_js__WEBPACK_IMPORTED_MODULE_11__.Mouse.offsetX(this.canvas, e) - this._lastX) + this._startOffset) - (tiles * this._horzSpacing));
            this._startOffset = offset;
            this._startIndex -= tiles;
            if (this._startIndex < 0) {
                this._startOffset -= (this._horzSpacing * this._startIndex);
                this._startIndex = 0;
            }
            this._lastX = _util_js__WEBPACK_IMPORTED_MODULE_11__.Mouse.offsetX(this.canvas, e);
            this._lastY = _util_js__WEBPACK_IMPORTED_MODULE_11__.Mouse.offsetY(this.canvas, e);
        }
        this.refresh();
    },

    onMouseUp: function (e) {
        if (this._dragging) {
            this._startOffset = 0;
            this._dragging = false;
            this._ignoreClick = true;
        }
        this._mouseDown = false;
        this.refresh();
    },

    loadImages: function () {
        var $this = this;

        if (!FolderBrowser._imagesLoaded && !FolderBrowser._downloading) {
            FolderBrowser._imageLoadCount = 0;
            FolderBrowser._imagesLoaded = false;
            FolderBrowser._downloading = true;
            FolderBrowser._bmpBackground = document.createElement('img');
            FolderBrowser._bmpBackground.src = 'images/thumbBackground.png';
            FolderBrowser._bmpBackground.addEventListener('load', function (e) {
                FolderBrowser._imageLoadCount++;
                if (FolderBrowser._imageLoadCount === 5) {
                    FolderBrowser._downloading = false;
                    FolderBrowser._imagesLoaded = true;
                    $this.refresh();
                }
            }, false);
            FolderBrowser._bmpBackgroundHover = document.createElement('img');
            FolderBrowser._bmpBackgroundHover.src = 'images/thumbBackgroundHover.png';
            FolderBrowser._bmpBackgroundHover.addEventListener('load', function (e) {
                FolderBrowser._imageLoadCount++;
                if (FolderBrowser._imageLoadCount === 5) {
                    FolderBrowser._downloading = false;
                    FolderBrowser._imagesLoaded = true;
                    $this.refresh();
                }
            }, false);
            FolderBrowser._bmpBackgroundWide = document.createElement('img');
            FolderBrowser._bmpBackgroundWide.src = 'images/thumbBackgroundWide.png';
            FolderBrowser._bmpBackgroundWide.addEventListener('load', function (e) {
                FolderBrowser._imageLoadCount++;
                if (FolderBrowser._imageLoadCount === 5) {
                    FolderBrowser._downloading = false;
                    FolderBrowser._imagesLoaded = true;
                    $this.refresh();
                }
            }, false);
            FolderBrowser._bmpBackgroundWideHover = document.createElement('img');
            FolderBrowser._bmpBackgroundWideHover.src = 'images/thumbBackgroundWideHover.png';
            FolderBrowser._bmpBackgroundWideHover.addEventListener('load', function (e) {
                FolderBrowser._imageLoadCount++;
                if (FolderBrowser._imageLoadCount === 5) {
                    FolderBrowser._downloading = false;
                    FolderBrowser._imagesLoaded = true;
                    $this.refresh();
                }
            }, false);
            FolderBrowser._bmpDropInsertMarker = document.createElement('img');
            FolderBrowser._bmpDropInsertMarker.src = 'images/dragInsertMarker.png';
            FolderBrowser._bmpDropInsertMarker.addEventListener('load', function (e) {
                FolderBrowser._imageLoadCount++;
                if (FolderBrowser._imageLoadCount === 5) {
                    FolderBrowser._downloading = false;
                    FolderBrowser._imagesLoaded = true;
                    $this.refresh();
                }
            }, false);
        }
    },

    get_thumbnailSize: function () {
        return this._thumbnailSize;
    },

    set_thumbnailSize: function (value) {
        this._thumbnailSize = value;
        switch (value) {
            case 1:
                this._horzSpacing = 180;
                this._vertSpacing = 75;
                this._thumbHeight = 65;
                this._thumbWidth = 180;
                break;
            case 0:
                this._horzSpacing = 110;
                this._vertSpacing = 75;
                this._thumbHeight = 65;
                this._thumbWidth = 110;
                break;
        }
        this._updatePaginator();
        this.refresh();
        return value;
    },

    refresh: function () {
        if (this.width !== window.innerWidth) {
            this.width = window.innerWidth;
        }
        this.paint();
    },

    get_rowCount: function () {
        return this._rowCount;
    },

    set_rowCount: function (value) {
        if (this._rowCount !== value) {
            this._rowCount = value;
            this._updatePaginator();
        }
        return value;
    },

    _updatePaginator: function () { },

    get_colCount: function () {
        return this._colCount;
    },

    set_colCount: function (value) {
        if (this._colCount !== value) {
            this._colCount = value;
            this._updatePaginator();
        }
        return value;
    },

    get_itemsPerPage: function () {
        return this._rowCount * this._colCount;
    },

    get_currentPage: function () {
        return this._startIndex / this.get_itemsPerPage();
    },

    get_pageCount: function () {
        return Math.max(1, ((this._items.length + this.get_itemsPerPage() - 1) + ((this.showAddButton) ? 1 : 0)) / this.get_itemsPerPage());
    },

    paint: function () {
        var $this = this;

        var g = this.canvas.getContext('2d');
        g.fillStyle = 'rgb(20, 22, 31)';
        g.fillRect(0, 0, this.width, this.height);
        if (!FolderBrowser._imagesLoaded) {
            return;
        }
        var netHeight = (this.height - 10 * 2);
        var netWidth = (this.width - 10 * 2);
        this.set_rowCount(Math.round(Math.max(netHeight / this._thumbHeight, 1)));
        this.set_colCount(Math.round(Math.max(netWidth / this._horzSpacing, 1)));
        this._horzMultiple = (netWidth + 13) / this.get_colCount();
        this._startIndex = Math.round((this._startIndex / this.get_itemsPerPage()) * this.get_itemsPerPage());
        var rectf;
        var index = this._startIndex;
        for (var y = 0; y < this._rowCount; y++) {
            for (var x = 0; x < this._colCount; x++) {
                if (index >= this._items.length) {
                    if (!this._items.length || this.showAddButton) {
                        rectf = _util_js__WEBPACK_IMPORTED_MODULE_11__.Rectangle.create(this.left + x * this._horzMultiple + 3 + this._startOffset, this.top + y * this._vertSpacing, this._thumbWidth - 10, 60);
                        g.drawImage((this._thumbnailSize === 1) ? FolderBrowser._bmpBackgroundWide : FolderBrowser._bmpBackground, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((x * this._horzMultiple)) + this._startOffset, y * this._vertSpacing);
                    }
                    break;
                }
                rectf = _util_js__WEBPACK_IMPORTED_MODULE_11__.Rectangle.create(this.left + x * this._horzMultiple + 3 + this._startOffset, this.top + y * this._vertSpacing, this._thumbWidth - 14, 60);
                var textBrush = 'white';
                if (index === this._hoverItem || (index === this._selectedItem && this._hoverItem === -1)) {
                    g.drawImage((this._thumbnailSize === 1) ? FolderBrowser._bmpBackgroundWideHover : FolderBrowser._bmpBackgroundHover, this.left + _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((x * this._horzMultiple)) + this._startOffset, this.top + y * this._vertSpacing);
                    textBrush = 'yellow';
                }
                else {
                    g.drawImage((this._thumbnailSize === 1) ? FolderBrowser._bmpBackgroundWide : FolderBrowser._bmpBackground, this.left + _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((x * this._horzMultiple)) + this._startOffset, this.top + y * this._vertSpacing);
                }
                this._items[index].set_bounds(_util_js__WEBPACK_IMPORTED_MODULE_11__.Rectangle.create((this.left + x * this._horzMultiple) + this._startOffset, this.top + (y * this._vertSpacing), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(this._horzMultiple), this._vertSpacing));
                try {
                    var bmpThumb = this._items[index].get_thumbnail();
                    if (bmpThumb != null) {
                        g.drawImage(bmpThumb, this.left + (x * this._horzMultiple) + 2 + this._startOffset, this.top + y * this._vertSpacing + 3);
                        g.strokeStyle = 'rgb(0,0,0)';
                        g.rect(this.left + _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((x * this._horzMultiple)) + 2 + this._startOffset, this.top + y * this._vertSpacing + 3, this._items[index].get_thumbnail().width, this._items[index].get_thumbnail().height);
                    }
                    else {
                        this._items[index].set_thumbnail(document.createElement('img'));
                        this._items[index].get_thumbnail().src = this._items[index].get_thumbnailUrl();
                        this._items[index].get_thumbnail().addEventListener('load', function (e) {
                            $this.refresh();
                        }, false);
                    }
                }
                catch ($e1) {
                }
                g.fillStyle = textBrush;
                g.strokeStyle = textBrush;
                g.lineWidth = 1;
                g.font = 'normal 8pt Arial';
                g.fillText(this._items[index].get_name(), rectf.x, rectf.y + rectf.height, rectf.width);
                index++;
            }
            if (index >= this._items.length) {
                break;
            }
        }
    },

    _getItemIndexFromCursor: function (testPointIn) {
        var testPoint = _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector2d.create(testPointIn.x + this.left, testPointIn.y + this.top);
        this.imageClicked = false;
        var index = -1;
        var xpos = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((testPoint.x / this._horzMultiple));
        var xPart = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((testPoint.x % this._horzMultiple));
        if (xpos >= this._colCount) {
            return -1;
        }
        if (xpos < 0) {
            return -1;
        }
        var ypos = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((testPoint.y / this._vertSpacing));
        var yPart = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((testPoint.y % this._vertSpacing));
        if (ypos >= this._rowCount) {
            return -1;
        }
        if (ypos < 0) {
            return -1;
        }
        index = this._startIndex + ypos * this._colCount + xpos;
        if (index === this._items.length) {
            this._addButtonHover = true;
        } else {
            this._addButtonHover = false;
        }
        if (index > this._items.length - 1) {
            return -1;
        }
        if ((this._items[index]).get_isImage() && yPart < 16 && xPart > 78) {
            this.imageClicked = true;
        }
        return index;
    },

    _addItems: function (list) {
        this._items = list;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("FolderBrowser", [FolderBrowser, FolderBrowser$, null]);


/***/ }),

/***/ "./esm/folder_up.js":
/*!**************************!*\
  !*** ./esm/folder_up.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FolderUp: () => (/* binding */ FolderUp)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interfaces.js */ "./esm/interfaces.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util.js */ "./esm/util.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// An icon for a "move up one folder" item.







// wwtlib.FolderUp

function FolderUp() {
    this.parent = null;
    this._bounds = new _util_js__WEBPACK_IMPORTED_MODULE_3__.Rectangle();
}

var FolderUp$ = {
    get_name: function () {
        return 'Up Level';
    },

    get_thumbnail: function () {
        return this._thumbnail;
    },

    set_thumbnail: function (value) {
        this._thumbnail = value;
        return value;
    },

    get_thumbnailUrl: function () {
        return _url_helpers_js__WEBPACK_IMPORTED_MODULE_2__.URLHelpers.singleton.engineAssetUrl('thumb_folderup.jpg');
    },

    set_thumbnailUrl: function (value) {
        return value;
    },

    get_bounds: function () {
        return this._bounds;
    },

    set_bounds: function (value) {
        this._bounds = value;
        return value;
    },

    get_isImage: function () {
        return false;
    },

    get_isTour: function () {
        return false;
    },

    get_isFolder: function () {
        return false;
    },

    get_isCloudCommunityItem: function () {
        return false;
    },

    get_readOnly: function () {
        return false;
    },

    get_children: function () {
        if (this.parent == null) {
            return [];
        } else {
            return this.parent.get_children();
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("FolderUp", [FolderUp, FolderUp$, null, _interfaces_js__WEBPACK_IMPORTED_MODULE_1__.IThumbnail]);


/***/ }),

/***/ "./esm/fxyf.js":
/*!*********************!*\
  !*** ./esm/fxyf.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Fxyf: () => (/* binding */ Fxyf)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _healpix_tables_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./healpix_tables.js */ "./esm/healpix_tables.js");
/* harmony import */ var _healpix_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./healpix_utils.js */ "./esm/healpix_utils.js");
/* harmony import */ var _hploc_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hploc.js */ "./esm/hploc.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Numerical routines supporting the Healpix implementation.








// wwtlib.Fxyf

function Fxyf() {
    // x-coordinate within the basis pixel, range [0.0;1.0]
    this.fx = 0;

    // y-coordinate within the basis pixel, range [0.0;1.0]
    this.fy = 0;

    // index of the HEALPix basis pixel, range [0;11]
    this.face = 0;
    _healpix_tables_js__WEBPACK_IMPORTED_MODULE_2__.HealpixTables.call(this);
}

Fxyf._halfpi$1 = Math.PI / 2;
Fxyf._inv_halfpi$1 = 2 / Math.PI;
Fxyf._twothird$1 = 2 / 3;

Fxyf.create = function (x, y, f) {
    var temp = new Fxyf();
    temp.fx = x;
    temp.fy = y;
    temp.face = f;
    return temp;
};

Fxyf._fromHploc$1 = function (loc) {
    var temp = new Fxyf();
    var z = loc.z, phi = loc.phi;
    var za = Math.abs(z);
    var tt = _healpix_utils_js__WEBPACK_IMPORTED_MODULE_3__.HealpixUtils.fmodulo((phi * Fxyf._inv_halfpi$1), 4); // in [0,4)

    if (za <= Fxyf._twothird$1) { // Equatorial region
        var temp1 = 0.5 + tt;
        var temp2 = z * 0.75;
        var jp = temp1 - temp2; // index of  ascending edge line
        var jm = temp1 + temp2; // index of descending edge line
        var ifp = jp; // in {0,4}
        var ifm = jm;
        var face_num = (ifp === ifm) ? (ifp | 4) : ((ifp < ifm) ? ifp : (ifm + 8));
        temp.fx = _healpix_utils_js__WEBPACK_IMPORTED_MODULE_3__.HealpixUtils.fmodulo(jm, 1);
        temp.fy = 1 - _healpix_utils_js__WEBPACK_IMPORTED_MODULE_3__.HealpixUtils.fmodulo(jp, 1);
        temp.face = face_num;
    } else { // polar region, za > 2/3
        var ntt = Math.min(3, _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(tt));
        var tp = tt - ntt;
        var tmp;
        if ((za < 0.99) || (!loc.have_sth)) {
            tmp = Math.sqrt(3 * (1 - za));
        } else {
            tmp = loc.sth / Math.sqrt((1 + za) / 3);
        }
        var jp = tp * tmp; // increasing edge line index
        var jm = (1 - tp) * tmp; // decreasing edge line index
        if (jp >= 1) {
            jp = 1; // for points too close to the boundary
        }
        if (jm >= 1) {
            jm = 1;
        }
        if (z >= 0) {
            temp.fx = 1 - jm;
            temp.fy = 1 - jp;
            temp.face = ntt;
        } else {
            temp.fx = jp;
            temp.fy = jm;
            temp.face = ntt + 8;
        }
    }
    return temp;
};

Fxyf.fromVector = function (v) {
    return Fxyf._fromHploc$1(_hploc_js__WEBPACK_IMPORTED_MODULE_4__.Hploc.create(v));
};

var Fxyf$ = {
    toHploc: function () {
        var loc = new _hploc_js__WEBPACK_IMPORTED_MODULE_4__.Hploc();
        var jr = _healpix_tables_js__WEBPACK_IMPORTED_MODULE_2__.HealpixTables.jrll[this.face] - this.fx - this.fy;
        var nr;
        var tmp;
        if (jr < 1) {
            nr = jr;
            tmp = nr * nr / 3;
            loc.z = 1 - tmp;
            if (loc.z > 0.99) {
                loc.sth = Math.sqrt(tmp * (2 - tmp));
                loc.have_sth = true;
            }
        } else if (jr > 3) {
            nr = 4 - jr;
            tmp = nr * nr / 3;
            loc.z = tmp - 1;
            if (loc.z < -0.99) {
                loc.sth = Math.sqrt(tmp * (2 - tmp));
                loc.have_sth = true;
            }
        } else {
            nr = 1;
            loc.z = (2 - jr) * 2 / 3;
        }
        tmp = _healpix_tables_js__WEBPACK_IMPORTED_MODULE_2__.HealpixTables.jpll[this.face] * nr + this.fx - this.fy;
        if (tmp < 0) {
            tmp += 8;
        }
        if (tmp >= 8) {
            tmp -= 8;
        }
        loc.phi = (nr < 1E-15) ? 0 : (0.5 * Fxyf._halfpi$1 * tmp) / nr;
        return loc;
    },

    toVec3: function () {
        return this.toHploc().toVec3();
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Fxyf", [Fxyf, Fxyf$, _healpix_tables_js__WEBPACK_IMPORTED_MODULE_2__.HealpixTables]);


/***/ }),

/***/ "./esm/graphics/gl_buffers.js":
/*!************************************!*\
  !*** ./esm/graphics/gl_buffers.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IndexBuffer: () => (/* binding */ IndexBuffer),
/* harmony export */   KeplerVertexBuffer: () => (/* binding */ KeplerVertexBuffer),
/* harmony export */   PositionColoredTexturedVertexBuffer: () => (/* binding */ PositionColoredTexturedVertexBuffer),
/* harmony export */   PositionColoredVertexBuffer: () => (/* binding */ PositionColoredVertexBuffer),
/* harmony export */   PositionNormalTexturedTangentVertexBuffer: () => (/* binding */ PositionNormalTexturedTangentVertexBuffer),
/* harmony export */   PositionNormalTexturedVertexBuffer: () => (/* binding */ PositionNormalTexturedVertexBuffer),
/* harmony export */   PositionTextureVertexBuffer: () => (/* binding */ PositionTextureVertexBuffer),
/* harmony export */   PositionVertexBuffer: () => (/* binding */ PositionVertexBuffer),
/* harmony export */   ShortIndexBuffer: () => (/* binding */ ShortIndexBuffer),
/* harmony export */   TimeSeriesLineVertexBuffer: () => (/* binding */ TimeSeriesLineVertexBuffer),
/* harmony export */   TimeSeriesPointVertexBuffer: () => (/* binding */ TimeSeriesPointVertexBuffer),
/* harmony export */   VertexBufferBase: () => (/* binding */ VertexBufferBase)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./webgl_constants.js */ "./esm/graphics/webgl_constants.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// WebGL buffer types.







// wwtlib.ShortIndexBuffer

function ShortIndexBuffer(indexes) {
    this.buffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
    _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ELEMENT_ARRAY_BUFFER, this.buffer);
    _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ELEMENT_ARRAY_BUFFER, indexes, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.STATIC_DRAW);
}

var ShortIndexBuffer$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("ShortIndexBuffer", [ShortIndexBuffer, ShortIndexBuffer$, null]);


// wwtlib.IndexBuffer

function IndexBuffer(indexes) {
    this.buffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
    _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ELEMENT_ARRAY_BUFFER, this.buffer);
    _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ELEMENT_ARRAY_BUFFER, indexes, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.STATIC_DRAW);
}

var IndexBuffer$ = {
    dispose: function () {
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ELEMENT_ARRAY_BUFFER, null);
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.deleteBuffer(this.buffer);
        this.buffer = null;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("IndexBuffer", [IndexBuffer, IndexBuffer$, null, _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.IDisposable]);


// wwtlib.VertexBufferBase

function VertexBufferBase() { }

var VertexBufferBase$ = {
    dispose: function () {
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, null);
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.deleteBuffer(this.vertexBuffer);
        this.vertexBuffer = null;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("VertexBufferBase", [VertexBufferBase, VertexBufferBase$, null, _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.IDisposable]);


// wwtlib.PositionVertexBuffer

function PositionVertexBuffer(count) {
    this.count = 0;
    this._verts$1 = null;
    VertexBufferBase.call(this);
    this.count = count;
}

var PositionVertexBuffer$ = {
    lock: function () {
        this._verts$1 = new Array(this.count);
        return this._verts$1;
    },

    unlock: function () {
        this.vertexBuffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
        var f32array = new Float32Array(this.count * 3);
        var buffer = f32array;
        var index = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._verts$1);
        while ($enum1.moveNext()) {
            var pt = $enum1.current;
            buffer[index++] = pt.x;
            buffer[index++] = pt.y;
            buffer[index++] = pt.z;
        }
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, f32array, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.STATIC_DRAW);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PositionVertexBuffer", [PositionVertexBuffer, PositionVertexBuffer$, VertexBufferBase]);


// wwtlib.PositionTextureVertexBuffer

function PositionTextureVertexBuffer(count) {
    this.count = 0;
    this._verts$1 = null;
    VertexBufferBase.call(this);
    this.count = count;
}

PositionTextureVertexBuffer.create = function (data) {
    var buffer = new PositionTextureVertexBuffer(data.length);
    buffer._verts$1 = data;
    buffer.unlock();
    return buffer;
};

var PositionTextureVertexBuffer$ = {
    lock: function () {
        this._verts$1 = new Array(this.count);
        return this._verts$1;
    },

    unlock: function () {
        this.vertexBuffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
        var f32array = new Float32Array(this.count * 5);
        var buffer = f32array;
        var index = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._verts$1);
        while ($enum1.moveNext()) {
            var pt = $enum1.current;
            buffer[index++] = pt.position.x;
            buffer[index++] = pt.position.y;
            buffer[index++] = pt.position.z;
            buffer[index++] = pt.tu;
            buffer[index++] = pt.tv;
        }
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, f32array, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.STATIC_DRAW);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PositionTextureVertexBuffer", [PositionTextureVertexBuffer, PositionTextureVertexBuffer$, VertexBufferBase]);


// wwtlib.PositionNormalTexturedVertexBuffer

function PositionNormalTexturedVertexBuffer(count) {
    this.count = 0;
    this._verts$1 = null;
    VertexBufferBase.call(this);
    this.count = count;
}

PositionNormalTexturedVertexBuffer.create = function (data) {
    var buffer = new PositionNormalTexturedVertexBuffer(data.length);
    buffer._verts$1 = data;
    buffer.unlock();
    return buffer;
};

var PositionNormalTexturedVertexBuffer$ = {
    lock: function () {
        this._verts$1 = new Array(this.count);
        return this._verts$1;
    },

    unlock: function () {
        this.vertexBuffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
        var f32array = new Float32Array(this.count * 8);
        var buffer = f32array;
        var index = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._verts$1);
        while ($enum1.moveNext()) {
            var pt = $enum1.current;
            buffer[index++] = pt.x;
            buffer[index++] = pt.y;
            buffer[index++] = pt.z;
            buffer[index++] = pt.nx;
            buffer[index++] = pt.ny;
            buffer[index++] = pt.nz;
            buffer[index++] = pt.tu;
            buffer[index++] = pt.tv;
        }
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, f32array, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.STATIC_DRAW);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PositionNormalTexturedVertexBuffer", [PositionNormalTexturedVertexBuffer, PositionNormalTexturedVertexBuffer$, VertexBufferBase]);


// wwtlib.PositionNormalTexturedTangentVertexBuffer

function PositionNormalTexturedTangentVertexBuffer(count) {
    this.count = 0;
    this._verts$1 = null;
    VertexBufferBase.call(this);
    this.count = count;
}

PositionNormalTexturedTangentVertexBuffer.create = function (data) {
    var buffer = new PositionNormalTexturedTangentVertexBuffer(data.length);
    buffer._verts$1 = data;
    buffer.unlock();
    return buffer;
};

var PositionNormalTexturedTangentVertexBuffer$ = {
    lock: function () {
        this._verts$1 = new Array(this.count);
        return this._verts$1;
    },

    unlock: function () {
        this.vertexBuffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
        var f32array = new Float32Array(this.count * 11);
        var buffer = f32array;
        var index = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._verts$1);
        while ($enum1.moveNext()) {
            var pt = $enum1.current;
            buffer[index++] = pt.x;
            buffer[index++] = pt.y;
            buffer[index++] = pt.z;
            buffer[index++] = pt.nx;
            buffer[index++] = pt.ny;
            buffer[index++] = pt.nz;
            buffer[index++] = pt.tanx;
            buffer[index++] = pt.tany;
            buffer[index++] = pt.tanz;
            buffer[index++] = pt.tu;
            buffer[index++] = pt.tv;
        }
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, f32array, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.STATIC_DRAW);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PositionNormalTexturedTangentVertexBuffer", [PositionNormalTexturedTangentVertexBuffer, PositionNormalTexturedTangentVertexBuffer$, VertexBufferBase]);


// wwtlib.KeplerVertexBuffer

function KeplerVertexBuffer(count) {
    this.count = 0;
    this._verts$1 = null;
    VertexBufferBase.call(this);
    this.count = count;
}

KeplerVertexBuffer.create = function (items) {
    var tmp = new KeplerVertexBuffer(items.length);
    tmp._verts$1 = items;
    return tmp;
};

var KeplerVertexBuffer$ = {
    lock: function () {
        this._verts$1 = new Array(this.count);
        return this._verts$1;
    },

    unlock: function () {
        this.vertexBuffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
        var f32array = new Float32Array(this.count * 19);
        var buffer = f32array;
        var index = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._verts$1);
        while ($enum1.moveNext()) {
            var pt = $enum1.current;
            buffer[index++] = pt.ABC.x;
            buffer[index++] = pt.ABC.y;
            buffer[index++] = pt.ABC.z;
            buffer[index++] = pt.abc1.x;
            buffer[index++] = pt.abc1.y;
            buffer[index++] = pt.abc1.z;
            buffer[index++] = pt.pointSize;
            buffer[index++] = pt.color.r / 255;
            buffer[index++] = pt.color.g / 255;
            buffer[index++] = pt.color.b / 255;
            buffer[index++] = pt.color.a / 255;
            buffer[index++] = pt.w;
            buffer[index++] = pt.e;
            buffer[index++] = pt.n;
            buffer[index++] = pt.t;
            buffer[index++] = pt.a;
            buffer[index++] = pt.z;
            buffer[index++] = pt.orbitPos;
            buffer[index++] = pt.orbits;
        }
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, f32array, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.STATIC_DRAW);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("KeplerVertexBuffer", [KeplerVertexBuffer, KeplerVertexBuffer$, VertexBufferBase]);


// wwtlib.TimeSeriesLineVertexBuffer

function TimeSeriesLineVertexBuffer(count) {
    this.count = 0;
    this._verts$1 = null;
    VertexBufferBase.call(this);
    this.count = count;
}

var TimeSeriesLineVertexBuffer$ = {
    lock: function () {
        this._verts$1 = new Array(this.count);
        return this._verts$1;
    },

    unlock: function () {
        this.vertexBuffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
        var f32array = new Float32Array(this.count * 9);
        var buffer = f32array;
        var index = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._verts$1);
        while ($enum1.moveNext()) {
            var pt = $enum1.current;
            buffer[index++] = pt.position.x;
            buffer[index++] = pt.position.y;
            buffer[index++] = pt.position.z;
            buffer[index++] = pt.get_color().r / 255;
            buffer[index++] = pt.get_color().g / 255;
            buffer[index++] = pt.get_color().b / 255;
            buffer[index++] = pt.get_color().a / 255;
            buffer[index++] = pt.tu;
            buffer[index++] = pt.tv;
        }
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, f32array, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.STATIC_DRAW);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("TimeSeriesLineVertexBuffer", [TimeSeriesLineVertexBuffer, TimeSeriesLineVertexBuffer$, VertexBufferBase]);


// wwtlib.TimeSeriesPointVertexBuffer

function TimeSeriesPointVertexBuffer(count) {
    this.count = 0;
    this._verts$1 = null;
    VertexBufferBase.call(this);
    this.count = count;
}

var TimeSeriesPointVertexBuffer$ = {
    lock: function () {
        this._verts$1 = new Array(this.count);
        return this._verts$1;
    },

    unlock: function () {
        this.vertexBuffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
        var f32array = new Float32Array(this.count * 10);
        var buffer = f32array;
        var index = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._verts$1);
        while ($enum1.moveNext()) {
            var pt = $enum1.current;
            buffer[index++] = pt.position.x;
            buffer[index++] = pt.position.y;
            buffer[index++] = pt.position.z;
            buffer[index++] = pt.get_color().r / 255;
            buffer[index++] = pt.get_color().g / 255;
            buffer[index++] = pt.get_color().b / 255;
            buffer[index++] = pt.get_color().a / 255;
            buffer[index++] = pt.tu;
            buffer[index++] = pt.tv;
            buffer[index++] = pt.pointSize;
        }
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, f32array, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.STATIC_DRAW);
    },

    dispose: function () {
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, null);
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.deleteBuffer(this.vertexBuffer);
        this.vertexBuffer = null;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("TimeSeriesPointVertexBuffer", [TimeSeriesPointVertexBuffer, TimeSeriesPointVertexBuffer$, VertexBufferBase]);


// wwtlib.PositionColoredVertexBuffer

function PositionColoredVertexBuffer(count) {
    this.count = 0;
    this._verts$1 = null;
    VertexBufferBase.call(this);
    this.count = count;
}

var PositionColoredVertexBuffer$ = {
    lock: function () {
        this._verts$1 = new Array(this.count);
        return this._verts$1;
    },

    unlock: function () {
        this.vertexBuffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
        var f32array = new Float32Array(this.count * 7);
        var buffer = f32array;
        var index = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._verts$1);
        while ($enum1.moveNext()) {
            var pt = $enum1.current;
            buffer[index++] = pt.position.x;
            buffer[index++] = pt.position.y;
            buffer[index++] = pt.position.z;
            buffer[index++] = pt.color.r / 255;
            buffer[index++] = pt.color.g / 255;
            buffer[index++] = pt.color.b / 255;
            buffer[index++] = pt.color.a / 255;
        }
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, f32array, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.STATIC_DRAW);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PositionColoredVertexBuffer", [PositionColoredVertexBuffer, PositionColoredVertexBuffer$, VertexBufferBase]);


// wwtlib.PositionColoredTexturedVertexBuffer

function PositionColoredTexturedVertexBuffer(count) {
    this.count = 0;
    this._verts$1 = null;
    VertexBufferBase.call(this);
    this.count = count;
}

var PositionColoredTexturedVertexBuffer$ = {
    lock: function () {
        this._verts$1 = new Array(this.count);
        return this._verts$1;
    },

    unlock: function () {
        this.vertexBuffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
        var f32array = new Float32Array(this.count * 9);
        var buffer = f32array;
        var index = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._verts$1);
        while ($enum1.moveNext()) {
            var pt = $enum1.current;
            buffer[index++] = pt.position.x;
            buffer[index++] = pt.position.y;
            buffer[index++] = pt.position.z;
            buffer[index++] = pt.color.r / 255;
            buffer[index++] = pt.color.g / 255;
            buffer[index++] = pt.color.b / 255;
            buffer[index++] = pt.color.a / 255;
            buffer[index++] = pt.tu;
            buffer[index++] = pt.tv;
        }
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, f32array, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.STATIC_DRAW);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PositionColoredTexturedVertexBuffer", [PositionColoredTexturedVertexBuffer, PositionColoredTexturedVertexBuffer$, VertexBufferBase]);


/***/ }),

/***/ "./esm/graphics/primitives3d.js":
/*!**************************************!*\
  !*** ./esm/graphics/primitives3d.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CullMode: () => (/* binding */ CullMode),
/* harmony export */   DataItem: () => (/* binding */ DataItem),
/* harmony export */   Dates: () => (/* binding */ Dates),
/* harmony export */   LineList: () => (/* binding */ LineList),
/* harmony export */   OrbitLineList: () => (/* binding */ OrbitLineList),
/* harmony export */   PointList: () => (/* binding */ PointList),
/* harmony export */   PointScaleTypes: () => (/* binding */ PointScaleTypes),
/* harmony export */   SimpleLineList: () => (/* binding */ SimpleLineList),
/* harmony export */   TimeSeriesLineVertex: () => (/* binding */ TimeSeriesLineVertex),
/* harmony export */   TimeSeriesPointVertex: () => (/* binding */ TimeSeriesPointVertex),
/* harmony export */   TriangleFanList: () => (/* binding */ TriangleFanList),
/* harmony export */   TriangleList: () => (/* binding */ TriangleList)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./webgl_constants.js */ "./esm/graphics/webgl_constants.js");
/* harmony import */ var _gl_buffers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./gl_buffers.js */ "./esm/graphics/gl_buffers.js");
/* harmony import */ var _texture_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./texture.js */ "./esm/graphics/texture.js");
/* harmony import */ var _shaders_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./shaders.js */ "./esm/graphics/shaders.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Various GL primitives.












// wwtlib.CullMode

var CullMode = {
    none: 0,
    counterClockwise: 2,
    clockwise: 1
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("CullMode", CullMode);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerEnum)("CullMode", CullMode);


// wwtlib.PointScaleTypes

var PointScaleTypes = {
    linear: 0,
    power: 1,
    log: 2,
    constant: 3,
    stellarMagnitude: 4
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PointScaleTypes", PointScaleTypes);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerEnum)("PointScaleTypes", PointScaleTypes);


// wwtlib.DataItem
//
// This type was originally defined in VizLayer.cs, but it's quite simple
// and is used here.

function DataItem() {
    this.size = 0;
}

var DataItem$ = {
    getColor: function () {
        return 'Red';
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("DataItem", [DataItem, DataItem$, null]);


// wwtlib.Dates

function Dates(start, end) {
    this.startDate = 0;
    this.endDate = 0;
    this.startDate = start;
    this.endDate = end;
}

Dates.empty = function () {
    return new Dates(0, 0);
};

var Dates$ = {
    copy: function () {
        return new Dates(this.startDate, this.endDate);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Dates", [Dates, Dates$, null]);


// wwtlib.SimpleLineList

function SimpleLineList() {
    this._zBuffer = true;
    this._linePoints = [];
    this._usingLocalCenter = false;
    this.sky = true;
    this.aaFix = true;
    this.pure2D = false;
    this.viewTransform = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.get_identity();
    this._lineBuffers = [];
    this._lineBufferCounts = [];
    this.useLocalCenters = false;
}

var SimpleLineList$ = {
    get_depthBuffered: function () {
        return this._zBuffer;
    },

    set_depthBuffered: function (value) {
        this._zBuffer = value;
        return value;
    },

    addLine: function (v1, v2) {
        this._linePoints.push(v1);
        this._linePoints.push(v2);
        this._emptyLineBuffer();
    },

    clear: function () {
        this._linePoints.length = 0;
        this._emptyLineBuffer();
    },

    drawLines: function (renderContext, opacity, color) {
        if (this._linePoints.length < 2) {
            return;
        }
        this._initLineBuffer(renderContext);
        var count = this._linePoints.length;
        if (renderContext.gl == null) {
            var viewPoint = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d._transformCoordinate(renderContext.get_viewPoint(), this.viewTransform);
            var ctx = renderContext.device;
            ctx.save();
            ctx.strokeStyle = color.toString();
            ctx.lineWidth = 2;
            ctx.globalAlpha = 0.25;
            var firstPoint = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
            var secondPoint = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
            for (var i = 0; i < count; i += 2) {
                firstPoint = renderContext.WVP.transform(this._linePoints[i]);
                secondPoint = renderContext.WVP.transform(this._linePoints[i + 1]);
                if (_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.dot(this._linePoints[i], viewPoint) > 0.6) {
                    ctx.beginPath();
                    ctx.moveTo(firstPoint.x, firstPoint.y);
                    ctx.lineTo(secondPoint.x, secondPoint.y);
                    ctx.stroke();
                }
            }
            ctx.restore();
        } else {
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._lineBuffers);
            while ($enum1.moveNext()) {
                var lineBuffer = $enum1.current;
                if (this.pure2D) {
                    _shaders_js__WEBPACK_IMPORTED_MODULE_8__.SimpleLineShader2D.use(renderContext, lineBuffer.vertexBuffer, color, this._zBuffer);
                }
                else {
                    _shaders_js__WEBPACK_IMPORTED_MODULE_8__.SimpleLineShader.use(renderContext, lineBuffer.vertexBuffer, color, this._zBuffer);
                }
                renderContext.gl.drawArrays(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.LINES, 0, lineBuffer.count);
            }
        }
    },

    _initLineBuffer: function (renderContext) {
        if (renderContext.gl != null) {
            if (!this._lineBuffers.length) {
                var count = this._linePoints.length;
                var lineBuffer = null;
                var linePointList = null;
                this._localCenter = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
                if (this.get_depthBuffered()) {
                    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._linePoints);

                    // compute the local center
                    while ($enum1.moveNext()) {
                        var point = $enum1.current;
                        this._localCenter.add(point);
                    }
                    this._localCenter.x /= count;
                    this._localCenter.y /= count;
                    this._localCenter.z /= count;
                }
                var countLeft = count;
                var index = 0;
                var counter = 0;
                var temp;
                var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._linePoints);
                while ($enum2.moveNext()) {
                    var point = $enum2.current;
                    if (counter >= 100000 || linePointList == null) {
                        if (lineBuffer != null) {
                            lineBuffer.unlock();
                        }
                        var thisCount = Math.min(100000, countLeft);
                        countLeft -= thisCount;
                        lineBuffer = new _gl_buffers_js__WEBPACK_IMPORTED_MODULE_6__.PositionVertexBuffer(thisCount);
                        linePointList = lineBuffer.lock(); // Lock the buffer (which will return our structs)
                        this._lineBuffers.push(lineBuffer);
                        this._lineBufferCounts.push(thisCount);
                        counter = 0;
                    }
                    if (this.useLocalCenters) {
                        temp = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(point, this._localCenter);
                        linePointList[counter] = temp;
                    }
                    else {
                        linePointList[counter] = point;
                    }
                    index++;
                    counter++;
                }
                if (lineBuffer != null) {
                    lineBuffer.unlock();
                }
            }
        }
    },

    _emptyLineBuffer: function () { }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("SimpleLineList", [SimpleLineList, SimpleLineList$, null]);


// wwtlib.OrbitLineList

function OrbitLineList() {
    this._zBuffer = true;
    this._linePoints = [];
    this._lineColors = [];
    this.sky = true;
    this.aaFix = true;
    this.viewTransform = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.get_identity();
    this._lineBuffers = [];
    this._lineBufferCounts = [];
    this.useLocalCenters = false;
}

var OrbitLineList$ = {
    get_depthBuffered: function () {
        return this._zBuffer;
    },

    set_depthBuffered: function (value) {
        this._zBuffer = value;
        return value;
    },

    addLine: function (v1, v2, c1, c2) {
        this._linePoints.push(v1);
        this._lineColors.push(c1);
        this._linePoints.push(v2);
        this._lineColors.push(c2);
        this._emptyLineBuffer();
    },

    clear: function () {
        this._linePoints.length = 0;
        this._emptyLineBuffer();
    },

    drawLines: function (renderContext, opacity, color) {
        if (this._linePoints.length < 2) {
            return;
        }
        this._initLineBuffer(renderContext);
        var count = this._linePoints.length;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._lineBuffers);
        while ($enum1.moveNext()) {
            var lineBuffer = $enum1.current;
            _shaders_js__WEBPACK_IMPORTED_MODULE_8__.OrbitLineShader.use(renderContext, lineBuffer.vertexBuffer, color);
            renderContext.gl.drawArrays(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.LINES, 0, lineBuffer.count);
        }
    },

    _initLineBuffer: function (renderContext) {
        if (renderContext.gl != null) {
            if (!this._lineBuffers.length) {
                var count = this._linePoints.length;
                var lineBuffer = null;
                var linePointList = null;
                this._localCenter = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
                if (this.get_depthBuffered()) {
                    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._linePoints);

                    // compute the local center
                    while ($enum1.moveNext()) {
                        var point = $enum1.current;
                        this._localCenter.add(point);
                    }
                    this._localCenter.x /= count;
                    this._localCenter.y /= count;
                    this._localCenter.z /= count;
                }
                var countLeft = count;
                var index = 0;
                var counter = 0;
                var temp;
                var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._linePoints);
                while ($enum2.moveNext()) {
                    var point = $enum2.current;
                    if (counter >= 100000 || linePointList == null) {
                        if (lineBuffer != null) {
                            lineBuffer.unlock();
                        }
                        var thisCount = Math.min(100000, countLeft);
                        countLeft -= thisCount;
                        lineBuffer = new _gl_buffers_js__WEBPACK_IMPORTED_MODULE_6__.PositionColoredVertexBuffer(thisCount);
                        linePointList = lineBuffer.lock(); // Lock the buffer (which will return our structs)
                        this._lineBuffers.push(lineBuffer);
                        this._lineBufferCounts.push(thisCount);
                        counter = 0;
                    }
                    if (this.useLocalCenters) {
                        temp = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(point, this._localCenter);
                        linePointList[counter] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColored(temp, this._lineColors[index]);
                    }
                    else {
                        linePointList[counter] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColored(point, this._lineColors[index]);
                    }
                    index++;
                    counter++;
                }
                if (lineBuffer != null) {
                    lineBuffer.unlock();
                }
            }
        }
    },

    _emptyLineBuffer: function () {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._lineBuffers);
        while ($enum1.moveNext()) {
            var lineBuffer = $enum1.current;
            lineBuffer.dispose();
        }
        this._lineBuffers.length = 0;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("OrbitLineList", [OrbitLineList, OrbitLineList$, null]);


// wwtlib.LineList

function LineList() {
    this._zBuffer = true;
    this.timeSeries = false;
    this.showFarSide = true;
    this.sky = false;
    this.decay = 0;
    this.useNonRotatingFrame = false;
    this.jNow = 0;
    this._linePoints = [];
    this._lineColors = [];
    this._lineDates = [];
    this._usingLocalCenter = true;
    this._lineBuffers = [];
    this._lineBufferCounts = [];
}

var LineList$ = {
    get_depthBuffered: function () {
        return this._zBuffer;
    },

    set_depthBuffered: function (value) {
        this._zBuffer = value;
        return value;
    },

    addLine: function (v1, v2, color, date) {
        this._linePoints.push(v1);
        this._linePoints.push(v2);
        this._lineColors.push(color);
        this._lineDates.push(date);
        this._emptyLineBuffer();
    },

    addLineNoDate: function (v1, v2, color) {
        this._linePoints.push(v1);
        this._linePoints.push(v2);
        this._lineColors.push(color);
        this._lineDates.push(new Dates(0, 0));
        this._emptyLineBuffer();
    },

    clear: function () {
        this._linePoints.length = 0;
        this._lineColors.length = 0;
        this._lineDates.length = 0;
    },

    drawLines: function (renderContext, opacity) {
        if (this._linePoints.length < 2 || opacity <= 0) {
            return;
        }
        if (renderContext.gl == null) {
            //todo draw with HTML5
        } else {
            this._initLineBuffer();
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._lineBuffers);
            while ($enum1.moveNext()) {
                var lineBuffer = $enum1.current;
                _shaders_js__WEBPACK_IMPORTED_MODULE_8__.LineShaderNormalDates.use(renderContext, lineBuffer.vertexBuffer, _color_js__WEBPACK_IMPORTED_MODULE_3__.Color.fromArgb(255, 255, 255, 255), this._zBuffer, this.jNow, (this.timeSeries) ? this.decay : 0);
                renderContext.gl.drawArrays(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.LINES, 0, lineBuffer.count);
            }
        }
    },

    _initLineBuffer: function () {
        if (!this._lineBuffers.length) {
            var count = this._linePoints.length;
            var lineBuffer = null;
            var linePointList = null;
            var countLeft = count;
            var index = 0;
            var counter = 0;
            var temp;
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._linePoints);
            while ($enum1.moveNext()) {
                var point = $enum1.current;
                if (counter >= 100000 || linePointList == null) {
                    if (lineBuffer != null) {
                        lineBuffer.unlock();
                    }
                    var thisCount = Math.min(100000, countLeft);
                    countLeft -= thisCount;
                    lineBuffer = new _gl_buffers_js__WEBPACK_IMPORTED_MODULE_6__.TimeSeriesLineVertexBuffer(thisCount);
                    linePointList = lineBuffer.lock(); // Lock the buffer (which will return our structs)
                    this._lineBuffers.push(lineBuffer);
                    this._lineBufferCounts.push(thisCount);
                    counter = 0;
                }
                var div2 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate((index / 2));
                temp = point;  // -localCenter;
                linePointList[counter] = new TimeSeriesLineVertex();
                linePointList[counter].position = temp;
                linePointList[counter].normal = point;
                linePointList[counter].tu = this._lineDates[div2].startDate;
                linePointList[counter].tv = this._lineDates[div2].endDate;
                linePointList[counter].set_color(this._lineColors[div2]);
                index++;
                counter++;
            }
            if (lineBuffer != null) {
                lineBuffer.unlock();
            }
        }
    },

    _emptyLineBuffer: function () { }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("LineList", [LineList, LineList$, null]);


// wwtlib.TriangleList

function TriangleList() {
    this._trianglePoints = [];
    this._triangleColors = [];
    this._triangleDates = [];
    this.timeSeries = false;
    this.showFarSide = false;
    this.sky = false;
    this.depthBuffered = true;
    this.writeZbuffer = false;
    this.decay = 0;
    this.autoTime = true;
    this.jNow = 0;
    this._dataToDraw = false;
    this._triangleBuffers = [];
    this._triangleBufferCounts = [];
}

var TriangleList$ = {
    addTriangle: function (v1, v2, v3, color, date) {
        this._trianglePoints.push(v1);
        this._trianglePoints.push(v2);
        this._trianglePoints.push(v3);
        this._triangleColors.push(color);
        this._triangleDates.push(date);
        this._emptyTriangleBuffer();
    },

    addSubdividedTriangles: function (v1, v2, v3, color, date, subdivisions) {
        subdivisions--;
        if (subdivisions < 0) {
            this.addTriangle(v1, v2, v3, color, date);
        } else {
            var v12;
            var v23;
            var v31;
            v12 = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.midPointByLength(v1, v2);
            v23 = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.midPointByLength(v2, v3);
            v31 = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.midPointByLength(v3, v1);
            this.addSubdividedTriangles(v1, v12, v31, color, date, subdivisions);
            this.addSubdividedTriangles(v12, v23, v31, color, date, subdivisions);
            this.addSubdividedTriangles(v12, v2, v23, color, date, subdivisions);
            this.addSubdividedTriangles(v23, v3, v31, color, date, subdivisions);
        }
    },

    addQuad: function (v1, v2, v3, v4, color, date) {
        this._trianglePoints.push(v1);
        this._trianglePoints.push(v3);
        this._trianglePoints.push(v2);
        this._trianglePoints.push(v2);
        this._trianglePoints.push(v3);
        this._trianglePoints.push(v4);
        this._triangleColors.push(color);
        this._triangleDates.push(date);
        this._triangleColors.push(color);
        this._triangleDates.push(date);
        this._emptyTriangleBuffer();
    },

    clear: function () {
        this._triangleColors.length = 0;
        this._trianglePoints.length = 0;
        this._triangleDates.length = 0;
        this._emptyTriangleBuffer();
    },

    _emptyTriangleBuffer: function () { },

    _initTriangleBuffer: function () {
        if (!this._triangleBuffers.length) {
            var count = this._trianglePoints.length;
            var triangleBuffer = null;
            var triPointList = null;
            var countLeft = count;
            var index = 0;
            var counter = 0;
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._trianglePoints);
            while ($enum1.moveNext()) {
                var point = $enum1.current;
                if (counter >= 90000 || triangleBuffer == null) {
                    if (triangleBuffer != null) {
                        triangleBuffer.unlock();
                    }
                    var thisCount = Math.min(90000, countLeft);
                    countLeft -= thisCount;
                    triangleBuffer = new _gl_buffers_js__WEBPACK_IMPORTED_MODULE_6__.TimeSeriesLineVertexBuffer(thisCount);
                    this._triangleBuffers.push(triangleBuffer);
                    this._triangleBufferCounts.push(thisCount);
                    triPointList = triangleBuffer.lock(); // Lock the buffer (which will return our structs)
                    counter = 0;
                }
                triPointList[counter] = new TimeSeriesLineVertex();
                triPointList[counter].position = point;
                triPointList[counter].normal = point;
                var div3 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate((index / 3));
                triPointList[counter].set_color(this._triangleColors[div3]);
                triPointList[counter].tu = this._triangleDates[div3].startDate;
                triPointList[counter].tv = this._triangleDates[div3].endDate;
                index++;
                counter++;
            }
            if (triangleBuffer != null) {
                triangleBuffer.unlock();
            }
            this._triangleColors.length = 0;
            this._triangleDates.length = 0;
            this._trianglePoints.length = 0;
            this._dataToDraw = true;
        }
    },

    draw: function (renderContext, opacity, cull) {
        if (this._trianglePoints.length < 1 && !this._dataToDraw) {
            return;
        }
        if (renderContext.gl == null) {
            //todo implement HTML5 version
        } else {
            this._initTriangleBuffer();
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._triangleBuffers);
            while ($enum1.moveNext()) {
                var triBuffer = $enum1.current;
                _shaders_js__WEBPACK_IMPORTED_MODULE_8__.LineShaderNormalDates.use(renderContext, triBuffer.vertexBuffer, _color_js__WEBPACK_IMPORTED_MODULE_3__.Color.fromArgb(255, 255, 255, 255), this.depthBuffered, this.jNow, (this.timeSeries) ? this.decay : 0);
                renderContext.gl.drawArrays(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TRIANGLES, 0, triBuffer.count);
            }
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("TriangleList", [TriangleList, TriangleList$, null]);


// wwtlib.TriangleFanList

function TriangleFanList() {
    this._zBuffer = true;
    this.timeSeries = false;
    this.decay = 0;
    this.jNow = 0;
    this._shapes = [];
    this._colors = [];
    this._dates = [];
    this._buffers = [];
    this._bufferCounts = [];
}

var TriangleFanList$ = {
    get_depthBuffered: function () {
        return this._zBuffer;
    },

    set_depthBuffered: function (value) {
        this._zBuffer = value;
        return value;
    },

    addShape: function (shapePoints, color, date) {
        this._shapes.push(shapePoints);
        this._colors.push(color);
        this._dates.push(date);
    },

    draw: function (renderContext, opacity) {
        if (opacity <= 0) {
            return;
        }
        if (renderContext.gl != null) {
            this._initBuffer();
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._buffers);
            while ($enum1.moveNext()) {
                var buffer = $enum1.current;
                _shaders_js__WEBPACK_IMPORTED_MODULE_8__.LineShaderNormalDates.use(renderContext, buffer.vertexBuffer, _color_js__WEBPACK_IMPORTED_MODULE_3__.Color.fromArgb(255, 255, 255, 255), this._zBuffer, this.jNow, (this.timeSeries) ? this.decay : 0);
                renderContext.gl.drawArrays(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TRIANGLE_FAN, 0, buffer.count);
            }
        }
    },

    _initBuffer: function () {
        if (this._buffers.length !== this._shapes.length) {
            this._buffers.length = 0;
            var index = 0;
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._shapes);
            while ($enum1.moveNext()) {
                var shape = $enum1.current;
                var buffer = new _gl_buffers_js__WEBPACK_IMPORTED_MODULE_6__.TimeSeriesLineVertexBuffer(shape.length);
                var pointList = buffer.lock();  // Lock the buffer (which will return our structs)
                this._buffers.push(buffer);
                this._bufferCounts.push(shape.length);
                var counter = 0;
                var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(shape);
                while ($enum2.moveNext()) {
                    var point = $enum2.current;
                    pointList[counter] = new TimeSeriesLineVertex();
                    pointList[counter].position = point;
                    pointList[counter].tu = this._dates[index].startDate;
                    pointList[counter].tv = this._dates[index].endDate;
                    pointList[counter].set_color(this._colors[index]);
                    counter++;
                }
                index++;
                if (buffer != null) {
                    buffer.unlock();
                }
            }
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("TriangleFanList", [TriangleFanList, TriangleFanList$, null]);


// wwtlib.PointList

function PointList(device) {
    this._points = [];
    this._colors = [];
    this._dates = [];
    this._sizes = [];
    this.timeSeries = false;
    this.showFarSide = false;
    this.sky = false;
    this.depthBuffered = true;
    this.decay = 0;
    this.scale = 1;
    this.autoTime = true;
    this.jNow = 0;
    this._dataToDraw = false;
    this.items = [];
    this._imageReady = false;
    this._init = false;
    this.minSize = 2;
    this._pointBuffers = [];
    this._pointBufferCounts = [];
    this._device = device;
}

PointList.starTexture = null;

var PointList$ = {
    addPoint: function (v1, color, date, size) {
        this._points.push(v1);
        this._colors.push(color._clone());
        this._dates.push(date);
        this._sizes.push(size);
        this._emptyPointBuffer();
    },

    clear: function () {
        this._colors.length = 0;
        this._points.length = 0;
        this._dates.length = 0;
        this._sizes.length = 0;
        this._emptyPointBuffer();
    },

    _emptyPointBuffer: function () {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._pointBuffers);
        while ($enum1.moveNext()) {
            var pointBuffer = $enum1.current;
            pointBuffer.dispose();
        }
        this._pointBuffers.length = 0;
        this._init = false;
    },

    _initBuffer: function (renderContext) {
        var $this = this;

        if (!this._init) {
            if (renderContext.gl == null) {
                this._starProfile = document.createElement('img');
                this._starProfile.addEventListener('load', function (e) {
                    $this._imageReady = true;
                }, false);
                this._starProfile.src = _url_helpers_js__WEBPACK_IMPORTED_MODULE_4__.URLHelpers.singleton.engineAssetUrl('StarProfileAlpha.png');
                this._worldList = new Array(this._points.length);
                this._transformedList = new Array(this._points.length);
                var index = 0;
                var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._points);
                while ($enum1.moveNext()) {
                    // todo filter by date
                    var pnt = $enum1.current;
                    var item = new DataItem();
                    item.location = pnt;
                    item.tranformed = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
                    item.size = this._sizes[index];
                    item.color = this._colors[index];
                    this._worldList[index] = item.location;
                    this._transformedList[index] = item.tranformed;
                    this.items.push(item);
                    index++;
                }
            } else {
                if (!this._pointBuffers.length) {
                    if (PointList.starTexture == null) {
                        PointList.starTexture = _texture_js__WEBPACK_IMPORTED_MODULE_7__.Texture.fromUrl(_url_helpers_js__WEBPACK_IMPORTED_MODULE_4__.URLHelpers.singleton.engineAssetUrl('StarProfileAlpha.png'));
                    }
                    var count = this._points.length;
                    var pointBuffer = null;
                    var pointList = null;
                    var countLeft = count;
                    var index = 0;
                    var counter = 0;
                    var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._points);
                    while ($enum2.moveNext()) {
                        var point = $enum2.current;
                        if (counter >= 100000 || pointList == null) {
                            if (pointBuffer != null) {
                                pointBuffer.unlock();
                            }
                            var thisCount = Math.min(100000, countLeft);
                            countLeft -= thisCount;
                            pointBuffer = new _gl_buffers_js__WEBPACK_IMPORTED_MODULE_6__.TimeSeriesPointVertexBuffer(thisCount);
                            pointList = pointBuffer.lock(); // Lock the buffer (which will return our structs)
                            this._pointBuffers.push(pointBuffer);
                            this._pointBufferCounts.push(thisCount);
                            counter = 0;
                        }
                        pointList[counter] = new TimeSeriesPointVertex();
                        pointList[counter].position = point;
                        pointList[counter].pointSize = this._sizes[index];
                        pointList[counter].tu = this._dates[index].startDate;
                        pointList[counter].tv = this._dates[index].endDate;
                        pointList[counter].set_color(this._colors[index]);
                        index++;
                        counter++;
                    }
                    if (pointBuffer != null) {
                        pointBuffer.unlock();
                    }
                }
            }
            this._init = true;
        }
    },

    draw: function (renderContext, opacity, cull) {
        this._initBuffer(renderContext);
        if (renderContext.gl == null) {
            if (!this._imageReady) {
                return;
            }
            renderContext.device.save();
            renderContext.WVP.projectArrayToScreen(this._worldList, this._transformedList);
            var ctx = renderContext.device;
            ctx.globalAlpha = 0.4;
            var width = renderContext.width;
            var height = renderContext.height;
            var viewPoint = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.makeCopy(renderContext.get_viewPoint());
            var scaleFactor = renderContext.get_fovScale() / 100;
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this.items);
            while ($enum1.moveNext()) {
                // todo filter by date
                var item = $enum1.current;
                if (item.tranformed.z < 1) {
                    var x = item.tranformed.x;
                    var y = item.tranformed.y;
                    var size = 0.1 * item.size / scaleFactor;
                    var half = size / 2;
                    if (x > -half && x < width + half && y > -half && y < height + half) {
                        ctx.beginPath();
                        ctx.fillStyle = item.color.toFormat();
                        ctx.arc(x, y, size, 0, Math.PI * 2, true);
                        ctx.fill();
                    }
                }
            }
            renderContext.device.restore();
        } else {
            var zero = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
            var matInv = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view());
            matInv.invert();
            var cam = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d._transformCoordinate(zero, matInv);
            var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._pointBuffers);
            while ($enum2.moveNext()) {
                var pointBuffer = $enum2.current;
                _shaders_js__WEBPACK_IMPORTED_MODULE_8__.TimeSeriesPointSpriteShader.use(renderContext, pointBuffer.vertexBuffer, PointList.starTexture.texture2d, _color_js__WEBPACK_IMPORTED_MODULE_3__.Color.fromArgb(255 * opacity, 255, 255, 255), this.depthBuffered, this.jNow, (this.timeSeries) ? this.decay : 0, cam, (this.scale * (renderContext.height / 960)), this.minSize, this.showFarSide, this.sky);
                renderContext.gl.drawArrays(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.POINTS, 0, pointBuffer.count);
            }
        }
    },

    drawTextured: function (renderContext, texture, opacity) {
        this._initBuffer(renderContext);
        var zero = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
        var matInv = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view());
        matInv.invert();
        var cam = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d._transformCoordinate(zero, matInv);
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this._pointBuffers);
        while ($enum1.moveNext()) {
            var pointBuffer = $enum1.current;
            _shaders_js__WEBPACK_IMPORTED_MODULE_8__.TimeSeriesPointSpriteShader.use(renderContext, pointBuffer.vertexBuffer, texture, _color_js__WEBPACK_IMPORTED_MODULE_3__.Color.fromArgb(255 * opacity, 255, 255, 255), this.depthBuffered, this.jNow, this.decay, cam, (this.scale * (renderContext.height / 960)), this.minSize, this.showFarSide, this.sky);
            renderContext.gl.drawArrays(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.POINTS, 0, pointBuffer.count);
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PointList", [PointList, PointList$, null]);


// wwtlib.TimeSeriesLineVertex

function TimeSeriesLineVertex() {
    this.position = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
    this.normal = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
    this.tu = 0;
    this.tv = 0;
}

TimeSeriesLineVertex.create = function (position, normal, time, color) {
    var temp = new TimeSeriesLineVertex();
    temp.position = position;
    temp.normal = normal;
    temp.tu = time;
    temp.tv = 0;
    temp.color = color;
    return temp;
};

var TimeSeriesLineVertex$ = {
    get_color: function () {
        return this.color;
    },

    set_color: function (value) {
        this.color = value;
        return value;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("TimeSeriesLineVertex", [TimeSeriesLineVertex, TimeSeriesLineVertex$, null]);


// wwtlib.TimeSeriesPointVertex

function TimeSeriesPointVertex() {
    this.pointSize = 0;
    this.tu = 0;
    this.tv = 0;
}

TimeSeriesPointVertex.create = function (position, size, time, color) {
    var tmp = new TimeSeriesPointVertex();
    tmp.position = position;
    tmp.pointSize = size;
    tmp.tu = time;
    tmp.tv = 0;
    tmp.color = color;
    return tmp;
};

var TimeSeriesPointVertex$ = {
    get_color: function () {
        return this.color;
    },

    set_color: function (value) {
        this.color = value;
        return value;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("TimeSeriesPointVertex", [TimeSeriesPointVertex, TimeSeriesPointVertex$, null]);


/***/ }),

/***/ "./esm/graphics/shaders.js":
/*!*********************************!*\
  !*** ./esm/graphics/shaders.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EllipseShader: () => (/* binding */ EllipseShader),
/* harmony export */   FitsShader: () => (/* binding */ FitsShader),
/* harmony export */   ImageShader: () => (/* binding */ ImageShader),
/* harmony export */   ImageShader2: () => (/* binding */ ImageShader2),
/* harmony export */   KeplerPointSpriteShader: () => (/* binding */ KeplerPointSpriteShader),
/* harmony export */   LineShaderNormalDates: () => (/* binding */ LineShaderNormalDates),
/* harmony export */   ModelShader: () => (/* binding */ ModelShader),
/* harmony export */   ModelShaderTan: () => (/* binding */ ModelShaderTan),
/* harmony export */   OrbitLineShader: () => (/* binding */ OrbitLineShader),
/* harmony export */   ShapeSpriteShader: () => (/* binding */ ShapeSpriteShader),
/* harmony export */   SimpleLineShader: () => (/* binding */ SimpleLineShader),
/* harmony export */   SimpleLineShader2D: () => (/* binding */ SimpleLineShader2D),
/* harmony export */   SpriteShader: () => (/* binding */ SpriteShader),
/* harmony export */   TextShader: () => (/* binding */ TextShader),
/* harmony export */   TileShader: () => (/* binding */ TileShader),
/* harmony export */   TimeSeriesPointSpriteShader: () => (/* binding */ TimeSeriesPointSpriteShader)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./webgl_constants.js */ "./esm/graphics/webgl_constants.js");
/* harmony import */ var _texture_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./texture.js */ "./esm/graphics/texture.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Core WebGL shaders for the WWT engine.









// wwtlib.SimpleLineShader

function SimpleLineShader() { }

SimpleLineShader.vertLoc = 0;
SimpleLineShader.initialized = false;
SimpleLineShader._prog = null;

SimpleLineShader.init = function (renderContext) {
    var gl = renderContext.gl;

    const fragShaderText = `\
        precision highp float;
        uniform vec4 lineColor;

        void main(void) {
            gl_FragColor = lineColor;
        }
    `;

    const vertexShaderText = `\
        attribute vec3 aVertexPosition;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
        }
    `;

    SimpleLineShader._frag = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FRAGMENT_SHADER);
    gl.shaderSource(SimpleLineShader._frag, fragShaderText);
    gl.compileShader(SimpleLineShader._frag);
    var stat = gl.getShaderParameter(SimpleLineShader._frag, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    SimpleLineShader._vert = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.VERTEX_SHADER);
    gl.shaderSource(SimpleLineShader._vert, vertexShaderText);
    gl.compileShader(SimpleLineShader._vert);
    var stat1 = gl.getShaderParameter(SimpleLineShader._vert, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    SimpleLineShader._prog = gl.createProgram();
    gl.attachShader(SimpleLineShader._prog, SimpleLineShader._vert);
    gl.attachShader(SimpleLineShader._prog, SimpleLineShader._frag);
    gl.linkProgram(SimpleLineShader._prog);
    var errcode = gl.getProgramParameter(SimpleLineShader._prog, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.LINK_STATUS);
    gl.useProgram(SimpleLineShader._prog);
    SimpleLineShader.vertLoc = gl.getAttribLocation(SimpleLineShader._prog, 'aVertexPosition');
    SimpleLineShader.lineColorLoc = gl.getUniformLocation(SimpleLineShader._prog, 'lineColor');
    SimpleLineShader.projMatLoc = gl.getUniformLocation(SimpleLineShader._prog, 'uPMatrix');
    SimpleLineShader.mvMatLoc = gl.getUniformLocation(SimpleLineShader._prog, 'uMVMatrix');
    gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
    gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    SimpleLineShader.initialized = true;
};

SimpleLineShader.use = function (renderContext, vertex, lineColor, useDepth) {
    var gl = renderContext.gl;
    if (gl != null) {
        if (!SimpleLineShader.initialized) {
            SimpleLineShader.init(renderContext);
        }
        gl.useProgram(SimpleLineShader._prog);
        var mvMat = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view());
        gl.uniformMatrix4fv(SimpleLineShader.mvMatLoc, false, mvMat.floatArray());
        gl.uniformMatrix4fv(SimpleLineShader.projMatLoc, false, renderContext.get_projection().floatArray());
        gl.uniform4f(SimpleLineShader.lineColorLoc, lineColor.r / 255, lineColor.g / 255, lineColor.b / 255, 1);
        if (renderContext.space || !useDepth) {
            gl.disable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        } else {
            gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        }
        gl.disableVertexAttribArray(0);
        gl.disableVertexAttribArray(1);
        gl.disableVertexAttribArray(2);
        gl.disableVertexAttribArray(3);
        gl.enableVertexAttribArray(SimpleLineShader.vertLoc);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, vertex);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, null);
        gl.vertexAttribPointer(SimpleLineShader.vertLoc, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 0, 0);
        gl.lineWidth(1);
        gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
        gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    }
};

var SimpleLineShader$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("SimpleLineShader", [SimpleLineShader, SimpleLineShader$, null]);


// wwtlib.SimpleLineShader2D

function SimpleLineShader2D() { }

SimpleLineShader2D.vertLoc = 0;
SimpleLineShader2D.initialized = false;
SimpleLineShader2D._prog = null;

SimpleLineShader2D.init = function (renderContext) {
    var gl = renderContext.gl;

    const fragShaderText = `\
       precision highp float;
       uniform vec4 lineColor;

       void main(void) {
           gl_FragColor = lineColor;
       }
    `;

    const vertexShaderText = `\
        attribute vec3 aVertexPosition;

        void main(void) {
            gl_Position = vec4(aVertexPosition, 1.0);
        }
    `;

    SimpleLineShader2D._frag = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FRAGMENT_SHADER);
    gl.shaderSource(SimpleLineShader2D._frag, fragShaderText);
    gl.compileShader(SimpleLineShader2D._frag);
    var stat = gl.getShaderParameter(SimpleLineShader2D._frag, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    SimpleLineShader2D._vert = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.VERTEX_SHADER);
    gl.shaderSource(SimpleLineShader2D._vert, vertexShaderText);
    gl.compileShader(SimpleLineShader2D._vert);
    var stat1 = gl.getShaderParameter(SimpleLineShader2D._vert, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    SimpleLineShader2D._prog = gl.createProgram();
    gl.attachShader(SimpleLineShader2D._prog, SimpleLineShader2D._vert);
    gl.attachShader(SimpleLineShader2D._prog, SimpleLineShader2D._frag);
    gl.linkProgram(SimpleLineShader2D._prog);
    var errcode = gl.getProgramParameter(SimpleLineShader2D._prog, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.LINK_STATUS);
    gl.useProgram(SimpleLineShader2D._prog);
    SimpleLineShader2D.vertLoc = gl.getAttribLocation(SimpleLineShader2D._prog, 'aVertexPosition');
    SimpleLineShader2D.lineColorLoc = gl.getUniformLocation(SimpleLineShader2D._prog, 'lineColor');
    gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
    gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    SimpleLineShader2D.initialized = true;
};

SimpleLineShader2D.use = function (renderContext, vertex, lineColor, useDepth) {
    var gl = renderContext.gl;
    if (gl != null) {
        if (!SimpleLineShader2D.initialized) {
            SimpleLineShader2D.init(renderContext);
        }
        gl.useProgram(SimpleLineShader2D._prog);
        var mvMat = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view());
        gl.uniform4f(SimpleLineShader2D.lineColorLoc, lineColor.r / 255, lineColor.g / 255, lineColor.b / 255, 1);
        if (renderContext.space || !useDepth) {
            gl.disable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        } else {
            gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        }
        gl.disableVertexAttribArray(0);
        gl.disableVertexAttribArray(1);
        gl.disableVertexAttribArray(2);
        gl.disableVertexAttribArray(3);
        gl.enableVertexAttribArray(SimpleLineShader2D.vertLoc);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, vertex);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, null);
        gl.vertexAttribPointer(SimpleLineShader2D.vertLoc, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 0, 0);
        gl.lineWidth(1);
        gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
        gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    }
};

var SimpleLineShader2D$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("SimpleLineShader2D", [SimpleLineShader2D, SimpleLineShader2D$, null]);


// wwtlib.OrbitLineShader

function OrbitLineShader() { }

OrbitLineShader.vertLoc = 0;
OrbitLineShader.colorLoc = 0;
OrbitLineShader.initialized = false;
OrbitLineShader._prog = null;

OrbitLineShader.init = function (renderContext) {
    var gl = renderContext.gl;

    const fragShaderText = `\
        precision highp float;
        uniform vec4 lineColor;
        varying lowp vec4 vColor;

        void main(void) {
            gl_FragColor = lineColor * vColor;
        }
    `;

    const vertexShaderText = `\
        attribute vec3 aVertexPosition;
        attribute vec4 aVertexColor;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;
        varying lowp vec4 vColor;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vColor = aVertexColor;
        }
    `;

    OrbitLineShader._frag = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FRAGMENT_SHADER);
    gl.shaderSource(OrbitLineShader._frag, fragShaderText);
    gl.compileShader(OrbitLineShader._frag);
    var stat = gl.getShaderParameter(OrbitLineShader._frag, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    OrbitLineShader._vert = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.VERTEX_SHADER);
    gl.shaderSource(OrbitLineShader._vert, vertexShaderText);
    gl.compileShader(OrbitLineShader._vert);
    var stat1 = gl.getShaderParameter(OrbitLineShader._vert, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    OrbitLineShader._prog = gl.createProgram();
    gl.attachShader(OrbitLineShader._prog, OrbitLineShader._vert);
    gl.attachShader(OrbitLineShader._prog, OrbitLineShader._frag);
    gl.linkProgram(OrbitLineShader._prog);
    var errcode = gl.getProgramParameter(OrbitLineShader._prog, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.LINK_STATUS);
    gl.useProgram(OrbitLineShader._prog);
    OrbitLineShader.vertLoc = gl.getAttribLocation(OrbitLineShader._prog, 'aVertexPosition');
    OrbitLineShader.colorLoc = gl.getAttribLocation(OrbitLineShader._prog, 'aVertexColor');
    OrbitLineShader.lineColorLoc = gl.getUniformLocation(OrbitLineShader._prog, 'lineColor');
    OrbitLineShader.projMatLoc = gl.getUniformLocation(OrbitLineShader._prog, 'uPMatrix');
    OrbitLineShader.mvMatLoc = gl.getUniformLocation(OrbitLineShader._prog, 'uMVMatrix');
    gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
    gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    OrbitLineShader.initialized = true;
};

OrbitLineShader.use = function (renderContext, vertex, lineColor) {
    var gl = renderContext.gl;
    if (gl != null) {
        if (!OrbitLineShader.initialized) {
            OrbitLineShader.init(renderContext);
        }
        gl.useProgram(OrbitLineShader._prog);
        var mvMat = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view());
        gl.uniformMatrix4fv(OrbitLineShader.mvMatLoc, false, mvMat.floatArray());
        gl.uniformMatrix4fv(OrbitLineShader.projMatLoc, false, renderContext.get_projection().floatArray());
        gl.uniform4f(OrbitLineShader.lineColorLoc, lineColor.r / 255, lineColor.g / 255, lineColor.b / 255, 1);
        if (renderContext.space) {
            gl.disable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        } else {
            gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        }
        gl.disableVertexAttribArray(0);
        gl.disableVertexAttribArray(1);
        gl.disableVertexAttribArray(2);
        gl.disableVertexAttribArray(3);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, vertex);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, null);
        gl.enableVertexAttribArray(OrbitLineShader.vertLoc);
        gl.enableVertexAttribArray(OrbitLineShader.colorLoc);
        gl.vertexAttribPointer(OrbitLineShader.vertLoc, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 28, 0);
        gl.vertexAttribPointer(OrbitLineShader.colorLoc, 4, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 28, 12);
        gl.lineWidth(1);
        gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
        gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    }
};

var OrbitLineShader$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("OrbitLineShader", [OrbitLineShader, OrbitLineShader$, null]);


// wwtlib.LineShaderNormalDates

function LineShaderNormalDates() { }

LineShaderNormalDates.vertLoc = 0;
LineShaderNormalDates.colorLoc = 0;
LineShaderNormalDates.timeLoc = 0;
LineShaderNormalDates.initialized = false;
LineShaderNormalDates._prog = null;

LineShaderNormalDates.init = function (renderContext) {
    var gl = renderContext.gl;

    const fragShaderText = `\
        precision highp float;
        uniform vec4 lineColor;
        varying lowp vec4 vColor;

        void main(void)
        {
            gl_FragColor = lineColor * vColor;
        }
    `;

    const vertexShaderText = `\
        attribute vec3 aVertexPosition;
        attribute vec4 aVertexColor;
        attribute vec2 aTime;
        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;
        uniform float jNow;
        uniform float decay;

        varying lowp vec4 vColor;

        void main(void)
        {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            float dAlpha = 1.0;

            if (decay > 0.0)
            {
                    dAlpha = 1.0 - ((jNow - aTime.y) / decay);
                    if (dAlpha > 1.0 )
                    {
                        dAlpha = 1.0;
                    }
            }

            if (jNow < aTime.x && decay > 0.0)
            {
                vColor = vec4(1, 1, 1, 1);
            }
            else
            {
                vColor = vec4(aVertexColor.r, aVertexColor.g, aVertexColor.b, dAlpha * aVertexColor.a);
            }
        }
    `;

    LineShaderNormalDates._frag = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FRAGMENT_SHADER);
    gl.shaderSource(LineShaderNormalDates._frag, fragShaderText);
    gl.compileShader(LineShaderNormalDates._frag);
    var stat = gl.getShaderParameter(LineShaderNormalDates._frag, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    LineShaderNormalDates._vert = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.VERTEX_SHADER);
    gl.shaderSource(LineShaderNormalDates._vert, vertexShaderText);
    gl.compileShader(LineShaderNormalDates._vert);
    var stat1 = gl.getShaderParameter(LineShaderNormalDates._vert, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    LineShaderNormalDates._prog = gl.createProgram();
    gl.attachShader(LineShaderNormalDates._prog, LineShaderNormalDates._vert);
    gl.attachShader(LineShaderNormalDates._prog, LineShaderNormalDates._frag);
    gl.linkProgram(LineShaderNormalDates._prog);
    var errcode = gl.getProgramParameter(LineShaderNormalDates._prog, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.LINK_STATUS);
    gl.useProgram(LineShaderNormalDates._prog);
    LineShaderNormalDates.vertLoc = gl.getAttribLocation(LineShaderNormalDates._prog, 'aVertexPosition');
    LineShaderNormalDates.colorLoc = gl.getAttribLocation(LineShaderNormalDates._prog, 'aVertexColor');
    LineShaderNormalDates.timeLoc = gl.getAttribLocation(LineShaderNormalDates._prog, 'aTime');
    LineShaderNormalDates.lineColorLoc = gl.getUniformLocation(LineShaderNormalDates._prog, 'lineColor');
    LineShaderNormalDates.projMatLoc = gl.getUniformLocation(LineShaderNormalDates._prog, 'uPMatrix');
    LineShaderNormalDates.mvMatLoc = gl.getUniformLocation(LineShaderNormalDates._prog, 'uMVMatrix');
    LineShaderNormalDates.jNowLoc = gl.getUniformLocation(LineShaderNormalDates._prog, 'jNow');
    LineShaderNormalDates.decayLoc = gl.getUniformLocation(LineShaderNormalDates._prog, 'decay');
    gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
    gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    LineShaderNormalDates.initialized = true;
};

LineShaderNormalDates.use = function (renderContext, vertex, lineColor, zBuffer, jNow, decay) {
    var gl = renderContext.gl;
    if (gl != null) {
        if (!LineShaderNormalDates.initialized) {
            LineShaderNormalDates.init(renderContext);
        }
        gl.useProgram(LineShaderNormalDates._prog);
        var mvMat = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view());
        gl.uniformMatrix4fv(LineShaderNormalDates.mvMatLoc, false, mvMat.floatArray());
        gl.uniformMatrix4fv(LineShaderNormalDates.projMatLoc, false, renderContext.get_projection().floatArray());
        gl.uniform4f(LineShaderNormalDates.lineColorLoc, lineColor.r / 255, lineColor.g / 255, lineColor.b / 255, 1);
        gl.uniform1f(LineShaderNormalDates.jNowLoc, jNow);
        gl.uniform1f(LineShaderNormalDates.decayLoc, decay);
        if (zBuffer) {
            gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        } else {
            gl.disable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        }
        gl.disableVertexAttribArray(0);
        gl.disableVertexAttribArray(1);
        gl.disableVertexAttribArray(2);
        gl.disableVertexAttribArray(3);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, vertex);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, null);
        gl.enableVertexAttribArray(LineShaderNormalDates.vertLoc);
        gl.enableVertexAttribArray(LineShaderNormalDates.colorLoc);
        gl.vertexAttribPointer(LineShaderNormalDates.vertLoc, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 36, 0);
        gl.vertexAttribPointer(LineShaderNormalDates.colorLoc, 4, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 36, 12);
        gl.vertexAttribPointer(LineShaderNormalDates.timeLoc, 2, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 36, 28);
        gl.lineWidth(1);
        gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
        gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    }
};

var LineShaderNormalDates$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("LineShaderNormalDates", [LineShaderNormalDates, LineShaderNormalDates$, null]);


// wwtlib.TimeSeriesPointSpriteShader

function TimeSeriesPointSpriteShader() { }

TimeSeriesPointSpriteShader.vertLoc = 0;
TimeSeriesPointSpriteShader.colorLoc = 0;
TimeSeriesPointSpriteShader.pointSizeLoc = 0;
TimeSeriesPointSpriteShader.timeLoc = 0;
TimeSeriesPointSpriteShader.initialized = false;
TimeSeriesPointSpriteShader._prog = null;

TimeSeriesPointSpriteShader.init = function (renderContext) {
    var gl = renderContext.gl;

    const fragShaderText = `\
        precision mediump float;
        uniform vec4 lineColor;
        varying lowp vec4 vColor;
        uniform sampler2D uSampler;

        void main(void)
        {
            vec4 texColor;
            texColor = texture2D(uSampler, gl_PointCoord);
            gl_FragColor = lineColor * vColor * texColor;
        }
    `;

    const vertexShaderText = `\
        attribute vec3 aVertexPosition;
        attribute vec4 aVertexColor;
        attribute vec2 aTime;
        attribute float aPointSize;
        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;
        uniform float jNow;
        uniform vec3 cameraPosition;
        uniform float decay;
        uniform float scale;
        uniform float minSize;
        uniform float sky;
        uniform float showFarSide;

        varying lowp vec4 vColor;

        void main(void)
        {
            float dotCam = dot( normalize(cameraPosition-aVertexPosition), normalize(aVertexPosition));
            float dist = distance(aVertexPosition, cameraPosition);
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            float dAlpha = 1.0;

            if ( decay > 0.0)
            {
                    dAlpha = 1.0 - ((jNow - aTime.y) / decay);
                    if (dAlpha > 1.0 )
                    {
                        dAlpha = 1.0;
                    }
            }

            if ( showFarSide == 0.0 && (dotCam * sky) < 0.0 || (jNow < aTime.x && decay > 0.0))
            {
                vColor = vec4(0.0, 0.0, 0.0, 0.0);
            }
            else
            {
                vColor = vec4(aVertexColor.r, aVertexColor.g, aVertexColor.b, dAlpha);
            }

            float lSize = scale;

            if (scale < 0.0)
            {
                lSize = -scale;
                dist = 1.0;
            }

            gl_PointSize = max(minSize, (lSize * ( aPointSize ) / dist));
        }
    `;

    TimeSeriesPointSpriteShader._frag = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FRAGMENT_SHADER);
    gl.shaderSource(TimeSeriesPointSpriteShader._frag, fragShaderText);
    gl.compileShader(TimeSeriesPointSpriteShader._frag);
    var stat = gl.getShaderParameter(TimeSeriesPointSpriteShader._frag, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    TimeSeriesPointSpriteShader._vert = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.VERTEX_SHADER);
    gl.shaderSource(TimeSeriesPointSpriteShader._vert, vertexShaderText);
    gl.compileShader(TimeSeriesPointSpriteShader._vert);
    var stat1 = gl.getShaderParameter(TimeSeriesPointSpriteShader._vert, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    var compilationLog = gl.getShaderInfoLog(TimeSeriesPointSpriteShader._vert);
    TimeSeriesPointSpriteShader._prog = gl.createProgram();
    gl.attachShader(TimeSeriesPointSpriteShader._prog, TimeSeriesPointSpriteShader._vert);
    gl.attachShader(TimeSeriesPointSpriteShader._prog, TimeSeriesPointSpriteShader._frag);
    gl.linkProgram(TimeSeriesPointSpriteShader._prog);
    var errcode = gl.getProgramParameter(TimeSeriesPointSpriteShader._prog, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.LINK_STATUS);
    gl.useProgram(TimeSeriesPointSpriteShader._prog);
    TimeSeriesPointSpriteShader.vertLoc = gl.getAttribLocation(TimeSeriesPointSpriteShader._prog, 'aVertexPosition');
    TimeSeriesPointSpriteShader.colorLoc = gl.getAttribLocation(TimeSeriesPointSpriteShader._prog, 'aVertexColor');
    TimeSeriesPointSpriteShader.pointSizeLoc = gl.getAttribLocation(TimeSeriesPointSpriteShader._prog, 'aPointSize');
    TimeSeriesPointSpriteShader.timeLoc = gl.getAttribLocation(TimeSeriesPointSpriteShader._prog, 'aTime');
    TimeSeriesPointSpriteShader.projMatLoc = gl.getUniformLocation(TimeSeriesPointSpriteShader._prog, 'uPMatrix');
    TimeSeriesPointSpriteShader.mvMatLoc = gl.getUniformLocation(TimeSeriesPointSpriteShader._prog, 'uMVMatrix');
    TimeSeriesPointSpriteShader.sampLoc = gl.getUniformLocation(TimeSeriesPointSpriteShader._prog, 'uSampler');
    TimeSeriesPointSpriteShader.jNowLoc = gl.getUniformLocation(TimeSeriesPointSpriteShader._prog, 'jNow');
    TimeSeriesPointSpriteShader.decayLoc = gl.getUniformLocation(TimeSeriesPointSpriteShader._prog, 'decay');
    TimeSeriesPointSpriteShader.lineColorLoc = gl.getUniformLocation(TimeSeriesPointSpriteShader._prog, 'lineColor');
    TimeSeriesPointSpriteShader.cameraPosLoc = gl.getUniformLocation(TimeSeriesPointSpriteShader._prog, 'cameraPosition');
    TimeSeriesPointSpriteShader.scaleLoc = gl.getUniformLocation(TimeSeriesPointSpriteShader._prog, 'scale');
    TimeSeriesPointSpriteShader.skyLoc = gl.getUniformLocation(TimeSeriesPointSpriteShader._prog, 'sky');
    TimeSeriesPointSpriteShader.showFarSideLoc = gl.getUniformLocation(TimeSeriesPointSpriteShader._prog, 'showFarSide');
    TimeSeriesPointSpriteShader.minSizeLoc = gl.getUniformLocation(TimeSeriesPointSpriteShader._prog, 'minSize');
    gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
    TimeSeriesPointSpriteShader.initialized = true;
};

TimeSeriesPointSpriteShader.use = function (renderContext, vertex, texture, lineColor, zBuffer, jNow, decay, camera, scale, minSize, showFarSide, sky) {
    if (texture == null) {
        texture = _texture_js__WEBPACK_IMPORTED_MODULE_5__.Texture.getEmpty();
    }
    var gl = renderContext.gl;
    if (gl != null) {
        if (!TimeSeriesPointSpriteShader.initialized) {
            TimeSeriesPointSpriteShader.init(renderContext);
        }
        gl.useProgram(TimeSeriesPointSpriteShader._prog);
        var mvMat = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view());
        gl.uniformMatrix4fv(TimeSeriesPointSpriteShader.mvMatLoc, false, mvMat.floatArray());
        gl.uniformMatrix4fv(TimeSeriesPointSpriteShader.projMatLoc, false, renderContext.get_projection().floatArray());
        gl.uniform1i(TimeSeriesPointSpriteShader.sampLoc, 0);
        gl.uniform1f(TimeSeriesPointSpriteShader.jNowLoc, jNow);
        gl.uniform1f(TimeSeriesPointSpriteShader.decayLoc, decay);
        gl.uniform4f(TimeSeriesPointSpriteShader.lineColorLoc, lineColor.r / 255, lineColor.g / 255, lineColor.b / 255, lineColor.a / 255);
        gl.uniform3f(TimeSeriesPointSpriteShader.cameraPosLoc, camera.x, camera.y, camera.z);
        gl.uniform1f(TimeSeriesPointSpriteShader.scaleLoc, scale);
        gl.uniform1f(TimeSeriesPointSpriteShader.minSizeLoc, minSize);
        gl.uniform1f(TimeSeriesPointSpriteShader.showFarSideLoc, (showFarSide) ? 1 : 0);
        gl.uniform1f(TimeSeriesPointSpriteShader.skyLoc, (sky) ? -1 : 1);
        if (zBuffer) {
            gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        } else {
            gl.disable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        }
        gl.disableVertexAttribArray(0);
        gl.disableVertexAttribArray(1);
        gl.disableVertexAttribArray(2);
        gl.disableVertexAttribArray(3);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, vertex);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, null);
        gl.enableVertexAttribArray(TimeSeriesPointSpriteShader.vertLoc);
        gl.enableVertexAttribArray(TimeSeriesPointSpriteShader.colorLoc);
        gl.enableVertexAttribArray(TimeSeriesPointSpriteShader.pointSizeLoc);
        gl.enableVertexAttribArray(TimeSeriesPointSpriteShader.timeLoc);
        gl.vertexAttribPointer(TimeSeriesPointSpriteShader.vertLoc, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 40, 0);
        gl.vertexAttribPointer(TimeSeriesPointSpriteShader.colorLoc, 4, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 40, 12);
        gl.vertexAttribPointer(TimeSeriesPointSpriteShader.pointSizeLoc, 1, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 40, 36);
        gl.vertexAttribPointer(TimeSeriesPointSpriteShader.timeLoc, 2, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 40, 28);
        gl.activeTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE0);
        gl.bindTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, texture);
        gl.lineWidth(1);
        gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
        gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE);
    }
};

var TimeSeriesPointSpriteShader$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("TimeSeriesPointSpriteShader", [TimeSeriesPointSpriteShader, TimeSeriesPointSpriteShader$, null]);

// wwtlib.KeplerPointSpriteShader

function KeplerPointSpriteShader() { }

KeplerPointSpriteShader.abcLoc = 0;
KeplerPointSpriteShader.abcLoc1 = 0;
KeplerPointSpriteShader.pointSizeLoc = 0;
KeplerPointSpriteShader.colorLoc = 0;
KeplerPointSpriteShader.weLoc = 0;
KeplerPointSpriteShader.nTLoc = 0;
KeplerPointSpriteShader.azLoc = 0;
KeplerPointSpriteShader.orbitLoc = 0;
KeplerPointSpriteShader.initialized = false;
KeplerPointSpriteShader._prog = null;

KeplerPointSpriteShader.init = function (renderContext) {
    var gl = renderContext.gl;

    const fragShaderText = `\
        precision mediump float;
        uniform vec4 lineColor;
        varying lowp vec4 vColor;
        uniform sampler2D uSampler;

        void main(void)
        {
            vec4 texColor;
            texColor = texture2D(uSampler, gl_PointCoord);
            gl_FragColor = lineColor * vColor * texColor;
        }
    `;

    const vertexShaderText = `\
        attribute vec3 ABC;
        attribute vec3 abc;
        attribute float PointSize;
        attribute vec4 Color;
        attribute vec2 we;
        attribute vec2 nT;
        attribute vec2 az;
        attribute vec2 orbit;
        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;
        uniform float jNow;
        uniform vec3 cameraPosition;
        uniform float MM;
        uniform float scaling;
        uniform float minSize;
        uniform float opacity;
        varying lowp vec4 vColor;

        void main(void)
        {
            float M = nT.x * (jNow - nT.y) * 0.01745329251994;
            float e = we.y;
            float a = az.x;
            float PI = 3.1415926535897932384;
            float w = we.x* 0.01745329251994;
            float F = 1.0;

            if (M < 0.0)
                F = -1.0;

            M = abs(M) / (2.0 * PI);
            M = (M - float(int(M)))*2.0 *PI *F;

            if (MM != 0.0)
            {
                M = MM + (1.0- orbit.x) *2.0 *PI;
                if (M > (2.0*PI))
                    M = M - (2.0*PI);
            }

            if (M < 0.0)
                M += 2.0 *PI;

            F = 1.0;
            if (M > PI)
                F = -1.0;

            if (M > PI)
                M = 2.0 *PI - M;

            float E = PI / 2.0;
            float scale = PI / 4.0;

            for (int i =0; i<23; i++)
            {
                float R = E - e *sin(E);
                if (M > R)
                    E += scale;
                else
                    E -= scale;
                scale /= 2.0;
            }

            E = E * F;

            float v = 2.0 * atan(sqrt((1.0 + e) / (1.0 -e )) * tan(E/2.0));
            float r = a * (1.0-e * cos(E));

            vec4 pnt;
            pnt.x = r * abc.x * sin(ABC.x + w + v);
            pnt.z = r * abc.y * sin(ABC.y + w + v);
            pnt.y = r * abc.z * sin(ABC.z + w + v);
            pnt.w = 1.0;

            float dist = distance(pnt.xyz, cameraPosition.xyz);
            gl_Position = uPMatrix * uMVMatrix * pnt;
            vColor.a = opacity * (1.0-(orbit.x));
            vColor.r = Color.r;
            vColor.g = Color.g;
            vColor.b = Color.b;
            gl_PointSize = max(minSize, scaling * (PointSize / dist));
        }
    `;

    KeplerPointSpriteShader._frag = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FRAGMENT_SHADER);
    gl.shaderSource(KeplerPointSpriteShader._frag, fragShaderText);
    gl.compileShader(KeplerPointSpriteShader._frag);
    var stat = gl.getShaderParameter(KeplerPointSpriteShader._frag, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    KeplerPointSpriteShader._vert = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.VERTEX_SHADER);
    gl.shaderSource(KeplerPointSpriteShader._vert, vertexShaderText);
    gl.compileShader(KeplerPointSpriteShader._vert);
    var stat1 = gl.getShaderParameter(KeplerPointSpriteShader._vert, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    var compilationLog = gl.getShaderInfoLog(KeplerPointSpriteShader._vert);
    KeplerPointSpriteShader._prog = gl.createProgram();
    gl.attachShader(KeplerPointSpriteShader._prog, KeplerPointSpriteShader._vert);
    gl.attachShader(KeplerPointSpriteShader._prog, KeplerPointSpriteShader._frag);
    gl.linkProgram(KeplerPointSpriteShader._prog);
    var errcode = gl.getProgramParameter(KeplerPointSpriteShader._prog, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.LINK_STATUS);
    gl.useProgram(KeplerPointSpriteShader._prog);
    KeplerPointSpriteShader.abcLoc1 = gl.getAttribLocation(KeplerPointSpriteShader._prog, 'abc');
    KeplerPointSpriteShader.abcLoc = gl.getAttribLocation(KeplerPointSpriteShader._prog, 'ABC');
    KeplerPointSpriteShader.pointSizeLoc = gl.getAttribLocation(KeplerPointSpriteShader._prog, 'PointSize');
    KeplerPointSpriteShader.colorLoc = gl.getAttribLocation(KeplerPointSpriteShader._prog, 'Color');
    KeplerPointSpriteShader.weLoc = gl.getAttribLocation(KeplerPointSpriteShader._prog, 'we');
    KeplerPointSpriteShader.nTLoc = gl.getAttribLocation(KeplerPointSpriteShader._prog, 'nT');
    KeplerPointSpriteShader.azLoc = gl.getAttribLocation(KeplerPointSpriteShader._prog, 'az');
    KeplerPointSpriteShader.orbitLoc = gl.getAttribLocation(KeplerPointSpriteShader._prog, 'orbit');
    KeplerPointSpriteShader.projMatLoc = gl.getUniformLocation(KeplerPointSpriteShader._prog, 'uPMatrix');
    KeplerPointSpriteShader.mvMatLoc = gl.getUniformLocation(KeplerPointSpriteShader._prog, 'uMVMatrix');
    KeplerPointSpriteShader.jNowLoc = gl.getUniformLocation(KeplerPointSpriteShader._prog, 'jNow');
    KeplerPointSpriteShader.cameraPosLoc = gl.getUniformLocation(KeplerPointSpriteShader._prog, 'cameraPosition');
    KeplerPointSpriteShader.mmLoc = gl.getUniformLocation(KeplerPointSpriteShader._prog, 'MM');
    KeplerPointSpriteShader.scaleLoc = gl.getUniformLocation(KeplerPointSpriteShader._prog, 'scaling');
    KeplerPointSpriteShader.minSizeLoc = gl.getUniformLocation(KeplerPointSpriteShader._prog, 'minSize');
    KeplerPointSpriteShader.lineColorLoc = gl.getUniformLocation(KeplerPointSpriteShader._prog, 'lineColor');
    KeplerPointSpriteShader.opacityLoc = gl.getUniformLocation(KeplerPointSpriteShader._prog, 'opacity');
    KeplerPointSpriteShader.sampLoc = gl.getUniformLocation(KeplerPointSpriteShader._prog, 'uSampler');
    gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
    KeplerPointSpriteShader.initialized = true;
};

KeplerPointSpriteShader.use = function (renderContext, worldView, vertex, texture, lineColor, opacity, zBuffer, jNow, MM, camera, scale, minSize) {
    if (texture == null) {
        texture = _texture_js__WEBPACK_IMPORTED_MODULE_5__.Texture.getEmpty();
    }
    var gl = renderContext.gl;
    if (gl != null) {
        if (!KeplerPointSpriteShader.initialized) {
            KeplerPointSpriteShader.init(renderContext);
        }
        gl.useProgram(KeplerPointSpriteShader._prog);
        gl.uniformMatrix4fv(KeplerPointSpriteShader.mvMatLoc, false, worldView.floatArray());
        gl.uniformMatrix4fv(KeplerPointSpriteShader.projMatLoc, false, renderContext.get_projection().floatArray());
        gl.uniform1i(KeplerPointSpriteShader.sampLoc, 0);
        gl.uniform1f(KeplerPointSpriteShader.jNowLoc, jNow);
        gl.uniform1f(KeplerPointSpriteShader.mmLoc, MM);
        gl.uniform4f(KeplerPointSpriteShader.lineColorLoc, lineColor.r / 255, lineColor.g / 255, lineColor.b / 255, lineColor.a / 255);
        gl.uniform1f(KeplerPointSpriteShader.opacityLoc, opacity);
        gl.uniform3f(KeplerPointSpriteShader.cameraPosLoc, camera.x, camera.y, camera.z);
        gl.uniform1f(KeplerPointSpriteShader.scaleLoc, scale);
        gl.uniform1f(KeplerPointSpriteShader.minSizeLoc, minSize);
        if (zBuffer) {
            gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        } else {
            gl.disable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        }
        gl.disableVertexAttribArray(0);
        gl.disableVertexAttribArray(1);
        gl.disableVertexAttribArray(2);
        gl.disableVertexAttribArray(3);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, vertex);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, null);
        gl.enableVertexAttribArray(KeplerPointSpriteShader.abcLoc);
        gl.enableVertexAttribArray(KeplerPointSpriteShader.abcLoc1);
        gl.enableVertexAttribArray(KeplerPointSpriteShader.colorLoc);
        gl.enableVertexAttribArray(KeplerPointSpriteShader.pointSizeLoc);
        gl.enableVertexAttribArray(KeplerPointSpriteShader.weLoc);
        gl.enableVertexAttribArray(KeplerPointSpriteShader.nTLoc);
        gl.enableVertexAttribArray(KeplerPointSpriteShader.azLoc);
        gl.enableVertexAttribArray(KeplerPointSpriteShader.orbitLoc);
        gl.enableVertexAttribArray(KeplerPointSpriteShader.weLoc);
        gl.vertexAttribPointer(KeplerPointSpriteShader.abcLoc, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 76, 0);
        gl.vertexAttribPointer(KeplerPointSpriteShader.abcLoc1, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 76, 12);
        gl.vertexAttribPointer(KeplerPointSpriteShader.pointSizeLoc, 1, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 76, 24);
        gl.vertexAttribPointer(KeplerPointSpriteShader.colorLoc, 4, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 76, 28);
        gl.vertexAttribPointer(KeplerPointSpriteShader.weLoc, 2, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 76, 44);
        gl.vertexAttribPointer(KeplerPointSpriteShader.nTLoc, 2, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 76, 52);
        gl.vertexAttribPointer(KeplerPointSpriteShader.azLoc, 2, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 76, 60);
        gl.vertexAttribPointer(KeplerPointSpriteShader.orbitLoc, 2, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 76, 68);
        gl.activeTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE0);
        gl.bindTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, texture);
        gl.lineWidth(1);
        gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
        gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE);
    }
};

var KeplerPointSpriteShader$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("KeplerPointSpriteShader", [KeplerPointSpriteShader, KeplerPointSpriteShader$, null]);


// wwtlib.EllipseShader

function EllipseShader() { }

EllipseShader.angleLoc = 0;
EllipseShader.initialized = false;
EllipseShader._prog = null;

EllipseShader.init = function (renderContext) {
    var gl = renderContext.gl;

    const fragShaderText = `\
        precision mediump float;
        varying lowp vec4 vColor;

        void main(void)
        {
            gl_FragColor = vColor;
        }
    `;

    const vertexShaderText = `\
        attribute vec3 Angle;
        uniform mat4 matWVP;
        uniform mat4 matPosition;
        uniform vec3 positionNow;
        uniform float semiMajorAxis;
        uniform float eccentricity;
        uniform vec4 color;
        uniform float eccentricAnomaly;
        varying lowp vec4 vColor;

        void main(void)
        {
            float fade = (1.0 - Angle.x);
            float PI = 3.1415927;
            float E = eccentricAnomaly - Angle.x * 2.0 * PI;
            vec2 semiAxes = vec2(1.0, sqrt(1.0 - eccentricity * eccentricity)) * semiMajorAxis;
            vec2 planePos = semiAxes * vec2(cos(E) - eccentricity, sin(E));

            if (Angle.x == 0.0)
                gl_Position =  matPosition * vec4(positionNow, 1.0);
            else
                gl_Position = matWVP * vec4(planePos.x, planePos.y, 0.0, 1.0);

            vColor = vec4(color.rgb, fade * color.a);
        }
    `;

    EllipseShader._frag = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FRAGMENT_SHADER);
    gl.shaderSource(EllipseShader._frag, fragShaderText);
    gl.compileShader(EllipseShader._frag);
    var stat = gl.getShaderParameter(EllipseShader._frag, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    EllipseShader._vert = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.VERTEX_SHADER);
    gl.shaderSource(EllipseShader._vert, vertexShaderText);
    gl.compileShader(EllipseShader._vert);
    var stat1 = gl.getShaderParameter(EllipseShader._vert, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    var compilationLog = gl.getShaderInfoLog(EllipseShader._vert);
    EllipseShader._prog = gl.createProgram();
    gl.attachShader(EllipseShader._prog, EllipseShader._vert);
    gl.attachShader(EllipseShader._prog, EllipseShader._frag);
    gl.linkProgram(EllipseShader._prog);
    var errcode = gl.getProgramParameter(EllipseShader._prog, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.LINK_STATUS);
    gl.useProgram(EllipseShader._prog);
    EllipseShader.angleLoc = gl.getAttribLocation(EllipseShader._prog, 'Angle');
    EllipseShader.matWVPLoc = gl.getUniformLocation(EllipseShader._prog, 'matWVP');
    EllipseShader.matPositionLoc = gl.getUniformLocation(EllipseShader._prog, 'matPosition');
    EllipseShader.positionNowLoc = gl.getUniformLocation(EllipseShader._prog, 'positionNow');
    EllipseShader.colorLoc = gl.getUniformLocation(EllipseShader._prog, 'color');
    EllipseShader.semiMajorAxisLoc = gl.getUniformLocation(EllipseShader._prog, 'semiMajorAxis');
    EllipseShader.eccentricityLoc = gl.getUniformLocation(EllipseShader._prog, 'eccentricity');
    EllipseShader.eccentricAnomalyLoc = gl.getUniformLocation(EllipseShader._prog, 'eccentricAnomaly');
    gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
    EllipseShader.initialized = true;
};

EllipseShader.use = function (renderContext, semiMajorAxis, eccentricity, eccentricAnomaly, lineColor, opacity, world, positionNow) {
    var gl = renderContext.gl;
    if (gl != null) {
        if (!EllipseShader.initialized) {
            EllipseShader.init(renderContext);
        }
        gl.useProgram(EllipseShader._prog);
        var WVPPos = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(_double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(world, renderContext.get_view()), renderContext.get_projection());
        var WVP = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(_double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view()), renderContext.get_projection());
        gl.uniformMatrix4fv(EllipseShader.matWVPLoc, false, WVP.floatArray());
        gl.uniformMatrix4fv(EllipseShader.matPositionLoc, false, WVPPos.floatArray());
        gl.uniform3f(EllipseShader.positionNowLoc, positionNow.x, positionNow.y, positionNow.z);
        gl.uniform4f(EllipseShader.colorLoc, lineColor.r / 255, lineColor.g / 255, lineColor.b / 255, lineColor.a / 255);
        gl.uniform1f(EllipseShader.semiMajorAxisLoc, semiMajorAxis);
        gl.uniform1f(EllipseShader.eccentricityLoc, eccentricity);
        gl.uniform1f(EllipseShader.eccentricAnomalyLoc, eccentricAnomaly);
        gl.disable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        gl.disableVertexAttribArray(0);
        gl.disableVertexAttribArray(1);
        gl.disableVertexAttribArray(2);
        gl.disableVertexAttribArray(3);
        gl.enableVertexAttribArray(EllipseShader.angleLoc);
        gl.vertexAttribPointer(EllipseShader.angleLoc, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 0, 0);
        gl.lineWidth(1);
        gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
        gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE);
    }
};

var EllipseShader$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("EllipseShader", [EllipseShader, EllipseShader$, null]);


// wwtlib.ModelShader

function ModelShader() { }

ModelShader.vertLoc = 0;
ModelShader.normalLoc = 0;
ModelShader.textureLoc = 0;
ModelShader.initialized = false;
ModelShader._prog = null;
ModelShader.sunPosition = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.create(-1, -1, -1);
ModelShader.minLightingBrightness = 1;
ModelShader.atmosphereColor = _color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(0, 0, 0, 0);

ModelShader.init = function (renderContext) {
    var gl = renderContext.gl;

    const fragShaderText = `\
        precision mediump float;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        uniform sampler2D uSampler;
        uniform float opacity;
        uniform vec3 uSunPosition;
        uniform float uMinBrightness;
        uniform vec3 uAtmosphereColor;

        void main(void) {
            vec3 normal = normalize(vNormal);
            vec3 camVN = normalize(vCamVector);
            vec3 cam = normalize(vec3(0.0,0.0,-1.0));
            float dt = uMinBrightness + pow(max(0.0,- dot(normal,uSunPosition)),0.5);
            float atm = max(0.0, 1.0 - 2.5 * dot(cam,camVN)) + 0.3 * dt;
            atm = (dt > uMinBrightness) ? atm : 0.0;
            if ( uMinBrightness == 1.0 ) { dt = 1.0; atm= 0.0; }
            vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
            gl_FragColor = col * opacity;
            gl_FragColor.rgb *= dt;
            gl_FragColor.rgb += atm * uAtmosphereColor;
        }
    `;

    const vertexShaderText = `\
        attribute vec3 aVertexPosition;
        attribute vec3 aNormal;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vCamVector = normalize((mat3(uMVMatrix) * aVertexPosition).xyz);
            vec3 normalT = normalize(mat3(uMVMatrix) * aNormal);
            vTextureCoord = aTextureCoord;
            vNormal = normalT;
        }
    `;

    ModelShader._frag = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FRAGMENT_SHADER);
    gl.shaderSource(ModelShader._frag, fragShaderText);
    gl.compileShader(ModelShader._frag);
    var stat = gl.getShaderParameter(ModelShader._frag, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    if (!stat) {
        var errorF = gl.getShaderInfoLog(ModelShader._frag);
    }
    ModelShader._vert = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.VERTEX_SHADER);
    gl.shaderSource(ModelShader._vert, vertexShaderText);
    gl.compileShader(ModelShader._vert);
    var stat1 = gl.getShaderParameter(ModelShader._vert, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    if (!stat1) {
        var errorV = gl.getShaderInfoLog(ModelShader._vert);
    }
    ModelShader._prog = gl.createProgram();
    gl.attachShader(ModelShader._prog, ModelShader._vert);
    gl.attachShader(ModelShader._prog, ModelShader._frag);
    gl.linkProgram(ModelShader._prog);
    var errcode = gl.getProgramParameter(ModelShader._prog, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.LINK_STATUS);
    gl.useProgram(ModelShader._prog);
    ModelShader.vertLoc = gl.getAttribLocation(ModelShader._prog, 'aVertexPosition');
    ModelShader.normalLoc = gl.getAttribLocation(ModelShader._prog, 'aNormal');
    ModelShader.textureLoc = gl.getAttribLocation(ModelShader._prog, 'aTextureCoord');
    ModelShader.projMatLoc = gl.getUniformLocation(ModelShader._prog, 'uPMatrix');
    ModelShader.mvMatLoc = gl.getUniformLocation(ModelShader._prog, 'uMVMatrix');
    ModelShader.sampLoc = gl.getUniformLocation(ModelShader._prog, 'uSampler');
    ModelShader.sunLoc = gl.getUniformLocation(ModelShader._prog, 'uSunPosition');
    ModelShader.minBrightnessLoc = gl.getUniformLocation(ModelShader._prog, 'uMinBrightness');
    ModelShader.opacityLoc = gl.getUniformLocation(ModelShader._prog, 'opacity');
    ModelShader.atmosphereColorLoc = gl.getUniformLocation(ModelShader._prog, 'uAtmosphereColor');
    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileUvMultiple)(1);
    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileDemEnabled)(true);
    gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
    gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    ModelShader.initialized = true;
};

ModelShader.use = function (renderContext, vertex, index, texture, opacity, noDepth, stride) {
    if (texture == null) {
        texture = _texture_js__WEBPACK_IMPORTED_MODULE_5__.Texture.getEmpty();
    }
    var gl = renderContext.gl;
    if (gl != null) {
        if (!ModelShader.initialized) {
            ModelShader.init(renderContext);
        }
        gl.useProgram(ModelShader._prog);
        var mvMat = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view());
        gl.uniform1f(ModelShader.opacityLoc, opacity);
        gl.uniform1f(ModelShader.minBrightnessLoc, (renderContext.lighting) ? ModelShader.minLightingBrightness : 1);
        if (renderContext.lighting) {
            gl.uniform3f(ModelShader.atmosphereColorLoc, ModelShader.atmosphereColor.r / 255, ModelShader.atmosphereColor.g / 255, ModelShader.atmosphereColor.b / 255);
        } else {
            gl.uniform3f(ModelShader.atmosphereColorLoc, 0, 0, 0);
        }
        gl.uniformMatrix4fv(ModelShader.mvMatLoc, false, mvMat.floatArray());
        gl.uniformMatrix4fv(ModelShader.projMatLoc, false, renderContext.get_projection().floatArray());
        ModelShader.sunPosition.normalize();
        var mvInv = renderContext.get_view().clone();
        mvInv.set_m41(0);
        mvInv.set_m42(0);
        mvInv.set_m43(0);
        mvInv.set_m44(1);
        var sp = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d._transformCoordinate(ModelShader.sunPosition, mvInv);
        sp.normalize();
        gl.uniform3f(ModelShader.sunLoc, sp.x, sp.y, sp.z);
        gl.uniform1i(ModelShader.sampLoc, 0);
        if (renderContext.space || noDepth) {
            gl.disable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        } else {
            gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        }
        gl.disableVertexAttribArray(0);
        gl.disableVertexAttribArray(1);
        gl.disableVertexAttribArray(2);
        gl.disableVertexAttribArray(3);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, vertex);
        gl.enableVertexAttribArray(ModelShader.vertLoc);
        gl.enableVertexAttribArray(ModelShader.normalLoc);
        gl.enableVertexAttribArray(ModelShader.textureLoc);
        gl.vertexAttribPointer(ModelShader.vertLoc, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, stride, 0);
        gl.vertexAttribPointer(ModelShader.normalLoc, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, stride, 12);
        gl.vertexAttribPointer(ModelShader.textureLoc, 2, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, stride, stride - 8);
        gl.activeTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE0);
        gl.bindTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, texture);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, index);
        gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
        if (noDepth) {
            gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE);
        } else {
            gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
        }
    }
};

var ModelShader$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("ModelShader", [ModelShader, ModelShader$, null]);


// wwtlib.ModelShaderTan

function ModelShaderTan() { }

ModelShaderTan.vertLoc = 0;
ModelShaderTan.normalLoc = 0;
ModelShaderTan.textureLoc = 0;
ModelShaderTan.initialized = false;
ModelShaderTan._prog = null;
ModelShaderTan.sunPosition = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.create(-1, -1, -1);
ModelShaderTan.minLightingBrightness = 1;
ModelShaderTan.atmosphereColor = _color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(0, 0, 0, 0);

ModelShaderTan.init = function (renderContext) {
    var gl = renderContext.gl;

    const fragShaderText = `\
        precision mediump float;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        uniform sampler2D uSampler;
        uniform float opacity;
        uniform vec3 uSunPosition;
        uniform float uMinBrightness;
        uniform vec3 uAtmosphereColor;

        void main(void) {
            vec3 normal = normalize(vNormal);
            vec3 camVN = normalize(vCamVector);
            vec3 cam = normalize(vec3(0.0,0.0,-1.0));
            float dt = uMinBrightness + pow(max(0.0,- dot(normal,uSunPosition)),0.5);
            float atm = max(0.0, 1.0 - 2.5 * dot(cam,camVN)) + 0.3 * dt;
            atm = (dt > uMinBrightness) ? atm : 0.0;
            if ( uMinBrightness == 1.0 ) { dt = 1.0; atm= 0.0; }
            vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
            gl_FragColor = col * opacity;
            gl_FragColor.rgb *= dt;
            gl_FragColor.rgb += atm * uAtmosphereColor;
        }
    `;

    const vertexShaderText = `\
        attribute vec3 aVertexPosition;
        attribute vec3 aNormal;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vCamVector = normalize((mat3(uMVMatrix) * aVertexPosition).xyz);
            vec3 normalT = normalize(mat3(uMVMatrix) * aNormal);
            vTextureCoord = aTextureCoord;
            vNormal = normalT;
        }
    `;

    ModelShaderTan._frag = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FRAGMENT_SHADER);
    gl.shaderSource(ModelShaderTan._frag, fragShaderText);
    gl.compileShader(ModelShaderTan._frag);
    var stat = gl.getShaderParameter(ModelShaderTan._frag, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    if (!stat) {
        var errorF = gl.getShaderInfoLog(ModelShaderTan._frag);
    }
    ModelShaderTan._vert = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.VERTEX_SHADER);
    gl.shaderSource(ModelShaderTan._vert, vertexShaderText);
    gl.compileShader(ModelShaderTan._vert);
    var stat1 = gl.getShaderParameter(ModelShaderTan._vert, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    if (!stat1) {
        var errorV = gl.getShaderInfoLog(ModelShaderTan._vert);
    }
    ModelShaderTan._prog = gl.createProgram();
    gl.attachShader(ModelShaderTan._prog, ModelShaderTan._vert);
    gl.attachShader(ModelShaderTan._prog, ModelShaderTan._frag);
    gl.linkProgram(ModelShaderTan._prog);
    var errcode = gl.getProgramParameter(ModelShaderTan._prog, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.LINK_STATUS);
    gl.useProgram(ModelShaderTan._prog);
    ModelShaderTan.vertLoc = gl.getAttribLocation(ModelShaderTan._prog, 'aVertexPosition');
    ModelShaderTan.normalLoc = gl.getAttribLocation(ModelShaderTan._prog, 'aNormal');
    ModelShaderTan.textureLoc = gl.getAttribLocation(ModelShaderTan._prog, 'aTextureCoord');
    ModelShaderTan.projMatLoc = gl.getUniformLocation(ModelShaderTan._prog, 'uPMatrix');
    ModelShaderTan.mvMatLoc = gl.getUniformLocation(ModelShaderTan._prog, 'uMVMatrix');
    ModelShaderTan.sampLoc = gl.getUniformLocation(ModelShaderTan._prog, 'uSampler');
    ModelShaderTan.sunLoc = gl.getUniformLocation(ModelShaderTan._prog, 'uSunPosition');
    ModelShaderTan.minBrightnessLoc = gl.getUniformLocation(ModelShaderTan._prog, 'uMinBrightness');
    ModelShaderTan.opacityLoc = gl.getUniformLocation(ModelShaderTan._prog, 'opacity');
    ModelShaderTan.atmosphereColorLoc = gl.getUniformLocation(ModelShaderTan._prog, 'uAtmosphereColor');
    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileUvMultiple)(1);
    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileDemEnabled)(true);
    gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
    gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    ModelShaderTan.initialized = true;
};

ModelShaderTan.use = function (renderContext, vertex, index, texture, opacity, noDepth, stride) {
    if (texture == null) {
        texture = _texture_js__WEBPACK_IMPORTED_MODULE_5__.Texture.getEmpty();
    }
    var gl = renderContext.gl;
    if (gl != null) {
        if (!ModelShaderTan.initialized) {
            ModelShaderTan.init(renderContext);
        }
        gl.useProgram(ModelShaderTan._prog);
        var mvMat = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view());
        gl.uniform1f(ModelShaderTan.opacityLoc, opacity);
        gl.uniform1f(ModelShaderTan.minBrightnessLoc, (renderContext.lighting) ? ModelShaderTan.minLightingBrightness : 1);
        if (renderContext.lighting) {
            gl.uniform3f(ModelShaderTan.atmosphereColorLoc, ModelShaderTan.atmosphereColor.r / 255, ModelShaderTan.atmosphereColor.g / 255, ModelShaderTan.atmosphereColor.b / 255);
        } else {
            gl.uniform3f(ModelShaderTan.atmosphereColorLoc, 0, 0, 0);
        }
        gl.uniformMatrix4fv(ModelShaderTan.mvMatLoc, false, mvMat.floatArray());
        gl.uniformMatrix4fv(ModelShaderTan.projMatLoc, false, renderContext.get_projection().floatArray());
        ModelShaderTan.sunPosition.normalize();
        var mvInv = renderContext.get_view().clone();
        mvInv.set_m41(0);
        mvInv.set_m42(0);
        mvInv.set_m43(0);
        mvInv.set_m44(1);
        var sp = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d._transformCoordinate(ModelShaderTan.sunPosition, mvInv);
        sp.normalize();
        gl.uniform3f(ModelShaderTan.sunLoc, -sp.x, -sp.y, -sp.z);
        gl.uniform1i(ModelShaderTan.sampLoc, 0);
        if (renderContext.space || noDepth) {
            gl.disable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        } else {
            gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        }
        gl.disableVertexAttribArray(0);
        gl.disableVertexAttribArray(1);
        gl.disableVertexAttribArray(2);
        gl.disableVertexAttribArray(3);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, vertex);
        gl.enableVertexAttribArray(ModelShaderTan.vertLoc);
        gl.enableVertexAttribArray(ModelShaderTan.normalLoc);
        gl.enableVertexAttribArray(ModelShaderTan.textureLoc);
        gl.vertexAttribPointer(ModelShaderTan.vertLoc, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, stride, 0);
        gl.vertexAttribPointer(ModelShaderTan.normalLoc, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, stride, 12);
        gl.vertexAttribPointer(ModelShaderTan.textureLoc, 2, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, stride, stride - 8);
        gl.activeTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE0);
        gl.bindTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, texture);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, index);
        gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
        if (noDepth) {
            gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE);
        } else {
            gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
        }
    }
};

var ModelShaderTan$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("ModelShaderTan", [ModelShaderTan, ModelShaderTan$, null]);


// wwtlib.TileShader

function TileShader() { }

TileShader.vertLoc = 0;
TileShader.textureLoc = 0;
TileShader.initialized = false;
TileShader._prog = null;
TileShader.sunPosition = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.create(-1, -1, -1);
TileShader.minLightingBrightness = 1;
TileShader.atmosphereColor = _color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(0, 0, 0, 0);

TileShader.init = function (renderContext) {
    var gl = renderContext.gl;

    const fragShaderText = `\
        precision mediump float;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        uniform sampler2D uSampler;
        uniform float opacity;
        uniform vec3 uSunPosition;
        uniform float uMinBrightness;
        uniform vec3 uAtmosphereColor;

        void main(void) {
            vec3 normal = normalize(vNormal);
            vec3 camVN = normalize(vCamVector);
            vec3 cam = normalize(vec3(0.0,0.0,-1.0));
            float dt = uMinBrightness + pow(max(0.0,- dot(normal,uSunPosition)),0.5);
            float atm = max(0.0, 1.0 - 2.5 * dot(cam,camVN)) + 0.3 * dt;
            atm = (dt > uMinBrightness) ? atm : 0.0;
            if ( uMinBrightness == 1.0 ) { dt = 1.0; atm = 0.0; }
            vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
            gl_FragColor = col * opacity;
            gl_FragColor.rgb *= dt;
            gl_FragColor.rgb += atm * uAtmosphereColor;
        }
    `;

    const vertexShaderText = `\
        attribute vec3 aVertexPosition;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;
        uniform vec3 uCenterScreen;
        uniform vec3 uCenterWorld;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        void main(void) {
            vec3 normal;

            if (length(uCenterWorld) > 0.00001) {
                gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 0.0) + vec4(uCenterScreen, 1.0);
                vCamVector = normalize((mat3(uMVMatrix) * (aVertexPosition + uCenterWorld)).xyz);
                normal = normalize(aVertexPosition + uCenterWorld);
            } else {
                gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
                vCamVector = normalize((mat3(uMVMatrix) * aVertexPosition).xyz);
                normal = normalize(aVertexPosition);
            }

            vec3 normalT = normalize(mat3(uMVMatrix) * normal);
            vTextureCoord = aTextureCoord;
            vNormal = normalT;
        }
    `;

    TileShader._frag = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FRAGMENT_SHADER);
    gl.shaderSource(TileShader._frag, fragShaderText);
    gl.compileShader(TileShader._frag);
    var stat = gl.getShaderParameter(TileShader._frag, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    if (!stat) {
        var errorF = gl.getShaderInfoLog(TileShader._frag);
    }
    TileShader._vert = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.VERTEX_SHADER);
    gl.shaderSource(TileShader._vert, vertexShaderText);
    gl.compileShader(TileShader._vert);
    var stat1 = gl.getShaderParameter(TileShader._vert, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    if (!stat1) {
        var errorV = gl.getShaderInfoLog(TileShader._vert);
    }
    TileShader._prog = gl.createProgram();
    gl.attachShader(TileShader._prog, TileShader._vert);
    gl.attachShader(TileShader._prog, TileShader._frag);
    gl.linkProgram(TileShader._prog);
    var errcode = gl.getProgramParameter(TileShader._prog, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.LINK_STATUS);
    gl.useProgram(TileShader._prog);
    TileShader.vertLoc = gl.getAttribLocation(TileShader._prog, 'aVertexPosition');
    TileShader.textureLoc = gl.getAttribLocation(TileShader._prog, 'aTextureCoord');
    TileShader.projMatLoc = gl.getUniformLocation(TileShader._prog, 'uPMatrix');
    TileShader.mvMatLoc = gl.getUniformLocation(TileShader._prog, 'uMVMatrix');
    TileShader.sampLoc = gl.getUniformLocation(TileShader._prog, 'uSampler');
    TileShader.centerScreenLoc = gl.getUniformLocation(TileShader._prog, 'uCenterScreen');
    TileShader.centerWorldLoc = gl.getUniformLocation(TileShader._prog, 'uCenterWorld');
    TileShader.sunLoc = gl.getUniformLocation(TileShader._prog, 'uSunPosition');
    TileShader.minBrightnessLoc = gl.getUniformLocation(TileShader._prog, 'uMinBrightness');
    TileShader.opacityLoc = gl.getUniformLocation(TileShader._prog, 'opacity');
    TileShader.atmosphereColorLoc = gl.getUniformLocation(TileShader._prog, 'uAtmosphereColor');
    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileUvMultiple)(1);
    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileDemEnabled)(true);
    gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
    gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    TileShader.initialized = true;
};

TileShader.use = function (renderContext, vertex, index, texture, opacity, noDepth, centerWorld) {
    if (texture == null) {
        texture = _texture_js__WEBPACK_IMPORTED_MODULE_5__.Texture.getEmpty();
    }
    var gl = renderContext.gl;
    if (gl != null) {
        if (!TileShader.initialized) {
            TileShader.init(renderContext);
        }
        gl.useProgram(TileShader._prog);
        var mvMat = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view());
        gl.uniform1f(TileShader.opacityLoc, opacity);
        gl.uniform1f(TileShader.minBrightnessLoc, (renderContext.lighting) ? TileShader.minLightingBrightness : 1);
        if (renderContext.lighting) {
            gl.uniform3f(TileShader.atmosphereColorLoc, TileShader.atmosphereColor.r / 255, TileShader.atmosphereColor.g / 255, TileShader.atmosphereColor.b / 255);
        } else {
            gl.uniform3f(TileShader.atmosphereColorLoc, 0, 0, 0);
        }
        gl.uniform3f(TileShader.centerWorldLoc, centerWorld.x, centerWorld.y, centerWorld.z);

        // "This would be clearer by making the 'centerWorld' parameter optional. Unfortunately, that's not allowed in C# 2.0"
        if (centerWorld.lengthSq() > 0.001) {
            var wvp = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(mvMat, renderContext.get_projection());
            var centerScreen = wvp.transform(centerWorld);
            gl.uniform3f(TileShader.centerScreenLoc, centerScreen.x, centerScreen.y, centerScreen.z);
        } else {
            gl.uniform3f(TileShader.centerScreenLoc, 0, 0, 0);
        }
        gl.uniformMatrix4fv(TileShader.mvMatLoc, false, mvMat.floatArray());
        gl.uniformMatrix4fv(TileShader.projMatLoc, false, renderContext.get_projection().floatArray());
        TileShader.sunPosition.normalize();
        var mvInv = renderContext.get_view().clone();
        mvInv.set_m41(0);
        mvInv.set_m42(0);
        mvInv.set_m43(0);
        mvInv.set_m44(1);
        var sp = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d._transformCoordinate(TileShader.sunPosition, mvInv);
        sp.normalize();
        gl.uniform3f(TileShader.sunLoc, -sp.x, -sp.y, -sp.z);
        gl.uniform1i(TileShader.sampLoc, 0);
        if (renderContext.space || noDepth) {
            gl.disable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        } else {
            gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        }
        gl.disableVertexAttribArray(0);
        gl.disableVertexAttribArray(1);
        gl.disableVertexAttribArray(2);
        gl.disableVertexAttribArray(3);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, vertex);
        gl.enableVertexAttribArray(TileShader.vertLoc);
        gl.enableVertexAttribArray(TileShader.textureLoc);
        gl.vertexAttribPointer(TileShader.vertLoc, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 20, 0);
        gl.vertexAttribPointer(TileShader.textureLoc, 2, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 20, 12);
        gl.activeTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE0);
        gl.bindTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, texture);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, index);
        gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
        if (noDepth) {
            gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE);
        } else {
            gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
        }
    }
};

var TileShader$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("TileShader", [TileShader, TileShader$, null]);


// wwtlib.FitsShader

function FitsShader() { }

FitsShader.vertLoc = 0;
FitsShader.textureLoc = 0;
FitsShader.initialized = false;
FitsShader._prog = null;
FitsShader.blankValue = 0;
FitsShader.bScale = 1;
FitsShader.bZero = 0;
FitsShader.min = 0;
FitsShader.max = 0;
FitsShader.transparentBlack = false;
FitsShader.containsBlanks = false;
FitsShader.scaleType = 0;

FitsShader.init = function (renderContext) {
    var gl = renderContext.gl;

    const fragShaderText = `\
        #version 300 es

        precision mediump float;
        in vec2 vTextureCoord;
        in vec3 vNormal;
        in vec3 vCamVector;
        out vec4 fragmentColor;

        uniform sampler2D uSampler;
        uniform sampler2D colorSampler;
        uniform float blank;
        uniform float bzero;
        uniform float bscale;
        uniform float min;
        uniform float max;
        uniform bool containsBlanks;
        uniform bool transparentBlack;
        uniform int scaleType;
        uniform float opacity;

        bool isNaN(float value) {
            // See https://stackoverflow.com/questions/9446888/best-way-to-detect-nans-in-opengl-shaders
            // PKGW also finds that we need "value != value" on his Dell laptop running
            // Chrome on Linux.
            return (value != value) || !(value < 0.0 || 0.0 < value || value == 0.0);
        }

        void main(void) {
            //FITS images are flipped on the y axis
            vec4 color = texture(uSampler, vec2(vTextureCoord.x, 1.0 - vTextureCoord.y));

            if(isNaN(color.r) || (containsBlanks && abs(blank - color.r) < 0.00000001)){
                fragmentColor = vec4(0.0, 0.0, 0.0, 0.0);
            } else {
                float physicalValue = (bzero + bscale * color.r - min) / (max - min);
                if(transparentBlack && physicalValue <= 0.0){
                    fragmentColor = vec4(0.0, 0.0, 0.0, 0.0);
                    return;
                }

                physicalValue = clamp(physicalValue, 0.0, 1.0);

                switch(scaleType){
                    case 1:
                        physicalValue = log(physicalValue * 255.0 + 1.0 ) / log(256.0);
                        break;
                    case 2:
                        physicalValue = physicalValue * physicalValue;
                        break;
                    case 3:
                        physicalValue = sqrt(physicalValue);
                        break;
                }
                vec4 colorFromColorMapper = texture(colorSampler, vec2(physicalValue, 0.5));
                fragmentColor = vec4(colorFromColorMapper.rgb, opacity);
            }
        }
    `;

    const vertexShaderText = `\
        #version 300 es

        in vec3 aVertexPosition;
        in vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;
        uniform vec3 uCenterScreen;

        out vec2 vTextureCoord;

        void main(void) {
            if(length(uCenterScreen) > 0.0000001) {
                gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 0.0) + vec4(uCenterScreen, 1.0);
            } else {
                gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            }

            vTextureCoord = aTextureCoord;
        }
    `;

    FitsShader._frag = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FRAGMENT_SHADER);
    gl.shaderSource(FitsShader._frag, fragShaderText);
    gl.compileShader(FitsShader._frag);
    var stat = gl.getShaderParameter(FitsShader._frag, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    if (!stat) {
        var errorF = gl.getShaderInfoLog(FitsShader._frag);
        console.log(errorF);
    }
    FitsShader._vert = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.VERTEX_SHADER);
    gl.shaderSource(FitsShader._vert, vertexShaderText);
    gl.compileShader(FitsShader._vert);
    var stat1 = gl.getShaderParameter(FitsShader._vert, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    if (!stat1) {
        var errorV = gl.getShaderInfoLog(FitsShader._vert);
        console.log(errorV);
    }
    FitsShader._prog = gl.createProgram();
    gl.attachShader(FitsShader._prog, FitsShader._vert);
    gl.attachShader(FitsShader._prog, FitsShader._frag);
    gl.linkProgram(FitsShader._prog);
    var errcode = gl.getProgramParameter(FitsShader._prog, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.LINK_STATUS);
    gl.useProgram(FitsShader._prog);
    FitsShader.vertLoc = gl.getAttribLocation(FitsShader._prog, 'aVertexPosition');
    FitsShader.textureLoc = gl.getAttribLocation(FitsShader._prog, 'aTextureCoord');
    FitsShader.projMatLoc = gl.getUniformLocation(FitsShader._prog, 'uPMatrix');
    FitsShader.mvMatLoc = gl.getUniformLocation(FitsShader._prog, 'uMVMatrix');
    FitsShader.sampLoc = gl.getUniformLocation(FitsShader._prog, 'uSampler');
    FitsShader.colorLoc = gl.getUniformLocation(FitsShader._prog, 'colorSampler');
    FitsShader.centerScreenLoc = gl.getUniformLocation(FitsShader._prog, 'uCenterScreen');
    FitsShader.blank = gl.getUniformLocation(FitsShader._prog, 'blank');
    FitsShader.bzero = gl.getUniformLocation(FitsShader._prog, 'bzero');
    FitsShader.bscale = gl.getUniformLocation(FitsShader._prog, 'bscale');
    FitsShader.minLoc = gl.getUniformLocation(FitsShader._prog, 'min');
    FitsShader.maxLoc = gl.getUniformLocation(FitsShader._prog, 'max');
    FitsShader.transparentBlackLoc = gl.getUniformLocation(FitsShader._prog, 'transparentBlack');
    FitsShader.containsBlanksLoc = gl.getUniformLocation(FitsShader._prog, 'containsBlanks');
    FitsShader.scalingLocation = gl.getUniformLocation(FitsShader._prog, 'scaleType');
    FitsShader.opacityLoc = gl.getUniformLocation(FitsShader._prog, 'opacity');
    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileUvMultiple)(1);
    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileDemEnabled)(true);
    gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
    gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    FitsShader.initialized = true;
};

FitsShader.use = function (renderContext, vertex, index, texture, opacity, noDepth, centerWorld) {
    if (texture == null) {
        texture = _texture_js__WEBPACK_IMPORTED_MODULE_5__.Texture.getEmpty();
    }
    var gl = renderContext.gl;
    if (gl != null) {
        if (!FitsShader.initialized) {
            FitsShader.init(renderContext);
        }
        gl.useProgram(FitsShader._prog);
        var mvMat = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view());
        gl.uniform1f(FitsShader.opacityLoc, opacity);
        gl.uniformMatrix4fv(FitsShader.mvMatLoc, false, mvMat.floatArray());
        gl.uniformMatrix4fv(FitsShader.projMatLoc, false, renderContext.get_projection().floatArray());

        // "This would be clearer by making the 'centerWorld' parameter optional. Unfortunately, that's not allowed in C# 2.0"
        if (centerWorld.lengthSq() > 0.001) {
            var wvp = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(mvMat, renderContext.get_projection());
            var centerScreen = wvp.transform(centerWorld);
            gl.uniform3f(FitsShader.centerScreenLoc, centerScreen.x, centerScreen.y, centerScreen.z);
        } else {
            gl.uniform3f(FitsShader.centerScreenLoc, 0, 0, 0);
        }

        gl.uniform1i(FitsShader.sampLoc, 0);
        gl.uniform1i(FitsShader.colorLoc, 1);
        gl.uniform1f(FitsShader.blank, FitsShader.blankValue);
        gl.uniform1f(FitsShader.bzero, FitsShader.bZero);
        gl.uniform1f(FitsShader.bscale, FitsShader.bScale);
        gl.uniform1f(FitsShader.minLoc, FitsShader.min);
        gl.uniform1f(FitsShader.maxLoc, FitsShader.max);
        gl.uniform1i(FitsShader.transparentBlackLoc, FitsShader.transparentBlack);
        gl.uniform1i(FitsShader.containsBlanksLoc, FitsShader.containsBlanks);
        gl.uniform1i(FitsShader.scalingLocation, FitsShader.scaleType);
        if (renderContext.space || noDepth) {
            gl.disable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        } else {
            gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        }
        gl.disableVertexAttribArray(0);
        gl.disableVertexAttribArray(1);
        gl.disableVertexAttribArray(2);
        gl.disableVertexAttribArray(3);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, vertex);
        gl.enableVertexAttribArray(FitsShader.vertLoc);
        gl.enableVertexAttribArray(FitsShader.textureLoc);
        gl.vertexAttribPointer(FitsShader.vertLoc, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 20, 0);
        gl.vertexAttribPointer(FitsShader.textureLoc, 2, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 20, 12);
        gl.activeTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE0);
        gl.bindTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, texture);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, index);
        gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
        if (noDepth) {
            gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE);
        } else {
            gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
        }
    }
};

var FitsShader$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("FitsShader", [FitsShader, FitsShader$, null]);


// wwtlib.ImageShader

function ImageShader() { }

ImageShader.vertLoc = 0;
ImageShader.textureLoc = 0;
ImageShader.initialized = false;
ImageShader._prog = null;

ImageShader.init = function (renderContext) {
    var gl = renderContext.gl;

    const fragShaderText = `\
        precision mediump float;

        varying vec2 vTextureCoord;

        uniform sampler2D uSampler;
        uniform float opacity;

        void main(void) {
            vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
            gl_FragColor = col * opacity;
        }
    `;

    const vertexShaderText = `\
        attribute vec3 aVertexPosition;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vTextureCoord = aTextureCoord;
        }
    `;

    ImageShader._frag = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FRAGMENT_SHADER);
    gl.shaderSource(ImageShader._frag, fragShaderText);
    gl.compileShader(ImageShader._frag);
    var stat = gl.getShaderParameter(ImageShader._frag, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    if (!stat) {
        var errorF = gl.getShaderInfoLog(ImageShader._frag);
    }
    ImageShader._vert = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.VERTEX_SHADER);
    gl.shaderSource(ImageShader._vert, vertexShaderText);
    gl.compileShader(ImageShader._vert);
    var stat1 = gl.getShaderParameter(ImageShader._vert, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    if (!stat1) {
        var errorV = gl.getShaderInfoLog(ImageShader._vert);
    }
    ImageShader._prog = gl.createProgram();
    gl.attachShader(ImageShader._prog, ImageShader._vert);
    gl.attachShader(ImageShader._prog, ImageShader._frag);
    gl.linkProgram(ImageShader._prog);
    var errcode = gl.getProgramParameter(ImageShader._prog, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.LINK_STATUS);
    gl.useProgram(ImageShader._prog);
    ImageShader.vertLoc = gl.getAttribLocation(ImageShader._prog, 'aVertexPosition');
    ImageShader.textureLoc = gl.getAttribLocation(ImageShader._prog, 'aTextureCoord');
    ImageShader.projMatLoc = gl.getUniformLocation(ImageShader._prog, 'uPMatrix');
    ImageShader.mvMatLoc = gl.getUniformLocation(ImageShader._prog, 'uMVMatrix');
    ImageShader.sampLoc = gl.getUniformLocation(ImageShader._prog, 'uSampler');
    ImageShader.opacityLoc = gl.getUniformLocation(ImageShader._prog, 'opacity');
    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileUvMultiple)(1);
    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileDemEnabled)(true);
    gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
    gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    ImageShader.initialized = true;
};

ImageShader.use = function (renderContext, vertex, index, texture, opacity, noDepth) {
    if (texture == null) {
        texture = _texture_js__WEBPACK_IMPORTED_MODULE_5__.Texture.getEmpty();
    }
    var gl = renderContext.gl;
    if (gl != null) {
        if (!ImageShader.initialized) {
            ImageShader.init(renderContext);
        }
        gl.useProgram(ImageShader._prog);
        var mvMat = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view());
        gl.uniform1f(ImageShader.opacityLoc, opacity);
        gl.uniformMatrix4fv(ImageShader.mvMatLoc, false, mvMat.floatArray());
        gl.uniformMatrix4fv(ImageShader.projMatLoc, false, renderContext.get_projection().floatArray());
        gl.uniform1i(ImageShader.sampLoc, 0);
        if (renderContext.space || noDepth) {
            gl.disable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        } else {
            gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        }
        gl.disableVertexAttribArray(0);
        gl.disableVertexAttribArray(1);
        gl.disableVertexAttribArray(2);
        gl.disableVertexAttribArray(3);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, vertex);
        gl.enableVertexAttribArray(ImageShader.vertLoc);
        gl.enableVertexAttribArray(ImageShader.textureLoc);
        gl.vertexAttribPointer(ImageShader.vertLoc, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 20, 0);
        gl.vertexAttribPointer(ImageShader.textureLoc, 2, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 20, 12);
        gl.activeTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE0);
        gl.bindTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, texture);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, index);
        gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
        if (noDepth) {
            gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE);
        } else {
            gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
        }
    }
};

var ImageShader$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("ImageShader", [ImageShader, ImageShader$, null]);


// wwtlib.ImageShader2

function ImageShader2() { }

ImageShader2.vertLoc = 0;
ImageShader2.textureLoc = 0;
ImageShader2.initialized = false;
ImageShader2._prog = null;

ImageShader2.init = function (renderContext) {
    var gl = renderContext.gl;

    const fragShaderText = `\
        precision mediump float;

        varying vec2 vTextureCoord;

        uniform sampler2D uSampler;
        uniform float opacity;

        void main(void) {
            vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
            gl_FragColor = col * opacity;
        }
    `;

    const vertexShaderText = `\
        attribute vec3 aVertexPosition;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vTextureCoord = aTextureCoord;
        }
    `;

    ImageShader2._frag = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FRAGMENT_SHADER);
    gl.shaderSource(ImageShader2._frag, fragShaderText);
    gl.compileShader(ImageShader2._frag);
    var stat = gl.getShaderParameter(ImageShader2._frag, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    if (!stat) {
        var errorF = gl.getShaderInfoLog(ImageShader2._frag);
    }
    ImageShader2._vert = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.VERTEX_SHADER);
    gl.shaderSource(ImageShader2._vert, vertexShaderText);
    gl.compileShader(ImageShader2._vert);
    var stat1 = gl.getShaderParameter(ImageShader2._vert, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    if (!stat1) {
        var errorV = gl.getShaderInfoLog(ImageShader2._vert);
    }
    ImageShader2._prog = gl.createProgram();
    gl.attachShader(ImageShader2._prog, ImageShader2._vert);
    gl.attachShader(ImageShader2._prog, ImageShader2._frag);
    gl.linkProgram(ImageShader2._prog);
    var errcode = gl.getProgramParameter(ImageShader2._prog, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.LINK_STATUS);
    gl.useProgram(ImageShader2._prog);
    ImageShader2.vertLoc = gl.getAttribLocation(ImageShader2._prog, 'aVertexPosition');
    ImageShader2.textureLoc = gl.getAttribLocation(ImageShader2._prog, 'aTextureCoord');
    ImageShader2.projMatLoc = gl.getUniformLocation(ImageShader2._prog, 'uPMatrix');
    ImageShader2.mvMatLoc = gl.getUniformLocation(ImageShader2._prog, 'uMVMatrix');
    ImageShader2.sampLoc = gl.getUniformLocation(ImageShader2._prog, 'uSampler');
    ImageShader2.opacityLoc = gl.getUniformLocation(ImageShader2._prog, 'opacity');
    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileUvMultiple)(1);
    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileDemEnabled)(true);
    gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
    gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    ImageShader2.initialized = true;
};

ImageShader2.use = function (renderContext, vertex, index, texture, opacity, noDepth) {
    if (texture == null) {
        texture = _texture_js__WEBPACK_IMPORTED_MODULE_5__.Texture.getEmpty();
    }
    var gl = renderContext.gl;
    if (gl != null) {
        if (!ImageShader2.initialized) {
            ImageShader2.init(renderContext);
        }
        gl.useProgram(ImageShader2._prog);
        var mvMat = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view());
        gl.uniform1f(ImageShader2.opacityLoc, opacity);
        gl.uniformMatrix4fv(ImageShader2.mvMatLoc, false, mvMat.floatArray());
        gl.uniformMatrix4fv(ImageShader2.projMatLoc, false, renderContext.get_projection().floatArray());
        gl.uniform1i(ImageShader2.sampLoc, 0);
        if (renderContext.space || noDepth) {
            gl.disable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        } else {
            gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        }
        gl.disableVertexAttribArray(0);
        gl.disableVertexAttribArray(1);
        gl.disableVertexAttribArray(2);
        gl.disableVertexAttribArray(3);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, vertex);
        gl.enableVertexAttribArray(ImageShader2.vertLoc);
        gl.enableVertexAttribArray(ImageShader2.textureLoc);
        gl.vertexAttribPointer(ImageShader2.vertLoc, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 32, 0);
        gl.vertexAttribPointer(ImageShader2.textureLoc, 2, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 32, 24);
        gl.activeTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE0);
        gl.bindTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, texture);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, index);
        gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
        if (noDepth) {
            gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE);
        } else {
            gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
        }
    }
};

var ImageShader2$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("ImageShader2", [ImageShader2, ImageShader2$, null]);


// wwtlib.SpriteShader

function SpriteShader() { }

SpriteShader.vertLoc = 0;
SpriteShader.textureLoc = 0;
SpriteShader.colorLoc = 0;
SpriteShader.initialized = false;
SpriteShader._prog = null;

SpriteShader.init = function (renderContext) {
    var gl = renderContext.gl;

    const fragShaderText = `\
        precision mediump float;

        varying vec2 vTextureCoord;
        varying lowp vec4 vColor;
        uniform sampler2D uSampler;

        void main(void) {
            gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t)) * vColor;
        }
    `;

    const vertexShaderText = `\
        attribute vec3 aVertexPosition;
        attribute vec2 aTextureCoord;
        attribute lowp vec4 aColor;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;
        varying vec4 vColor;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vTextureCoord = aTextureCoord;
            vColor = aColor;
        }
    `;

    SpriteShader._frag = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FRAGMENT_SHADER);
    gl.shaderSource(SpriteShader._frag, fragShaderText);
    gl.compileShader(SpriteShader._frag);
    var stat = gl.getShaderParameter(SpriteShader._frag, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    SpriteShader._vert = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.VERTEX_SHADER);
    gl.shaderSource(SpriteShader._vert, vertexShaderText);
    gl.compileShader(SpriteShader._vert);
    var stat1 = gl.getShaderParameter(SpriteShader._vert, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    SpriteShader._prog = gl.createProgram();
    gl.attachShader(SpriteShader._prog, SpriteShader._vert);
    gl.attachShader(SpriteShader._prog, SpriteShader._frag);
    gl.linkProgram(SpriteShader._prog);
    var errcode = gl.getProgramParameter(SpriteShader._prog, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.LINK_STATUS);
    gl.useProgram(SpriteShader._prog);
    SpriteShader.vertLoc = gl.getAttribLocation(SpriteShader._prog, 'aVertexPosition');
    SpriteShader.textureLoc = gl.getAttribLocation(SpriteShader._prog, 'aTextureCoord');
    SpriteShader.colorLoc = gl.getAttribLocation(SpriteShader._prog, 'aColor');
    SpriteShader.projMatLoc = gl.getUniformLocation(SpriteShader._prog, 'uPMatrix');
    SpriteShader.mvMatLoc = gl.getUniformLocation(SpriteShader._prog, 'uMVMatrix');
    SpriteShader.sampLoc = gl.getUniformLocation(SpriteShader._prog, 'uSampler');
    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileUvMultiple)(1);
    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileDemEnabled)(true);
    gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
    gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    SpriteShader.initialized = true;
};

SpriteShader.use = function (renderContext, vertex, texture) {
    if (texture == null) {
        texture = _texture_js__WEBPACK_IMPORTED_MODULE_5__.Texture.getEmpty();
    }
    var gl = renderContext.gl;
    if (gl != null) {
        if (!SpriteShader.initialized) {
            SpriteShader.init(renderContext);
        }
        gl.useProgram(SpriteShader._prog);
        var mvMat = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view());
        gl.uniformMatrix4fv(SpriteShader.mvMatLoc, false, mvMat.floatArray());
        gl.uniformMatrix4fv(SpriteShader.projMatLoc, false, renderContext.get_projection().floatArray());
        gl.uniform1i(SpriteShader.sampLoc, 0);
        gl.disable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        gl.disableVertexAttribArray(0);
        gl.disableVertexAttribArray(1);
        gl.disableVertexAttribArray(2);
        gl.disableVertexAttribArray(3);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, vertex);
        gl.enableVertexAttribArray(SpriteShader.vertLoc);
        gl.enableVertexAttribArray(SpriteShader.textureLoc);
        gl.enableVertexAttribArray(SpriteShader.colorLoc);
        gl.vertexAttribPointer(SpriteShader.vertLoc, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 36, 0);
        gl.vertexAttribPointer(SpriteShader.colorLoc, 4, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 36, 12);
        gl.vertexAttribPointer(SpriteShader.textureLoc, 2, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 36, 28);
        gl.activeTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE0);
        gl.bindTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, texture);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, null);
        gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
        gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    }
};

var SpriteShader$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("SpriteShader", [SpriteShader, SpriteShader$, null]);


// wwtlib.ShapeSpriteShader

function ShapeSpriteShader() { }

ShapeSpriteShader.vertLoc = 0;
ShapeSpriteShader.textureLoc = 0;
ShapeSpriteShader.colorLoc = 0;
ShapeSpriteShader.initialized = false;
ShapeSpriteShader._prog = null;

ShapeSpriteShader.init = function (renderContext) {
    var gl = renderContext.gl;

    const fragShaderText = `\
        precision mediump float;

        varying lowp vec4 vColor;

        void main(void) {
            gl_FragColor =  vColor;
        }
    `;

    const vertexShaderText = `\
        attribute vec3 aVertexPosition;
        attribute lowp vec4 aColor;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;
        varying vec4 vColor;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vColor = aColor;
        }
    `;

    ShapeSpriteShader._frag = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FRAGMENT_SHADER);
    gl.shaderSource(ShapeSpriteShader._frag, fragShaderText);
    gl.compileShader(ShapeSpriteShader._frag);
    var stat = gl.getShaderParameter(ShapeSpriteShader._frag, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    ShapeSpriteShader._vert = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.VERTEX_SHADER);
    gl.shaderSource(ShapeSpriteShader._vert, vertexShaderText);
    gl.compileShader(ShapeSpriteShader._vert);
    var stat1 = gl.getShaderParameter(ShapeSpriteShader._vert, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    ShapeSpriteShader._prog = gl.createProgram();
    gl.attachShader(ShapeSpriteShader._prog, ShapeSpriteShader._vert);
    gl.attachShader(ShapeSpriteShader._prog, ShapeSpriteShader._frag);
    gl.linkProgram(ShapeSpriteShader._prog);
    var errcode = gl.getProgramParameter(ShapeSpriteShader._prog, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.LINK_STATUS);
    gl.useProgram(ShapeSpriteShader._prog);
    ShapeSpriteShader.vertLoc = gl.getAttribLocation(ShapeSpriteShader._prog, 'aVertexPosition');
    ShapeSpriteShader.colorLoc = gl.getAttribLocation(ShapeSpriteShader._prog, 'aColor');
    ShapeSpriteShader.projMatLoc = gl.getUniformLocation(ShapeSpriteShader._prog, 'uPMatrix');
    ShapeSpriteShader.mvMatLoc = gl.getUniformLocation(ShapeSpriteShader._prog, 'uMVMatrix');
    gl.disable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
    gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
    gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    ShapeSpriteShader.initialized = true;
};

ShapeSpriteShader.use = function (renderContext, vertex) {
    var gl = renderContext.gl;
    if (gl != null) {
        if (!ShapeSpriteShader.initialized) {
            ShapeSpriteShader.init(renderContext);
        }
        gl.useProgram(ShapeSpriteShader._prog);
        var mvMat = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view());
        gl.uniformMatrix4fv(ShapeSpriteShader.mvMatLoc, false, mvMat.floatArray());
        gl.uniformMatrix4fv(ShapeSpriteShader.projMatLoc, false, renderContext.get_projection().floatArray());
        gl.uniform1i(ShapeSpriteShader.sampLoc, 0);
        gl.disable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        gl.disableVertexAttribArray(0);
        gl.disableVertexAttribArray(1);
        gl.disableVertexAttribArray(2);
        gl.disableVertexAttribArray(3);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, vertex);
        gl.enableVertexAttribArray(ShapeSpriteShader.vertLoc);
        gl.enableVertexAttribArray(ShapeSpriteShader.textureLoc);
        gl.enableVertexAttribArray(ShapeSpriteShader.colorLoc);
        gl.vertexAttribPointer(ShapeSpriteShader.vertLoc, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 36, 0);
        gl.vertexAttribPointer(ShapeSpriteShader.colorLoc, 4, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 36, 12);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, null);
        gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
        gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    }
};

var ShapeSpriteShader$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("ShapeSpriteShader", [ShapeSpriteShader, ShapeSpriteShader$, null]);


// wwtlib.TextShader

function TextShader() { }

TextShader.vertLoc = 0;
TextShader.textureLoc = 0;
TextShader.initialized = false;
TextShader._prog = null;

TextShader.init = function (renderContext) {
    var gl = renderContext.gl;

    const fragShaderText = `\
        precision mediump float;

        varying vec2 vTextureCoord;

        uniform sampler2D uSampler;

        void main(void) {
            gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
        }
    `;

    const vertexShaderText = `\
        attribute vec3 aVertexPosition;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vTextureCoord = aTextureCoord;
        }
    `;

    TextShader._frag = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FRAGMENT_SHADER);
    gl.shaderSource(TextShader._frag, fragShaderText);
    gl.compileShader(TextShader._frag);
    var stat = gl.getShaderParameter(TextShader._frag, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    TextShader._vert = gl.createShader(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.VERTEX_SHADER);
    gl.shaderSource(TextShader._vert, vertexShaderText);
    gl.compileShader(TextShader._vert);
    var stat1 = gl.getShaderParameter(TextShader._vert, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.COMPILE_STATUS);
    TextShader._prog = gl.createProgram();
    gl.attachShader(TextShader._prog, TextShader._vert);
    gl.attachShader(TextShader._prog, TextShader._frag);
    gl.linkProgram(TextShader._prog);
    var errcode = gl.getProgramParameter(TextShader._prog, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.LINK_STATUS);
    gl.useProgram(TextShader._prog);
    TextShader.vertLoc = gl.getAttribLocation(TextShader._prog, 'aVertexPosition');
    TextShader.textureLoc = gl.getAttribLocation(TextShader._prog, 'aTextureCoord');
    TextShader.projMatLoc = gl.getUniformLocation(TextShader._prog, 'uPMatrix');
    TextShader.mvMatLoc = gl.getUniformLocation(TextShader._prog, 'uMVMatrix');
    TextShader.sampLoc = gl.getUniformLocation(TextShader._prog, 'uSampler');
    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileUvMultiple)(1);
    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileDemEnabled)(true);
    gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
    gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    TextShader.initialized = true;
};

TextShader.use = function (renderContext, vertex, texture) {
    if (texture == null) {
        texture = _texture_js__WEBPACK_IMPORTED_MODULE_5__.Texture.getEmpty();
    }
    var gl = renderContext.gl;
    if (gl != null) {
        if (!TextShader.initialized) {
            TextShader.init(renderContext);
        }
        gl.useProgram(TextShader._prog);
        var mvMat = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view());
        gl.uniformMatrix4fv(TextShader.mvMatLoc, false, mvMat.floatArray());
        gl.uniformMatrix4fv(TextShader.projMatLoc, false, renderContext.get_projection().floatArray());
        gl.uniform1i(TextShader.sampLoc, 0);
        if (renderContext.space) {
            gl.disable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        } else {
            gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DEPTH_TEST);
        }
        gl.disableVertexAttribArray(0);
        gl.disableVertexAttribArray(1);
        gl.disableVertexAttribArray(2);
        gl.disableVertexAttribArray(3);
        gl.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, vertex);
        gl.enableVertexAttribArray(TextShader.vertLoc);
        gl.enableVertexAttribArray(TextShader.textureLoc);
        gl.vertexAttribPointer(TextShader.vertLoc, 3, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 20, 0);
        gl.vertexAttribPointer(TextShader.textureLoc, 2, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.FLOAT, false, 20, 12);
        gl.activeTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE0);
        gl.bindTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, texture);
        gl.enable(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.BLEND);
        gl.blendFunc(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.SRC_ALPHA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ONE_MINUS_SRC_ALPHA);
    }
};

var TextShader$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("TextShader", [TextShader, TextShader$, null]);


/***/ }),

/***/ "./esm/graphics/sprite2d.js":
/*!**********************************!*\
  !*** ./esm/graphics/sprite2d.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Sprite2d: () => (/* binding */ Sprite2d)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _shaders_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./shaders.js */ "./esm/graphics/shaders.js");
/* harmony import */ var _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./webgl_constants.js */ "./esm/graphics/webgl_constants.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Sprites.








// wwtlib.Sprite2d

function Sprite2d() {
    this.vertCount = 0;
}

var Sprite2d$ = {
    draw: function (renderContext, points, count, texture, triangleStrips, opacity) {
        if (this.vertexBuffer == null) {
            this.create(points);
        } else {
            this.update(points);
        }
        if (texture == null) {
            _shaders_js__WEBPACK_IMPORTED_MODULE_3__.ShapeSpriteShader.use(renderContext, this.vertexBuffer);
            renderContext.gl.drawArrays(triangleStrips ? _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TRIANGLE_STRIP : _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TRIANGLES, 0, points.length);
        } else {
            _shaders_js__WEBPACK_IMPORTED_MODULE_3__.SpriteShader.use(renderContext, this.vertexBuffer, (texture != null) ? texture.texture2d : null);
            renderContext.gl.drawArrays(triangleStrips ? _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TRIANGLE_STRIP : _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TRIANGLES, 0, points.length);
        }
    },

    create: function (verts) {
        this.vertexBuffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
        var f32array = new Float32Array(verts.length * 9);
        var buffer = f32array;
        var index = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(verts);
        while ($enum1.moveNext()) {
            var pt = $enum1.current;
            buffer[index++] = pt.position.x;
            buffer[index++] = pt.position.y;
            buffer[index++] = pt.position.z;
            buffer[index++] = pt.color.r / 255;
            buffer[index++] = pt.color.g / 255;
            buffer[index++] = pt.color.b / 255;
            buffer[index++] = pt.color.a / 255;
            buffer[index++] = pt.tu;
            buffer[index++] = pt.tv;
        }
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, f32array, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.DYNAMIC_DRAW);
    },

    update: function (verts) {
        if (this.vertCount < verts.length) {
            _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.deleteBuffer(this.vertexBuffer);
            this.create(verts);
            return;
        }
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
        var f32array = new Float32Array(verts.length * 9);
        var buffer = f32array;
        var index = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(verts);
        while ($enum1.moveNext()) {
            var pt = $enum1.current;
            buffer[index++] = pt.position.x;
            buffer[index++] = pt.position.y;
            buffer[index++] = pt.position.z;
            buffer[index++] = pt.color.r / 255;
            buffer[index++] = pt.color.g / 255;
            buffer[index++] = pt.color.b / 255;
            buffer[index++] = pt.color.a / 255;
            buffer[index++] = pt.tu;
            buffer[index++] = pt.tv;
        }
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferSubData(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, 0, f32array);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Sprite2d", [Sprite2d, Sprite2d$, null]);


/***/ }),

/***/ "./esm/graphics/tessellator.js":
/*!*************************************!*\
  !*** ./esm/graphics/tessellator.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Tessellator: () => (/* binding */ Tessellator)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A tessellator algorithm.





// wwtlib.Tessellator

function Tessellator() { }

Tessellator.tesselateSimplePoly = function (inputList) {
    var results = [];
    var tess = new Tessellator();
    tess.process(inputList, results);
    return results;
};

var Tessellator$ = {
    _isLeftOfHalfSpace: function (pntA, pntB, pntTest) {
        pntA.normalize();
        pntB.normalize();
        var cross = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.cross(pntA, pntB);
        var dot = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.dot(cross, pntTest);
        return dot > 0;
    },

    _insideTriangle: function (pntA, pntB, pntC, pntTest) {
        if (!this._isLeftOfHalfSpace(pntA, pntB, pntTest)) {
            return false;
        }
        if (!this._isLeftOfHalfSpace(pntB, pntC, pntTest)) {
            return false;
        }
        if (!this._isLeftOfHalfSpace(pntC, pntA, pntTest)) {
            return false;
        }
        return true;
    },

    _canClipEar: function (poly, u, v, w, n, verts) {
        var p;
        var a = poly[verts[u]].copy();
        var b = poly[verts[v]].copy();
        var c = poly[verts[w]].copy();
        var P;
        var d = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.subtractVectors(b, a);
        d.normalize();
        var e = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.subtractVectors(b, c);
        e.normalize();
        var g = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.cross(d, e);
        var bn = b.copy();
        bn.normalize();

        // Determine if convex edge
        if (_double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.dot(g, bn) > 0) {
            return false;
        }

        // Check for any intersecting vertices that would invalidate this ear
        for (p = 0; p < n; p++) {
            if ((p === u) || (p === v) || (p === w)) {
                continue;
            }
            P = poly[verts[p]].copy();

            // don't clip earth if other intersecting vertex
            if (this._insideTriangle(a, b, c, P)) {
                return false;
            }
        }
        return true;
    },

    process: function (poly, result) {
        var n = poly.length;
        if (poly.length < 3) {
            return false;
        }
        var verts = new Array(poly.length);
        for (var i = 0; i < n; i++) {
            verts[i] = i;
        }
        var nv = n;
        var count = 2 * nv;
        for (var m = 0, v = nv - 1; nv > 2;) {
            if (0 >= (count--)) {
                // not enough ears to clip. Non-Simple Polygon
                return false;
            }
            var u = v;
            if (nv <= u) {
                u = 0;
            }
            v = u + 1;
            if (nv <= v) {
                v = 0;
            }
            var w = v + 1;
            if (nv <= w) {
                w = 0;
            }
            if (this._canClipEar(poly, u, v, w, nv, verts)) {
                var s, t;
                result.push(verts[u]);
                result.push(verts[v]);
                result.push(verts[w]);
                m++;

                // remove clipped ear
                for (s = v, t = v + 1; t < nv; s++, t++) {
                    verts[s] = verts[t];
                }
                nv--;
                count = 2 * nv;
            }
        }
        return true;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Tessellator", [Tessellator, Tessellator$, null]);


/***/ }),

/***/ "./esm/graphics/texture.js":
/*!*********************************!*\
  !*** ./esm/graphics/texture.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Texture: () => (/* binding */ Texture)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./webgl_constants.js */ "./esm/graphics/webgl_constants.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// The basic GL texture type.








// wwtlib.Texture

function Texture() {
    this.imageElement = null;
    this.texture2d = null;
    this._downloading = false;
    this._ready = false;
    this._errored = false;
    this.URL = '';
}

Texture.empty = null;

Texture.getEmpty = function () {
    if (Texture.empty == null) {
        Texture.empty = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createTexture();
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, Texture.empty);
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.texImage2D(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, 0, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.RGBA, 1, 1, 0, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.RGBA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.UNSIGNED_BYTE, new Uint8Array([0, 0, 0, 0]));
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, null);
    }
    return Texture.empty;
};

Texture.fromUrl = function (url) {
    var tex = new Texture();
    tex.load(url);
    return tex;
};

Texture.isPowerOfTwo = function (val) {
    return !(val & (val - 1));
};

Texture.fitPowerOfTwo = function (val) {
    val--;
    for (var i = 1; i < 32; i <<= 1) {
        val = val | val >> i;
    }
    return val + 1;
};

var Texture$ = {
    cleanUp: function () {
        this.imageElement = null;
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.deleteTexture(this.texture2d);
    },

    dispose: function () {
        this.cleanUp();
    },

    load: function (url) {
        var $this = this;

        this.URL = url;
        if (typeof document === "undefined") { return; }
        if (!this._downloading) {
            this._downloading = true;
            this.imageElement = document.createElement('img');
            var xdomimg = this.imageElement;
            this.imageElement.addEventListener('load', function (e) {
                $this._ready = true;
                $this._downloading = false;
                $this._errored = false;
                $this.makeTexture();
            }, false);
            this.imageElement.addEventListener('error', function (e) {
                if (!$this.imageElement.hasAttribute('proxyattempt')) {
                    $this.imageElement.setAttribute('proxyattempt', true);
                    var new_url = _url_helpers_js__WEBPACK_IMPORTED_MODULE_3__.URLHelpers.singleton.activateProxy($this.URL);
                    if (new_url != null) {  // null => don't bother: we know that the proxy won't help
                        $this.imageElement.src = new_url;
                        return;
                    }
                }
                $this._downloading = false;
                $this._ready = false;
                $this._errored = true;
            }, false);
            xdomimg.crossOrigin = 'anonymous';
            this.imageElement.src = this.URL;
        }
    },

    makeTexture: function () {
        if (_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice != null) {
            try {
                this.texture2d = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createTexture();
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, this.texture2d);
                var image = this.imageElement;

                // Before we bind resize to a power of two if nessesary so we can MIPMAP
                if ((!Texture.isPowerOfTwo(this.imageElement.height) | !Texture.isPowerOfTwo(this.imageElement.width)) === 1) {
                    var temp = document.createElement('canvas');
                    temp.height = Texture.fitPowerOfTwo(image.height);
                    temp.width = Texture.fitPowerOfTwo(image.width);
                    var ctx = temp.getContext('2d');
                    ctx.drawImage(image, 0, 0, temp.width, temp.height);
                    //Substitute the resized image
                    image = temp;
                }

                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.texParameteri(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_WRAP_S, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.CLAMP_TO_EDGE);
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.texParameteri(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_WRAP_T, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.CLAMP_TO_EDGE);
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.texImage2D(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, 0, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.RGBA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.RGBA, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.UNSIGNED_BYTE, image);
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.texParameteri(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_MIN_FILTER, _webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.LINEAR_MIPMAP_NEAREST);
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.generateMipmap(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D);
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindTexture(_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.TEXTURE_2D, null);
            } catch ($e1) {
                this._errored = true;
            }
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Texture", [Texture, Texture$, null, _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.IDisposable]);


/***/ }),

/***/ "./esm/graphics/webgl_constants.js":
/*!*****************************************!*\
  !*** ./esm/graphics/webgl_constants.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WEBGL: () => (/* binding */ WEBGL)
/* harmony export */ });
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Magic constants defined by WebGL.

const WEBGL = {
    ACTIVE_ATTRIBUTE_MAX_LENGTH: 35722,
    ACTIVE_ATTRIBUTES: 35721,
    ACTIVE_TEXTURE: 34016,
    ACTIVE_UNIFORM_MAX_LENGTH: 35719,
    ACTIVE_UNIFORMS: 35718,
    ALIASED_LINE_WIDTH_RANGE: 33902,
    ALIASED_POINT_SIZE_RANGE: 33901,
    ALPHA: 6406,
    ALPHA_BITS: 3413,
    ALWAYS: 519,
    ARRAY_BUFFER: 34962,
    ARRAY_BUFFER_BINDING: 34964,
    ATTACHED_SHADERS: 35717,
    BACK: 1029,
    BLEND: 3042,
    BLEND_COLOR: 32773,
    BLEND_DST_ALPHA: 32970,
    BLEND_DST_RGB: 32968,
    BLEND_EQUATION: 32777,
    BLEND_EQUATION_ALPHA: 34877,
    BLEND_EQUATION_RGB: 32777,
    BLEND_SRC_ALPHA: 32971,
    BLEND_SRC_RGB: 32969,
    BLUE_BITS: 3412,
    BOOL: 35670,
    BOOL_VEC2: 35671,
    BOOL_VEC3: 35672,
    BOOL_VEC4: 35673,
    BUFFER_SIZE: 34660,
    BUFFER_USAGE: 34661,
    BYTE: 5120,
    CCW: 2305,
    CLAMP_TO_EDGE: 33071,
    COLOR_ATTACHMENT0: 36064,
    COLOR_BUFFER_BIT: 16384,
    COLOR_CLEAR_VALUE: 3106,
    COLOR_WRITEMASK: 3107,
    COMPILE_STATUS: 35713,
    COMPRESSED_TEXTURE_FORMATS: 34467,
    CONSTANT_ALPHA: 32771,
    CONSTANT_COLOR: 32769,
    CULL_FACE: 2884,
    CULL_FACE_MODE: 2885,
    CURRENT_PROGRAM: 35725,
    CURRENT_VERTEX_ATTRIB: 34342,
    CW: 2304,
    DECR: 7683,
    DECR_WRAP: 34056,
    DELETE_STATUS: 35712,
    DEPTH_ATTACHMENT: 36096,
    DEPTH_BITS: 3414,
    DEPTH_BUFFER_BIT: 256,
    DEPTH_CLEAR_VALUE: 2931,
    DEPTH_COMPONENT: 6402,
    DEPTH_COMPONENT16: 33189,
    DEPTH_FUNC: 2932,
    DEPTH_RANGE: 2928,
    DEPTH_STENCIL: 34041,
    DEPTH_STENCIL_ATTACHMENT: 33306,
    DEPTH_TEST: 2929,
    DEPTH_WRITEMASK: 2930,
    DITHER: 3024,
    DONT_CARE: 4352,
    DST_ALPHA: 772,
    DST_COLOR: 774,
    DYNAMIC_DRAW: 35048,
    ELEMENT_ARRAY_BUFFER: 34963,
    ELEMENT_ARRAY_BUFFER_BINDING: 34965,
    EQUAL: 514,
    EXTENSIONS: 7939,
    FASTEST: 4353,
    FLOAT: 5126,
    FLOAT_MAT2: 35674,
    FLOAT_MAT3: 35675,
    FLOAT_MAT4: 35676,
    FLOAT_VEC2: 35664,
    FLOAT_VEC3: 35665,
    FLOAT_VEC4: 35666,
    FRAGMENT_SHADER: 35632,
    FRAMEBUFFER: 36160,
    FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 36049,
    FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 36048,
    FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 36051,
    FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 36050,
    FRAMEBUFFER_BINDING: 36006,
    FRAMEBUFFER_COMPLETE: 36053,
    FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 36054,
    FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 36057,
    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 36055,
    FRAMEBUFFER_UNSUPPORTED: 36061,
    FRONT: 1028,
    FRONT_AND_BACK: 1032,
    FRONT_FACE: 2886,
    FUNC_ADD: 32774,
    FUNC_REVERSE_SUBTRACT: 32779,
    FUNC_SUBTRACT: 32778,
    GENERATE_MIPMAP_HINT: 33170,
    GEQUAL: 518,
    GREATER: 516,
    GREEN_BITS: 3411,
    HIGH_FLOAT: 36338,
    HIGH_INT: 36341,
    IMPLEMENTATION_COLOR_READ_FORMAT: 35739,
    IMPLEMENTATION_COLOR_READ_TYPE: 35738,
    INCR: 7682,
    INCR_WRAP: 34055,
    INFO_LOG_LENGTH: 35716,
    INT: 5124,
    INT_VEC2: 35667,
    INT_VEC3: 35668,
    INT_VEC4: 35669,
    INVALID_ENUM: 1280,
    INVALID_FRAMEBUFFER_OPERATION: 1286,
    INVALID_OPERATION: 1282,
    INVALID_VALUE: 1281,
    INVERT: 5386,
    KEEP: 7680,
    LEQUAL: 515,
    LESS: 513,
    LINE_LOOP: 2,
    LINE_STRIP: 3,
    LINE_WIDTH: 2849,
    LINEAR: 9729,
    LINEAR_MIPMAP_LINEAR: 9987,
    LINEAR_MIPMAP_NEAREST: 9985,
    LINES: 1,
    LINK_STATUS: 35714,
    LOW_FLOAT: 36336,
    LOW_INT: 36339,
    LUMINANCE: 6409,
    LUMINANCE_ALPHA: 6410,
    MAX_COMBINED_TEXTURE_IMAGE_UNITS: 35661,
    MAX_CUBE_MAP_TEXTURE_SIZE: 34076,
    MAX_FRAGMENT_UNIFORM_VECTORS: 36349,
    MAX_RENDERBUFFER_SIZE: 34024,
    MAX_TEXTURE_IMAGE_UNITS: 34930,
    MAX_TEXTURE_SIZE: 3379,
    MAX_VARYING_VECTORS: 36348,
    MAX_VERTEX_ATTRIBS: 34921,
    MAX_VERTEX_TEXTURE_IMAGE_UNITS: 35660,
    MAX_VERTEX_UNIFORM_VECTORS: 36347,
    MAX_VIEWPORT_DIMS: 3386,
    MEDIUM_FLOAT: 36337,
    MEDIUM_INT: 36340,
    MIRRORED_REPEAT: 33648,
    NEAREST: 9728,
    NEAREST_MIPMAP_LINEAR: 9986,
    NEAREST_MIPMAP_NEAREST: 9984,
    NEVER: 512,
    NICEST: 4354,
    NO_ERROR: 0,
    NONE: 0,
    NOTEQUAL: 517,
    NUM_COMPRESSED_TEXTURE_FORMATS: 34466,
    ONE: 1,
    ONE_MINUS_CONSTANT_ALPHA: 32772,
    ONE_MINUS_CONSTANT_COLOR: 32770,
    ONE_MINUS_DST_ALPHA: 773,
    ONE_MINUS_DST_COLOR: 775,
    ONE_MINUS_SRC_ALPHA: 771,
    ONE_MINUS_SRC_COLOR: 769,
    OUT_OF_MEMORY: 1285,
    PACK_ALIGNMENT: 3333,
    POINTS: 0,
    POLYGON_OFFSET_FACTOR: 32824,
    POLYGON_OFFSET_FILL: 32823,
    POLYGON_OFFSET_UNITS: 10752,
    RED_BITS: 3410,
    RENDERBUFFER: 36161,
    RENDERBUFFER_ALPHA_SIZE: 36179,
    RENDERBUFFER_BINDING: 36007,
    RENDERBUFFER_BLUE_SIZE: 36178,
    RENDERBUFFER_DEPTH_SIZE: 36180,
    RENDERBUFFER_GREEN_SIZE: 36177,
    RENDERBUFFER_HEIGHT: 36163,
    RENDERBUFFER_INTERNAL_FORMAT: 36164,
    RENDERBUFFER_RED_SIZE: 36176,
    RENDERBUFFER_STENCIL_SIZE: 36181,
    RENDERBUFFER_WIDTH: 36162,
    RENDERER: 7937,
    REPEAT: 10497,
    REPLACE: 7681,
    RGB: 6407,
    RGB8: 32849,
    RGB5_A1: 32855,
    RGB565: 36194,
    RGBA: 6408,
    RGBA8: 32856,
    RGBA16I: 36232,
    RED_INTEGER: 36244,
    RED: 6403,
    R32F: 33326,
    R16I: 33331,
    RGBA4: 32854,
    SAMPLE_ALPHA_TO_COVERAGE: 32926,
    SAMPLE_BUFFERS: 32936,
    SAMPLE_COVERAGE: 32928,
    SAMPLE_COVERAGE_INVERT: 32939,
    SAMPLE_COVERAGE_VALUE: 32938,
    SAMPLER_2D: 35678,
    SAMPLER_CUBE: 35680,
    SAMPLES: 32937,
    SCISSOR_BOX: 3088,
    SCISSOR_TEST: 3089,
    SHADER_COMPILER: 36346,
    SHADER_SOURCE_LENGTH: 35720,
    SHADER_TYPE: 35663,
    SHADING_LANGUAGE_VERSION: 35724,
    SHORT: 5122,
    SRC_ALPHA: 770,
    SRC_ALPHA_SATURATE: 776,
    SRC_COLOR: 768,
    STATIC_DRAW: 35044,
    STENCIL_ATTACHMENT: 36128,
    STENCIL_BACK_FAIL: 34817,
    STENCIL_BACK_FUNC: 34816,
    STENCIL_BACK_PASS_DEPTH_FAIL: 34818,
    STENCIL_BACK_PASS_DEPTH_PASS: 34819,
    STENCIL_BACK_REF: 36003,
    STENCIL_BACK_VALUE_MASK: 36004,
    STENCIL_BACK_WRITEMASK: 36005,
    STENCIL_BITS: 3415,
    STENCIL_BUFFER_BIT: 1024,
    STENCIL_CLEAR_VALUE: 2961,
    STENCIL_FAIL: 2964,
    STENCIL_FUNC: 2962,
    STENCIL_INDEX: 6401,
    STENCIL_INDEX8: 36168,
    STENCIL_PASS_DEPTH_FAIL: 2965,
    STENCIL_PASS_DEPTH_PASS: 2966,
    STENCIL_REF: 2967,
    STENCIL_TEST: 2960,
    STENCIL_VALUE_MASK: 2963,
    STENCIL_WRITEMASK: 2968,
    STREAM_DRAW: 35040,
    SUBPIXEL_BITS: 3408,
    TEXTURE: 5890,
    TEXTURE_2D: 3553,
    TEXTURE_BINDING_2D: 32873,
    TEXTURE_BINDING_CUBE_MAP: 34068,
    TEXTURE_CUBE_MAP: 34067,
    TEXTURE_CUBE_MAP_NEGATIVE_X: 34070,
    TEXTURE_CUBE_MAP_NEGATIVE_Y: 34072,
    TEXTURE_CUBE_MAP_NEGATIVE_Z: 34074,
    TEXTURE_CUBE_MAP_POSITIVE_X: 34069,
    TEXTURE_CUBE_MAP_POSITIVE_Y: 34071,
    TEXTURE_CUBE_MAP_POSITIVE_Z: 34073,
    UNPACK_FLIP_Y_WEBGL: 37440,
    TEXTURE_MAG_FILTER: 10240,
    TEXTURE_MIN_FILTER: 10241,
    TEXTURE_WRAP_S: 10242,
    TEXTURE_WRAP_T: 10243,
    TEXTURE0: 33984,
    TEXTURE1: 33985,
    TEXTURE10: 33994,
    TEXTURE11: 33995,
    TEXTURE12: 33996,
    TEXTURE13: 33997,
    TEXTURE14: 33998,
    TEXTURE15: 33999,
    TEXTURE16: 34000,
    TEXTURE17: 34001,
    TEXTURE18: 34002,
    TEXTURE19: 34003,
    TEXTURE2: 33986,
    TEXTURE20: 34004,
    TEXTURE21: 34005,
    TEXTURE22: 34006,
    TEXTURE23: 34007,
    TEXTURE24: 34008,
    TEXTURE25: 34009,
    TEXTURE26: 34010,
    TEXTURE27: 34011,
    TEXTURE28: 34012,
    TEXTURE29: 34013,
    TEXTURE3: 33987,
    TEXTURE30: 34014,
    TEXTURE31: 34015,
    TEXTURE4: 33988,
    TEXTURE5: 33989,
    TEXTURE6: 33990,
    TEXTURE7: 33991,
    TEXTURE8: 33992,
    TEXTURE9: 33993,
    TRIANGLE_FAN: 6,
    TRIANGLE_STRIP: 5,
    TRIANGLES: 4,
    UNPACK_ALIGNMENT: 3317,
    UNSIGNED_BYTE: 5121,
    UNSIGNED_INT: 5125,
    UNSIGNED_SHORT: 5123,
    UNSIGNED_SHORT_4_4_4_4: 32819,
    UNSIGNED_SHORT_5_5_5_1: 32820,
    UNSIGNED_SHORT_5_6_5: 33635,
    VALIDATE_STATUS: 35715,
    VENDOR: 7936,
    VERSION: 7938,
    VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 34975,
    VERTEX_ATTRIB_ARRAY_ENABLED: 34338,
    VERTEX_ATTRIB_ARRAY_NORMALIZED: 34922,
    VERTEX_ATTRIB_ARRAY_POINTER: 34373,
    VERTEX_ATTRIB_ARRAY_SIZE: 34339,
    VERTEX_ATTRIB_ARRAY_STRIDE: 34340,
    VERTEX_ATTRIB_ARRAY_TYPE: 34341,
    VERTEX_SHADER: 35633,
    VIEWPORT: 2978,
    ZERO: 0,
};


/***/ }),

/***/ "./esm/grids.js":
/*!**********************!*\
  !*** ./esm/grids.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Grids: () => (/* binding */ Grids)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _astrocalc_date_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./astrocalc/date.js */ "./esm/astrocalc/date.js");
/* harmony import */ var _astrocalc_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./astrocalc/coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./graphics/webgl_constants.js */ "./esm/graphics/webgl_constants.js");
/* harmony import */ var _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./graphics/primitives3d.js */ "./esm/graphics/primitives3d.js");
/* harmony import */ var _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./graphics/gl_buffers.js */ "./esm/graphics/gl_buffers.js");
/* harmony import */ var _graphics_texture_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./graphics/texture.js */ "./esm/graphics/texture.js");
/* harmony import */ var _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./graphics/shaders.js */ "./esm/graphics/shaders.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./color.js */ "./esm/color.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _utilities_binary_reader_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utilities/binary_reader.js */ "./esm/utilities/binary_reader.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./coordinates.js */ "./esm/coordinates.js");
/* harmony import */ var _sky_text_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./sky_text.js */ "./esm/sky_text.js");
/* harmony import */ var _planets_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./planets.js */ "./esm/planets.js");
/* harmony import */ var _space_time_controller_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./space_time_controller.js */ "./esm/space_time_controller.js");
/* harmony import */ var _star_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./star.js */ "./esm/star.js");
/* harmony import */ var _web_file_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./web_file.js */ "./esm/web_file.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Various grids that can overlay the sky view.
























// wwtlib.Grids

function Grids() { }

Grids._galaxyImageIndexBuffer = null;
Grids._galaxyImageTriangleCount = 0;
Grids._milkyWayImage = null;
Grids._starSprites = null;
Grids._starCount = 0;
Grids._starsDownloading = false;
Grids._stars = null;
Grids._hipparcosIndex = {};
Grids._limitingMagnitude = 16;
Grids._galaxyTextures = null;
Grids._galaxyVertexCounts = null;
Grids._largeSet = true;
Grids._cosmosReady = false;
Grids._cosmos = null;
Grids._downloadingGalaxy = false;
Grids._eclipticCount = 0;
Grids._eclipticYear = 0;
Grids._monthDays = [31, 28.2421, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
Grids._monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
Grids._eclipticTextYear = 0;

Grids._createGalaxyImage = function (renderContext) {
    if (Grids._milkyWayImage == null) {
        Grids._milkyWayImage = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_9__.Texture.fromUrl(_url_helpers_js__WEBPACK_IMPORTED_MODULE_2__.URLHelpers.singleton.engineAssetUrl('milkywaybar.jpg'));
    }
    var subdivs = 50;
    var lat, lng;
    var index = 0;
    var latMin = 64;
    var latMax = -64;
    var lngMin = -64;
    var lngMax = 64;
    Grids._galaxyImageVertexBuffer = new _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_8__.PositionTextureVertexBuffer((subdivs + 1) * (subdivs + 1));
    var verts = Grids._galaxyImageVertexBuffer.lock();
    var x1, y1;
    var latDegrees = latMax - latMin;
    var lngDegrees = lngMax - lngMin;
    var scaleFactor = 60800000;
    var ecliptic = _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.meanObliquityOfEcliptic(_space_time_controller_js__WEBPACK_IMPORTED_MODULE_18__.SpaceTimeController.get_jNow()) / 180 * Math.PI;
    var point;
    var textureStepX = 1 / subdivs;
    var textureStepY = 1 / subdivs;
    for (y1 = 0; y1 <= subdivs; y1++) {
        if (y1 !== subdivs) {
            lat = latMax - (textureStepY * latDegrees * y1);
        } else {
            lat = latMin;
        }
        for (x1 = 0; x1 <= subdivs; x1++) {
            if (x1 !== subdivs) {
                lng = lngMin + (textureStepX * lngDegrees * x1);
            }
            else {
                lng = lngMax;
            }
            index = y1 * (subdivs + 1) + x1;
            point = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(lng * scaleFactor, 0, (lat - 28) * scaleFactor);
            point.rotateY(213 / 180 * Math.PI);
            point.rotateZ((-62.87175) / 180 * Math.PI);
            point.rotateY((-192.8595083) / 180 * Math.PI);
            point.rotateX(ecliptic);
            verts[index] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPosRaw(point, (1 - x1 * textureStepX), (y1 * textureStepY));
        }
    }
    Grids._galaxyImageVertexBuffer.unlock();
    Grids._galaxyImageTriangleCount = subdivs * subdivs * 2;
    var ui16array = new Uint16Array(subdivs * subdivs * 6);
    var indexArray = ui16array;
    for (y1 = 0; y1 < subdivs; y1++) {
        for (x1 = 0; x1 < subdivs; x1++) {
            index = (y1 * subdivs * 6) + 6 * x1;

            // First triangle in quad
            indexArray[index] = (y1 * (subdivs + 1) + x1);
            indexArray[index + 2] = ((y1 + 1) * (subdivs + 1) + x1);
            indexArray[index + 1] = (y1 * (subdivs + 1) + (x1 + 1));

            // Second triangle in quad
            indexArray[index + 3] = (y1 * (subdivs + 1) + (x1 + 1));
            indexArray[index + 5] = ((y1 + 1) * (subdivs + 1) + x1);
            indexArray[index + 4] = ((y1 + 1) * (subdivs + 1) + (x1 + 1));
        }
    }
    Grids._galaxyImageIndexBuffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_13__.tilePrepDevice.createBuffer();
    _render_globals_js__WEBPACK_IMPORTED_MODULE_13__.tilePrepDevice.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.ELEMENT_ARRAY_BUFFER, Grids._galaxyImageIndexBuffer);
    _render_globals_js__WEBPACK_IMPORTED_MODULE_13__.tilePrepDevice.bufferData(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.ELEMENT_ARRAY_BUFFER, ui16array, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.STATIC_DRAW);
};

Grids.drawGalaxyImage = function (renderContext, opacity) {
    if (Grids._galaxyImageIndexBuffer == null) {
        Grids._createGalaxyImage(renderContext);
    }
    var zoom = renderContext.viewCamera.zoom;
    var log = Math.log(Math.max(1, zoom)) / Math.log(4);
    var distAlpha = (log - 14) * 128;
    var alpha = (Math.min(255, Math.max(0, distAlpha)) * opacity);
    _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_10__.ImageShader.use(renderContext, Grids._galaxyImageVertexBuffer.vertexBuffer, Grids._galaxyImageIndexBuffer, Grids._milkyWayImage.texture2d, opacity, true);
    renderContext.gl.drawElements(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.TRIANGLES, Grids._galaxyImageTriangleCount * 3, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.UNSIGNED_SHORT, 0);
};

Grids.drawStars3D = function (renderContext, opacity) {
    var zoom = renderContext.viewCamera.zoom;
    var distAlpha = Math.max(Math.min(255, (Math.log(zoom) - 15.5) * 40.8), 0);
    var alpha = Math.min(255, Math.max(0, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(distAlpha)));
    if (alpha > 254) {
        return;
    }
    alpha = ((255 - alpha) * opacity);
    if (Grids._starSprites == null) {
        Grids.initStarVertexBuffer(renderContext);
    }
    if (Grids._starSprites != null) {
        Grids._starSprites.draw(renderContext, alpha / 255, false);
    }
};

Grids.initStarVertexBuffer = function (renderContext) {
    if (!Grids._starsDownloading && !_data_globals_js__WEBPACK_IMPORTED_MODULE_12__.freestandingMode) {
        Grids.getStarFile(_url_helpers_js__WEBPACK_IMPORTED_MODULE_2__.URLHelpers.singleton.coreStaticUrl('wwtweb/catalog.aspx?Q=hipparcos'));
        Grids._starsDownloading = true;
    }
    if (Grids._starSprites == null && Grids._starCount > 0) {
        var ecliptic = _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.meanObliquityOfEcliptic(_space_time_controller_js__WEBPACK_IMPORTED_MODULE_18__.SpaceTimeController.get_jNow()) / 180 * Math.PI;
        var count = Grids._stars.length;
        Grids._starCount = count;
        Grids._starSprites = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__.PointList(renderContext);
        Grids._starSprites.depthBuffered = false;
        Grids._starSprites.showFarSide = true;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(Grids._stars);
        while ($enum1.moveNext()) {
            var star = $enum1.current;
            var pos = _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(star.RA, star.dec, star.distance);
            pos.rotateX(ecliptic);
            star.position = pos;
            var radDec = (1200000) / Math.pow(1.6, star.absoluteMagnitude);
            Grids._starSprites.addPoint(pos, star.col, new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__.Dates(0, 1), radDec * 100);
        }
    }
};

Grids.initializeStarDB = function (text) {
    if (Grids._stars == null) {
        if (Grids._stars == null) {
            Grids._stars = [];
            var rows = text.split('\r\n');
            var star;
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(rows);
            while ($enum1.moveNext()) {
                var row = $enum1.current;
                var line = row;
                star = new _star_js__WEBPACK_IMPORTED_MODULE_19__.Star(line);
                if (star.magnitude < Grids._limitingMagnitude && star.par > 0.001) {
                    Grids._stars.push(star);
                    Grids._hipparcosIndex[star.id] = star;
                }
            }
            Grids._starCount = Grids._stars.length;
        }
    }
};

Grids.getStarFile = function (url) {
    Grids._webFileStar = new _web_file_js__WEBPACK_IMPORTED_MODULE_20__.WebFile(url);
    Grids._webFileStar.onStateChange = Grids.starFileStateChange;
    Grids._webFileStar.send();
};

Grids.starFileStateChange = function () {
    if (Grids._webFileStar.get_state() === 2) {
        alert(Grids._webFileStar.get_message());
    }
    else if (Grids._webFileStar.get_state() === 1) {
        Grids.initializeStarDB(Grids._webFileStar.getText());
    }
};

Grids.getGalaxyFile = function (url) {
    Grids._webFileGalaxy = new _web_file_js__WEBPACK_IMPORTED_MODULE_20__.WebFile(url);
    Grids._webFileGalaxy.responseType = 'blob';
    Grids._webFileGalaxy.onStateChange = Grids.galaxyFileStateChange;
    Grids._webFileGalaxy.send();
};

Grids.galaxyFileStateChange = function () {
    if (Grids._webFileGalaxy.get_state() === 2) {
        alert(Grids._webFileGalaxy.get_message());
    }
    else if (Grids._webFileGalaxy.get_state() === 1) {
        var mainBlob = Grids._webFileGalaxy.getBlob();
        var chunck = new FileReader();
        chunck.onloadend = function (e) {
            var br = new _utilities_binary_reader_js__WEBPACK_IMPORTED_MODULE_14__.BinaryReader(new Uint8Array(chunck.result));
            Grids.initializeCosmos(br);
        };
        chunck.readAsArrayBuffer(mainBlob);
    }
};

Grids.drawCosmos3D = function (renderContext, opacity) {
    var device = renderContext.gl;
    var zoom = renderContext.viewCamera.zoom;
    var distAlpha = ((Math.log(Math.max(1, zoom)) / Math.log(4)) - 15.5) * 90;
    var alpha = Math.min(255, Math.max(0, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(distAlpha)));
    if (alpha < 3) {
        return;
    }
    Grids.initCosmosVertexBuffer();
    if (Grids._galaxyTextures == null) {
        if (Grids._largeSet) {
            Grids._galaxyTextures = new Array(256);
            for (var i = 0; i < 256; i++) {
                var num = i.toString();
                while (num.length < 4) {
                    num = '0' + num;
                }
                var name = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format(_url_helpers_js__WEBPACK_IMPORTED_MODULE_2__.URLHelpers.singleton.engineAssetUrl('galimg/gal_{0}.jpg'), num);
                Grids._galaxyTextures[i] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_9__.Texture.fromUrl(name);
            }
        }
    }
    if (Grids._cosmosReady) {
        var count = 256;
        for (var i = 0; i < count; i++) {
            Grids._cosmosSprites[i].drawTextured(renderContext, Grids._galaxyTextures[i].texture2d, (alpha * opacity) / 255);
        }
    }
};

Grids.initCosmosVertexBuffer = function () {
    if (Grids._cosmosSprites == null) {
        Grids._downloadCosmosFile();
    }
};

Grids._createCosmosVertexBuffer = function (renderContext) {
    var device = _render_globals_js__WEBPACK_IMPORTED_MODULE_13__.tilePrepDevice;
    var bucketCount = 256;
    if (Grids._cosmosSprites != null) {
        for (var ij = 0; ij < bucketCount; ij++) {
            if (Grids._cosmosSprites[ij] != null) {
                Grids._cosmosSprites[ij] = null;
            }
        }
    }
    Grids._cosmosSprites = null;
    var ecliptic = _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.meanObliquityOfEcliptic(_space_time_controller_js__WEBPACK_IMPORTED_MODULE_18__.SpaceTimeController.get_jNow()) / 180 * Math.PI;
    Grids._cosmosSprites = new Array(bucketCount);
    var indexList = new Array(bucketCount);
    for (var i = 0; i < bucketCount; i++) {
        var count = Grids._galaxyVertexCounts[i];
        Grids._cosmosSprites[i] = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__.PointList(renderContext);
        Grids._cosmosSprites[i].depthBuffered = false;
        Grids._cosmosSprites[i].showFarSide = true;
        indexList[i] = 0;
    }
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(Grids._cosmos);
    while ($enum1.moveNext()) {
        var galaxy = $enum1.current;
        var bucket = galaxy.eTypeBucket;
        var index = indexList[bucket];
        var pos = _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(galaxy.RA, galaxy.dec, (galaxy.distance * 206264.806 * 1000000) / 0.73);
        pos.rotateX(ecliptic);
        galaxy.position = pos;
        Grids._cosmosSprites[bucket].addPoint(pos, _color_js__WEBPACK_IMPORTED_MODULE_11__.Colors.get_white(), new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__.Dates(0, 1), (1E+09 * galaxy.size * 100));
        indexList[bucket]++;
    }
    Grids._cosmosReady = true;
};

Grids.initializeCosmos = function (br) {
    var max = Math.pow(100, 2.849485002);
    if (Grids._cosmos == null) {
        Grids._galaxyVertexCounts = new Array((Grids._largeSet) ? 256 : 20);
        if (Grids._cosmos == null) {
            Grids._cosmos = [];
            var galaxy;
            try {
                var count = 0;
                while (br.get_position() < br.get_length()) {
                    galaxy = new _star_js__WEBPACK_IMPORTED_MODULE_19__.Galaxy(br);
                    Grids._cosmos.push(galaxy);
                    Grids._galaxyVertexCounts[galaxy.eTypeBucket]++;
                    count++;
                }
            }
            catch ($e1) {
            }
            br.close();
        }
        Grids._createCosmosVertexBuffer(_render_globals_js__WEBPACK_IMPORTED_MODULE_13__.globalRenderContext);
    }
};

Grids._downloadCosmosFile = function () {
    if (!Grids._downloadingGalaxy && !_data_globals_js__WEBPACK_IMPORTED_MODULE_12__.freestandingMode) {
        Grids.getGalaxyFile(_url_helpers_js__WEBPACK_IMPORTED_MODULE_2__.URLHelpers.singleton.coreStaticUrl('wwtweb/catalog.aspx?Q=cosmosnewbin'));
        Grids._downloadingGalaxy = true;
    }
    return false;
};

Grids.drawEquitorialGrid = function (renderContext, opacity, drawColor) {
    if (Grids._equLineList == null) {
        Grids._equLineList = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__.SimpleLineList();
        Grids._equLineList.set_depthBuffered(false);
        for (var hour = 0; hour < 24; hour++) {
            for (var dec = -80; dec < 80; dec += 2) {
                Grids._equLineList.addLine(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(hour, dec, 1), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(hour, dec + 2, 1));
            }
        }
        for (var dec = -80; dec <= 80; dec += 10) {
            for (var hour = 0; hour < 23.8; hour += 0.2) {
                Grids._equLineList.addLine(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(hour, dec, 1), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(hour + 0.2, dec, 1));
                //todo fix for color bright
            }
        }
        var counter = 0;
        for (var ra = 0; ra < 24; ra += 0.25) {
            var dec = 0.5;
            switch (counter % 4) {
                case 0:
                    counter++;
                    continue;
                case 3:
                case 1:
                    dec = 0.25;
                    break;
            }
            counter++;
            Grids._equLineList.addLine(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(ra, dec, 1), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(ra, -dec, 1));
        }
        counter = 0;
        for (var ra = 0; ra < 24; ra += 3) {
            counter = 0;
            for (var dec = -80; dec <= 80; dec += 1) {
                var width = 0.5 / 30;
                switch (counter % 10) {
                    case 0:
                        counter++;
                        continue;
                    case 5:
                        width = 0.5 / 15;
                        break;
                }
                counter++;
                Grids._equLineList.addLine(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(ra + width, dec, 1), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(ra - width, dec, 1));
            }
        }
    }
    Grids._equLineList.drawLines(renderContext, opacity, drawColor);
    return true;
};

Grids.drawEquitorialGridText = function (renderContext, opacity, drawColor) {
    Grids._makeEquitorialGridText();
    Grids._equTextBatch.draw(renderContext, opacity, drawColor);
    return true;
};

Grids._makeEquitorialGridText = function () {
    if (Grids._equTextBatch == null) {
        Grids._equTextBatch = new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3dBatch(30);
        var index = 0;
        for (var ra = 0; ra < 24; ra++) {
            var text = ra.toString() + ' hr';
            if (ra < 10) {
                text = '  ' + ra.toString() + ' hr';
            }
            Grids._equTextBatch.add(new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3d(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(ra + 0.005, 0.4, 1), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(ra + 0.005, 0.5, 1), text, 45, 0.00018));
        }
        index = 0;
        for (var ra = 0; ra < 24; ra += 3) {
            for (var dec = -80; dec <= 80; dec += 10) {
                if (!dec) {
                    continue;
                }
                var text = dec.toString();
                if (dec > 0) {
                    text = '  +' + dec.toString();
                    Grids._equTextBatch.add(new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3d(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(ra, dec - 0.4, 1), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(ra, dec - 0.3, 1), text, 45, 0.00018));
                }
                else {
                    text = '  - ' + text.substr(1);
                    Grids._equTextBatch.add(new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3d(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(ra, dec + 0.4, 1), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(ra, dec + 0.5, 1), text, 45, 0.00018));
                }
                index++;
            }
        }
    }
};

Grids.drawEcliptic = function (renderContext, opacity, drawColor) {
    var col = drawColor;
    var year = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_18__.SpaceTimeController.get_now().getUTCFullYear();
    if (Grids._eclipticOverviewLineList == null || year !== Grids._eclipticYear) {
        if (Grids._eclipticOverviewLineList != null) {
            Grids._eclipticOverviewLineList.clear();
            Grids._eclipticOverviewLineList = null;
        }
        Grids._eclipticYear = year;
        var obliquity = _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.meanObliquityOfEcliptic(_space_time_controller_js__WEBPACK_IMPORTED_MODULE_18__.SpaceTimeController.get_jNow());
        var mat = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationX((-obliquity / 360 * (Math.PI * 2)));
        var daysPerYear = 365.25;
        if (_astrocalc_date_js__WEBPACK_IMPORTED_MODULE_4__.DT.isLeap(year, true)) {
            Grids._monthDays[1] = 29;
            daysPerYear = 366;
        } else {
            Grids._monthDays[1] = 28;
            daysPerYear = 365;
        }
        var count = 2 * _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(daysPerYear);
        Grids._eclipticCount = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(daysPerYear);
        var jYear = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_18__.SpaceTimeController.utcToJulian(new Date(year, 0, 1, 12, 0, 0));
        var index = 0;
        var d = 0;
        Grids._eclipticOverviewLineList = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__.SimpleLineList();
        Grids._eclipticOverviewLineList.set_depthBuffered(false);
        for (var m = 0; m < 12; m++) {
            var daysThisMonth = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(Grids._monthDays[m]);
            for (var i = 0; i < daysThisMonth; i++) {
                var sunRaDec = _planets_js__WEBPACK_IMPORTED_MODULE_17__.Planets.getPlanetLocationJD('Sun', jYear);
                var sunEcliptic = _astrocalc_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_5__.CT.eq2Ec(sunRaDec.RA, sunRaDec.dec, obliquity);
                d = sunEcliptic.x;
                var width = 0.005;
                if (!i) {
                    width = 0.01;
                }
                var dd = d;
                Grids._eclipticOverviewLineList.addLine(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos((dd * Math.PI * 2) / 360), width, Math.sin((dd * Math.PI * 2) / 360)), mat), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos((dd * Math.PI * 2) / 360), -width, Math.sin((dd * Math.PI * 2) / 360)), mat));
                index++;
                jYear += 1;
            }
            d += Grids._monthDays[m];
        }
    }
    Grids._eclipticOverviewLineList.drawLines(renderContext, opacity, drawColor);
    return true;
};

Grids.drawEclipticText = function (renderContext, opacity, drawColor) {
    Grids._makeEclipticText();
    Grids._eclipOvTextBatch.draw(renderContext, opacity, drawColor);
    return true;
};

Grids._makeEclipticText = function () {
    var year = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_18__.SpaceTimeController.get_now().getUTCFullYear();
    if (Grids._eclipOvTextBatch == null) {
        Grids._eclipOvTextBatch = new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3dBatch(80);
        Grids._eclipticTextYear = year;
        var obliquity = _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.meanObliquityOfEcliptic(_space_time_controller_js__WEBPACK_IMPORTED_MODULE_18__.SpaceTimeController.get_jNow());
        var mat = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationX((-obliquity / 360 * (Math.PI * 2)));
        var daysPerYear = 365.25;
        if (_astrocalc_date_js__WEBPACK_IMPORTED_MODULE_4__.DT.isLeap(year, true)) {
            Grids._monthDays[1] = 29;
            daysPerYear = 366;
        } else {
            Grids._monthDays[1] = 28;
            daysPerYear = 365;
        }
        var count = 2 * _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(daysPerYear);
        Grids._eclipticCount = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(daysPerYear);
        var jYear = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_18__.SpaceTimeController.utcToJulian(new Date(year, 0, 1, 12, 0, 0));
        var index = 0;
        var d = 0;
        for (var m = 0; m < 12; m++) {
            var daysThisMonth = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(Grids._monthDays[m]);
            for (var i = 0; i < daysThisMonth; i++) {
                var sunRaDec = _planets_js__WEBPACK_IMPORTED_MODULE_17__.Planets.getPlanetLocationJD('Sun', jYear);
                var sunEcliptic = _astrocalc_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_5__.CT.eq2Ec(sunRaDec.RA, sunRaDec.dec, obliquity);
                d = sunEcliptic.x;
                var dd = d;
                if (i === Math.floor(daysThisMonth / 2)) {
                    var center = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos((dd * Math.PI * 2) / 360), 0.025, Math.sin((dd * Math.PI * 2) / 360)), mat);
                    var up = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos((dd * Math.PI * 2) / 360), 0.045, Math.sin((dd * Math.PI * 2) / 360)), mat);
                    up.subtract(center);
                    up.normalize();
                    Grids._eclipOvTextBatch.add(new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3d(center, up, Grids._monthNames[m], 80, 0.000159375));
                }
                index++;
                index++;
                jYear += 1;
            }
            d += Grids._monthDays[m];
        }
    }
};

Grids.drawPrecessionChart = function (renderContext, opacity, drawColor) {
    Grids._makePrecessionChart();
    Grids._precTextBatch.draw(renderContext, opacity, drawColor);
    Grids._precLineList.drawLines(renderContext, opacity, drawColor);
    return true;
};

Grids._makePrecessionChart = function () {
    var obliquity = _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.meanObliquityOfEcliptic(_space_time_controller_js__WEBPACK_IMPORTED_MODULE_18__.SpaceTimeController.get_jNow());
    var mat = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationX((obliquity / 360 * (Math.PI * 2)));
    var col = _color_js__WEBPACK_IMPORTED_MODULE_11__.Colors.get_white();
    if (Grids._precLineList == null) {
        Grids._precLineList = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__.SimpleLineList();
        Grids._precLineList.set_depthBuffered(false);
        for (var l = 0; l < 360; l++) {
            var b = 90 - obliquity;
            Grids._precLineList.addLine(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, b, 1), mat), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu((l + 1) / 15, b, 1), mat));
        }
        for (var l = -12000; l < 13000; l += 2000) {
            var b = 90 - obliquity;
            var p = -((l - 2000) / 25772 * 24) - 6;
            Grids._precLineList.addLine(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(p, b - 0.5, 1), mat), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(p, b + 0.5, 1), mat));
        }
    }
    if (Grids._precTextBatch == null) {
        Grids._precTextBatch = new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3dBatch(50);
        for (var l = -12000; l < 13000; l += 2000) {
            var b = 90 - obliquity + 3;
            var p = -((l - 2000) / 25772 * 24) - 6;
            var text = l.toString();
            if (!l) {
                b = 90 - obliquity + 2;
                text = '1 CE';
            }
            else if (l < 0) {
                text = '  ' + Math.abs(l).toString() + ' BCE';
            }
            else {
                text = Math.abs(l).toString() + ' CE';
            }
            if (text.length === 9) {
                text = '   ' + text;
            }
            Grids._precTextBatch.add(new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3d(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(p, b, 1), mat), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(p + 0.01, b, 1), mat), text, 75, 0.00015));
        }
    }
    return;
};

Grids.drawAltAzGrid = function (renderContext, opacity, drawColor) {
    var zenithAltAz = new _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates(0, 0);
    var zenith = _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.horizonToEquitorial(zenithAltAz, _space_time_controller_js__WEBPACK_IMPORTED_MODULE_18__.SpaceTimeController.get_location(), _space_time_controller_js__WEBPACK_IMPORTED_MODULE_18__.SpaceTimeController.get_now());
    var raPart = -((zenith.get_RA() + 6) / 24 * (Math.PI * 2));
    var decPart = -(zenith.get_dec() / 360 * (Math.PI * 2));
    var raText = _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.formatDMS(zenith.get_RA());
    var mat = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationY(-raPart);
    mat._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationX(decPart));
    mat.invert();
    if (Grids._altAzLineList == null) {
        Grids._altAzLineList = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__.SimpleLineList();
        Grids._altAzLineList.set_depthBuffered(false);
        for (var l = 0; l < 360; l += 10) {
            for (var b = -80; b < 80; b += 2) {
                Grids._altAzLineList.addLine(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, b, 1), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, b + 2, 1));
            }
        }
        for (var b = -80; b <= 80; b += 10) {
            for (var l = 0; l < 360; l += 5) {
                Grids._altAzLineList.addLine(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, b, 1), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu((l + 5) / 15, b, 1));
            }
        }
        var counter = 0;
        for (var l = 0; l < 360; l += 1) {
            var b = 0.25;
            switch (counter % 10) {
                case 0:
                    counter++;
                    continue;
                case 5:
                    b = 0.5;
                    break;
            }
            counter++;
            Grids._altAzLineList.addLine(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, b, 1), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, -b, 1));
        }
        counter = 0;
        for (var l = 0; l < 360; l += 90) {
            counter = 0;
            for (var b = -80; b <= 80; b += 1) {
                var width = 0.5 / 2;
                switch (counter % 10) {
                    case 0:
                        counter++;
                        continue;
                    case 5:
                        width = 0.5;
                        break;
                }
                counter++;
                Grids._altAzLineList.addLine(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu((l + width) / 15, b, 1), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu((l - width) / 15, b, 1));
            }
        }
    }
    var matOldWorld = renderContext.get_world().clone();
    var matOldWorldBase = renderContext.get_worldBase().clone();
    renderContext.set_worldBase(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.multiplyMatrix(mat, renderContext.get_world()));
    renderContext.set_world(renderContext.get_worldBase().clone());
    renderContext.makeFrustum();
    Grids._altAzLineList.viewTransform = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.invertMatrix(mat);
    Grids._altAzLineList.drawLines(renderContext, opacity, drawColor);
    renderContext.set_worldBase(matOldWorldBase);
    renderContext.set_world(matOldWorld);
    renderContext.makeFrustum();
    return true;
};

Grids.drawAltAzGridText = function (renderContext, opacity, drawColor) {
    var zenithAltAz = new _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates(0, 0);
    var zenith = _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.horizonToEquitorial(zenithAltAz, _space_time_controller_js__WEBPACK_IMPORTED_MODULE_18__.SpaceTimeController.get_location(), _space_time_controller_js__WEBPACK_IMPORTED_MODULE_18__.SpaceTimeController.get_now());
    var raPart = -((zenith.get_RA() - 6) / 24 * (Math.PI * 2));
    var decPart = -(zenith.get_dec() / 360 * (Math.PI * 2));
    var raText = _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.formatDMS(zenith.get_RA());
    var mat = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationY(-raPart - Math.PI);
    mat._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationX(decPart));
    mat.invert();
    Grids._makeAltAzGridText();
    var matOldWorld = renderContext.get_world().clone();
    var matOldWorldBase = renderContext.get_worldBase().clone();
    renderContext.set_worldBase(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.multiplyMatrix(mat, renderContext.get_world()));
    renderContext.set_world(renderContext.get_worldBase().clone());
    renderContext.makeFrustum();
    Grids._altAzTextBatch.viewTransform = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.invertMatrix(mat);
    Grids._altAzTextBatch.draw(renderContext, opacity, drawColor);
    renderContext.set_worldBase(matOldWorldBase);
    renderContext.set_world(matOldWorld);
    renderContext.makeFrustum();
    return true;
};

Grids._makeAltAzGridText = function () {
    var drawColor = _color_js__WEBPACK_IMPORTED_MODULE_11__.Colors.get_white();
    var index = 0;
    if (Grids._altAzTextBatch == null) {
        Grids._altAzTextBatch = new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3dBatch(30);
        for (var l = 0; l < 360; l += 10) {
            var text = '       ' + l.toString();
            if (l < 10) {
                text = '   ' + l.toString();
            }
            else if (l < 100) {
                text = '     ' + l.toString();
            }
            var lc = 360 - l;
            Grids._altAzTextBatch.add(new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3d(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(lc / 15 - 6, 0.4, 1), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(lc / 15 - 6, 0.5, 1), text, 75, 0.00018));
        }
        index = 0;
        for (var l = 0; l < 360; l += 90) {
            for (var b = -80; b <= 80; b += 10) {
                if (!b) {
                    continue;
                }
                var text = b.toString();
                if (b > 0) {
                    text = '  +' + b.toString();
                    Grids._altAzTextBatch.add(new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3d(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, b - 0.4, 1), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, b - 0.3, 1), text, 75, 0.00018));
                }
                else {
                    text = '  - ' + text.substr(1);
                    Grids._altAzTextBatch.add(new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3d(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, b + 0.4, 1), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, b + 0.5, 1), text, 75, 0.00018));
                }
                index++;
            }
        }
    }
    return;
};

Grids.drawEclipticGrid = function (renderContext, opacity, drawColor) {
    if (Grids._eclipticLineList == null) {
        Grids._eclipticLineList = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__.SimpleLineList();
        Grids._eclipticLineList.set_depthBuffered(false);
        var obliquity = _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.meanObliquityOfEcliptic(2451545);
        var mat = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationX((-obliquity / 360 * (Math.PI * 2)));
        for (var l = 0; l < 360; l += 10) {
            for (var b = -80; b < 80; b += 2) {
                Grids._eclipticLineList.addLine(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, b, 1), mat), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, b + 2, 1), mat));
            }
        }
        for (var b = -80; b <= 80; b += 10) {
            for (var l = 0; l < 360; l += 5) {
                Grids._eclipticLineList.addLine(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, b, 1), mat), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu((l + 5) / 15, b, 1), mat));
            }
        }
        var counter = 0;
        for (var l = 0; l < 360; l += 1) {
            var b = 0.25;
            switch (counter % 10) {
                case 0:
                    counter++;
                    continue;
                case 5:
                    b = 0.5;
                    break;
            }
            counter++;
            Grids._eclipticLineList.addLine(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, b, 1), mat), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, -b, 1), mat));
        }
        counter = 0;
        for (var l = 0; l < 360; l += 90) {
            counter = 0;
            for (var b = -80; b <= 80; b += 1) {
                var width = 0.5 / 2;
                switch (counter % 10) {
                    case 0:
                        counter++;
                        continue;
                    case 5:
                        width = 0.5;
                        break;
                }
                counter++;
                Grids._eclipticLineList.addLine(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu((l + width) / 15, b, 1), mat), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu((l - width) / 15, b, 1), mat));
            }
        }
    }
    Grids._eclipticLineList.drawLines(renderContext, opacity, drawColor);
    return true;
};

Grids.drawEclipticGridText = function (renderContext, opacity, drawColor) {
    Grids._makeEclipticGridText();
    Grids._eclipticTextBatch.draw(renderContext, opacity, drawColor);
    return true;
};

Grids._makeEclipticGridText = function () {
    var drawColor = _color_js__WEBPACK_IMPORTED_MODULE_11__.Colors.get_white();
    var obliquity = _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.meanObliquityOfEcliptic(_space_time_controller_js__WEBPACK_IMPORTED_MODULE_18__.SpaceTimeController.get_jNow());
    var mat = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationX((-obliquity / 360 * (Math.PI * 2)));
    if (Grids._eclipticTextBatch == null) {
        Grids._eclipticTextBatch = new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3dBatch(30);
        for (var l = 0; l < 360; l += 10) {
            var text = '       ' + l.toString();
            if (l < 10) {
                text = '   ' + l.toString();
            }
            else if (l < 100) {
                text = '     ' + l.toString();
            }
            Grids._eclipticTextBatch.add(new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3d(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, 0.4, 1), mat), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, 0.5, 1), mat), text, 75, 0.00018));
        }
        for (var l = 0; l < 360; l += 90) {
            for (var b = -80; b <= 80; b += 10) {
                if (!b) {
                    continue;
                }
                var text = b.toString();
                if (b > 0) {
                    text = '  +' + b.toString();
                    Grids._eclipticTextBatch.add(new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3d(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, b - 0.4, 1), mat), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, b - 0.3, 1), mat), text, 75, 0.00018));
                }
                else {
                    text = '  - ' + text.substr(1);
                    Grids._eclipticTextBatch.add(new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3d(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, b + 0.4, 1), mat), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d._transformCoordinate(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.raDecTo3dAu(l / 15, b + 0.5, 1), mat), text, 75, 0.00018));
                }
            }
        }
    }
    return;
};

Grids.drawGalacticGrid = function (renderContext, opacity, drawColor) {
    if (Grids._galLineList == null) {
        Grids._galLineList = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__.SimpleLineList();
        Grids._galLineList.set_depthBuffered(false);
        for (var l = 0; l < 360; l += 10) {
            for (var b = -80; b < 80; b += 2) {
                Grids._galLineList.addLine(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.galacticTo3dDouble(l, b), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.galacticTo3dDouble(l, b + 2));
            }
        }
        for (var b = -80; b <= 80; b += 10) {
            for (var l = 0; l < 360; l += 5) {
                Grids._galLineList.addLine(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.galacticTo3dDouble(l, b), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.galacticTo3dDouble(l + 5, b));
            }
        }
        var counter = 0;
        for (var l = 0; l < 360; l += 1) {
            var b = 0.25;
            switch (counter % 10) {
                case 0:
                    counter++;
                    continue;
                case 5:
                    b = 0.5;
                    break;
            }
            counter++;
            Grids._galLineList.addLine(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.galacticTo3dDouble(l, b), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.galacticTo3dDouble(l, -b));
        }
        counter = 0;
        for (var l = 0; l < 360; l += 90) {
            counter = 0;
            for (var b = -80; b <= 80; b += 1) {
                var width = 0.5 / 2;
                switch (counter % 10) {
                    case 0:
                        counter++;
                        continue;
                    case 5:
                        width = 0.5;
                        break;
                }
                counter++;
                Grids._galLineList.addLine(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.galacticTo3dDouble(l + width, b), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.galacticTo3dDouble(l - width, b));
            }
        }
    }
    Grids._galLineList.drawLines(renderContext, opacity, drawColor);
    return true;
};

Grids.drawGalacticGridText = function (renderContext, opacity, drawColor) {
    Grids._makeGalacticGridText();
    Grids._galTextBatch.draw(renderContext, opacity, drawColor);
    return true;
};

Grids._makeGalacticGridText = function () {
    if (Grids._galTextBatch == null) {
        Grids._galTextBatch = new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3dBatch(30);
        for (var l = 0; l < 360; l += 10) {
            var text = '       ' + l.toString();
            if (l < 10) {
                text = '   ' + l.toString();
            }
            else if (l < 100) {
                text = '     ' + l.toString();
            }
            Grids._galTextBatch.add(new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3d(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.galacticTo3dDouble(l, 0.4), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.galacticTo3dDouble(l, 0.5), text, 75, 0.00018));
        }
        for (var l = 0; l < 360; l += 90) {
            for (var b = -80; b <= 80; b += 10) {
                if (!b) {
                    continue;
                }
                var text = b.toString();
                if (b > 0) {
                    text = '  +' + b.toString();
                    Grids._galTextBatch.add(new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3d(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.galacticTo3dDouble(l, b - 0.4), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.galacticTo3dDouble(l, b - 0.3), text, 75, 0.00018));
                }
                else {
                    text = '  - ' + text.substr(1);
                    Grids._galTextBatch.add(new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3d(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.galacticTo3dDouble(l, b + 0.4), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.galacticTo3dDouble(l, b + 0.5), text, 75, 0.00018));
                }
            }
        }
    }
};

Grids.drawPlanetGrid = function (renderContext, opacity, drawColor) {
    if (Grids._planetLineList == null) {
        Grids._planetLineList = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__.SimpleLineList();
        Grids._planetLineList.set_depthBuffered(true);
        var col = drawColor;
        for (var lng = 0; lng < 360; lng += 10) {
            for (var lat = -80; lat < 80; lat += 2) {
                Grids._planetLineList.addLine(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.geoTo3dDouble(lat, lng), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.geoTo3dDouble(lat + 2, lng));
            }
        }
        for (var lat = -80; lat <= 80; lat += 10) {
            for (var l = 0; l < 360; l += 5) {
                Grids._planetLineList.addLine(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.geoTo3dDouble(lat, l), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.geoTo3dDouble(lat, l + 5));
            }
        }
        var counter = 0;
        for (var lng = 0; lng < 360; lng += 1) {
            var lat = 0.25;
            switch (counter % 10) {
                case 0:
                    counter++;
                    continue;
                case 5:
                    lat = 0.5;
                    break;
            }
            counter++;
            Grids._planetLineList.addLine(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.geoTo3dDouble(lat, lng), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.geoTo3dDouble(-lat, lng));
        }
        counter = 0;
        for (var lng = 0; lng < 360; lng += 90) {
            counter = 0;
            for (var b = -80; b <= 80; b += 1) {
                var width = 0.5 / 2;
                switch (counter % 10) {
                    case 0:
                        counter++;
                        continue;
                    case 5:
                        width = 0.5;
                        break;
                }
                counter++;
                Grids._planetLineList.addLine(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.geoTo3dDouble(b, lng + width), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.geoTo3dDouble(b, lng - width));
            }
        }
    }
    Grids._planetLineList.aaFix = false;
    Grids._planetLineList.set_depthBuffered(true);
    Grids._planetLineList.sky = false;
    Grids._planetLineList.drawLines(renderContext, opacity, drawColor);
    return true;
};

Grids.drawPlanetGridText = function (renderContext, opacity, drawColor) {
    Grids._makePlanetGridText();
    Grids._planetTextBatch.draw(renderContext, opacity, drawColor);
    return true;
};

Grids._makePlanetGridText = function () {
    if (Grids._planetTextBatch == null) {
        Grids._planetTextBatch = new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3dBatch(80);
        for (var lng = -180; lng < 180; lng += 10) {
            var text = '       ' + lng.toString();
            if (lng < 10) {
                text = '   ' + lng.toString();
            }
            else if (lng < 100) {
                text = '     ' + lng.toString();
            }
            Grids._planetTextBatch.add(new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3d(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.geoTo3dDouble(0.4, lng), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.geoTo3dDouble(0.5, lng), text, -80, 6E-05));
        }
        for (var lng = 0; lng < 360; lng += 90) {
            for (var lat = -80; lat <= 80; lat += 10) {
                if (!lat) {
                    continue;
                }
                var text = lat.toString();
                if (lat > 0) {
                    text = '  +' + lat.toString();
                    Grids._planetTextBatch.add(new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3d(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.geoTo3dDouble(lat - 0.4, lng), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.geoTo3dDouble(lat - 0.3, lng), text, -80, 6E-05));
                }
                else {
                    text = '  - ' + text.substring(1);
                    Grids._planetTextBatch.add(new _sky_text_js__WEBPACK_IMPORTED_MODULE_16__.Text3d(_coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.geoTo3dDouble(lat + 0.4, lng), _coordinates_js__WEBPACK_IMPORTED_MODULE_15__.Coordinates.geoTo3dDouble(lat + 0.5, lng), text, -80, 6E-05));
                }
            }
        }
    }
};

var Grids$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Grids", [Grids, Grids$, null]);


/***/ }),

/***/ "./esm/healpix_tables.js":
/*!*******************************!*\
  !*** ./esm/healpix_tables.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HealpixTables: () => (/* binding */ HealpixTables)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Data tables relating to HEALPix.




// wwtlib.HealpixTables

function HealpixTables() { }

HealpixTables.ctab = [0, 1, 256, 257, 2, 3, 258, 259, 512, 513, 768, 769, 514, 515, 770, 771, 4, 5, 260, 261, 6, 7, 262, 263, 516, 517, 772, 773, 518, 519, 774, 775, 1024, 1025, 1280, 1281, 1026, 1027, 1282, 1283, 1536, 1537, 1792, 1793, 1538, 1539, 1794, 1795, 1028, 1029, 1284, 1285, 1030, 1031, 1286, 1287, 1540, 1541, 1796, 1797, 1542, 1543, 1798, 1799, 8, 9, 264, 265, 10, 11, 266, 267, 520, 521, 776, 777, 522, 523, 778, 779, 12, 13, 268, 269, 14, 15, 270, 271, 524, 525, 780, 781, 526, 527, 782, 783, 1032, 1033, 1288, 1289, 1034, 1035, 1290, 1291, 1544, 1545, 1800, 1801, 1546, 1547, 1802, 1803, 1036, 1037, 1292, 1293, 1038, 1039, 1294, 1295, 1548, 1549, 1804, 1805, 1550, 1551, 1806, 1807, 2048, 2049, 2304, 2305, 2050, 2051, 2306, 2307, 2560, 2561, 2816, 2817, 2562, 2563, 2818, 2819, 2052, 2053, 2308, 2309, 2054, 2055, 2310, 2311, 2564, 2565, 2820, 2821, 2566, 2567, 2822, 2823, 3072, 3073, 3328, 3329, 3074, 3075, 3330, 3331, 3584, 3585, 3840, 3841, 3586, 3587, 3842, 3843, 3076, 3077, 3332, 3333, 3078, 3079, 3334, 3335, 3588, 3589, 3844, 3845, 3590, 3591, 3846, 3847, 2056, 2057, 2312, 2313, 2058, 2059, 2314, 2315, 2568, 2569, 2824, 2825, 2570, 2571, 2826, 2827, 2060, 2061, 2316, 2317, 2062, 2063, 2318, 2319, 2572, 2573, 2828, 2829, 2574, 2575, 2830, 2831, 3080, 3081, 3336, 3337, 3082, 3083, 3338, 3339, 3592, 3593, 3848, 3849, 3594, 3595, 3850, 3851, 3084, 3085, 3340, 3341, 3086, 3087, 3342, 3343, 3596, 3597, 3852, 3853, 3598, 3599, 3854, 3855];
HealpixTables.utab = [0, 1, 4, 5, 16, 17, 20, 21, 64, 65, 68, 69, 80, 81, 84, 85, 256, 257, 260, 261, 272, 273, 276, 277, 320, 321, 324, 325, 336, 337, 340, 341, 1024, 1025, 1028, 1029, 1040, 1041, 1044, 1045, 1088, 1089, 1092, 1093, 1104, 1105, 1108, 1109, 1280, 1281, 1284, 1285, 1296, 1297, 1300, 1301, 1344, 1345, 1348, 1349, 1360, 1361, 1364, 1365, 4096, 4097, 4100, 4101, 4112, 4113, 4116, 4117, 4160, 4161, 4164, 4165, 4176, 4177, 4180, 4181, 4352, 4353, 4356, 4357, 4368, 4369, 4372, 4373, 4416, 4417, 4420, 4421, 4432, 4433, 4436, 4437, 5120, 5121, 5124, 5125, 5136, 5137, 5140, 5141, 5184, 5185, 5188, 5189, 5200, 5201, 5204, 5205, 5376, 5377, 5380, 5381, 5392, 5393, 5396, 5397, 5440, 5441, 5444, 5445, 5456, 5457, 5460, 5461, 16384, 16385, 16388, 16389, 16400, 16401, 16404, 16405, 16448, 16449, 16452, 16453, 16464, 16465, 16468, 16469, 16640, 16641, 16644, 16645, 16656, 16657, 16660, 16661, 16704, 16705, 16708, 16709, 16720, 16721, 16724, 16725, 17408, 17409, 17412, 17413, 17424, 17425, 17428, 17429, 17472, 17473, 17476, 17477, 17488, 17489, 17492, 17493, 17664, 17665, 17668, 17669, 17680, 17681, 17684, 17685, 17728, 17729, 17732, 17733, 17744, 17745, 17748, 17749, 20480, 20481, 20484, 20485, 20496, 20497, 20500, 20501, 20544, 20545, 20548, 20549, 20560, 20561, 20564, 20565, 20736, 20737, 20740, 20741, 20752, 20753, 20756, 20757, 20800, 20801, 20804, 20805, 20816, 20817, 20820, 20821, 21504, 21505, 21508, 21509, 21520, 21521, 21524, 21525, 21568, 21569, 21572, 21573, 21584, 21585, 21588, 21589, 21760, 21761, 21764, 21765, 21776, 21777, 21780, 21781, 21824, 21825, 21828, 21829, 21840, 21841, 21844, 21845];

// coordinate of the lowest corner of each face
HealpixTables.jrll = [2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4];
HealpixTables.jpll = [1, 3, 5, 7, 0, 2, 4, 6, 1, 3, 5, 7];
HealpixTables.xoffset = [-1, -1, 0, 1, 1, 1, 0, -1];
HealpixTables.yoffset = [0, 1, 1, 1, 0, -1, -1, -1];

var HealpixTables$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("HealpixTables", [HealpixTables, HealpixTables$, null]);


/***/ }),

/***/ "./esm/healpix_tile.js":
/*!*****************************!*\
  !*** ./esm/healpix_tile.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HealpixTile: () => (/* binding */ HealpixTile),
/* harmony export */   Xyf: () => (/* binding */ Xyf)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util.js */ "./esm/util.js");
/* harmony import */ var _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./graphics/webgl_constants.js */ "./esm/graphics/webgl_constants.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./coordinates.js */ "./esm/coordinates.js");
/* harmony import */ var _fxyf_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./fxyf.js */ "./esm/fxyf.js");
/* harmony import */ var _web_file_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./web_file.js */ "./esm/web_file.js");
/* harmony import */ var _ui_tools_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ui_tools.js */ "./esm/ui_tools.js");
/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./tile.js */ "./esm/tile.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A tile in a pyramid that uses a HEALPix projection.














// wwtlib.Xyf

function Xyf() {
    this.ix = 0;
    this.iy = 0;
    this.face = 0;
}

Xyf.create = function (x, y, f) {
    var temp = new Xyf();
    temp.ix = x;
    temp.iy = y;
    temp.face = f;
    return temp;
};

var Xyf$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Xyf", [Xyf, Xyf$, null]);


// wwtlib.HealpixTile

function HealpixTile(level, x, y, dataset, parent) {
    this.ipix = 0;
    this.indexBuffer = new Array(4);
    this._vertexList$1 = null;
    this._nside$1 = 0;
    this._tileIndex$1 = 0;
    this._face$1 = 0;
    this._faceX$1 = 0;
    this._faceY$1 = 0;
    this._step$1 = 0;
    this._subDivided$1 = false;
    this._catalogRows$1 = [];
    _tile_js__WEBPACK_IMPORTED_MODULE_10__.Tile.call(this);
    this.level = level;
    this.tileX = x;
    this.tileY = y;
    this.dataset = dataset;
    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.set_tileDemEnabled)(false);

    if (!level) {
        this._nside$1 = 4;
    } else {
        this._nside$1 = Math.pow(2, level + 1);
    }

    if (parent == null) {
        this._face$1 = x * 4 + y;
        this.ipix = this._face$1;
    } else {
        this.parent = parent;
        var parentTile = parent;
        this._face$1 = parentTile._face$1;
        this._tileIndex$1 = parentTile._tileIndex$1 * 4 + y * 2 + x;
        this.ipix = this._face$1 * this._nside$1 * this._nside$1 / 4 + this._tileIndex$1;
        this._faceX$1 = parentTile._faceX$1 * 2 + x;
        this._faceY$1 = parentTile._faceY$1 * 2 + y;
    }
    this.isCatalogTile = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(dataset.get_hipsProperties().get_properties(), 'dataproduct_type') && dataset.get_hipsProperties().get_properties()['dataproduct_type'].toLowerCase() === 'catalog';
    this._computeBoundingSphere$1();
}

HealpixTile._galacticMatrix$1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.create(-0.0548755604024359, -0.483835015526738, -0.873437090247923, 0, -0.867666148981161, 0.455983776232537, -0.198076373464674, 0, 0.494109427943568, 0.746982244476371, -0.444829629919504, 0, 0, 0, 0, 1);

var HealpixTile$ = {
    get_URL: function () {
        if (this._url$1 == null) {
            this._url$1 = this._getUrl$1(this.dataset, this.level, this.tileX, this.tileY);
            return this._url$1;
        } else {
            return this._url$1;
        }
    },

    _computeBoundingSphere$1: function () {
        this._setStep$1();
        this.createGeometry(null);
        var pointList = new Array(this._vertexList$1.length);
        for (var i = 0; i < this._vertexList$1.length; i++) {
            pointList[i] = this._vertexList$1[i].position;
        }
        this._calcSphere$1(pointList);
        this._setCorners$1();
    },

    createGeometry: function (renderContext) {
        if (this._vertexList$1 != null) {
            return true;
        }
        this._vertexList$1 = [];
        this._populateVertexList$1(this._vertexList$1, this._step$1);
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.dataset.get_hipsProperties().get_properties(), 'hips_frame') && this.dataset.get_hipsProperties().get_properties()['hips_frame'] === 'galactic') {
            for (var i = 0; i < this._vertexList$1.length; i++) {
                var vert = this._vertexList$1[i];
                HealpixTile._galacticMatrix$1.multiplyVector(vert.position);
            }
        }
        this.triangleCount = this._step$1 * this._step$1 / 2;
        var ui16array = new Uint16Array(3 * this.triangleCount);
        var indexArray = ui16array;
        if (!this._subDivided$1) {
            try {
                this._vertexBuffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.ARRAY_BUFFER, this._vertexBuffer);
                var f32array = new Float32Array(this._vertexList$1.length * 5);
                var buffer = f32array;
                var index = 0;
                var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._vertexList$1);
                while ($enum1.moveNext()) {
                    var vert = $enum1.current;
                    index = this.addVertex(buffer, index, vert);
                }
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.ARRAY_BUFFER, f32array, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.STATIC_DRAW);
                index = 0;
                var offset = this._vertexList$1.length / (4 * this._step$1);

                //0 0 = left
                //1 0 = top
                //1 1 = right
                this._setIndexBufferForQuadrant$1(indexArray, 0, 1);
                if (this._step$1 > 1) {
                    this._setIndexBufferForQuadrant$1(indexArray, 0, 0);
                    this._setIndexBufferForQuadrant$1(indexArray, 1, 1);
                    this._setIndexBufferForQuadrant$1(indexArray, 1, 0);
                }
            }
            catch (exception) {
            }
        }
        return true;
    },

    _setIndexBufferForQuadrant$1: function (indexArray, x, y) {
        var index = 0;
        for (var i = x * this._step$1 / 2; i < (this._step$1 / 2) * (x + 1); i++) {
            for (var j = y * this._step$1 / 2; j < (this._step$1 / 2) * (y + 1); j++) {
                indexArray[index++] = (i * (this._step$1 + 1) + j);
                indexArray[index++] = (1 + i * (this._step$1 + 1) + j);
                indexArray[index++] = (this._step$1 + 1 + i * (this._step$1 + 1) + j);
                indexArray[index++] = (1 + i * (this._step$1 + 1) + j);
                indexArray[index++] = (this._step$1 + 1 + i * (this._step$1 + 1) + j);
                indexArray[index++] = (this._step$1 + 2 + i * (this._step$1 + 1) + j);
            }
        }
        this._processIndexBuffer$1(indexArray, x * 2 + y);
    },

    _getUrl$1: function (dataset, level, x, y) {
        var extension = this._getHipsFileExtension$1();
        var tileTextureIndex = -1;
        if (!level) {
            tileTextureIndex = this._face$1;
        } else {
            tileTextureIndex = this._face$1 * this._nside$1 * this._nside$1 / 4 + this._tileIndex$1;
        }
        var sb = new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.StringBuilder();
        var subDirIndex = Math.floor(tileTextureIndex / 10000) * 10000;
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format(dataset.get_url(), level.toString(), subDirIndex.toString(), tileTextureIndex.toString() + extension);
    },

    _getHipsFileExtension$1: function () {
        // The extension will contain either a space-separated list of types
        // or a single type. We currently match preferred filetypes
        // greedily. The extension must be exactly ".fits" in order to
        // render correctly -- not only because of the greedy matching here,
        // but because there are other parts of the code that check for an
        // exact match.

        //prioritize transparent Png over other image formats
        if (this.dataset.get_extension().toLowerCase().indexOf('png') > -1) {
            return '.png';
        }
        if (this.dataset.get_extension().toLowerCase().indexOf('jpeg') > -1 || this.dataset.get_extension().toLowerCase().indexOf('jpg') > -1) {
            return '.jpg';
        }
        if (this.dataset.get_extension().toLowerCase().indexOf('tsv') > -1) {
            return '.tsv';
        }
        if (this.dataset.get_extension().toLowerCase().indexOf('fits') > -1) {
            return '.fits';
        }

        //default to most common
        return '.jpg';
    },

    isTileBigEnough: function (renderContext) {
        if (this.dataset.get_dataSetType() === 1) {
            var arcPixels = (180 / (Math.pow(2, this.level) * 4));
            return (renderContext.get_fovScale() < arcPixels);
        } else {
            var arcPixels = (3600 / (Math.pow(2, this.level) * 4));
            return (renderContext.get_fovScale() < arcPixels);
        }
    },

    _boundaries$1: function (x, y, step) {
        var nside = step * Math.pow(2, this.level);
        var points = new Array(4);
        var xyf = Xyf.create(x + this._faceX$1 * step, y + this._faceY$1 * step, this._face$1);
        var dc = 0.5 / nside;
        var xc = (xyf.ix + 0.5) / nside;
        var yc = (xyf.iy + 0.5) / nside;
        points[0] = _fxyf_js__WEBPACK_IMPORTED_MODULE_7__.Fxyf.create(xc + dc, yc + dc, xyf.face).toVec3();
        points[1] = _fxyf_js__WEBPACK_IMPORTED_MODULE_7__.Fxyf.create(xc - dc, yc + dc, xyf.face).toVec3();
        points[2] = _fxyf_js__WEBPACK_IMPORTED_MODULE_7__.Fxyf.create(xc - dc, yc - dc, xyf.face).toVec3();
        points[3] = _fxyf_js__WEBPACK_IMPORTED_MODULE_7__.Fxyf.create(xc + dc, yc - dc, xyf.face).toVec3();
        return points;
    },

    _setCorners$1: function () {
        var xyf = Xyf.create(this.tileX, this.tileY, this._face$1);
        var dc = 0.5 / this._nside$1;
        var xc = (xyf.ix + 0.5) / this._nside$1;
        var yc = (xyf.iy + 0.5) / this._nside$1;
        this.topLeft = _fxyf_js__WEBPACK_IMPORTED_MODULE_7__.Fxyf.create(xc + dc, yc + dc, xyf.face).toVec3();
        this.bottomLeft = _fxyf_js__WEBPACK_IMPORTED_MODULE_7__.Fxyf.create(xc - dc, yc + dc, xyf.face).toVec3();
        this.bottomRight = _fxyf_js__WEBPACK_IMPORTED_MODULE_7__.Fxyf.create(xc - dc, yc - dc, xyf.face).toVec3();
        this.topRight = _fxyf_js__WEBPACK_IMPORTED_MODULE_7__.Fxyf.create(xc + dc, yc - dc, xyf.face).toVec3();
    },

    draw3D: function (renderContext, opacity) {
        if (this.isCatalogTile) {
            this.drawCatalogTile(renderContext, opacity);
            return true;
        }
        this.renderedGeneration = _tile_js__WEBPACK_IMPORTED_MODULE_10__.Tile.currentRenderGeneration;
        _tile_js__WEBPACK_IMPORTED_MODULE_10__.Tile.tilesTouched++;
        this.inViewFrustum = true;
        var onlyDrawChildren = false;
        if (!this.readyToRender) {
            if (!this.errored) {
                (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileCacheAddTileToQueue)(this);
                return false;
            }
            if (this.errored && this.level < 3) {
                //Level 0-2 sometimes deleted in favor of allsky.jpg/tsv
                onlyDrawChildren = true;
            }
            else {
                return false;
            }
        }
        var partCount = this.triangleCount;
        _tile_js__WEBPACK_IMPORTED_MODULE_10__.Tile.trianglesRendered += partCount;
        var anythingToRender = false;
        var childRendered = false;
        var childIndex = 0;
        for (var y1 = 0; y1 < 2; y1++) {
            for (var x1 = 0; x1 < 2; x1++) {
                if (this.level < this.dataset.get_levels()) {
                    if (this.children[childIndex] == null) {
                        this.children[childIndex] = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileCacheGetTile)(this.level + 1, x1, y1, this.dataset, this);
                    }
                    if (this.children[childIndex].isTileInFrustum(renderContext.get_frustum())) {
                        this.inViewFrustum = true;
                        if (this.children[childIndex].isTileBigEnough(renderContext) || onlyDrawChildren) {
                            this.renderChildPart[childIndex].set_targetState(!this.children[childIndex].draw3D(renderContext, opacity));
                            if (this.renderChildPart[childIndex].get_targetState()) {
                                childRendered = true;
                            }
                        }
                        else {
                            this.renderChildPart[childIndex].set_targetState(true);
                        }
                    }
                    else {
                        this.renderChildPart[childIndex].set_targetState(this.renderChildPart[childIndex].set_state(false));
                    }
                }
                else {
                    this.renderChildPart[childIndex].set_state(true);
                }
                if (!!this.renderChildPart[childIndex].get_state()) {
                    anythingToRender = true;
                }
                childIndex++;
            }
        }
        if (childRendered || anythingToRender) {
            this.renderedAtOrBelowGeneration = _tile_js__WEBPACK_IMPORTED_MODULE_10__.Tile.currentRenderGeneration;
            if (this.parent != null) {
                this.parent.renderedAtOrBelowGeneration = this.renderedAtOrBelowGeneration;
            }
        }
        if (!anythingToRender) {
            return true;
        }
        if (!this.createGeometry(renderContext)) {
            return false;
        }
        if (onlyDrawChildren) {
            return true;
        }
        _tile_js__WEBPACK_IMPORTED_MODULE_10__.Tile.tilesInView++;
        for (var i = 0; i < 4; i++) {
            if (this.renderChildPart[i].get_targetState()) {
                this.renderPart(renderContext, i, opacity / 100, false);
            }
        }
        return true;
    },

    drawCatalogTile: function (renderContext, opacity) {
        this.renderedGeneration = _tile_js__WEBPACK_IMPORTED_MODULE_10__.Tile.currentRenderGeneration;
        _tile_js__WEBPACK_IMPORTED_MODULE_10__.Tile.tilesTouched++;
        this.inViewFrustum = true;
        var onlyDrawChildren = false;
        if (!this.readyToRender) {
            if (!this.errored) {
                (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileCacheAddTileToQueue)(this);
                return;
            }
            if (this.errored && this.level < 3) {
                //Level 0-2 sometimes deleted in favor of allsky.jpg/tsv
                onlyDrawChildren = true;
            }
            else {
                return;
            }
        }
        var anyChildInFrustum = false;
        var childIndex = 0;
        for (var y1 = 0; y1 < 2; y1++) {
            for (var x1 = 0; x1 < 2; x1++) {
                if (this.level < this.dataset.get_levels()) {
                    if (this.children[childIndex] == null) {
                        this.children[childIndex] = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileCacheGetTile)(this.level + 1, x1, y1, this.dataset, this);
                    }
                    if (this.children[childIndex].isTileInFrustum(renderContext.get_frustum())) {
                        this.inViewFrustum = true;
                        anyChildInFrustum = true;
                        if (this.children[childIndex].isTileBigEnough(renderContext) || onlyDrawChildren) {
                            (this.children[childIndex]).drawCatalogTile(renderContext, opacity);
                        }
                        else {
                            (this.children[childIndex]).removeCatalogTile();
                        }
                    }
                    else {
                        (this.children[childIndex]).removeCatalogTile();
                    }
                }
                childIndex++;
            }
        }
        if (!this.level && !anyChildInFrustum && !onlyDrawChildren) {
            this.removeCatalogTile();
        } else if (anyChildInFrustum) {
            _tile_js__WEBPACK_IMPORTED_MODULE_10__.Tile.tilesInView++;
            this._addCatalogTile$1();
        }
    },

    removeCatalogTile: function () {
        this.dataset.get_hipsProperties().get_catalogSpreadSheetLayer().removeTileRows(this.get_key(), this._catalogRows$1);
    },

    _addCatalogTile$1: function () {
        this.dataset.get_hipsProperties().get_catalogSpreadSheetLayer().addTileRows(this.get_key(), this._catalogRows$1);
    },

    _extractCatalogTileRows$1: function () {
        var headerRemoved = false;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._catalogData$1.getText().split('\n'));
        while ($enum1.moveNext()) {
            var line = $enum1.current;
            if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.startsWith(line, '#') && !headerRemoved) {
                headerRemoved = true;
                continue;
            }
            if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.startsWith(line, '#')) {
                var rowData = _ui_tools_js__WEBPACK_IMPORTED_MODULE_9__.UiTools.splitString(line, this.dataset.get_hipsProperties().get_catalogSpreadSheetLayer().get__table().delimiter);
                this._catalogRows$1.push(rowData);
            }
        }
    },

    getDataInView: function (renderContext, limit, catalogSpreadSheetLayer) {
        if (!this.readyToRender) {
            if (!this.errored) {
                this.requestImage();
                if (limit) {
                    return false;
                }
            }
            else if (this.level >= 3) {
                //Level 0-2 sometimes deleted in favor of allsky.jpg/tsv
                return true;
            }
        }
        var allChildrenReady = true;
        var anyChildInFrustum = false;
        var childIndex = 0;
        for (var y1 = 0; y1 < 2; y1++) {
            for (var x1 = 0; x1 < 2; x1++) {
                if (this.level < this.dataset.get_levels()) {
                    if (this.children[childIndex] == null) {
                        this.children[childIndex] = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileCacheGetTile)(this.level + 1, x1, y1, this.dataset, this);
                    }
                    if (this.children[childIndex].isTileInFrustum(renderContext.get_frustum())) {
                        anyChildInFrustum = true;
                        allChildrenReady = allChildrenReady && (this.children[childIndex]).getDataInView(renderContext, limit, catalogSpreadSheetLayer);
                    }
                }
                childIndex++;
            }
        }
        if (anyChildInFrustum) {
            catalogSpreadSheetLayer.addTileRows(this.get_key(), this._catalogRows$1);
        }
        return allChildrenReady && !this.downloading;
    },

    _setStep$1: function () {
        if (this.isCatalogTile) {
            this._step$1 = 2;
        } else {
            switch (this.level) {
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                    this._step$1 = 16;
                    break;
                case 5:
                    this._step$1 = 8;
                    break;
                case 6:
                    this._step$1 = 4;
                    break;
                default:
                    this._step$1 = 2;
                    break;
            }
        }
    },

    requestImage: function () {
        if (this.isCatalogTile) {
            if (!this.downloading && !this.readyToRender) {
                this.downloading = true;
                this._catalogData$1 = new _web_file_js__WEBPACK_IMPORTED_MODULE_8__.WebFile(this.get_URL());
                this._catalogData$1.onStateChange = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_loadCatalogData$1', this);
                this._catalogData$1.send();
            }
        } else {
            _tile_js__WEBPACK_IMPORTED_MODULE_10__.Tile.prototype.requestImage.call(this);
        }
    },

    _loadCatalogData$1: function () {
        if (this._catalogData$1.get_state() === 2) {
            this.requestPending = false;
            this.downloading = false;
            this.errored = true;
            (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileCacheRemoveFromQueue)(this.get_key(), true);
        } else if (this._catalogData$1.get_state() === 1) {
            this._extractCatalogTileRows$1();
            this.texReady = true;
            this.downloading = false;
            this.errored = false;
            this.readyToRender = true;
            this.requestPending = false;
            (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileCacheRemoveFromQueue)(this.get_key(), true);
        }
    },

    getIndexBuffer: function (index, accomidation) {
        return this.indexBuffer[index];
    },

    _calcSphere$1: function (list) {
        var result = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.ConvexHull.findEnclosingSphere(list);
        this.sphereCenter = result.center;
        this.sphereRadius = result.radius;
    },

    isPointInTile: function (lat, lng) {
        if (!this.level) {
            return true;
        }
        if (this.level === 1) {
            if ((lng >= 0 && lng <= 90) && (!this.tileX && this.tileY === 1)) {
                return true;
            }
            if ((lng > 90 && lng <= 180) && (this.tileX === 1 && this.tileY === 1)) {
                return true;
            }
            if ((lng < 0 && lng >= -90) && (!this.tileX && !this.tileY)) {
                return true;
            }
            if ((lng < -90 && lng >= -180) && (this.tileX === 1 && !this.tileY)) {
                return true;
            }
        }
        var testPoint = _coordinates_js__WEBPACK_IMPORTED_MODULE_6__.Coordinates.geoTo3dDouble(lat, lng);
        var top = this._isLeftOfHalfSpace$1(this.topLeft, this.topRight, testPoint);
        var right = this._isLeftOfHalfSpace$1(this.topRight, this.bottomRight, testPoint);
        var bottom = this._isLeftOfHalfSpace$1(this.bottomRight, this.bottomLeft, testPoint);
        var left = this._isLeftOfHalfSpace$1(this.bottomLeft, this.topLeft, testPoint);
        if (top && right && bottom && left) {
            return true;
        }
        return false;
    },

    _isLeftOfHalfSpace$1: function (pntA, pntB, pntTest) {
        pntA.normalize();
        pntB.normalize();
        var cross = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.cross(pntA, pntB);
        var dot = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.dot(cross, pntTest);
        return dot > 0;
    },

    getSurfacePointAltitude: function (lat, lng, meters) {
        if (this.level < _tile_js__WEBPACK_IMPORTED_MODULE_10__.Tile.lastDeepestLevel) {
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.children);
            while ($enum1.moveNext()) {
                var child = $enum1.current;
                if (child != null) {
                    if (child.isPointInTile(lat, lng)) {
                        var retVal = child.getSurfacePointAltitude(lat, lng, meters);
                        if (!!retVal) {
                            return retVal;
                        }
                        else {
                            break;
                        }
                    }
                }
            }
        }
        return this._getAltitudeFromLatLng$1(lat, lng, meters);
    },

    _getAltitudeFromLatLng$1: function (lat, lng, meters) {
        var testPoint = _coordinates_js__WEBPACK_IMPORTED_MODULE_6__.Coordinates.geoTo3dDouble(lat, lng);
        var uv = _util_js__WEBPACK_IMPORTED_MODULE_4__.DistanceCalc.getUVFromInnerPoint(this.topLeft, this.topRight, this.bottomLeft, this.bottomRight, testPoint);

        // Get 4 samples and interpolate
        var uud = Math.max(0, Math.min(16, (uv.x * 16)));
        var vvd = Math.max(0, Math.min(16, (uv.y * 16)));
        var uu = Math.max(0, Math.min(15, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((uv.x * 16))));
        var vv = Math.max(0, Math.min(15, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((uv.y * 16))));
        var ha = uud - uu;
        var va = vvd - vv;
        if (this.demArray != null) {
            // 4 nearest neighbors
            var ul = this.demArray[uu + 17 * vv];
            var ur = this.demArray[(uu + 1) + 17 * vv];
            var ll = this.demArray[uu + 17 * (vv + 1)];
            var lr = this.demArray[(uu + 1) + 17 * (vv + 1)];
            var top = ul * (1 - ha) + ha * ur;
            var bottom = ll * (1 - ha) + ha * lr;
            var val = top * (1 - va) + va * bottom;
            return val / ((meters) ? 1 : this.get__demScaleFactor());
        }
        return this.demAverage / ((meters) ? 1 : this.get__demScaleFactor());
    },

    _processIndexBuffer$1: function (indexArray, part) {
        this.indexBuffer[part] = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.ELEMENT_ARRAY_BUFFER, this.indexBuffer[part]);
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.ELEMENT_ARRAY_BUFFER, indexArray, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.STATIC_DRAW);
    },

    cleanUp: function (removeFromParent) {
        _tile_js__WEBPACK_IMPORTED_MODULE_10__.Tile.prototype.cleanUp.call(this, removeFromParent);
        this._returnBuffers$1();
        this._subDivided$1 = false;
    },

    _returnBuffers$1: function () {
        if (this._vertexList$1 != null) {
            this._vertexList$1 = null;
        }
    },

    // Vertices distributed in a grid pattern like the example below
    // Example for pattern with step set to 4
    //            24
    //          19  23
    //       14   18  22
    //      9   13  17  21
    //    4   8   12  16  20
    //      3   7   11  15
    //        2   6   10
    //          1   5
    //            0
    _populateVertexList$1: function (vertexList, step) {
        for (var i = 0; i < step; i += 2) {
            for (var j = 0; j < step; j += 2) {
                var points = this._boundaries$1(j, i, step);
                vertexList[i * (step + 1) + j] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(points[2], (1 / step) * i, (1 / step) * j);
                vertexList[i * (step + 1) + j + 1] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(points[3], (1 / step) * i, (1 / step) + (1 / step) * j);
                vertexList[(i + 1) * (step + 1) + j] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(points[1], (1 / step) + (1 / step) * i, (1 / step) * j);
                vertexList[(i + 1) * (step + 1) + j + 1] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(points[0], (1 / step) + (1 / step) * i, (1 / step) + (1 / step) * j);
                if (j + 2 >= step && step > 1) {
                    j = step - 1;
                    points = this._boundaries$1(j, i, step);
                    vertexList[i * (step + 1) + step] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(points[3], (1 / step) * i, (1 / step) + (1 / step) * j);
                    vertexList[(i + 1) * (step + 1) + step] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(points[0], (1 / step) + (1 / step) * i, (1 / step) + (1 / step) * j);
                }
            }
        }
        if (step > 1) {
            this._vertexOfLastRow$1(vertexList, step);
        }
    },

    _vertexOfLastRow$1: function (vertexList, step) {
        var i = step - 1;
        for (var j = 0; j < step; j += 2) {
            var points = this._boundaries$1(j, i, step);
            vertexList[(i + 1) * (step + 1) + j] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(points[1], (1 / step) + (1 / step) * i, (1 / step) * j);
            vertexList[(i + 1) * (step + 1) + j + 1] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(points[0], (1 / step) + (1 / step) * i, (1 / step) + (1 / step) * j);
            if (j + 2 >= step) {
                j = step - 1;
                points = this._boundaries$1(j, i, step);
                vertexList[(i + 1) * (step + 1) + step] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(points[0], (1 / step) + (1 / step) * i, (1 / step) + (1 / step) * j);
            }
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("HealpixTile", [HealpixTile, HealpixTile$, _tile_js__WEBPACK_IMPORTED_MODULE_10__.Tile]);


/***/ }),

/***/ "./esm/healpix_utils.js":
/*!******************************!*\
  !*** ./esm/healpix_utils.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HealpixUtils: () => (/* binding */ HealpixUtils)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _fast_math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fast_math.js */ "./esm/fast_math.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Utilities relating to HEALPix.





// wwtlib.HealpixUtils

function HealpixUtils() { }

HealpixUtils.check = function (cond, errtxt) {
    if (!cond) {
        throw new Error(errtxt);
    }
};

// Integer square root.
HealpixUtils.isqrt = function (arg) {
    var res = Math.sqrt((arg) + 0.5);
    if (arg < (1 << 50)) {
        return res;
    }
    if (res * res > arg) {
        --res;
    }
    else if ((res + 1) * (res + 1) <= arg) {
        ++res;
    }
    return res;
};

// Computes the cosine of the angular distance between two z, phi positions on
// the unit sphere
HealpixUtils.cosdist_zphi = function (z1, phi1, z2, phi2) {
    return z1 * z2 + _fast_math_js__WEBPACK_IMPORTED_MODULE_1__.FastMath.cos(phi1 - phi2) * Math.sqrt((1 - z1 * z1) * (1 - z2 * z2));
};

HealpixUtils.fmodulo = function (v1, v2) {
    if (v1 >= 0) {
        return (v1 < v2) ? v1 : v1 % v2;
    }
    var tmp = v1 % v2 + v2;
    return (tmp === v2) ? 0 : tmp;
};

var HealpixUtils$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("HealpixUtils", [HealpixUtils, HealpixUtils$, null]);


/***/ }),

/***/ "./esm/hips_properties.js":
/*!********************************!*\
  !*** ./esm/hips_properties.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HipsProperties: () => (/* binding */ HipsProperties)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _web_file_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./web_file.js */ "./esm/web_file.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util.js */ "./esm/util.js");
/* harmony import */ var _layers_spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./layers/spreadsheet_layer.js */ "./esm/layers/spreadsheet_layer.js");
/* harmony import */ var _layers_vo_table_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./layers/vo_table.js */ "./esm/layers/vo_table.js");
/* harmony import */ var _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./layers/layer_manager.js */ "./esm/layers/layer_manager.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Summary properties about HiPS datasets.











// wwtlib.HipsProperties

function HipsProperties(dataset) {
    this._properties = {};
    this._catalogColumnInfo = null;
    this._catalogSpreadSheetLayer = new _layers_spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_5__.CatalogSpreadSheetLayer();
    this._downloadComplete = false;
    this.dataset = dataset;
    this._datasetName = dataset.get_name();
    this._url = dataset.get_url();
    if (this._url.toLowerCase().indexOf('norder') > -1) {
        this._url = this._url.substring(0, this._url.toLowerCase().indexOf('norder'));
    }
    this._url += 'properties';
    this._download();
}

var HipsProperties$ = {
    get_properties: function () {
        return this._properties;
    },

    get_catalogSpreadSheetLayer: function () {
        return this._catalogSpreadSheetLayer;
    },

    set_catalogSpreadSheetLayer: function (value) {
        this._catalogSpreadSheetLayer = value;
        return value;
    },

    get_catalogColumnInfo: function () {
        return this._catalogColumnInfo;
    },

    set_catalogColumnInfo: function (value) {
        this._catalogColumnInfo = value;
        return value;
    },

    get_downloadComplete: function () {
        return this._downloadComplete;
    },

    _download: function () {
        this._webFile = new _web_file_js__WEBPACK_IMPORTED_MODULE_3__.WebFile(this._url);
        this._webFile.onStateChange = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_onPropertiesDownloadComplete', this);
        this._webFile.send();
    },

    _onPropertiesDownloadComplete: function () {
        if (this._webFile.get_state() === 1) {
            this._parseProperties(this._webFile.getText());
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.get_properties(), 'dataproduct_type') && this.get_properties()['dataproduct_type'].toLowerCase() === 'catalog') {
                this._catalogColumnInfo = _layers_vo_table_js__WEBPACK_IMPORTED_MODULE_6__.VoTable.loadFromUrl(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(this._url, '/properties', '/metadata.xml'), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_onCatalogMetadataDownloadComplete', this));
            }
            else {
                if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.get_properties(), 'hips_data_range')) {
                    var hips_data_range = this.get_properties()['hips_data_range'];
                    this.dataset.get_fitsProperties().minVal = parseFloat(hips_data_range.split(' ')[0]);
                    this.dataset.get_fitsProperties().maxVal = parseFloat(hips_data_range.split(' ')[1]);
                    this.dataset.get_fitsProperties().lowerCut = this.dataset.get_fitsProperties().minVal;
                    this.dataset.get_fitsProperties().upperCut = this.dataset.get_fitsProperties().maxVal;
                }
                if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.get_properties(), 'hips_pixel_cut')) {
                    var hips_pixel_cut = this.get_properties()['hips_pixel_cut'];
                    this.dataset.get_fitsProperties().lowerCut = parseFloat(hips_pixel_cut.split(' ')[0]);
                    this.dataset.get_fitsProperties().upperCut = parseFloat(hips_pixel_cut.split(' ')[1]);
                    if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.get_properties(), 'hips_data_range')) {
                        this.dataset.get_fitsProperties().minVal = this.dataset.get_fitsProperties().lowerCut;
                        this.dataset.get_fitsProperties().maxVal = this.dataset.get_fitsProperties().upperCut;
                    }
                }
                this._downloadComplete = true;
                if (this._onDownloadComplete != null) {
                    this._onDownloadComplete();
                }
            }
        }
    },

    _onCatalogMetadataDownloadComplete: function () {
        this._catalogSpreadSheetLayer.useHeadersFromVoTable(this._catalogColumnInfo);
        this._catalogSpreadSheetLayer.set_name(this._datasetName);
        this._catalogSpreadSheetLayer.id = _util_js__WEBPACK_IMPORTED_MODULE_4__.Guid.createFrom(this._datasetName);
        _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_7__.LayerManager.addSpreadsheetLayer(this.get_catalogSpreadSheetLayer(), 'Sky');
        this._downloadComplete = true;
        if (this._onDownloadComplete != null) {
            this._onDownloadComplete();
        }
    },

    setDownloadCompleteListener: function (listener) {
        this._onDownloadComplete = listener;
    },

    _parseProperties: function (data) {
        var lines = data.split('\n');
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(lines);
        while ($enum1.moveNext()) {
            var line = $enum1.current;
            if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.whitespace(line) && !_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.startsWith(line, '#')) {
                var parts = line.split('=');
                if (parts.length === 2) {
                    var key = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(parts[0]);
                    var val = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(parts[1]);
                    if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.whitespace(key) && !_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.whitespace(val)) {
                        this.get_properties()[key] = val;
                    }
                }
            }
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("HipsProperties", [HipsProperties, HipsProperties$, null]);

(0,_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.set_makeNewHipsProperties)(function (imageset) {
    return new HipsProperties(imageset);
});



/***/ }),

/***/ "./esm/hploc.js":
/*!**********************!*\
  !*** ./esm/hploc.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Hploc: () => (/* binding */ Hploc)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _fast_math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fast_math.js */ "./esm/fast_math.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A HEALPix location type.






// wwtlib.Hploc

function Hploc() {
    this.z = 0;
    this.phi = 0;
    this.sth = 0;
    this.have_sth = false;
}

Hploc.create = function (v) {
    var temp = new Hploc();
    var xl = 1 / v.length();
    temp.z = v.z * xl;
    temp.phi = _fast_math_js__WEBPACK_IMPORTED_MODULE_2__.FastMath.atan2(v.y, v.x);
    if (Math.abs(temp.z) > 0.99) {
        temp.sth = Math.sqrt(v.x * v.x + v.y * v.y) * xl;
        temp.have_sth = true;
    }
    return temp;
};

var Hploc$ = {
    toVec3: function () {
        var st;
        if (this.have_sth) {
            st = this.sth;
        } else {
            st = Math.sqrt((1 - this.z) * (1 + this.z));
        }
        var x = st * _fast_math_js__WEBPACK_IMPORTED_MODULE_2__.FastMath.cos(this.phi);
        var y = st * _fast_math_js__WEBPACK_IMPORTED_MODULE_2__.FastMath.sin(this.phi);
        return _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.create(x, this.z, y);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Hploc", [Hploc, Hploc$, null]);


/***/ }),

/***/ "./esm/imageset.js":
/*!*************************!*\
  !*** ./esm/imageset.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BandPass: () => (/* binding */ BandPass),
/* harmony export */   ImageSetType: () => (/* binding */ ImageSetType),
/* harmony export */   Imageset: () => (/* binding */ Imageset),
/* harmony export */   ProjectionType: () => (/* binding */ ProjectionType)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interfaces.js */ "./esm/interfaces.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./coordinates.js */ "./esm/coordinates.js");
/* harmony import */ var _fits_properties_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./fits_properties.js */ "./esm/fits_properties.js");
/* harmony import */ var _layers_fits_image_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./layers/fits_image.js */ "./esm/layers/fits_image.js");
/* harmony import */ var _equirectangular_tile_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./equirectangular_tile.js */ "./esm/equirectangular_tile.js");
/* harmony import */ var _healpix_tile_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./healpix_tile.js */ "./esm/healpix_tile.js");
/* harmony import */ var _mercator_tile_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./mercator_tile.js */ "./esm/mercator_tile.js");
/* harmony import */ var _plot_tile_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./plot_tile.js */ "./esm/plot_tile.js");
/* harmony import */ var _tangent_tile_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./tangent_tile.js */ "./esm/tangent_tile.js");
/* harmony import */ var _sky_image_tile_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./sky_image_tile.js */ "./esm/sky_image_tile.js");
/* harmony import */ var _toast_tile_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./toast_tile.js */ "./esm/toast_tile.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// An image tile pyramid.




















// wwtlib.ProjectionType
//
// This was originally defined in `IImageset.cs`, not `Imageset.cs`, but we've
// folded it into this file.

var ProjectionType = {
    mercator: 0,
    equirectangular: 1,
    tangent: 2,
    tan: 2,
    toast: 3,
    spherical: 4,
    skyImage: 5,
    plotted: 6,
    healpix: 7
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ProjectionType", ProjectionType);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("ProjectionType", ProjectionType);


// wwtlib.ImageSetType
//
// This was originally defined in `IImageset.cs`, not `Imageset.cs`, but we've
// folded it into this file.

var ImageSetType = {
    earth: 0,
    planet: 1,
    sky: 2,
    panorama: 3,
    solarSystem: 4,
    sandbox: 5
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ImageSetType", ImageSetType);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("ImageSetType", ImageSetType);


// wwtlib.BandPass
//
// This was originally defined in `IImageset.cs`, not `Imageset.cs`, but we've
// folded it into this file.

var BandPass = {
    gamma: 0,
    xRay: 1,
    ultraviolet: 2,
    visible: 3,
    hydrogenAlpha: 4,
    IR: 4,
    microwave: 5,
    radio: 6,
    visibleNight: 6
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("BandPass", BandPass);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("BandPass", BandPass);


// wwtlib.Imageset

function Imageset() {
    this._projection = 0;
    this._imageSetID = 0;
    this._baseTileDegrees = 0;
    this._widthFactor = 1;
    this.demUrl = '';
    this._levels = 0;
    this._mercator = false;
    this._bottomsUp = false;
    this._baseLevel = 1;
    this._quadTreeTileMap = '0123';
    this._centerX = 0;
    this._centerY = 0;
    this._rotation = 0;
    this._meanRadius = 0;
    this._dataSetType = 0;
    this._bandPass = 3;
    this._altUrl = '';
    this._singleImage = false;
    this._fitsProperties = new _fits_properties_js__WEBPACK_IMPORTED_MODULE_8__.FitsProperties();
    this._matrixComputed = false;
    this._name = '';
    this._sparse = false;
    this._thumbnailUrl = '';
    this._generic = false;
    this._defaultSet = false;
    this._elevationModel = false;
    this._offsetX = 0;
    this._offsetY = 0;
}

Imageset.getNewTile = function (imageset, level, x, y, parent) {
    // Note: "spherical" projection type not handled in the WebGL engine.
    switch (imageset.get_projection()) {
        case ProjectionType.mercator:
            var newTile = _mercator_tile_js__WEBPACK_IMPORTED_MODULE_12__.MercatorTile.create(level, x, y, imageset, parent);
            return newTile;
        case ProjectionType.equirectangular:
            return _equirectangular_tile_js__WEBPACK_IMPORTED_MODULE_10__.EquirectangularTile.create(level, x, y, imageset, parent);
        case ProjectionType.toast:
        default:
            return _toast_tile_js__WEBPACK_IMPORTED_MODULE_16__.ToastTile.create(level, x, y, imageset, parent);
        case ProjectionType.skyImage:
            return new _sky_image_tile_js__WEBPACK_IMPORTED_MODULE_15__.SkyImageTile(level, x, y, imageset, parent);
        case ProjectionType.plotted:
            return _plot_tile_js__WEBPACK_IMPORTED_MODULE_13__.PlotTile.create(level, x, y, imageset, parent);
        case ProjectionType.healpix:
            if (imageset.get_hipsProperties() == null) {
                imageset.set_hipsProperties((0,_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.makeNewHipsProperties)(imageset));
            }
            if (imageset.get_hipsProperties().get_downloadComplete()) {
                return new _healpix_tile_js__WEBPACK_IMPORTED_MODULE_11__.HealpixTile(level, x, y, imageset, parent);
            }
            else {
                return null;
            }
        case ProjectionType.tangent:
            var newTile = new _tangent_tile_js__WEBPACK_IMPORTED_MODULE_14__.TangentTile(level, x, y, imageset, parent);
            return newTile;
    }
};

Imageset.fromXMLNode = function (node) {
    try {
        var type = 2;
        var projection = 2;
        if (node.attributes.getNamedItem('DataSetType') != null) {
            type = _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('ImageSetType', node.attributes.getNamedItem('DataSetType').nodeValue);
        }
        var bandPass = 3;
        bandPass = _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('BandPass', node.attributes.getNamedItem('BandPass').nodeValue);
        var wf = 1;
        if (node.attributes.getNamedItem('WidthFactor') != null) {
            wf = parseInt(node.attributes.getNamedItem('WidthFactor').nodeValue);
        }
        if (node.attributes.getNamedItem('Generic') == null || !_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('Generic').nodeValue)) {
            projection = _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('ProjectionType', node.attributes.getNamedItem('Projection').nodeValue);
            var fileType = node.attributes.getNamedItem('FileType').nodeValue;
            if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.startsWith(fileType, '.')) {
                fileType = '.' + fileType;
            }
            var thumbnailUrl = '';
            var thumbUrl = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(node, 'ThumbnailUrl');
            if (thumbUrl != null) {
                if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(thumbUrl.text)) {
                    var cn = thumbUrl;
                    thumbnailUrl = cn.textContent;
                }
                else {
                    thumbnailUrl = thumbUrl.text;
                }
            }
            var stockSet = false;
            var elevationModel = false;
            if (node.attributes.getNamedItem('StockSet') != null) {
                stockSet = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('StockSet').nodeValue);
            }
            if (node.attributes.getNamedItem('ElevationModel') != null) {
                elevationModel = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('ElevationModel').nodeValue);
            }
            var demUrl = '';
            if (node.attributes.getNamedItem('DemUrl') != null) {
                demUrl = node.attributes.getNamedItem('DemUrl').nodeValue;
            }
            var alturl = '';
            if (node.attributes.getNamedItem('AltUrl') != null) {
                alturl = node.attributes.getNamedItem('AltUrl').nodeValue;
            }
            var offsetX = 0;
            if (node.attributes.getNamedItem('OffsetX') != null) {
                offsetX = parseFloat(node.attributes.getNamedItem('OffsetX').nodeValue);
            }
            var offsetY = 0;
            if (node.attributes.getNamedItem('OffsetY') != null) {
                offsetY = parseFloat(node.attributes.getNamedItem('OffsetY').nodeValue);
            }
            var creditText = '';
            var credits = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(node, 'Credits');
            if (credits != null) {
                creditText = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.getInnerText(credits);
            }
            var creditsUrl = '';
            credits = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(node, 'CreditsUrl');
            if (credits != null) {
                creditsUrl = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.getInnerText(credits);
            }
            var meanRadius = 0;
            if (node.attributes.getNamedItem('MeanRadius') != null) {
                meanRadius = parseFloat(node.attributes.getNamedItem('MeanRadius').nodeValue);
            }
            var referenceFrame = null;
            if (node.attributes.getNamedItem('ReferenceFrame') != null) {
                referenceFrame = node.attributes.getNamedItem('ReferenceFrame').nodeValue;
            }
            var name = '';
            if (node.attributes.getNamedItem('Name') != null) {
                name = node.attributes.getNamedItem('Name').nodeValue;
            }
            var url = '';
            if (node.attributes.getNamedItem('Url') != null) {
                url = node.attributes.getNamedItem('Url').nodeValue;
            }
            var baseTileLevel = 0;
            if (node.attributes.getNamedItem('BaseTileLevel') != null) {
                baseTileLevel = parseInt(node.attributes.getNamedItem('BaseTileLevel').nodeValue);
            }
            var tileLevels = 0;
            if (node.attributes.getNamedItem('TileLevels') != null) {
                tileLevels = parseInt(node.attributes.getNamedItem('TileLevels').nodeValue);
            }
            var baseDegreesPerTile = 0;
            if (node.attributes.getNamedItem('BaseDegreesPerTile') != null) {
                baseDegreesPerTile = parseFloat(node.attributes.getNamedItem('BaseDegreesPerTile').nodeValue);
            }
            var bottomsUp = false;
            if (node.attributes.getNamedItem('BottomsUp') != null) {
                bottomsUp = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('BottomsUp').nodeValue);
            }
            var quadTreeMap = '';
            if (node.attributes.getNamedItem('QuadTreeMap') != null) {
                quadTreeMap = node.attributes.getNamedItem('QuadTreeMap').nodeValue;
            }
            var centerX = 0;
            if (node.attributes.getNamedItem('CenterX') != null) {
                centerX = parseFloat(node.attributes.getNamedItem('CenterX').nodeValue);
            }
            var centerY = 0;
            if (node.attributes.getNamedItem('CenterY') != null) {
                centerY = parseFloat(node.attributes.getNamedItem('CenterY').nodeValue);
            }
            var rotation = 0;
            if (node.attributes.getNamedItem('Rotation') != null) {
                rotation = parseFloat(node.attributes.getNamedItem('Rotation').nodeValue);
            }
            var sparse = false;
            if (node.attributes.getNamedItem('Sparse') != null) {
                sparse = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('Sparse').nodeValue);
            }
            return Imageset.create(name, url, type, bandPass, projection, Math.abs(_baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.getHashCode(url)), baseTileLevel, tileLevels, 256, baseDegreesPerTile, fileType, bottomsUp, quadTreeMap, centerX, centerY, rotation, sparse, thumbnailUrl, stockSet, elevationModel, wf, offsetX, offsetY, creditText, creditsUrl, demUrl, alturl, meanRadius, referenceFrame);
        } else {
            return Imageset.createGeneric(type, bandPass);
        }
    }
    catch ($e1) {
        return null;
    }
};

Imageset.saveToXml = function (xmlWriter, imageset, alternateUrl) {
    xmlWriter._writeStartElement('ImageSet');
    xmlWriter._writeAttributeString('Generic', imageset.get_generic().toString());
    xmlWriter._writeAttributeString('DataSetType', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('ImageSetType', imageset.get_dataSetType()));
    xmlWriter._writeAttributeString('BandPass', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('BandPass', imageset.get_bandPass()));
    if (!imageset.get_generic()) {
        xmlWriter._writeAttributeString('Name', imageset.get_name());
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(alternateUrl)) {
            xmlWriter._writeAttributeString('Url', imageset.get_url());
        } else {
            xmlWriter._writeAttributeString('Url', alternateUrl);
        }
        xmlWriter._writeAttributeString('DemUrl', imageset.get_demUrl());
        xmlWriter._writeAttributeString('BaseTileLevel', imageset.get_baseLevel().toString());
        xmlWriter._writeAttributeString('TileLevels', imageset.get_levels().toString());
        xmlWriter._writeAttributeString('BaseDegreesPerTile', imageset.get_baseTileDegrees().toString());
        xmlWriter._writeAttributeString('FileType', imageset.get_extension());
        xmlWriter._writeAttributeString('BottomsUp', imageset.get_bottomsUp().toString());
        xmlWriter._writeAttributeString('Projection', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('ProjectionType', imageset.get_projection()));
        xmlWriter._writeAttributeString('QuadTreeMap', imageset.get_quadTreeTileMap());
        xmlWriter._writeAttributeString('CenterX', imageset.get_centerX().toString());
        xmlWriter._writeAttributeString('CenterY', imageset.get_centerY().toString());
        xmlWriter._writeAttributeString('OffsetX', imageset.get_offsetX().toString());
        xmlWriter._writeAttributeString('OffsetY', imageset.get_offsetY().toString());
        xmlWriter._writeAttributeString('Rotation', imageset.get_rotation().toString());
        xmlWriter._writeAttributeString('Sparse', imageset.get_sparse().toString());
        xmlWriter._writeAttributeString('ElevationModel', imageset.get_elevationModel().toString());
        xmlWriter._writeAttributeString('StockSet', imageset.get_defaultSet().toString());
        xmlWriter._writeAttributeString('WidthFactor', imageset.get_widthFactor().toString());
        xmlWriter._writeAttributeString('MeanRadius', imageset.get_meanRadius().toString());
        xmlWriter._writeAttributeString('ReferenceFrame', imageset.get_referenceFrame());
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(alternateUrl)) {
            xmlWriter._writeElementString('ThumbnailUrl', imageset.get_thumbnailUrl());
        } else {
            xmlWriter._writeElementString('ThumbnailUrl', imageset.get_url());
        }
    }
    xmlWriter._writeEndElement();
};

Imageset.createGeneric = function (dataSetType, bandPass) {
    var temp = new Imageset();
    temp._generic = true;
    temp._name = 'Generic';
    temp._sparse = false;
    temp._dataSetType = dataSetType;
    temp._bandPass = bandPass;
    temp._quadTreeTileMap = '';
    temp.url = '';
    temp._levels = 0;
    temp._baseTileDegrees = 0;
    temp._imageSetID = 0;
    temp._extension = '';
    temp._projection = 1;
    temp._bottomsUp = false;
    temp._baseLevel = 0;
    temp._mercator = (!temp._projection);
    temp._centerX = 0;
    temp._centerY = 0;
    temp._rotation = 0;
    temp._thumbnailUrl = '';
    temp._matrix = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.get_identity();
    temp._matrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationX((temp.get_rotation() / 180 * Math.PI)));
    temp._matrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationZ((temp.get_centerY() / 180 * Math.PI)));
    temp._matrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationY((((360 - temp.get_centerX()) + 180) / 180 * Math.PI)));
    return temp;
};

Imageset.create = function (name, url, dataSetType, bandPass, projection, imageSetID, baseLevel, levels, tileSize, baseTileDegrees, extension, bottomsUp, quadTreeMap, centerX, centerY, rotation, sparse, thumbnailUrl, defaultSet, elevationModel, wf, offsetX, offsetY, credits, creditsUrl, demUrlIn, alturl, meanRadius, referenceFrame) {
    var temp = new Imageset();
    temp.setInitialParameters(name, url, dataSetType, bandPass, projection, imageSetID, baseLevel, levels, baseTileDegrees, extension, bottomsUp, quadTreeMap, centerX, centerY, rotation, sparse, thumbnailUrl, defaultSet, elevationModel, wf, offsetX, offsetY, credits, creditsUrl, demUrlIn, alturl, meanRadius, referenceFrame);
    return temp;
};

var Imageset$ = {
    get_wcsImage: function () {
        return this._wcsImage;
    },

    set_wcsImage: function (value) {
        this._wcsImage = value;
        return value;
    },

    get_projection: function () {
        return this._projection;
    },

    set_projection: function (value) {
        this._projection = value;
        return value;
    },

    get_referenceFrame: function () {
        return this._referenceFrame;
    },

    set_referenceFrame: function (value) {
        this._referenceFrame = value;
        return value;
    },

    get_imageSetID: function () {
        return this._imageSetID;
    },

    set_imageSetID: function (value) {
        this._imageSetID = value;
        return value;
    },

    get_baseTileDegrees: function () {
        return this._baseTileDegrees;
    },

    set_baseTileDegrees: function (value) {
        this._baseTileDegrees = value;
        return value;
    },

    get_widthFactor: function () {
        return this._widthFactor;
    },

    set_widthFactor: function (value) {
        this._widthFactor = value;
        return value;
    },

    getHashCode: function () {
        return _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.getHashCode(this.get_url());
    },

    get_url: function () {
        return this.url;
    },

    set_url: function (value) {
        this.url = value;
        return value;
    },

    get_demUrl: function () {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this.demUrl) && !this._projection && !_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.freestandingMode) {
            return _url_helpers_js__WEBPACK_IMPORTED_MODULE_6__.URLHelpers.singleton.coreStaticUrl('wwtweb/BingDemTile.aspx?Q={0},{1},{2}');
        }
        return this.demUrl;
    },

    set_demUrl: function (value) {
        this.demUrl = value;
        return value;
    },

    get_extension: function () {
        return this._extension;
    },

    set_extension: function (value) {
        this._extension = value;
        return value;
    },

    get_levels: function () {
        return this._levels;
    },

    set_levels: function (value) {
        this._levels = value;
        return value;
    },

    get_bottomsUp: function () {
        return this._bottomsUp;
    },

    set_bottomsUp: function (value) {
        this._bottomsUp = value;
        return value;
    },

    get_mercator: function () {
        return this._mercator;
    },

    set_mercator: function (value) {
        this._mercator = value;
        return value;
    },

    get_baseLevel: function () {
        return this._baseLevel;
    },

    set_baseLevel: function (value) {
        this._baseLevel = value;
        return value;
    },

    get_quadTreeTileMap: function () {
        return this._quadTreeTileMap;
    },

    set_quadTreeTileMap: function (value) {
        this._quadTreeTileMap = value;
        return value;
    },

    get_centerX: function () {
        return this._centerX;
    },

    set_centerX: function (value) {
        if (this._centerX !== value) {
            this._centerX = value;
            this._computeMatrix();
        }
        return value;
    },

    get_centerY: function () {
        return this._centerY;
    },

    set_centerY: function (value) {
        if (this._centerY !== value) {
            this._centerY = value;
            this._computeMatrix();
        }
        return value;
    },

    get_rotation: function () {
        return this._rotation;
    },

    set_rotation: function (value) {
        if (this._rotation !== value) {
            this._rotation = value;
            this._computeMatrix();
        }
        return value;
    },

    get_meanRadius: function () {
        return this._meanRadius;
    },

    set_meanRadius: function (value) {
        this._meanRadius = value;
        return value;
    },

    get_bandPass: function () {
        return this._bandPass;
    },

    set_bandPass: function (value) {
        this._bandPass = value;
        return value;
    },

    get_dataSetType: function () {
        return this._dataSetType;
    },

    set_dataSetType: function (value) {
        this._dataSetType = value;
        return value;
    },

    get_altUrl: function () {
        return this._altUrl;
    },

    set_altUrl: function (value) {
        this._altUrl = value;
        return value;
    },

    get_singleImage: function () {
        return this._singleImage;
    },

    set_singleImage: function (value) {
        this._singleImage = value;
        return value;
    },

    get_hipsProperties: function () {
        return this._hipsProperties;
    },

    set_hipsProperties: function (value) {
        this._hipsProperties = value;
        return value;
    },

    get_fitsProperties: function () {
        return this._fitsProperties;
    },

    set_fitsProperties: function (value) {
        this._fitsProperties = value;
        return value;
    },

    toString: function () {
        if (this.get_defaultSet()) {
            return this._name + ' *';
        } else {
            return this._name;
        }
    },

    get_stockImageSet: function () {
        if (this._generic || !this._defaultSet) {
            return this;
        } else {
            return Imageset.createGeneric(this.get_dataSetType(), this.get_bandPass());
        }
    },

    equals: function (obj) {
        if (obj == null) {
            return false;
        }
        if (!(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(obj, Imageset))) {
            return false;
        }
        var b = obj;
        return (_baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.getHashCode(b.get_url()) === _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.getHashCode(this.get_url()) && b.get_dataSetType() === this.get_dataSetType() && b.get_bandPass() === this.get_bandPass() && b.get_generic() === this.get_generic());
    },

    get_matrix: function () {
        if (!this._matrixComputed) {
            this._computeMatrix();
        }
        return this._matrix;
    },

    set_matrix: function (value) {
        this._matrix = value;
        return value;
    },

    _computeMatrix: function () {
        this._matrixComputed = true;
        this._matrix = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.get_identity();
        this._matrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationX((this.get_rotation() / 180 * Math.PI)));
        this._matrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationZ((this.get_centerY() / 180 * Math.PI)));
        this._matrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationY(((360 - this.get_centerX()) / 180 * Math.PI)));
    },

    get_name: function () {
        return this._name;
    },

    set_name: function (value) {
        this._name = value;
        return value;
    },

    get_sparse: function () {
        return this._sparse;
    },

    set_sparse: function (value) {
        this._sparse = value;
        return value;
    },

    get_thumbnailUrl: function () {
        return this._thumbnailUrl;
    },

    set_thumbnailUrl: function (value) {
        this._thumbnailUrl = value;
        return value;
    },

    get_generic: function () {
        return this._generic;
    },

    set_generic: function (value) {
        this._generic = value;
        return value;
    },

    get_elevationModel: function () {
        return this._elevationModel;
    },

    set_elevationModel: function (value) {
        this._elevationModel = value;
        return value;
    },

    get_defaultSet: function () {
        return this._defaultSet;
    },

    set_defaultSet: function (value) {
        this._defaultSet = value;
        return value;
    },

    get_offsetX: function () {
        return this._offsetX;
    },

    set_offsetX: function (value) {
        this._offsetX = value;
        return value;
    },

    get_offsetY: function () {
        return this._offsetY;
    },

    set_offsetY: function (value) {
        this._offsetY = value;
        return value;
    },

    get_creditsText: function () {
        return this._creditsText;
    },

    set_creditsText: function (value) {
        this._creditsText = value;
        return value;
    },

    get_creditsUrl: function () {
        return this._creditsUrl;
    },

    set_creditsUrl: function (value) {
        this._creditsUrl = value;
        return value;
    },

    get_isMandelbrot: function () {
        return false;
    },

    // Calculate either the X or Y coordinate of the estimated image center.
    //
    // This estimate has some important limitations. First, because images
    // might contain transparent regions, the "center" of the image that a
    // user will perceive might have nothing to do with the center of the
    // image bitmap. For instance, imagine that the bitmap is 100x100 but
    // that everything is transparent except for 10x10 pixels in the
    // top-left corner. We don't know anything about the "barycenter" of the
    // image here, so we can't account for that.
    //
    // Second, for untiled SkyImage imagesets, to properly compute the
    // bitmap center we need its dimensions, which simply aren't available
    // here. All we can do is guess a "reasonable" image size.
    //
    // For these reasons, this method should be avoided when possible. The
    // preferred way to "know" the location of an image's center is to wrap
    // the image in a Place object, which can just specify the exact
    // coordinates and zoom level too.
    //
    // Even disregarding the above, it's non-trivial to locate the image
    // center because of the OffsetX/Y parameters and potential rotation of
    // the image's coordinate system relative to the sky.
    _calcViewCenterCoordinate: function (isX) {
        var rot = _coordinates_js__WEBPACK_IMPORTED_MODULE_7__.Coordinates.degreesToRadians(this._rotation);
        var crot = Math.cos(rot);
        var srot = Math.sin(rot);
        var dx = 0, dy = 0;
        if (this.get_levels() > 0) {
            dx = -this._offsetX;
            dy = this._offsetY;
        } else {
            // This is the part where we need the image's dimensions to
            // be able to compute the center coordinate correctly. Since
            // we don't have that information, we just guess :-(
            var effWidth = 800;
            var effHeight = 800;
            dx = (this._offsetX - effWidth / 2) * this._baseTileDegrees;
            dy = (effHeight / 2 - this._offsetY) * this._baseTileDegrees;
        }
        if (this._bottomsUp) {
            dx = -dx;
        }
        if (isX) {
            return this._centerX + dx * crot + dy * srot;
        } else {
            return this._centerY - dx * srot + dy * crot;
        }
    },

    get_viewCenterX: function () {
        if (this.get_wcsImage() != null) {
            return (this.get_wcsImage()).get_viewCenterX();
        } else {
            return this._calcViewCenterCoordinate(true);
        }
    },

    get_viewCenterY: function () {
        if (this.get_wcsImage() != null) {
            return (this.get_wcsImage()).get_viewCenterY();
        } else {
            return this._calcViewCenterCoordinate(false);
        }
    },

    setInitialParameters: function (name, url, dataSetType, bandPass, projection, imageSetID, baseLevel, levels, baseTileDegrees, extension, bottomsUp, quadTreeMap, centerX, centerY, rotation, sparse, thumbnailUrl, defaultSet, elevationModel, wf, offsetX, offsetY, credits, creditsUrl, demUrlIn, alturl, meanRadius, referenceFrame) {
        this.set_referenceFrame(referenceFrame);
        this.set_meanRadius(meanRadius);
        this._altUrl = alturl;
        this.demUrl = demUrlIn;
        this._creditsText = credits;
        this._creditsUrl = creditsUrl;
        this._offsetY = offsetY;
        this._offsetX = offsetX;
        this._widthFactor = wf;
        this._elevationModel = elevationModel;
        this._defaultSet = defaultSet;
        this._name = name;
        this._sparse = sparse;
        this._dataSetType = dataSetType;
        this._bandPass = bandPass;
        this._quadTreeTileMap = quadTreeMap;
        this.url = url;
        this._levels = levels;
        this._baseTileDegrees = baseTileDegrees;
        this._imageSetID = imageSetID;
        this._extension = extension;
        this._projection = projection;
        this._bottomsUp = bottomsUp;
        this._baseLevel = baseLevel;
        this._mercator = (!projection);
        this._centerX = centerX;
        this._centerY = centerY;
        this._rotation = rotation;
        this._thumbnailUrl = thumbnailUrl;
        this._computeMatrix();
    },

    // Ideally, imagesets will be associated with Places that specify
    // exactly how the view should be set up when "going to" them, but
    // sometimes (especially research datasets) we're interested in deriving
    // a reasonable zoom setting without that extra information. The returned value
    // isn't going to be perfect but it should hopefully be OK.
    _guessZoomSetting: function (currentZoom) {
        const FOV_FACTOR = 1.7;
        var zoom = currentZoom;
        var aswcs = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(this._wcsImage, _layers_fits_image_js__WEBPACK_IMPORTED_MODULE_9__.FitsImage);
        if (this.get_projection() === ProjectionType.skyImage) {
            // Untiled SkyImage: basetiledegrees is degrees per pixel
            if (aswcs != null) {
                zoom = this.get_baseTileDegrees() * aswcs.get_sizeY() * 6 * FOV_FACTOR;
            }
        } else if (aswcs != null) {
            zoom = aswcs.get_scaleY() * aswcs.get_sizeY() * 6 * FOV_FACTOR;
        } else {
            // Tiled. basetiledegrees is angular height of whole image after
            // power-of-2 padding.
            zoom = this.get_baseTileDegrees() * 6 * FOV_FACTOR;
        }

        // Only zoom in, not out. Usability-wise this tends to make the most
        // sense.
        if (zoom > currentZoom) {
            zoom = currentZoom;
        }
        return zoom;
    },

    // URL parameters
    //{0} ImageSetID
    //{1} level
    //{2} x tile id
    //{3} y tile id
    //{4} quadtree address (VE style)
    //{5} quadtree address (Google maps style)
    //{6} top left corner RA
    //{7} top left corner Dec
    //{8} bottom right corner RA
    //{9} bottom right corner dec
    //{10} bottom left corner RA
    //{11} bottom left corner dec
    //{12} top right corner RA
    //{13} top right corner dec

    get_thumbnail: function () {
        return this._thumbnail;
    },

    set_thumbnail: function (value) {
        this._thumbnail = value;
        return value;
    },

    get_bounds: function () {
        return this._bounds;
    },

    set_bounds: function (value) {
        this._bounds = value;
        return value;
    },

    get_isImage: function () {
        return true;
    },

    get_isTour: function () {
        return false;
    },

    get_isFolder: function () {
        return false;
    },

    get_isCloudCommunityItem: function () {
        return false;
    },

    get_readOnly: function () {
        return false;
    },

    get_children: function () {
        return [];
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Imageset", [Imageset, Imageset$, null, _interfaces_js__WEBPACK_IMPORTED_MODULE_5__.IThumbnail]);


/***/ }),

/***/ "./esm/interfaces.js":
/*!***************************!*\
  !*** ./esm/interfaces.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IFolder: () => (/* binding */ IFolder),
/* harmony export */   IPlace: () => (/* binding */ IPlace),
/* harmony export */   ISettings: () => (/* binding */ ISettings),
/* harmony export */   IThumbnail: () => (/* binding */ IThumbnail),
/* harmony export */   IUIServicesCallbacks: () => (/* binding */ IUIServicesCallbacks),
/* harmony export */   IUiController: () => (/* binding */ IUiController),
/* harmony export */   IUndoStep: () => (/* binding */ IUndoStep),
/* harmony export */   IViewMover: () => (/* binding */ IViewMover)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// "Classes" corresponding to C# interfaces
//
// In our current JS translation, these classes don't declare anything
// themselves. They can in principle be used in `canCast()` calls for dynamic
// type checking, but it appears that we don't use this functionality in the
// current codebase.
//
// If/when we translate to TypeScript, these could become TypeScript interfaces
// that are more useful.
//
// Files in this module used to be in
// `I{Folder,IThumbnail,Place,UIController,ViewMover,Tours/ISettings}.cs`. Note
// that the source file was indeed (incorrectly) named `IIThumbnail.cs`.




// wwtlib.IFolder

function IFolder() { }

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("IFolder", [IFolder]);


// wwtlib.IThumbnail

function IThumbnail() { }

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("IThumbnail", [IThumbnail]);


// wwtlib.IPlace

function IPlace() { }

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("IPlace", [IPlace]);


// wwtlib.IUiController

function IUiController() { }

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("IUiController", [IUiController]);


// wwtlib.IViewMover

function IViewMover() { }

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("IViewMover", [IViewMover]);


// wwtlib.IUIServicesCallbacks

function IUIServicesCallbacks() { }

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("IUIServicesCallbacks", [IUIServicesCallbacks]);


// wwtlib.ISettings

function ISettings() { }

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("ISettings", [ISettings]);


// wwtlib.IUndoStep

function IUndoStep() { }

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("IUndoStep", [IUndoStep]);


/***/ }),

/***/ "./esm/kepler_vertex.js":
/*!******************************!*\
  !*** ./esm/kepler_vertex.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   KeplerVertex: () => (/* binding */ KeplerVertex)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./color.js */ "./esm/color.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Kepler Vertex.






// wwtlib.KeplerVertex

function KeplerVertex() {
    this.ABC = new _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d();
    this.abc1 = new _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d();
    this.pointSize = 0;
    this.w = 0;
    this.e = 0;
    this.n = 0;
    this.t = 0;
    this.a = 0;
    this.z = 0;
    this.orbitPos = 0;
    this.orbits = 0;
}

KeplerVertex._sine = 0;
KeplerVertex._cose = 1;
KeplerVertex._degrad = Math.PI / 180;

var KeplerVertex$ = {
    fill: function (ee) {
        var F = Math.cos(ee.omega * KeplerVertex._degrad);
        var sinOmega = Math.sin(ee.omega * KeplerVertex._degrad);
        var cosi = Math.cos(ee.i * KeplerVertex._degrad);
        var sini = Math.sin(ee.i * KeplerVertex._degrad);
        var G = sinOmega * KeplerVertex._cose;
        var H = sinOmega * KeplerVertex._sine;
        var P = -sinOmega * cosi;
        var Q = (F * cosi * KeplerVertex._cose) - (sini * KeplerVertex._sine);
        var R = (F * cosi * KeplerVertex._sine) + (sini * KeplerVertex._cose);
        var checkA = (F * F) + (G * G) + (H * H); // Should be 1.0
        var checkB = (P * P) + (Q * Q) + (R * R); // Should be 1.0 as well
        this.ABC.x = Math.atan2(F, P);
        this.ABC.y = Math.atan2(G, Q);
        this.ABC.z = Math.atan2(H, R);
        this.abc1.x = Math.sqrt((F * F) + (P * P));
        this.abc1.y = Math.sqrt((G * G) + (Q * Q));
        this.abc1.z = Math.sqrt((H * H) + (R * R));
        this.pointSize = 0.1;
        if (ee.a < 2.5) {
            this.color = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_white();
        } else if (ee.a < 2.83) {
            this.color = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_red();
        } else if (ee.a < 2.96) {
            this.color = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_green();
        } else if (ee.a < 3.3) {
            this.color = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_magenta();
        } else if (ee.a < 5) {
            this.color = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_cyan();
        } else if (ee.a < 10) {
            this.color = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_yellow();
            this.pointSize = 0.9;
        } else {
            this.color = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_white();
            this.pointSize = 8;
        }
        this.w = ee.w;
        this.e = ee.e;
        if (!ee.n) {
            this.n = (0.9856076686 / (ee.a * Math.sqrt(ee.a)));
        } else {
            this.n = ee.n;
        }
        this.t = (ee.t - KeplerVertex.baseDate);
        this.a = ee.a;
        this.z = 0;
        this.orbitPos = 0;
        this.orbits = 0;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("KeplerVertex", [KeplerVertex, KeplerVertex$, null]);

// KeplerVertex.baseDate is initialized at the bottom of the main module.


/***/ }),

/***/ "./esm/layers/color_map_container.js":
/*!*******************************************!*\
  !*** ./esm/layers/color_map_container.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ColorMapContainer: () => (/* binding */ ColorMapContainer)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
/* harmony import */ var _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../graphics/webgl_constants.js */ "./esm/graphics/webgl_constants.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A collection of named colormaps.







// wwtlib.ColorMapContainer
//
// This class is intended to be used to store colormaps. It does not handle any
// interpolation and when using FindClosestColor it will simply check which
// color is closest to the requested value. Therefore, continuous colormaps should
// be created by providing a sufficient number of colors (ideally 256 or more).

function ColorMapContainer() {
    this.colors = [];
}

ColorMapContainer.colorTextures = {};

// Class method to create a new colormap from a list of [a, r, g, b] lists.
ColorMapContainer.fromArgbList = function (color_list) {
    var temp = new ColorMapContainer();
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(color_list);
    while ($enum1.moveNext()) {
        var color = $enum1.current;
        temp.colors.push(_color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(color[0], color[1], color[2], color[3]));
    }
    return temp;
};

// Class method to create a new colormap from a list of strings.
ColorMapContainer.fromStringList = function (color_list) {
    var temp = new ColorMapContainer();
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(color_list);
    while ($enum1.moveNext()) {
        var color = $enum1.current;
        temp.colors.push(_color_js__WEBPACK_IMPORTED_MODULE_2__.Color.load(color));
    }
    return temp;
};

// Names are chosen to match matplotlib (which explains why some are
// less-than-ideal).
ColorMapContainer.fromNamedColormap = function (name) {
    if (name == null) {
        return null;
    }
    switch (name.toLowerCase()) {
        case 'viridis':
            return ColorMapContainer.viridis;
        case 'plasma':
            return ColorMapContainer.plasma;
        case 'inferno':
            return ColorMapContainer.inferno;
        case 'magma':
            return ColorMapContainer.magma;
        case 'cividis':
            return ColorMapContainer.cividis;
        case 'greys': // this is 0=>white, 1=>black
            return ColorMapContainer.greys;
        case 'gray': // this is 0=>black, 1=>white
            return ColorMapContainer.gray;
        case 'purples':
            return ColorMapContainer.purples;
        case 'blues':
            return ColorMapContainer.blues;
        case 'greens':
            return ColorMapContainer.greens;
        case 'oranges':
            return ColorMapContainer.oranges;
        case 'reds':
            return ColorMapContainer.reds;
        case 'rdylbu':
            return ColorMapContainer.rdYlBu;
    }
    return null;
};

ColorMapContainer._getTextureFromName = function (gl, name) {
    var texture = ColorMapContainer.colorTextures[name];
    if (texture == null) {
        var colorMapContainer = ColorMapContainer.fromNamedColormap(name);
        if (colorMapContainer != null) {
            texture = ColorMapContainer._initColorTexture(gl, colorMapContainer);
            ColorMapContainer.colorTextures[name.toLowerCase()] = texture;
        }
    }
    return texture;
};

ColorMapContainer.bindColorMapTexture = function (gl, colorMapName) {
    var texture = ColorMapContainer._getTextureFromName(gl, colorMapName);
    if (texture == null) {
        texture = ColorMapContainer._getTextureFromName(gl, 'gray');
    }
    gl.activeTexture(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.TEXTURE1);
    gl.bindTexture(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.TEXTURE_2D, texture);
};

ColorMapContainer._initColorTexture = function (gl, colorMapContainer) {
    var colorTexture = gl.createTexture();
    gl.activeTexture(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.TEXTURE1);
    gl.bindTexture(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.TEXTURE_2D, colorTexture);
    gl.texParameteri(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.TEXTURE_2D, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.TEXTURE_WRAP_S, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.CLAMP_TO_EDGE);
    gl.texParameteri(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.TEXTURE_2D, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.TEXTURE_WRAP_T, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.CLAMP_TO_EDGE);
    var colorBuffer = ColorMapContainer._extractColorArray(colorMapContainer.colors);
    gl.texImage2D(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.TEXTURE_2D, 0, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.RGB8, colorBuffer.length / 3, 1, 0, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.RGB, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.UNSIGNED_BYTE, colorBuffer);
    gl.texParameteri(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.TEXTURE_2D, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.TEXTURE_MIN_FILTER, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.NEAREST);
    gl.texParameteri(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.TEXTURE_2D, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.TEXTURE_MAG_FILTER, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.NEAREST);
    return colorTexture;
};

ColorMapContainer._extractColorArray = function (colors) {
    var index = 0;
    var colorBuffer = new Uint8Array(colors.length * 3);
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(colors);
    while ($enum1.moveNext()) {
        var color = $enum1.current;
        colorBuffer[index++] = color.r;
        colorBuffer[index++] = color.g;
        colorBuffer[index++] = color.b;
    }
    return colorBuffer;
};

var ColorMapContainer$ = {
    // Given a floating-point value in the range 0 to 1, find the color that is
    // the closest to it.
    findClosestColor: function (value) {
        var index;
        if (value <= 0) {
            return this.colors[0];
        } else if (value >= 1) {
            return this.colors[this.colors.length - 1];
        } else {
            index = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((value * this.colors.length));
            return this.colors[index];
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ColorMapContainer", [ColorMapContainer, ColorMapContainer$, null]);

// The colormaps below were produced using the following Python code:
//
// import numpy as np
// from matplotlib import cm
// from matplotlib.colors import to_hex
// from textwrap import wrap, indent
//
// TEMPLATE = """
// public static ColorMapContainer {name} = ColorMapContainer.FromStringList(new List<string>(
// {colors}
// ));
// """
//
// TEMPLATE_CASE = """
// case "{name_lower}":
//     return {name};"""
// COLORMAPS = ["viridis", "plasma", "inferno", "magma", "cividis",
//             "Greys", "gray", "Purples", "Blues", "Greens", "Oranges", "Reds", "RdYlBu"]
//
// named_code = ""
// case_code = ""
//
// for name in COLORMAPS:
//     cmap = cm.get_cmap(name)
//     x = np.linspace(0.5 / 256, 255.5/256, 256)
//     colors = ", ".join(['"{0}"'.format(to_hex(c)) for c in cmap(x)])
//     pretty_name = name[0].upper() + name[1:]
//     named_code += TEMPLATE.format(name=pretty_name, colors=indent('\n'.join(wrap(colors, 90)), " " *  10))
//     case_code += TEMPLATE_CASE.format(name=pretty_name, name_lower=name.lower())
//
// named_code = indent(named_code, " " * 8)
//
// print(named_code)
// print('-' * 72)
// print(case_code)

ColorMapContainer.viridis = ColorMapContainer.fromStringList([
    '#440154', '#440256', '#450457', '#450559', '#46075a', '#46085c', '#460a5d', '#460b5e',
    '#470d60', '#470e61', '#471063', '#471164', '#471365', '#481467', '#481668', '#481769',
    '#48186a', '#481a6c', '#481b6d', '#481c6e', '#481d6f', '#481f70', '#482071', '#482173',
    '#482374', '#482475', '#482576', '#482677', '#482878', '#482979', '#472a7a', '#472c7a',
    '#472d7b', '#472e7c', '#472f7d', '#46307e', '#46327e', '#46337f', '#463480', '#453581',
    '#453781', '#453882', '#443983', '#443a83', '#443b84', '#433d84', '#433e85', '#423f85',
    '#424086', '#424186', '#414287', '#414487', '#404588', '#404688', '#3f4788', '#3f4889',
    '#3e4989', '#3e4a89', '#3e4c8a', '#3d4d8a', '#3d4e8a', '#3c4f8a', '#3c508b', '#3b518b',
    '#3b528b', '#3a538b', '#3a548c', '#39558c', '#39568c', '#38588c', '#38598c', '#375a8c',
    '#375b8d', '#365c8d', '#365d8d', '#355e8d', '#355f8d', '#34608d', '#34618d', '#33628d',
    '#33638d', '#32648e', '#32658e', '#31668e', '#31678e', '#31688e', '#30698e', '#306a8e',
    '#2f6b8e', '#2f6c8e', '#2e6d8e', '#2e6e8e', '#2e6f8e', '#2d708e', '#2d718e', '#2c718e',
    '#2c728e', '#2c738e', '#2b748e', '#2b758e', '#2a768e', '#2a778e', '#2a788e', '#29798e',
    '#297a8e', '#297b8e', '#287c8e', '#287d8e', '#277e8e', '#277f8e', '#27808e', '#26818e',
    '#26828e', '#26828e', '#25838e', '#25848e', '#25858e', '#24868e', '#24878e', '#23888e',
    '#23898e', '#238a8d', '#228b8d', '#228c8d', '#228d8d', '#218e8d', '#218f8d', '#21908d',
    '#21918c', '#20928c', '#20928c', '#20938c', '#1f948c', '#1f958b', '#1f968b', '#1f978b',
    '#1f988b', '#1f998a', '#1f9a8a', '#1e9b8a', '#1e9c89', '#1e9d89', '#1f9e89', '#1f9f88',
    '#1fa088', '#1fa188', '#1fa187', '#1fa287', '#20a386', '#20a486', '#21a585', '#21a685',
    '#22a785', '#22a884', '#23a983', '#24aa83', '#25ab82', '#25ac82', '#26ad81', '#27ad81',
    '#28ae80', '#29af7f', '#2ab07f', '#2cb17e', '#2db27d', '#2eb37c', '#2fb47c', '#31b57b',
    '#32b67a', '#34b679', '#35b779', '#37b878', '#38b977', '#3aba76', '#3bbb75', '#3dbc74',
    '#3fbc73', '#40bd72', '#42be71', '#44bf70', '#46c06f', '#48c16e', '#4ac16d', '#4cc26c',
    '#4ec36b', '#50c46a', '#52c569', '#54c568', '#56c667', '#58c765', '#5ac864', '#5cc863',
    '#5ec962', '#60ca60', '#63cb5f', '#65cb5e', '#67cc5c', '#69cd5b', '#6ccd5a', '#6ece58',
    '#70cf57', '#73d056', '#75d054', '#77d153', '#7ad151', '#7cd250', '#7fd34e', '#81d34d',
    '#84d44b', '#86d549', '#89d548', '#8bd646', '#8ed645', '#90d743', '#93d741', '#95d840',
    '#98d83e', '#9bd93c', '#9dd93b', '#a0da39', '#a2da37', '#a5db36', '#a8db34', '#aadc32',
    '#addc30', '#b0dd2f', '#b2dd2d', '#b5de2b', '#b8de29', '#bade28', '#bddf26', '#c0df25',
    '#c2df23', '#c5e021', '#c8e020', '#cae11f', '#cde11d', '#d0e11c', '#d2e21b', '#d5e21a',
    '#d8e219', '#dae319', '#dde318', '#dfe318', '#e2e418', '#e5e419', '#e7e419', '#eae51a',
    '#ece51b', '#efe51c', '#f1e51d', '#f4e61e', '#f6e620', '#f8e621', '#fbe723', '#fde725'
]);

ColorMapContainer.plasma = ColorMapContainer.fromStringList([
    '#0d0887', '#100788', '#130789', '#16078a', '#19068c', '#1b068d', '#1d068e', '#20068f',
    '#220690', '#240691', '#260591', '#280592', '#2a0593', '#2c0594', '#2e0595', '#2f0596',
    '#310597', '#330597', '#350498', '#370499', '#38049a', '#3a049a', '#3c049b', '#3e049c',
    '#3f049c', '#41049d', '#43039e', '#44039e', '#46039f', '#48039f', '#4903a0', '#4b03a1',
    '#4c02a1', '#4e02a2', '#5002a2', '#5102a3', '#5302a3', '#5502a4', '#5601a4', '#5801a4',
    '#5901a5', '#5b01a5', '#5c01a6', '#5e01a6', '#6001a6', '#6100a7', '#6300a7', '#6400a7',
    '#6600a7', '#6700a8', '#6900a8', '#6a00a8', '#6c00a8', '#6e00a8', '#6f00a8', '#7100a8',
    '#7201a8', '#7401a8', '#7501a8', '#7701a8', '#7801a8', '#7a02a8', '#7b02a8', '#7d03a8',
    '#7e03a8', '#8004a8', '#8104a7', '#8305a7', '#8405a7', '#8606a6', '#8707a6', '#8808a6',
    '#8a09a5', '#8b0aa5', '#8d0ba5', '#8e0ca4', '#8f0da4', '#910ea3', '#920fa3', '#9410a2',
    '#9511a1', '#9613a1', '#9814a0', '#99159f', '#9a169f', '#9c179e', '#9d189d', '#9e199d',
    '#a01a9c', '#a11b9b', '#a21d9a', '#a31e9a', '#a51f99', '#a62098', '#a72197', '#a82296',
    '#aa2395', '#ab2494', '#ac2694', '#ad2793', '#ae2892', '#b02991', '#b12a90', '#b22b8f',
    '#b32c8e', '#b42e8d', '#b52f8c', '#b6308b', '#b7318a', '#b83289', '#ba3388', '#bb3488',
    '#bc3587', '#bd3786', '#be3885', '#bf3984', '#c03a83', '#c13b82', '#c23c81', '#c33d80',
    '#c43e7f', '#c5407e', '#c6417d', '#c7427c', '#c8437b', '#c9447a', '#ca457a', '#cb4679',
    '#cc4778', '#cc4977', '#cd4a76', '#ce4b75', '#cf4c74', '#d04d73', '#d14e72', '#d24f71',
    '#d35171', '#d45270', '#d5536f', '#d5546e', '#d6556d', '#d7566c', '#d8576b', '#d9586a',
    '#da5a6a', '#da5b69', '#db5c68', '#dc5d67', '#dd5e66', '#de5f65', '#de6164', '#df6263',
    '#e06363', '#e16462', '#e26561', '#e26660', '#e3685f', '#e4695e', '#e56a5d', '#e56b5d',
    '#e66c5c', '#e76e5b', '#e76f5a', '#e87059', '#e97158', '#e97257', '#ea7457', '#eb7556',
    '#eb7655', '#ec7754', '#ed7953', '#ed7a52', '#ee7b51', '#ef7c51', '#ef7e50', '#f07f4f',
    '#f0804e', '#f1814d', '#f1834c', '#f2844b', '#f3854b', '#f3874a', '#f48849', '#f48948',
    '#f58b47', '#f58c46', '#f68d45', '#f68f44', '#f79044', '#f79143', '#f79342', '#f89441',
    '#f89540', '#f9973f', '#f9983e', '#f99a3e', '#fa9b3d', '#fa9c3c', '#fa9e3b', '#fb9f3a',
    '#fba139', '#fba238', '#fca338', '#fca537', '#fca636', '#fca835', '#fca934', '#fdab33',
    '#fdac33', '#fdae32', '#fdaf31', '#fdb130', '#fdb22f', '#fdb42f', '#fdb52e', '#feb72d',
    '#feb82c', '#feba2c', '#febb2b', '#febd2a', '#febe2a', '#fec029', '#fdc229', '#fdc328',
    '#fdc527', '#fdc627', '#fdc827', '#fdca26', '#fdcb26', '#fccd25', '#fcce25', '#fcd025',
    '#fcd225', '#fbd324', '#fbd524', '#fbd724', '#fad824', '#fada24', '#f9dc24', '#f9dd25',
    '#f8df25', '#f8e125', '#f7e225', '#f7e425', '#f6e626', '#f6e826', '#f5e926', '#f5eb27',
    '#f4ed27', '#f3ee27', '#f3f027', '#f2f227', '#f1f426', '#f1f525', '#f0f724', '#f0f921'
]);

ColorMapContainer.inferno = ColorMapContainer.fromStringList([
    '#000004', '#010005', '#010106', '#010108', '#02010a', '#02020c', '#02020e', '#030210',
    '#040312', '#040314', '#050417', '#060419', '#07051b', '#08051d', '#09061f', '#0a0722',
    '#0b0724', '#0c0826', '#0d0829', '#0e092b', '#10092d', '#110a30', '#120a32', '#140b34',
    '#150b37', '#160b39', '#180c3c', '#190c3e', '#1b0c41', '#1c0c43', '#1e0c45', '#1f0c48',
    '#210c4a', '#230c4c', '#240c4f', '#260c51', '#280b53', '#290b55', '#2b0b57', '#2d0b59',
    '#2f0a5b', '#310a5c', '#320a5e', '#340a5f', '#360961', '#380962', '#390963', '#3b0964',
    '#3d0965', '#3e0966', '#400a67', '#420a68', '#440a68', '#450a69', '#470b6a', '#490b6a',
    '#4a0c6b', '#4c0c6b', '#4d0d6c', '#4f0d6c', '#510e6c', '#520e6d', '#540f6d', '#550f6d',
    '#57106e', '#59106e', '#5a116e', '#5c126e', '#5d126e', '#5f136e', '#61136e', '#62146e',
    '#64156e', '#65156e', '#67166e', '#69166e', '#6a176e', '#6c186e', '#6d186e', '#6f196e',
    '#71196e', '#721a6e', '#741a6e', '#751b6e', '#771c6d', '#781c6d', '#7a1d6d', '#7c1d6d',
    '#7d1e6d', '#7f1e6c', '#801f6c', '#82206c', '#84206b', '#85216b', '#87216b', '#88226a',
    '#8a226a', '#8c2369', '#8d2369', '#8f2469', '#902568', '#922568', '#932667', '#952667',
    '#972766', '#982766', '#9a2865', '#9b2964', '#9d2964', '#9f2a63', '#a02a63', '#a22b62',
    '#a32c61', '#a52c60', '#a62d60', '#a82e5f', '#a92e5e', '#ab2f5e', '#ad305d', '#ae305c',
    '#b0315b', '#b1325a', '#b3325a', '#b43359', '#b63458', '#b73557', '#b93556', '#ba3655',
    '#bc3754', '#bd3853', '#bf3952', '#c03a51', '#c13a50', '#c33b4f', '#c43c4e', '#c63d4d',
    '#c73e4c', '#c83f4b', '#ca404a', '#cb4149', '#cc4248', '#ce4347', '#cf4446', '#d04545',
    '#d24644', '#d34743', '#d44842', '#d54a41', '#d74b3f', '#d84c3e', '#d94d3d', '#da4e3c',
    '#db503b', '#dd513a', '#de5238', '#df5337', '#e05536', '#e15635', '#e25734', '#e35933',
    '#e45a31', '#e55c30', '#e65d2f', '#e75e2e', '#e8602d', '#e9612b', '#ea632a', '#eb6429',
    '#eb6628', '#ec6726', '#ed6925', '#ee6a24', '#ef6c23', '#ef6e21', '#f06f20', '#f1711f',
    '#f1731d', '#f2741c', '#f3761b', '#f37819', '#f47918', '#f57b17', '#f57d15', '#f67e14',
    '#f68013', '#f78212', '#f78410', '#f8850f', '#f8870e', '#f8890c', '#f98b0b', '#f98c0a',
    '#f98e09', '#fa9008', '#fa9207', '#fa9407', '#fb9606', '#fb9706', '#fb9906', '#fb9b06',
    '#fb9d07', '#fc9f07', '#fca108', '#fca309', '#fca50a', '#fca60c', '#fca80d', '#fcaa0f',
    '#fcac11', '#fcae12', '#fcb014', '#fcb216', '#fcb418', '#fbb61a', '#fbb81d', '#fbba1f',
    '#fbbc21', '#fbbe23', '#fac026', '#fac228', '#fac42a', '#fac62d', '#f9c72f', '#f9c932',
    '#f9cb35', '#f8cd37', '#f8cf3a', '#f7d13d', '#f7d340', '#f6d543', '#f6d746', '#f5d949',
    '#f5db4c', '#f4dd4f', '#f4df53', '#f4e156', '#f3e35a', '#f3e55d', '#f2e661', '#f2e865',
    '#f2ea69', '#f1ec6d', '#f1ed71', '#f1ef75', '#f1f179', '#f2f27d', '#f2f482', '#f3f586',
    '#f3f68a', '#f4f88e', '#f5f992', '#f6fa96', '#f8fb9a', '#f9fc9d', '#fafda1', '#fcffa4'
]);

ColorMapContainer.magma = ColorMapContainer.fromStringList([
    '#000004', '#010005', '#010106', '#010108', '#020109', '#02020b', '#02020d', '#03030f',
    '#030312', '#040414', '#050416', '#060518', '#06051a', '#07061c', '#08071e', '#090720',
    '#0a0822', '#0b0924', '#0c0926', '#0d0a29', '#0e0b2b', '#100b2d', '#110c2f', '#120d31',
    '#130d34', '#140e36', '#150e38', '#160f3b', '#180f3d', '#19103f', '#1a1042', '#1c1044',
    '#1d1147', '#1e1149', '#20114b', '#21114e', '#221150', '#241253', '#251255', '#271258',
    '#29115a', '#2a115c', '#2c115f', '#2d1161', '#2f1163', '#311165', '#331067', '#341069',
    '#36106b', '#38106c', '#390f6e', '#3b0f70', '#3d0f71', '#3f0f72', '#400f74', '#420f75',
    '#440f76', '#451077', '#471078', '#491078', '#4a1079', '#4c117a', '#4e117b', '#4f127b',
    '#51127c', '#52137c', '#54137d', '#56147d', '#57157e', '#59157e', '#5a167e', '#5c167f',
    '#5d177f', '#5f187f', '#601880', '#621980', '#641a80', '#651a80', '#671b80', '#681c81',
    '#6a1c81', '#6b1d81', '#6d1d81', '#6e1e81', '#701f81', '#721f81', '#732081', '#752181',
    '#762181', '#782281', '#792282', '#7b2382', '#7c2382', '#7e2482', '#802582', '#812581',
    '#832681', '#842681', '#862781', '#882781', '#892881', '#8b2981', '#8c2981', '#8e2a81',
    '#902a81', '#912b81', '#932b80', '#942c80', '#962c80', '#982d80', '#992d80', '#9b2e7f',
    '#9c2e7f', '#9e2f7f', '#a02f7f', '#a1307e', '#a3307e', '#a5317e', '#a6317d', '#a8327d',
    '#aa337d', '#ab337c', '#ad347c', '#ae347b', '#b0357b', '#b2357b', '#b3367a', '#b5367a',
    '#b73779', '#b83779', '#ba3878', '#bc3978', '#bd3977', '#bf3a77', '#c03a76', '#c23b75',
    '#c43c75', '#c53c74', '#c73d73', '#c83e73', '#ca3e72', '#cc3f71', '#cd4071', '#cf4070',
    '#d0416f', '#d2426f', '#d3436e', '#d5446d', '#d6456c', '#d8456c', '#d9466b', '#db476a',
    '#dc4869', '#de4968', '#df4a68', '#e04c67', '#e24d66', '#e34e65', '#e44f64', '#e55064',
    '#e75263', '#e85362', '#e95462', '#ea5661', '#eb5760', '#ec5860', '#ed5a5f', '#ee5b5e',
    '#ef5d5e', '#f05f5e', '#f1605d', '#f2625d', '#f2645c', '#f3655c', '#f4675c', '#f4695c',
    '#f56b5c', '#f66c5c', '#f66e5c', '#f7705c', '#f7725c', '#f8745c', '#f8765c', '#f9785d',
    '#f9795d', '#f97b5d', '#fa7d5e', '#fa7f5e', '#fa815f', '#fb835f', '#fb8560', '#fb8761',
    '#fc8961', '#fc8a62', '#fc8c63', '#fc8e64', '#fc9065', '#fd9266', '#fd9467', '#fd9668',
    '#fd9869', '#fd9a6a', '#fd9b6b', '#fe9d6c', '#fe9f6d', '#fea16e', '#fea36f', '#fea571',
    '#fea772', '#fea973', '#feaa74', '#feac76', '#feae77', '#feb078', '#feb27a', '#feb47b',
    '#feb67c', '#feb77e', '#feb97f', '#febb81', '#febd82', '#febf84', '#fec185', '#fec287',
    '#fec488', '#fec68a', '#fec88c', '#feca8d', '#fecc8f', '#fecd90', '#fecf92', '#fed194',
    '#fed395', '#fed597', '#fed799', '#fed89a', '#fdda9c', '#fddc9e', '#fddea0', '#fde0a1',
    '#fde2a3', '#fde3a5', '#fde5a7', '#fde7a9', '#fde9aa', '#fdebac', '#fcecae', '#fceeb0',
    '#fcf0b2', '#fcf2b4', '#fcf4b6', '#fcf6b8', '#fcf7b9', '#fcf9bb', '#fcfbbd', '#fcfdbf'
]);

ColorMapContainer.cividis = ColorMapContainer.fromStringList([
    '#00224e', '#00234f', '#002451', '#002553', '#002554', '#002656', '#002758', '#002859',
    '#00285b', '#00295d', '#002a5f', '#002a61', '#002b62', '#002c64', '#002c66', '#002d68',
    '#002e6a', '#002e6c', '#002f6d', '#00306f', '#003070', '#003170', '#003171', '#013271',
    '#053371', '#083370', '#0c3470', '#0f3570', '#123570', '#143670', '#163770', '#18376f',
    '#1a386f', '#1c396f', '#1e3a6f', '#203a6f', '#213b6e', '#233c6e', '#243c6e', '#263d6e',
    '#273e6e', '#293f6e', '#2a3f6d', '#2b406d', '#2d416d', '#2e416d', '#2f426d', '#31436d',
    '#32436d', '#33446d', '#34456c', '#35456c', '#36466c', '#38476c', '#39486c', '#3a486c',
    '#3b496c', '#3c4a6c', '#3d4a6c', '#3e4b6c', '#3f4c6c', '#404c6c', '#414d6c', '#424e6c',
    '#434e6c', '#444f6c', '#45506c', '#46516c', '#47516c', '#48526c', '#49536c', '#4a536c',
    '#4b546c', '#4c556c', '#4d556c', '#4e566c', '#4f576c', '#50576c', '#51586d', '#52596d',
    '#535a6d', '#545a6d', '#555b6d', '#555c6d', '#565c6d', '#575d6d', '#585e6d', '#595e6e',
    '#5a5f6e', '#5b606e', '#5c616e', '#5d616e', '#5e626e', '#5e636f', '#5f636f', '#60646f',
    '#61656f', '#62656f', '#636670', '#646770', '#656870', '#656870', '#666970', '#676a71',
    '#686a71', '#696b71', '#6a6c71', '#6b6d72', '#6c6d72', '#6c6e72', '#6d6f72', '#6e6f73',
    '#6f7073', '#707173', '#717274', '#727274', '#727374', '#737475', '#747475', '#757575',
    '#767676', '#777776', '#777777', '#787877', '#797977', '#7a7a78', '#7b7a78', '#7c7b78',
    '#7d7c78', '#7e7c78', '#7e7d78', '#7f7e78', '#807f78', '#817f78', '#828079', '#838179',
    '#848279', '#858279', '#868379', '#878478', '#888578', '#898578', '#8a8678', '#8b8778',
    '#8c8878', '#8d8878', '#8e8978', '#8f8a78', '#908b78', '#918b78', '#928c78', '#928d78',
    '#938e78', '#948e77', '#958f77', '#969077', '#979177', '#989277', '#999277', '#9a9376',
    '#9b9476', '#9c9576', '#9d9576', '#9e9676', '#9f9775', '#a09875', '#a19975', '#a29975',
    '#a39a74', '#a49b74', '#a59c74', '#a69c74', '#a79d73', '#a89e73', '#a99f73', '#aaa073',
    '#aba072', '#aca172', '#ada272', '#aea371', '#afa471', '#b0a571', '#b1a570', '#b3a670',
    '#b4a76f', '#b5a86f', '#b6a96f', '#b7a96e', '#b8aa6e', '#b9ab6d', '#baac6d', '#bbad6d',
    '#bcae6c', '#bdae6c', '#beaf6b', '#bfb06b', '#c0b16a', '#c1b26a', '#c2b369', '#c3b369',
    '#c4b468', '#c5b568', '#c6b667', '#c7b767', '#c8b866', '#c9b965', '#cbb965', '#ccba64',
    '#cdbb63', '#cebc63', '#cfbd62', '#d0be62', '#d1bf61', '#d2c060', '#d3c05f', '#d4c15f',
    '#d5c25e', '#d6c35d', '#d7c45c', '#d9c55c', '#dac65b', '#dbc75a', '#dcc859', '#ddc858',
    '#dec958', '#dfca57', '#e0cb56', '#e1cc55', '#e2cd54', '#e4ce53', '#e5cf52', '#e6d051',
    '#e7d150', '#e8d24f', '#e9d34e', '#ead34c', '#ebd44b', '#edd54a', '#eed649', '#efd748',
    '#f0d846', '#f1d945', '#f2da44', '#f3db42', '#f5dc41', '#f6dd3f', '#f7de3e', '#f8df3c',
    '#f9e03a', '#fbe138', '#fce236', '#fde334', '#fee434', '#fee535', '#fee636', '#fee838'
]);

ColorMapContainer.greys = ColorMapContainer.fromStringList([
    '#ffffff', '#ffffff', '#fefefe', '#fefefe', '#fdfdfd', '#fdfdfd', '#fcfcfc', '#fcfcfc',
    '#fbfbfb', '#fbfbfb', '#fafafa', '#fafafa', '#f9f9f9', '#f9f9f9', '#f8f8f8', '#f8f8f8',
    '#f7f7f7', '#f7f7f7', '#f7f7f7', '#f6f6f6', '#f6f6f6', '#f5f5f5', '#f5f5f5', '#f4f4f4',
    '#f4f4f4', '#f3f3f3', '#f3f3f3', '#f2f2f2', '#f2f2f2', '#f1f1f1', '#f1f1f1', '#f0f0f0',
    '#f0f0f0', '#efefef', '#eeeeee', '#eeeeee', '#ededed', '#ececec', '#ececec', '#ebebeb',
    '#eaeaea', '#e9e9e9', '#e9e9e9', '#e8e8e8', '#e7e7e7', '#e7e7e7', '#e6e6e6', '#e5e5e5',
    '#e4e4e4', '#e4e4e4', '#e3e3e3', '#e2e2e2', '#e1e1e1', '#e1e1e1', '#e0e0e0', '#dfdfdf',
    '#dfdfdf', '#dedede', '#dddddd', '#dcdcdc', '#dcdcdc', '#dbdbdb', '#dadada', '#dadada',
    '#d9d9d9', '#d8d8d8', '#d7d7d7', '#d6d6d6', '#d5d5d5', '#d4d4d4', '#d4d4d4', '#d3d3d3',
    '#d2d2d2', '#d1d1d1', '#d0d0d0', '#cfcfcf', '#cecece', '#cdcdcd', '#cccccc', '#cccccc',
    '#cbcbcb', '#cacaca', '#c9c9c9', '#c8c8c8', '#c7c7c7', '#c6c6c6', '#c5c5c5', '#c5c5c5',
    '#c4c4c4', '#c3c3c3', '#c2c2c2', '#c1c1c1', '#c0c0c0', '#bfbfbf', '#bebebe', '#bebebe',
    '#bdbdbd', '#bbbbbb', '#bababa', '#b9b9b9', '#b8b8b8', '#b6b6b6', '#b5b5b5', '#b4b4b4',
    '#b3b3b3', '#b2b2b2', '#b0b0b0', '#afafaf', '#aeaeae', '#adadad', '#ababab', '#aaaaaa',
    '#a9a9a9', '#a8a8a8', '#a7a7a7', '#a5a5a5', '#a4a4a4', '#a3a3a3', '#a2a2a2', '#a0a0a0',
    '#9f9f9f', '#9e9e9e', '#9d9d9d', '#9c9c9c', '#9a9a9a', '#999999', '#989898', '#979797',
    '#959595', '#949494', '#939393', '#929292', '#919191', '#909090', '#8f8f8f', '#8e8e8e',
    '#8d8d8d', '#8c8c8c', '#8a8a8a', '#898989', '#888888', '#878787', '#868686', '#858585',
    '#848484', '#838383', '#828282', '#818181', '#7f7f7f', '#7e7e7e', '#7d7d7d', '#7c7c7c',
    '#7b7b7b', '#7a7a7a', '#797979', '#787878', '#777777', '#767676', '#757575', '#737373',
    '#727272', '#717171', '#707070', '#6f6f6f', '#6e6e6e', '#6d6d6d', '#6c6c6c', '#6b6b6b',
    '#6a6a6a', '#696969', '#686868', '#676767', '#666666', '#656565', '#646464', '#636363',
    '#626262', '#616161', '#606060', '#5f5f5f', '#5e5e5e', '#5d5d5d', '#5c5c5c', '#5b5b5b',
    '#5a5a5a', '#585858', '#575757', '#565656', '#555555', '#545454', '#535353', '#525252',
    '#515151', '#505050', '#4e4e4e', '#4d4d4d', '#4b4b4b', '#4a4a4a', '#484848', '#474747',
    '#464646', '#444444', '#434343', '#414141', '#404040', '#3f3f3f', '#3d3d3d', '#3c3c3c',
    '#3a3a3a', '#393939', '#383838', '#363636', '#353535', '#333333', '#323232', '#303030',
    '#2f2f2f', '#2e2e2e', '#2c2c2c', '#2b2b2b', '#292929', '#282828', '#272727', '#252525',
    '#242424', '#232323', '#222222', '#212121', '#1f1f1f', '#1e1e1e', '#1d1d1d', '#1c1c1c',
    '#1b1b1b', '#1a1a1a', '#181818', '#171717', '#161616', '#151515', '#141414', '#131313',
    '#111111', '#101010', '#0f0f0f', '#0e0e0e', '#0d0d0d', '#0c0c0c', '#0a0a0a', '#090909',
    '#080808', '#070707', '#060606', '#050505', '#030303', '#020202', '#010101', '#000000'
]);

ColorMapContainer.gray = ColorMapContainer.fromStringList([
    '#000000', '#010101', '#020202', '#030303', '#040404', '#050505', '#060606', '#070707',
    '#080808', '#090909', '#0a0a0a', '#0b0b0b', '#0c0c0c', '#0d0d0d', '#0e0e0e', '#0f0f0f',
    '#101010', '#111111', '#121212', '#131313', '#141414', '#151515', '#161616', '#171717',
    '#181818', '#191919', '#1a1a1a', '#1b1b1b', '#1c1c1c', '#1d1d1d', '#1e1e1e', '#1f1f1f',
    '#202020', '#212121', '#222222', '#232323', '#242424', '#252525', '#262626', '#272727',
    '#282828', '#292929', '#2a2a2a', '#2b2b2b', '#2c2c2c', '#2d2d2d', '#2e2e2e', '#2f2f2f',
    '#303030', '#313131', '#323232', '#333333', '#343434', '#353535', '#363636', '#373737',
    '#383838', '#393939', '#3a3a3a', '#3b3b3b', '#3c3c3c', '#3d3d3d', '#3e3e3e', '#3f3f3f',
    '#404040', '#414141', '#424242', '#434343', '#444444', '#454545', '#464646', '#474747',
    '#484848', '#494949', '#4a4a4a', '#4b4b4b', '#4c4c4c', '#4d4d4d', '#4e4e4e', '#4f4f4f',
    '#505050', '#515151', '#525252', '#535353', '#545454', '#555555', '#565656', '#575757',
    '#585858', '#595959', '#5a5a5a', '#5b5b5b', '#5c5c5c', '#5d5d5d', '#5e5e5e', '#5f5f5f',
    '#606060', '#616161', '#626262', '#636363', '#646464', '#656565', '#666666', '#676767',
    '#686868', '#696969', '#6a6a6a', '#6b6b6b', '#6c6c6c', '#6d6d6d', '#6e6e6e', '#6f6f6f',
    '#707070', '#717171', '#727272', '#737373', '#747474', '#757575', '#767676', '#777777',
    '#787878', '#797979', '#7a7a7a', '#7b7b7b', '#7c7c7c', '#7d7d7d', '#7e7e7e', '#7f7f7f',
    '#808080', '#818181', '#828282', '#838383', '#848484', '#858585', '#868686', '#878787',
    '#888888', '#898989', '#8a8a8a', '#8b8b8b', '#8c8c8c', '#8d8d8d', '#8e8e8e', '#8f8f8f',
    '#909090', '#919191', '#929292', '#939393', '#949494', '#959595', '#969696', '#979797',
    '#989898', '#999999', '#9a9a9a', '#9b9b9b', '#9c9c9c', '#9d9d9d', '#9e9e9e', '#9f9f9f',
    '#a0a0a0', '#a1a1a1', '#a2a2a2', '#a3a3a3', '#a4a4a4', '#a5a5a5', '#a6a6a6', '#a7a7a7',
    '#a8a8a8', '#a9a9a9', '#aaaaaa', '#ababab', '#acacac', '#adadad', '#aeaeae', '#afafaf',
    '#b0b0b0', '#b1b1b1', '#b2b2b2', '#b3b3b3', '#b4b4b4', '#b5b5b5', '#b6b6b6', '#b7b7b7',
    '#b8b8b8', '#b9b9b9', '#bababa', '#bbbbbb', '#bcbcbc', '#bdbdbd', '#bebebe', '#bfbfbf',
    '#c0c0c0', '#c1c1c1', '#c2c2c2', '#c3c3c3', '#c4c4c4', '#c5c5c5', '#c6c6c6', '#c7c7c7',
    '#c8c8c8', '#c9c9c9', '#cacaca', '#cbcbcb', '#cccccc', '#cdcdcd', '#cecece', '#cfcfcf',
    '#d0d0d0', '#d1d1d1', '#d2d2d2', '#d3d3d3', '#d4d4d4', '#d5d5d5', '#d6d6d6', '#d7d7d7',
    '#d8d8d8', '#d9d9d9', '#dadada', '#dbdbdb', '#dcdcdc', '#dddddd', '#dedede', '#dfdfdf',
    '#e0e0e0', '#e1e1e1', '#e2e2e2', '#e3e3e3', '#e4e4e4', '#e5e5e5', '#e6e6e6', '#e7e7e7',
    '#e8e8e8', '#e9e9e9', '#eaeaea', '#ebebeb', '#ececec', '#ededed', '#eeeeee', '#efefef',
    '#f0f0f0', '#f1f1f1', '#f2f2f2', '#f3f3f3', '#f4f4f4', '#f5f5f5', '#f6f6f6', '#f7f7f7',
    '#f8f8f8', '#f9f9f9', '#fafafa', '#fbfbfb', '#fcfcfc', '#fdfdfd', '#fefefe', '#ffffff'
]);

ColorMapContainer.purples = ColorMapContainer.fromStringList([
    '#fcfbfd', '#fcfbfd', '#fbfafc', '#fbfafc', '#faf9fc', '#faf9fc', '#faf8fb', '#f9f8fb',
    '#f9f7fb', '#f8f7fb', '#f8f7fa', '#f8f6fa', '#f7f6fa', '#f7f5fa', '#f6f5f9', '#f6f4f9',
    '#f5f4f9', '#f5f4f9', '#f5f3f8', '#f4f3f8', '#f4f2f8', '#f3f2f8', '#f3f1f7', '#f3f1f7',
    '#f2f0f7', '#f2f0f7', '#f1f0f6', '#f1eff6', '#f1eff6', '#f0eef6', '#f0eef5', '#efedf5',
    '#efedf5', '#eeecf5', '#eeecf4', '#edebf4', '#ecebf4', '#eceaf3', '#ebe9f3', '#eae9f3',
    '#eae8f2', '#e9e8f2', '#e8e7f2', '#e8e6f2', '#e7e6f1', '#e6e5f1', '#e6e5f1', '#e5e4f0',
    '#e4e3f0', '#e4e3f0', '#e3e2ef', '#e2e2ef', '#e2e1ef', '#e1e0ee', '#e0e0ee', '#e0dfee',
    '#dfdfed', '#dedeed', '#dedded', '#ddddec', '#dcdcec', '#dcdcec', '#dbdbec', '#dadaeb',
    '#dadaeb', '#d9d9ea', '#d8d8ea', '#d7d7e9', '#d6d6e9', '#d5d5e9', '#d4d4e8', '#d3d3e8',
    '#d2d2e7', '#d1d2e7', '#d0d1e6', '#cfd0e6', '#cecfe5', '#cecee5', '#cdcde4', '#cccce4',
    '#cbcbe3', '#cacae3', '#c9c9e2', '#c8c8e2', '#c7c8e1', '#c6c7e1', '#c5c6e1', '#c4c5e0',
    '#c3c4e0', '#c2c3df', '#c1c2df', '#c0c1de', '#bfc0de', '#bebfdd', '#bebedd', '#bdbedc',
    '#bcbddc', '#bbbbdb', '#babadb', '#b9b9da', '#b8b8d9', '#b7b7d9', '#b6b6d8', '#b5b5d7',
    '#b4b4d7', '#b3b3d6', '#b2b2d5', '#b1b1d5', '#b0afd4', '#afaed4', '#aeadd3', '#aeacd2',
    '#adabd2', '#acaad1', '#aba9d0', '#aaa8d0', '#a9a7cf', '#a8a6cf', '#a7a4ce', '#a6a3cd',
    '#a5a2cd', '#a4a1cc', '#a3a0cb', '#a29fcb', '#a19eca', '#a09dca', '#9f9cc9', '#9e9bc8',
    '#9e9ac8', '#9d99c7', '#9c98c7', '#9b97c6', '#9a96c6', '#9995c6', '#9894c5', '#9793c5',
    '#9692c4', '#9591c4', '#9490c3', '#9390c3', '#928fc3', '#918ec2', '#908dc2', '#8f8cc1',
    '#8e8bc1', '#8e8ac0', '#8d89c0', '#8c88bf', '#8b87bf', '#8a86bf', '#8986be', '#8885be',
    '#8784bd', '#8683bd', '#8582bc', '#8481bc', '#8380bb', '#827fbb', '#817ebb', '#807dba',
    '#807cba', '#7f7bb9', '#7e79b8', '#7d78b7', '#7d77b7', '#7c75b6', '#7b74b5', '#7b72b4',
    '#7a71b4', '#7970b3', '#796eb2', '#786db2', '#776cb1', '#776ab0', '#7669af', '#7567af',
    '#7566ae', '#7465ad', '#7363ad', '#7262ac', '#7261ab', '#715faa', '#705eaa', '#705ca9',
    '#6f5ba8', '#6e5aa8', '#6e58a7', '#6d57a6', '#6c55a5', '#6c54a5', '#6b53a4', '#6a51a3',
    '#6950a3', '#694fa2', '#684da1', '#674ca1', '#674ba0', '#66499f', '#65489f', '#65479e',
    '#64459e', '#63449d', '#63439c', '#62429c', '#61409b', '#613f9a', '#603e9a', '#5f3c99',
    '#5e3b98', '#5e3a98', '#5d3897', '#5c3797', '#5c3696', '#5b3495', '#5a3395', '#5a3294',
    '#593093', '#582f93', '#582e92', '#572c92', '#562b91', '#552a90', '#552890', '#54278f',
    '#53268f', '#53258e', '#52238d', '#51228d', '#51218c', '#50208c', '#4f1f8b', '#4f1d8b',
    '#4e1c8a', '#4d1b89', '#4d1a89', '#4c1888', '#4c1788', '#4b1687', '#4a1587', '#4a1486',
    '#491285', '#481185', '#481084', '#470f84', '#460d83', '#460c83', '#450b82', '#440a82',
    '#440981', '#430780', '#420680', '#42057f', '#41047f', '#40027e', '#40017e', '#3f007d'
]);

ColorMapContainer.blues = ColorMapContainer.fromStringList([
    '#f7fbff', '#f6faff', '#f5fafe', '#f5f9fe', '#f4f9fe', '#f3f8fe', '#f2f8fd', '#f2f7fd',
    '#f1f7fd', '#f0f6fd', '#eff6fc', '#eef5fc', '#eef5fc', '#edf4fc', '#ecf4fb', '#ebf3fb',
    '#eaf3fb', '#eaf2fb', '#e9f2fa', '#e8f1fa', '#e7f1fa', '#e7f0fa', '#e6f0f9', '#e5eff9',
    '#e4eff9', '#e3eef9', '#e3eef8', '#e2edf8', '#e1edf8', '#e0ecf8', '#dfecf7', '#dfebf7',
    '#deebf7', '#ddeaf7', '#dceaf6', '#dce9f6', '#dbe9f6', '#dae8f6', '#d9e8f5', '#d9e7f5',
    '#d8e7f5', '#d7e6f5', '#d6e6f4', '#d6e5f4', '#d5e5f4', '#d4e4f4', '#d3e4f3', '#d3e3f3',
    '#d2e3f3', '#d1e2f3', '#d0e2f2', '#d0e1f2', '#cfe1f2', '#cee0f2', '#cde0f1', '#cddff1',
    '#ccdff1', '#cbdef1', '#cadef0', '#caddf0', '#c9ddf0', '#c8dcf0', '#c7dcef', '#c7dbef',
    '#c6dbef', '#c4daee', '#c3daee', '#c2d9ee', '#c1d9ed', '#bfd8ed', '#bed8ec', '#bdd7ec',
    '#bcd7eb', '#bad6eb', '#b9d6ea', '#b8d5ea', '#b7d4ea', '#b5d4e9', '#b4d3e9', '#b3d3e8',
    '#b2d2e8', '#b0d2e7', '#afd1e7', '#aed1e7', '#add0e6', '#abd0e6', '#aacfe5', '#a9cfe5',
    '#a8cee4', '#a6cee4', '#a5cde3', '#a4cce3', '#a3cce3', '#a1cbe2', '#a0cbe2', '#9fcae1',
    '#9dcae1', '#9cc9e1', '#9ac8e0', '#99c7e0', '#97c6df', '#95c5df', '#94c4df', '#92c4de',
    '#91c3de', '#8fc2de', '#8dc1dd', '#8cc0dd', '#8abfdd', '#89bedc', '#87bddc', '#85bcdc',
    '#84bcdb', '#82bbdb', '#81badb', '#7fb9da', '#7db8da', '#7cb7da', '#7ab6d9', '#79b5d9',
    '#77b5d9', '#75b4d8', '#74b3d8', '#72b2d8', '#71b1d7', '#6fb0d7', '#6dafd7', '#6caed6',
    '#6aaed6', '#69add5', '#68acd5', '#66abd4', '#65aad4', '#64a9d3', '#63a8d3', '#61a7d2',
    '#60a7d2', '#5fa6d1', '#5da5d1', '#5ca4d0', '#5ba3d0', '#5aa2cf', '#58a1cf', '#57a0ce',
    '#56a0ce', '#549fcd', '#539ecd', '#529dcc', '#519ccc', '#4f9bcb', '#4e9acb', '#4d99ca',
    '#4b98ca', '#4a98c9', '#4997c9', '#4896c8', '#4695c8', '#4594c7', '#4493c7', '#4292c6',
    '#4191c6', '#4090c5', '#3f8fc5', '#3e8ec4', '#3d8dc4', '#3c8cc3', '#3b8bc2', '#3a8ac2',
    '#3989c1', '#3888c1', '#3787c0', '#3686c0', '#3585bf', '#3484bf', '#3383be', '#3282be',
    '#3181bd', '#3080bd', '#2f7fbc', '#2e7ebc', '#2d7dbb', '#2c7cba', '#2b7bba', '#2a7ab9',
    '#2979b9', '#2777b8', '#2676b8', '#2575b7', '#2474b7', '#2373b6', '#2272b6', '#2171b5',
    '#2070b4', '#206fb4', '#1f6eb3', '#1e6db2', '#1d6cb1', '#1c6bb0', '#1c6ab0', '#1b69af',
    '#1a68ae', '#1967ad', '#1966ad', '#1865ac', '#1764ab', '#1663aa', '#1562a9', '#1561a9',
    '#1460a8', '#135fa7', '#125ea6', '#125da6', '#115ca5', '#105ba4', '#0f5aa3', '#0e59a2',
    '#0e58a2', '#0d57a1', '#0c56a0', '#0b559f', '#0a549e', '#0a539e', '#09529d', '#08519c',
    '#08509b', '#084f99', '#084e98', '#084d96', '#084c95', '#084b93', '#084a91', '#084990',
    '#08488e', '#08478d', '#08468b', '#08458a', '#084488', '#084387', '#084285', '#084184',
    '#084082', '#083e81', '#083d7f', '#083c7d', '#083b7c', '#083a7a', '#083979', '#083877',
    '#083776', '#083674', '#083573', '#083471', '#083370', '#08326e', '#08316d', '#08306b'
]);

ColorMapContainer.greens = ColorMapContainer.fromStringList([
    '#f7fcf5', '#f6fcf4', '#f6fcf4', '#f5fbf3', '#f5fbf2', '#f4fbf2', '#f4fbf1', '#f3faf0',
    '#f2faf0', '#f2faef', '#f1faee', '#f1faee', '#f0f9ed', '#f0f9ec', '#eff9ec', '#eff9eb',
    '#eef8ea', '#edf8ea', '#edf8e9', '#ecf8e8', '#ecf8e8', '#ebf7e7', '#ebf7e7', '#eaf7e6',
    '#e9f7e5', '#e9f7e5', '#e8f6e4', '#e8f6e3', '#e7f6e3', '#e7f6e2', '#e6f5e1', '#e5f5e1',
    '#e5f5e0', '#e4f5df', '#e3f4de', '#e2f4dd', '#e1f3dc', '#e0f3db', '#dff3da', '#def2d9',
    '#ddf2d8', '#dcf2d7', '#dbf1d6', '#dbf1d5', '#daf0d4', '#d9f0d3', '#d8f0d2', '#d7efd1',
    '#d6efd0', '#d5efcf', '#d4eece', '#d3eecd', '#d2edcc', '#d1edcb', '#d0edca', '#cfecc9',
    '#ceecc8', '#cdecc7', '#ccebc6', '#cbebc5', '#cbeac4', '#caeac3', '#c9eac2', '#c8e9c1',
    '#c7e9c0', '#c6e8bf', '#c4e8bd', '#c3e7bc', '#c2e7bb', '#c1e6ba', '#c0e6b9', '#bee5b8',
    '#bde5b6', '#bce4b5', '#bbe4b4', '#bae3b3', '#b8e3b2', '#b7e2b1', '#b6e2af', '#b5e1ae',
    '#b4e1ad', '#b2e0ac', '#b1e0ab', '#b0dfaa', '#afdfa8', '#aedea7', '#acdea6', '#abdda5',
    '#aadda4', '#a9dca3', '#a8dca2', '#a7dba0', '#a5db9f', '#a4da9e', '#a3da9d', '#a2d99c',
    '#a0d99b', '#9fd899', '#9ed798', '#9cd797', '#9bd696', '#99d595', '#98d594', '#97d492',
    '#95d391', '#94d390', '#92d28f', '#91d28e', '#90d18d', '#8ed08b', '#8dd08a', '#8bcf89',
    '#8ace88', '#88ce87', '#87cd86', '#86cc85', '#84cc83', '#83cb82', '#81ca81', '#80ca80',
    '#7fc97f', '#7dc87e', '#7cc87c', '#7ac77b', '#79c67a', '#78c679', '#76c578', '#75c477',
    '#73c476', '#72c375', '#70c274', '#6ec173', '#6dc072', '#6bc072', '#6abf71', '#68be70',
    '#66bd6f', '#65bd6f', '#63bc6e', '#62bb6d', '#60ba6c', '#5eb96b', '#5db96b', '#5bb86a',
    '#5ab769', '#58b668', '#56b567', '#55b567', '#53b466', '#52b365', '#50b264', '#4eb264',
    '#4db163', '#4bb062', '#4aaf61', '#48ae60', '#46ae60', '#45ad5f', '#43ac5e', '#42ab5d',
    '#40aa5d', '#3fa95c', '#3fa85b', '#3ea75a', '#3da65a', '#3ca559', '#3ba458', '#3aa357',
    '#39a257', '#38a156', '#37a055', '#369f54', '#359e53', '#349d53', '#339c52', '#329b51',
    '#319a50', '#309950', '#2f984f', '#2f974e', '#2e964d', '#2d954d', '#2c944c', '#2b934b',
    '#2a924a', '#29914a', '#289049', '#278f48', '#268e47', '#258d47', '#248c46', '#238b45',
    '#228a44', '#218944', '#208843', '#1f8742', '#1e8741', '#1d8640', '#1c8540', '#1a843f',
    '#19833e', '#18823d', '#17813d', '#16803c', '#157f3b', '#147e3a', '#137d39', '#127c39',
    '#117b38', '#107a37', '#0e7936', '#0d7836', '#0c7735', '#0b7734', '#0a7633', '#097532',
    '#087432', '#077331', '#067230', '#05712f', '#03702e', '#026f2e', '#016e2d', '#006d2c',
    '#006c2c', '#006b2b', '#00692a', '#00682a', '#006729', '#006529', '#006428', '#006328',
    '#006227', '#006027', '#005f26', '#005e26', '#005c25', '#005b25', '#005a24', '#005924',
    '#005723', '#005622', '#005522', '#005321', '#005221', '#005120', '#005020', '#004e1f',
    '#004d1f', '#004c1e', '#004a1e', '#00491d', '#00481d', '#00471c', '#00451c', '#00441b'
]);

ColorMapContainer.oranges = ColorMapContainer.fromStringList([
    '#fff5eb', '#fff5ea', '#fff4e9', '#fff4e8', '#fff3e7', '#fff3e6', '#fff2e6', '#fff2e5',
    '#fff1e4', '#fff1e3', '#fff0e2', '#fff0e1', '#ffefe0', '#ffefdf', '#ffeede', '#ffeedd',
    '#feeddc', '#feeddc', '#feeddb', '#feecda', '#feecd9', '#feebd8', '#feebd7', '#feead6',
    '#feead5', '#fee9d4', '#fee9d3', '#fee8d2', '#fee8d2', '#fee7d1', '#fee7d0', '#fee6cf',
    '#fee6ce', '#fee5cc', '#fee5cb', '#fee4ca', '#fee3c8', '#fee2c7', '#fee2c6', '#fee1c4',
    '#fee0c3', '#fee0c1', '#fedfc0', '#fedebf', '#fedebd', '#feddbc', '#fedcbb', '#fedcb9',
    '#fddbb8', '#fddab6', '#fdd9b5', '#fdd9b4', '#fdd8b2', '#fdd7b1', '#fdd7af', '#fdd6ae',
    '#fdd5ad', '#fdd5ab', '#fdd4aa', '#fdd3a9', '#fdd3a7', '#fdd2a6', '#fdd1a4', '#fdd1a3',
    '#fdd0a2', '#fdcfa0', '#fdce9e', '#fdcd9c', '#fdcb9b', '#fdca99', '#fdc997', '#fdc895',
    '#fdc794', '#fdc692', '#fdc590', '#fdc48f', '#fdc38d', '#fdc28b', '#fdc189', '#fdc088',
    '#fdbf86', '#fdbe84', '#fdbd83', '#fdbb81', '#fdba7f', '#fdb97d', '#fdb87c', '#fdb77a',
    '#fdb678', '#fdb576', '#fdb475', '#fdb373', '#fdb271', '#fdb170', '#fdb06e', '#fdaf6c',
    '#fdae6a', '#fdad69', '#fdac67', '#fdab66', '#fda965', '#fda863', '#fda762', '#fda660',
    '#fda55f', '#fda45d', '#fda35c', '#fda25a', '#fda159', '#fda057', '#fd9f56', '#fd9e54',
    '#fd9d53', '#fd9c51', '#fd9b50', '#fd9a4e', '#fd994d', '#fd984b', '#fd974a', '#fd9649',
    '#fd9547', '#fd9446', '#fd9344', '#fd9243', '#fd9141', '#fd9040', '#fd8f3e', '#fd8e3d',
    '#fd8c3b', '#fc8b3a', '#fc8a39', '#fc8937', '#fb8836', '#fb8735', '#fb8634', '#fa8532',
    '#fa8331', '#f98230', '#f9812e', '#f9802d', '#f87f2c', '#f87e2b', '#f87d29', '#f77b28',
    '#f77a27', '#f67925', '#f67824', '#f67723', '#f57622', '#f57520', '#f5741f', '#f4721e',
    '#f4711c', '#f3701b', '#f36f1a', '#f36e19', '#f26d17', '#f26c16', '#f26b15', '#f16913',
    '#f16813', '#f06712', '#ef6612', '#ee6511', '#ee6410', '#ed6310', '#ec620f', '#eb610f',
    '#eb600e', '#ea5f0e', '#e95e0d', '#e85d0c', '#e75c0c', '#e75b0b', '#e65a0b', '#e5590a',
    '#e4580a', '#e45709', '#e35608', '#e25508', '#e15407', '#e15307', '#e05206', '#df5106',
    '#de5005', '#de4e05', '#dd4d04', '#dc4c03', '#db4b03', '#db4a02', '#da4902', '#d94801',
    '#d84801', '#d64701', '#d54601', '#d34601', '#d14501', '#d04501', '#ce4401', '#cd4401',
    '#cb4302', '#c94202', '#c84202', '#c64102', '#c54102', '#c34002', '#c14002', '#c03f02',
    '#be3f02', '#bd3e02', '#bb3d02', '#b93d02', '#b83c02', '#b63c02', '#b53b02', '#b33b02',
    '#b13a03', '#b03903', '#ae3903', '#ad3803', '#ab3803', '#a93703', '#a83703', '#a63603',
    '#a53603', '#a43503', '#a23503', '#a13403', '#a03403', '#9f3303', '#9e3303', '#9c3203',
    '#9b3203', '#9a3103', '#993103', '#973003', '#963003', '#952f03', '#942f03', '#932f03',
    '#912e04', '#902e04', '#8f2d04', '#8e2d04', '#8c2c04', '#8b2c04', '#8a2b04', '#892b04',
    '#882a04', '#862a04', '#852904', '#842904', '#832804', '#812804', '#802704', '#7f2704'
]);

ColorMapContainer.reds = ColorMapContainer.fromStringList([
    '#fff5f0', '#fff4ef', '#fff4ee', '#fff3ed', '#fff2ec', '#fff2eb', '#fff1ea', '#fff0e9',
    '#fff0e8', '#ffefe8', '#ffeee7', '#ffeee6', '#ffede5', '#ffece4', '#ffece3', '#ffebe2',
    '#feeae1', '#feeae0', '#fee9df', '#fee8de', '#fee8dd', '#fee7dc', '#fee7db', '#fee6da',
    '#fee5d9', '#fee5d8', '#fee4d8', '#fee3d7', '#fee3d6', '#fee2d5', '#fee1d4', '#fee1d3',
    '#fee0d2', '#fedfd0', '#fedecf', '#fedccd', '#fedbcc', '#fedaca', '#fed9c9', '#fed8c7',
    '#fdd7c6', '#fdd5c4', '#fdd4c2', '#fdd3c1', '#fdd2bf', '#fdd1be', '#fdd0bc', '#fdcebb',
    '#fdcdb9', '#fdccb8', '#fdcbb6', '#fdcab5', '#fdc9b3', '#fdc7b2', '#fdc6b0', '#fdc5ae',
    '#fcc4ad', '#fcc3ab', '#fcc2aa', '#fcc1a8', '#fcbfa7', '#fcbea5', '#fcbda4', '#fcbca2',
    '#fcbba1', '#fcb99f', '#fcb89e', '#fcb79c', '#fcb69b', '#fcb499', '#fcb398', '#fcb296',
    '#fcb095', '#fcaf93', '#fcae92', '#fcad90', '#fcab8f', '#fcaa8d', '#fca98c', '#fca78b',
    '#fca689', '#fca588', '#fca486', '#fca285', '#fca183', '#fca082', '#fc9e80', '#fc9d7f',
    '#fc9c7d', '#fc9b7c', '#fc997a', '#fc9879', '#fc9777', '#fc9576', '#fc9474', '#fc9373',
    '#fc9272', '#fc9070', '#fc8f6f', '#fc8e6e', '#fc8d6d', '#fc8b6b', '#fc8a6a', '#fc8969',
    '#fc8767', '#fc8666', '#fc8565', '#fc8464', '#fc8262', '#fc8161', '#fc8060', '#fc7f5f',
    '#fb7d5d', '#fb7c5c', '#fb7b5b', '#fb7a5a', '#fb7858', '#fb7757', '#fb7656', '#fb7555',
    '#fb7353', '#fb7252', '#fb7151', '#fb7050', '#fb6e4e', '#fb6d4d', '#fb6c4c', '#fb6b4b',
    '#fb694a', '#fa6849', '#fa6648', '#fa6547', '#f96346', '#f96245', '#f96044', '#f85f43',
    '#f85d42', '#f75c41', '#f75b40', '#f7593f', '#f6583e', '#f6563d', '#f6553c', '#f5533b',
    '#f5523a', '#f4503a', '#f44f39', '#f44d38', '#f34c37', '#f34a36', '#f34935', '#f24734',
    '#f24633', '#f14432', '#f14331', '#f14130', '#f0402f', '#f03f2e', '#f03d2d', '#ef3c2c',
    '#ee3a2c', '#ed392b', '#ec382b', '#eb372a', '#ea362a', '#e93529', '#e83429', '#e63328',
    '#e53228', '#e43027', '#e32f27', '#e22e27', '#e12d26', '#e02c26', '#de2b25', '#dd2a25',
    '#dc2924', '#db2824', '#da2723', '#d92523', '#d82422', '#d72322', '#d52221', '#d42121',
    '#d32020', '#d21f20', '#d11e1f', '#d01d1f', '#cf1c1f', '#ce1a1e', '#cc191e', '#cb181d',
    '#ca181d', '#c9181d', '#c8171c', '#c7171c', '#c5171c', '#c4161c', '#c3161b', '#c2161b',
    '#c1161b', '#bf151b', '#be151a', '#bd151a', '#bc141a', '#bb141a', '#b91419', '#b81419',
    '#b71319', '#b61319', '#b51318', '#b31218', '#b21218', '#b11218', '#b01217', '#af1117',
    '#ad1117', '#ac1117', '#ab1016', '#aa1016', '#a91016', '#a81016', '#a60f15', '#a50f15',
    '#a30f15', '#a10e15', '#9f0e14', '#9d0d14', '#9c0d14', '#9a0c14', '#980c13', '#960b13',
    '#940b13', '#920a13', '#900a12', '#8e0912', '#8c0912', '#8a0812', '#880811', '#860811',
    '#840711', '#820711', '#800610', '#7e0610', '#7c0510', '#7a0510', '#79040f', '#77040f',
    '#75030f', '#73030f', '#71020e', '#6f020e', '#6d010e', '#6b010e', '#69000d', '#67000d'
]);

ColorMapContainer.rdYlBu = ColorMapContainer.fromStringList([
    '#a50026', '#a70226', '#a90426', '#ab0626', '#ad0826', '#af0926', '#b10b26', '#b30d26',
    '#b50f26', '#b71126', '#b91326', '#bb1526', '#bd1726', '#be1827', '#c01a27', '#c21c27',
    '#c41e27', '#c62027', '#c82227', '#ca2427', '#cc2627', '#ce2827', '#d02927', '#d22b27',
    '#d42d27', '#d62f27', '#d83128', '#d93429', '#da362a', '#db382b', '#dc3b2c', '#dd3d2d',
    '#de402e', '#e0422f', '#e14430', '#e24731', '#e34933', '#e44c34', '#e54e35', '#e65036',
    '#e75337', '#e95538', '#ea5739', '#eb5a3a', '#ec5c3b', '#ed5f3c', '#ee613e', '#ef633f',
    '#f16640', '#f26841', '#f36b42', '#f46d43', '#f47044', '#f57245', '#f57547', '#f57748',
    '#f67a49', '#f67c4a', '#f67f4b', '#f7814c', '#f7844e', '#f8864f', '#f88950', '#f88c51',
    '#f98e52', '#f99153', '#f99355', '#fa9656', '#fa9857', '#fa9b58', '#fb9d59', '#fba05b',
    '#fba35c', '#fca55d', '#fca85e', '#fcaa5f', '#fdad60', '#fdaf62', '#fdb164', '#fdb366',
    '#fdb567', '#fdb769', '#fdb96b', '#fdbb6d', '#fdbd6f', '#fdbf71', '#fdc173', '#fdc374',
    '#fdc576', '#fdc778', '#fec87a', '#feca7c', '#fecc7e', '#fece7f', '#fed081', '#fed283',
    '#fed485', '#fed687', '#fed889', '#feda8a', '#fedc8c', '#fede8e', '#fee090', '#fee192',
    '#fee294', '#fee496', '#fee597', '#fee699', '#fee79b', '#fee99d', '#feea9f', '#feeba1',
    '#feeca2', '#feeda4', '#feefa6', '#fff0a8', '#fff1aa', '#fff2ac', '#fff3ad', '#fff5af',
    '#fff6b1', '#fff7b3', '#fff8b5', '#fffab7', '#fffbb9', '#fffcba', '#fffdbc', '#fffebe',
    '#feffc0', '#fdfec2', '#fcfec5', '#fbfdc7', '#fafdc9', '#f8fccb', '#f7fcce', '#f6fbd0',
    '#f5fbd2', '#f3fbd4', '#f2fad6', '#f1fad9', '#f0f9db', '#eff9dd', '#edf8df', '#ecf8e2',
    '#ebf7e4', '#eaf7e6', '#e9f6e8', '#e7f6eb', '#e6f5ed', '#e5f5ef', '#e4f4f1', '#e2f4f4',
    '#e1f3f6', '#e0f3f8', '#def2f7', '#dcf1f7', '#daf0f6', '#d8eff6', '#d6eef5', '#d4edf4',
    '#d1ecf4', '#cfebf3', '#cdeaf3', '#cbe9f2', '#c9e8f2', '#c7e7f1', '#c5e6f0', '#c3e5f0',
    '#c1e4ef', '#bfe3ef', '#bde2ee', '#bbe1ed', '#b9e0ed', '#b6dfec', '#b4deec', '#b2ddeb',
    '#b0dcea', '#aedbea', '#acdae9', '#aad8e9', '#a8d6e8', '#a6d5e7', '#a3d3e6', '#a1d1e5',
    '#9fd0e4', '#9dcee3', '#9bcce2', '#99cae1', '#97c9e0', '#94c7df', '#92c5de', '#90c3dd',
    '#8ec2dc', '#8cc0db', '#8abeda', '#87bdd9', '#85bbd9', '#83b9d8', '#81b7d7', '#7fb6d6',
    '#7db4d5', '#7ab2d4', '#78b0d3', '#76afd2', '#74add1', '#72abd0', '#70a9cf', '#6ea6ce',
    '#6da4cc', '#6ba2cb', '#69a0ca', '#679ec9', '#659bc8', '#6399c7', '#6297c6', '#6095c4',
    '#5e93c3', '#5c90c2', '#5a8ec1', '#588cc0', '#578abf', '#5588be', '#5385bd', '#5183bb',
    '#4f81ba', '#4d7fb9', '#4b7db8', '#4a7ab7', '#4878b6', '#4676b5', '#4574b3', '#4471b2',
    '#436fb1', '#426cb0', '#416aaf', '#4167ad', '#4065ac', '#3f62ab', '#3e60aa', '#3e5ea8',
    '#3d5ba7', '#3c59a6', '#3b56a5', '#3a54a4', '#3a51a2', '#394fa1', '#384ca0', '#374a9f',
    '#36479e', '#36459c', '#35429b', '#34409a', '#333d99', '#333b97', '#323896', '#313695'
]);


/***/ }),

/***/ "./esm/layers/fits_image.js":
/*!**********************************!*\
  !*** ./esm/layers/fits_image.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FitsImage: () => (/* binding */ FitsImage)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _web_file_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../web_file.js */ "./esm/web_file.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../coordinates.js */ "./esm/coordinates.js");
/* harmony import */ var _wcs_image_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./wcs_image.js */ "./esm/layers/wcs_image.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A FITS image.








// wwtlib.FitsImage

function FitsImage(dataset, file, blob, callMeBack) {
    this.errored = false;
    this.numAxis = 0;
    this.histogramMaxCount = 0;
    this.sourceBlob = null;
    this.header = {};
    this.position = 0;
    this.bufferSize = 1;
    this._parseSuccessful$1 = false;
    _wcs_image_js__WEBPACK_IMPORTED_MODULE_4__.WcsImage.call(this);
    this.dataset = dataset;
    this.fitsProperties = dataset.get_fitsProperties();
    this._callBack$1 = callMeBack;
    this.filename = file;
    if (blob != null) {
        this._readFromBlob$1(blob);
    }
    else {
        this.getFile(file);
    }
}

FitsImage.naN = 0 / 0;

var FitsImage$ = {
    getFile: function (url) {
        this._webFile$1 = new _web_file_js__WEBPACK_IMPORTED_MODULE_2__.WebFile(url);
        this._webFile$1.responseType = 'blob';
        this._webFile$1.onStateChange = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('fileStateChange', this);
        this._webFile$1.send();
    },

    fileStateChange: function () {
        if (this._webFile$1.get_state() === 2) {
            this.errored = true;
            if (this._callBack$1 != null) {
                this._callBack$1(this);
            }
        } else if (this._webFile$1.get_state() === 1) {
            var mainBlob = this._webFile$1.getBlob();
            this._readFromBlob$1(mainBlob);
        }
    },
    _readFromBlob$1: function (blob) {
        var $this = this;

        this.sourceBlob = blob;
        var chunck = new FileReader();
        chunck.onloadend = function (e) {
            $this.readFromBin(new DataView(chunck.result));
            $this.errored = !$this._parseSuccessful$1;
            if ($this._callBack$1 != null) {
                $this._callBack$1($this);
            }
        };
        chunck.readAsArrayBuffer(blob);
    },
    _readByteString$1: function (dataView, count) {
        var data = '';
        for (var i = 0; i < count; i++) {
            data += String.fromCharCode(dataView.getUint8(this.position));
            this.position++;
        }
        return data;
    },
    _validateFitsSimple$1: function (dataView) {
        var data = this._readByteString$1(dataView, 8);
        var keyword = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trimEnd(data);
        this.position -= 8;
        return keyword.toUpperCase() === 'SIMPLE';
    },

    readFromBin: function (dataView) {
        if (!this._validateFitsSimple$1(dataView)) {
            console.log('The requested file is not a valid FITS file.');
            return;
        }
        var foundEnd = false;
        while (!foundEnd) {
            for (var i = 0; i < 36; i++) {
                var data = this._readByteString$1(dataView, 80);
                if (!foundEnd) {
                    var keyword = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trimEnd(data.substring(0, 8));
                    var values = data.substring(10).split('/');
                    if (keyword.toUpperCase() === 'END') {
                        foundEnd = true;
                        // Check for XTENSION
                        i++;
                        data = this._readByteString$1(dataView, 80);
                        while (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.whitespace(data)) {
                            i++;
                            data = this._readByteString$1(dataView, 80);
                        }
                        keyword = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trimEnd(data.substring(0, 8));
                        if (keyword.toUpperCase() === 'XTENSION') {
                            // We have additional headers
                            foundEnd = false;
                        }
                        else {
                            // Rewind these 80 bytes which could be data
                            this.position -= 80;
                        }
                    }
                    else {
                        this._addKeyword$1(keyword, values);
                    }
                }
            }
        }
        if (!foundEnd) {
            console.log('Unable to parse requested FITS file.');
            return;
        }
        this.numAxis = parseInt(this.header['NAXIS']);
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'BLANK')) {
            this.fitsProperties.blankValue = parseFloat(this.header['BLANK']);
            this.fitsProperties.containsBlanks = true;
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'BZERO')) {
            this.fitsProperties.bZero = parseFloat(this.header['BZERO']);
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'BSCALE')) {
            this.fitsProperties.bScale = parseFloat(this.header['BSCALE']);
        }
        this.axisSize = new Array(this.numAxis);
        for (var axis = 0; axis < this.numAxis; axis++) {
            this.axisSize[axis] = parseInt(this.header[_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('NAXIS{0}', axis + 1)]);
            this.bufferSize *= this.axisSize[axis];
        }
        var bitpix = parseInt(this.header['BITPIX']);
        this.readDataUnit(dataView, bitpix);
        if (this.numAxis > 1) {
            this.sizeX = this.axisSize[0];
            this.sizeY = this.axisSize[1];
            this.histogram = this.computeHistogram(256);
            this.histogramMaxCount = this.histogram[256];
        }
        this.computeWcs();
        this._parseSuccessful$1 = true;
    },
    _addKeyword$1: function (keyword, values) {
        if (keyword !== 'CONTINUE' && keyword !== 'COMMENT' && keyword !== 'HISTORY' && !_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(keyword)) {
            try {
                if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, keyword)) {
                    this.header[keyword] = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(values[0]);
                }
                else {
                    this.header[keyword.toUpperCase()] = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(values[0]);
                }
            }
            catch ($e1) {
            }
        }
    },

    readDataUnit: function (dataView, bitpix) {
        this.dataUnit = new Float32Array(this.bufferSize);
        switch (bitpix) {
            case -64:
                this.readDataUnitFloat64(dataView);
                break;
            case -32:
                this.readDataUnitFloat32(dataView);
                break;
            case 8:
                this.readDataUnitUint8(dataView);
                break;
            case 16:
                this.readDataUnitInt16(dataView);
                break;
            case 32:
                this.readDataUnitInt32(dataView);
                break;
            case 64:
                // 64 bit integers not supported by Safari
                console.log('64 bit integer FITS are not yet supported');
                break;
        }
    },

    readDataUnitFloat64: function (dataView) {
        var i = 0;
        while (this.position < dataView.byteLength) {
            this.dataUnit[i] = dataView.getFloat64(this.position, false);
            var physicalValue = this.dataUnit[i] * this.fitsProperties.bScale + this.fitsProperties.bZero;
            if (this.fitsProperties.minVal > physicalValue) {
                this.fitsProperties.minVal = physicalValue;
            }
            if (this.fitsProperties.maxVal < physicalValue) {
                this.fitsProperties.maxVal = physicalValue;
            }
            i++;
            this.position += 8;
        }
        this.fitsProperties.lowerCut = this.fitsProperties.minVal;
        this.fitsProperties.upperCut = this.fitsProperties.maxVal;
    },

    readDataUnitFloat32: function (dataView) {
        var i = 0;
        while (this.position < dataView.byteLength) {
            this.dataUnit[i] = dataView.getFloat32(this.position, false);
            var physicalValue = this.dataUnit[i] * this.fitsProperties.bScale + this.fitsProperties.bZero;
            if (this.fitsProperties.minVal > physicalValue) {
                this.fitsProperties.minVal = physicalValue;
            }
            if (this.fitsProperties.maxVal < physicalValue) {
                this.fitsProperties.maxVal = physicalValue;
            }
            i++;
            this.position += 4;
        }
        this.fitsProperties.lowerCut = this.fitsProperties.minVal;
        this.fitsProperties.upperCut = this.fitsProperties.maxVal;
    },

    readDataUnitUint8: function (dataView) {
        var i = 0;
        while (this.position < dataView.byteLength) {
            this.dataUnit[i] = dataView.getUint8(this.position);
            if (this.fitsProperties.minVal > this.dataUnit[i]) {
                this.fitsProperties.minVal = this.dataUnit[i];
            }
            if (this.fitsProperties.maxVal < this.dataUnit[i]) {
                this.fitsProperties.maxVal = this.dataUnit[i];
            }
            i++;
            this.position += 1;
        }
        this.fitsProperties.lowerCut = this.fitsProperties.minVal;
        this.fitsProperties.upperCut = this.fitsProperties.maxVal;
    },

    readDataUnitInt16: function (dataView) {
        var i = 0;
        while (this.position < dataView.byteLength) {
            this.dataUnit[i] = dataView.getInt16(this.position, false);
            if (this.fitsProperties.minVal > this.dataUnit[i]) {
                this.fitsProperties.minVal = this.dataUnit[i];
            }
            if (this.fitsProperties.maxVal < this.dataUnit[i]) {
                this.fitsProperties.maxVal = this.dataUnit[i];
            }
            i++;
            this.position += 2;
        }
        this.fitsProperties.lowerCut = this.fitsProperties.minVal;
        this.fitsProperties.upperCut = this.fitsProperties.maxVal;
    },

    readDataUnitInt32: function (dataView) {
        var i = 0;
        while (this.position < dataView.byteLength) {
            this.dataUnit[i] = dataView.getInt32(this.position, false);
            if (this.fitsProperties.minVal > this.dataUnit[i]) {
                this.fitsProperties.minVal = this.dataUnit[i];
            }
            if (this.fitsProperties.maxVal < this.dataUnit[i]) {
                this.fitsProperties.maxVal = this.dataUnit[i];
            }
            i++;
            this.position += 4;
        }
        this.fitsProperties.lowerCut = this.fitsProperties.minVal;
        this.fitsProperties.upperCut = this.fitsProperties.maxVal;
    },

    computeWcs: function () {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'CROTA2')) {
            this.rotation = parseFloat(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(this.header['CROTA2']));
            this.hasRotation = true;
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'CDELT1')) {
            this.scaleX = parseFloat(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(this.header['CDELT1']));
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'CDELT2')) {
                this.scaleY = parseFloat(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(this.header['CDELT2']));
                this.hasScale = true;
            }
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'CRPIX1')) {
            // In FITS/ WCS, pixel coordinates are 1 - based and integer pixel
            // coordinates land on pixel centers. Therefore in standard FITS
            // orientation, where the "first" pixel is at the lower-left, the
            // lower-left corner of the image has pixel coordinate (0.5, 0.5). For
            // the WWT offset parameters, the lower-left corner of the image has
            // coordinate (0, 0).
            this.referenceX = parseFloat(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(this.header['CRPIX1'])) - 0.5;
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'CRPIX2')) {
                this.referenceY = parseFloat(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(this.header['CRPIX2'])) - 0.5;
                this.hasPixel = true;
            }
        }
        var galactic = false;
        var tan = false;
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'CTYPE1')) {
            if (this.header['CTYPE1'].indexOf('GLON-') > -1) {
                galactic = true;
                tan = true;
            }
            if (this.header['CTYPE2'].indexOf('GLAT-') > -1) {
                galactic = true;
                tan = true;
            }
            if (this.header['CTYPE1'].indexOf('-TAN') > -1) {
                tan = true;
            }
            if (this.header['CTYPE1'].indexOf('-SIN') > -1) {
                tan = true;
            }
        }
        if (!tan) {
            throw new Error('Only TAN projected images are supported: ');
        }
        this.hasSize = true;
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'CRVAL1')) {
            this.centerX = parseFloat(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(this.header['CRVAL1']));
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'CRVAL2')) {
                this.centerY = parseFloat(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(this.header['CRVAL2']));
                this.hasLocation = true;
            }
        }
        if (galactic) {
            var result = _coordinates_js__WEBPACK_IMPORTED_MODULE_3__.Coordinates.galactictoJ2000(this.centerX, this.centerY);
            this.centerX = result[0];
            this.centerY = result[1];
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'CD1_1') && _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'CD1_2') && _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'CD2_1') && _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'CD2_2')) {
            this.cd1_1 = parseFloat(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(this.header['CD1_1']));
            this.cd1_2 = parseFloat(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(this.header['CD1_2']));
            this.cd2_1 = parseFloat(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(this.header['CD2_1']));
            this.cd2_2 = parseFloat(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(this.header['CD2_2']));
            if (!this.hasRotation) {
                this.calculateRotationFromCD();
            }
            if (!this.hasScale) {
                this.calculateScaleFromCD();
            }
            this.hasScale = true;
            this.hasRotation = true;
        }
        this.set_validWcs(this.hasScale && this.hasRotation && this.hasPixel && this.hasLocation);
    },

    // Modify the FitsProperties object to apply any settings stored in this
    // FITS image's header keywords. This mechanism gives us a way to set up
    // the rendering of a tiled FITS image through keywords set on its
    // level-0 tile file.
    //
    // I'm not aware of any standard, or even standard-ish, headers to
    // define these settings, so we'll roll our own here.
    applyDisplaySettings: function () {
        // TODO for tiled FITS: distinguish between datamin in this one tile,
        // and datamin across the full, un-downsampled original imagery.

        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'DATAMIN')) {
            this.fitsProperties.lowerCut = parseFloat(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(this.header['DATAMIN']));
            this.fitsProperties.minVal = this.fitsProperties.lowerCut;
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'DATAMAX')) {
            this.fitsProperties.upperCut = parseFloat(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(this.header['DATAMAX']));
            this.fitsProperties.maxVal = this.fitsProperties.upperCut;
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'PXCUTMIN')) {
            this.fitsProperties.lowerCut = parseFloat(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(this.header['PXCUTMIN']));
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this.header, 'PXCUTMAX')) {
            this.fitsProperties.upperCut = parseFloat(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(this.header['PXCUTMAX']));
        }
    },

    computeHistogram: function (count) {
        var histogram = new Array(count + 1);
        for (var i = 0; i < count + 1; i++) {
            histogram[i] = 0;
        }
        this.populateHistogram(histogram);
        var maxCounter = 1;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(histogram);
        while ($enum1.moveNext()) {
            var val = $enum1.current;
            if (val > maxCounter) {
                maxCounter = val;
            }
        }
        histogram[count] = maxCounter;
        return histogram;
    },

    populateHistogram: function (histogram) {
        var buckets = histogram.length;
        var factor = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / buckets;
        for (var i = 0; i < this.dataUnit.length; i++) {
            if (!(this.dataUnit[i] === FitsImage.naN)) {
                histogram[Math.min(buckets - 1, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((this.fitsProperties.bZero + this.fitsProperties.bScale * this.dataUnit[i] - this.fitsProperties.minVal) / factor)))]++;
            }
        }
    },

    drawHistogram: function (ctx) {
        ctx.clearRect(0, 0, 255, 150);
        ctx.beginPath();
        ctx.strokeStyle = 'rgba(255,255,255,255)';
        var logMax = Math.log(this.histogramMaxCount);
        for (var i = 0; i < this.histogram.length; i++) {
            var height = Math.log(this.histogram[i]) / logMax;
            if (height < 0) {
                height = 0;
            }
            ctx.moveTo(i, 150);
            ctx.lineTo(i, 150 - (height * 150));
            ctx.stroke();
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("FitsImage", [FitsImage, FitsImage$, _wcs_image_js__WEBPACK_IMPORTED_MODULE_4__.WcsImage]);


/***/ }),

/***/ "./esm/layers/fits_image_js.js":
/*!*************************************!*\
  !*** ./esm/layers/fits_image_js.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DataTypes: () => (/* binding */ DataTypes),
/* harmony export */   FitsImageJs: () => (/* binding */ FitsImageJs),
/* harmony export */   HistogramEqualization: () => (/* binding */ HistogramEqualization),
/* harmony export */   ScaleLinear: () => (/* binding */ ScaleLinear),
/* harmony export */   ScaleLog: () => (/* binding */ ScaleLog),
/* harmony export */   ScaleMap: () => (/* binding */ ScaleMap),
/* harmony export */   ScalePow: () => (/* binding */ ScalePow),
/* harmony export */   ScaleSqrt: () => (/* binding */ ScaleSqrt)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _utilities_binary_reader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utilities/binary_reader.js */ "./esm/utilities/binary_reader.js");
/* harmony import */ var _utilities_bitmap_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utilities/bitmap.js */ "./esm/utilities/bitmap.js");
/* harmony import */ var _color_map_container_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./color_map_container.js */ "./esm/layers/color_map_container.js");
/* harmony import */ var _fits_image_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fits_image.js */ "./esm/layers/fits_image.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A FITS image with a pure JavaScript implementation.
//
// This class is used when WebGL 2 is not available, as in Safari.









// wwtlib.DataTypes

var DataTypes = {
    byteT: 0,
    int16T: 1,
    int32T: 2,
    floatT: 3,
    doubleT: 4,
    none: 5
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("DataTypes", DataTypes);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("DataTypes", DataTypes);


// wwtlib.ScaleMap

function ScaleMap() { }

var ScaleMap$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ScaleMap", [ScaleMap, ScaleMap$, null]);


// wwtlib.ScaleLinear

function ScaleLinear(min, max) {
    this._min$1 = 0;
    this._max$1 = 0;
    this._factor$1 = 0;
    this._logFactor$1 = 0;
    ScaleMap.call(this);
    this._min$1 = min;
    this._max$1 = max;
    this._factor$1 = max - min;
}

var ScaleLinear$ = {
    map: function (val) {
        return Math.min(255, Math.max(0, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((val - this._min$1) / this._factor$1 * 255))));
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ScaleLinear", [ScaleLinear, ScaleLinear$, ScaleMap]);


// wwtlib.ScaleLog

function ScaleLog(min, max) {
    this._min$1 = 0;
    this._max$1 = 0;
    this._factor$1 = 0;
    this._logFactor$1 = 0;
    ScaleMap.call(this);
    this._min$1 = min;
    this._max$1 = max;
    this._factor$1 = max - min;
    this._logFactor$1 = 255 / Math.log(255);
}

var ScaleLog$ = {
    map: function (val) {
        return Math.min(255, Math.max(0, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((Math.log((val - this._min$1) / this._factor$1 * 255) * this._logFactor$1))));
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ScaleLog", [ScaleLog, ScaleLog$, ScaleMap]);


// wwtlib.ScalePow

function ScalePow(min, max) {
    this._min$1 = 0;
    this._max$1 = 0;
    this._factor$1 = 0;
    this._powFactor$1 = 0;
    ScaleMap.call(this);
    this._min$1 = min;
    this._max$1 = max;
    this._factor$1 = max - min;
    this._powFactor$1 = 255 / Math.pow(255, 2);
}

var ScalePow$ = {
    map: function (val) {
        return Math.min(255, Math.max(0, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((Math.pow((val - this._min$1) / this._factor$1 * 255, 2) * this._powFactor$1))));
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ScalePow", [ScalePow, ScalePow$, ScaleMap]);


// wwtlib.ScaleSqrt

function ScaleSqrt(min, max) {
    this._min$1 = 0;
    this._max$1 = 0;
    this._factor$1 = 0;
    this._sqrtFactor$1 = 0;
    ScaleMap.call(this);
    this._min$1 = min;
    this._max$1 = max;
    this._factor$1 = max - min;
    this._sqrtFactor$1 = 255 / Math.sqrt(255);
}

var ScaleSqrt$ = {
    map: function (val) {
        return Math.min(255, Math.max(0, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((Math.sqrt((val - this._min$1) / this._factor$1 * 255) * this._sqrtFactor$1))));
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ScaleSqrt", [ScaleSqrt, ScaleSqrt$, ScaleMap]);


// wwtlib.HistogramEqualization

function HistogramEqualization(image, min, max) {
    this._min$1 = 0;
    this._max$1 = 0;
    this._factor$1 = 0;
    this._maxHistogramValue$1 = 1;
    ScaleMap.call(this);
    this._min$1 = min;
    this._max$1 = max;
    this._factor$1 = max - min;
    this._histogram$1 = image.computeHistogram(10000);
    this._maxHistogramValue$1 = this._histogram$1[10000];
    this._lookup$1 = new Array(10000);
    var totalCounts = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((image.get_sizeX() * image.get_sizeY()));
    var sum = 0;
    for (var i = 0; i < 10000; i++) {
        sum += this._histogram$1[i];
        this._lookup$1[i] = (Math.min(255, (sum * 255) / totalCounts) + 0.5);
    }
}

var HistogramEqualization$ = {
    map: function (val) {
        return this._lookup$1[Math.min(10000 - 1, Math.max(0, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((val - this._min$1) / this._factor$1 * (10000 - 1)))))];
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("HistogramEqualization", [HistogramEqualization, HistogramEqualization$, ScaleMap]);


// wwtlib.FitsImageJs

function FitsImageJs(dataset, file, blob, callMeBack) {
    this.dataType = DataTypes.none;
    this._color$2 = false;
    this.isTiledFits = false;
    _fits_image_js__WEBPACK_IMPORTED_MODULE_5__.FitsImage.call(this, dataset, file, blob, callMeBack);
}

FitsImageJs.createTiledFits = function (dataset, file, callMeBack) {
    var fits = new FitsImageJs(dataset, file, null, callMeBack);
    fits.isTiledFits = true;
    return fits;
};

var FitsImageJs$ = {
    readFromBin: function (dataView) {
        _fits_image_js__WEBPACK_IMPORTED_MODULE_5__.FitsImage.prototype.readFromBin.call(this, dataView);
        if (this.numAxis === 3) {
            if (this.axisSize[2] === 3) {
                this._color$2 = true;
            }
        }
    },

    readDataUnit: function (dataView, bitpix) {
        var br = new _utilities_binary_reader_js__WEBPACK_IMPORTED_MODULE_2__.BinaryReader(new Uint8Array(dataView.buffer));
        br.position = this.position;
        switch (bitpix) {
            case -64:
                this.dataType = DataTypes.doubleT;
                this._readDataUnitFloat64$2(br);
                break;
            case -32:
                this.dataType = DataTypes.floatT;
                this._readDataUnitFloat32$2(br);
                break;
            case 8:
                this.dataType = DataTypes.byteT;
                this._readDataUnitUint8$2(br);
                break;
            case 16:
                this.dataType = DataTypes.int16T;
                this._readDataUnitInt16$2(br);
                break;
            case 32:
                this.dataType = DataTypes.int32T;
                this._readDataUnitInt32$2(br);
                break;
        }
        this.fitsProperties.lowerCut = this.fitsProperties.minVal;
        this.fitsProperties.upperCut = this.fitsProperties.maxVal;
    },
    _readDataUnitUint8$2: function (br) {
        var buffer = new Array(this.bufferSize);
        this._dataBuffer$2 = buffer;
        for (var i = 0; i < this.bufferSize; i++) {
            buffer[i] = br.readByte();
            if (this.fitsProperties.minVal > buffer[i]) {
                this.fitsProperties.minVal = buffer[i];
            }
            if (this.fitsProperties.maxVal < buffer[i]) {
                this.fitsProperties.maxVal = buffer[i];
            }
        }
    },
    _readDataUnitInt16$2: function (br) {
        var buffer = new Array(this.bufferSize);
        this._dataBuffer$2 = buffer;
        for (var i = 0; i < this.bufferSize; i++) {
            buffer[i] = ((br.readSByte() * 256) + br.readByte());
            if (this.fitsProperties.minVal > buffer[i]) {
                this.fitsProperties.minVal = buffer[i];
            }
            if (this.fitsProperties.maxVal < buffer[i]) {
                this.fitsProperties.maxVal = buffer[i];
            }
        }
    },
    _readDataUnitInt32$2: function (br) {
        var buffer = new Array(this.bufferSize);
        this._dataBuffer$2 = buffer;
        for (var i = 0; i < this.bufferSize; i++) {
            buffer[i] = (br.readSByte() << 24) + (br.readSByte() << 16) + (br.readSByte() << 8) + br.readByte();
            if (this.fitsProperties.minVal > buffer[i]) {
                this.fitsProperties.minVal = buffer[i];
            }
            if (this.fitsProperties.maxVal < buffer[i]) {
                this.fitsProperties.maxVal = buffer[i];
            }
        }
    },
    _readDataUnitFloat32$2: function (br) {
        var buffer = new Array(this.bufferSize);
        this._dataBuffer$2 = buffer;
        var part = new Uint8Array(4);
        for (var i = 0; i < this.bufferSize; i++) {
            part[3] = br.readByte();
            part[2] = br.readByte();
            part[1] = br.readByte();
            part[0] = br.readByte();
            buffer[i] = new Float32Array(part.buffer, 0, 1)[0];
            if (this.fitsProperties.minVal > buffer[i]) {
                this.fitsProperties.minVal = buffer[i];
            }
            if (this.fitsProperties.maxVal < buffer[i]) {
                this.fitsProperties.maxVal = buffer[i];
            }
        }
    },
    _readDataUnitFloat64$2: function (br) {
        var buffer = new Array(this.bufferSize);
        var part = new Uint8Array(8);
        this._dataBuffer$2 = buffer;
        for (var i = 0; i < this.bufferSize; i++) {
            part[7] = br.readByte();
            part[6] = br.readByte();
            part[5] = br.readByte();
            part[4] = br.readByte();
            part[3] = br.readByte();
            part[2] = br.readByte();
            part[1] = br.readByte();
            part[0] = br.readByte();
            buffer[i] = new Float64Array(part.buffer, 0, 1)[0];
            if (this.fitsProperties.minVal > buffer[i]) {
                this.fitsProperties.minVal = buffer[i];
            }
            if (this.fitsProperties.maxVal < buffer[i]) {
                this.fitsProperties.maxVal = buffer[i];
            }
        }
    },

    getBitmap: function () {
        if (!this.fitsProperties.upperCut && !this.fitsProperties.lowerCut) {
            this.fitsProperties.lowerCut = this.fitsProperties.minVal;
            this.fitsProperties.upperCut = this.fitsProperties.maxVal;
        }
        return this.getScaledBitmap(this.fitsProperties.lowerCut, this.fitsProperties.upperCut, this.fitsProperties.scaleType, 0, this.fitsProperties.colorMapName);
    },

    getScaledBitmap: function (min, max, scaleType, z, colorMapperName) {
        var scale;
        this.fitsProperties.scaleType = scaleType;
        this.fitsProperties.lowerCut = min;
        this.fitsProperties.upperCut = max;
        this.fitsProperties.colorMapName = colorMapperName;
        var colorMapper = _color_map_container_js__WEBPACK_IMPORTED_MODULE_4__.ColorMapContainer.fromNamedColormap(colorMapperName);
        switch (scaleType) {
            case 0:
            default:
                scale = new ScaleLinear(min, max);
                break;
            case 1:
                scale = new ScaleLog(min, max);
                break;
            case 2:
                scale = new ScalePow(min, max);
                break;
            case 3:
                scale = new ScaleSqrt(min, max);
                break;
            case 4:
                scale = new HistogramEqualization(this, min, max);
                break;
        }
        try {
            switch (this.dataType) {
                case DataTypes.byteT:
                    return this._getBitmapByte$2(min, max, scale, 0, colorMapper);
                case DataTypes.int16T:
                    return this.getBitmapShort(min, max, scale, 0, colorMapper);
                case DataTypes.int32T:
                    return this._getBitmapInt$2(min, max, scale, 0, colorMapper);
                case DataTypes.floatT:
                    return this._getBitmapFloat$2(min, max, scale, 0, colorMapper);
                case DataTypes.doubleT:
                    return this._getBitmapDouble$2(min, max, scale, 0, colorMapper);
                case DataTypes.none:
                default:
                    return _utilities_bitmap_js__WEBPACK_IMPORTED_MODULE_3__.Bitmap.create(100, 100);
            }
        }
        catch ($e1) {
            return _utilities_bitmap_js__WEBPACK_IMPORTED_MODULE_3__.Bitmap.create(10, 10);
        }
    },
    _setPixelWithColorMap$2: function (bmp, x, y, val, colorMapper) {
        if (colorMapper == null) {
            bmp.setPixel(x, y, val, val, val, (this.fitsProperties.transparentBlack && !val) ? 0 : 255);
            return;
        }
        var pixel_value = val / 255;
        if (Number.isNaN(pixel_value)) {
            // This case "can't happen" in C#, but due to JavaScript's numerical
            // model, it can happen here.
            bmp.setPixel(x, y, 0, 0, 0, 0);
            return;
        }
        var pixel_color = colorMapper.findClosestColor(pixel_value);
        bmp.setPixel(x, y, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(pixel_color.r), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(pixel_color.g), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(pixel_color.b), (this.fitsProperties.transparentBlack && !val) ? 0 : 255);
    },
    _getBitmapByte$2: function (min, max, scale, z, colorMapper) {
        var buf = this._dataBuffer$2;
        var factor = max - min;
        var stride = this.axisSize[0];
        var page = this.axisSize[0] * this.axisSize[1] * z;
        var bmp = _utilities_bitmap_js__WEBPACK_IMPORTED_MODULE_3__.Bitmap.create(this.axisSize[0], this.axisSize[1]);
        for (var y = 0; y < this.axisSize[1]; y++) {
            var indexY = ((this.axisSize[1] - 1) - y);
            for (var x = 0; x < this.axisSize[0]; x++) {
                if (this._color$2) {
                    var datR = buf[(x + indexY * stride)];
                    var datG = buf[(x + indexY * stride) + page];
                    var datB = buf[(x + indexY * stride) + page * 2];
                    if (this.fitsProperties.containsBlanks && datR === this.fitsProperties.blankValue) {
                        bmp.setPixel(x, y, 0, 0, 0, 0);
                    }
                    else {
                        var r = scale.map(datR);
                        var g = scale.map(datG);
                        var b = scale.map(datB);
                        bmp.setPixel(x, y, r, g, b, 255);
                    }
                }
                else {
                    var dataValue = buf[x + indexY * stride + page];
                    if (this.fitsProperties.containsBlanks && dataValue === this.fitsProperties.blankValue) {
                        bmp.setPixel(x, y, 0, 0, 0, 0);
                    }
                    else {
                        var val = scale.map(dataValue);
                        this._setPixelWithColorMap$2(bmp, x, y, val, colorMapper);
                    }
                }
            }
        }
        return bmp;
    },
    _getBitmapDouble$2: function (min, max, scale, z, colorMapper) {
        var buf = this._dataBuffer$2;
        var factor = max - min;
        var stride = this.axisSize[0];
        var page = this.axisSize[0] * this.axisSize[1] * z;
        var bmp = _utilities_bitmap_js__WEBPACK_IMPORTED_MODULE_3__.Bitmap.create(this.axisSize[0], this.axisSize[1]);
        for (var y = 0; y < this.axisSize[1]; y++) {
            var indexY = ((this.axisSize[1] - 1) - y);
            for (var x = 0; x < this.axisSize[0]; x++) {
                if (this._color$2) {
                    var datR = buf[(x + indexY * stride)];
                    var datG = buf[(x + indexY * stride) + page];
                    var datB = buf[(x + indexY * stride) + page * 2];
                    if (this.fitsProperties.containsBlanks && datR === this.fitsProperties.blankValue) {
                        bmp.setPixel(x, y, 0, 0, 0, 0);
                    }
                    else {
                        var r = scale.map(datR);
                        var g = scale.map(datG);
                        var b = scale.map(datB);
                        bmp.setPixel(x, y, r, g, b, 255);
                    }
                }
                else {
                    var dataValue = buf[x + indexY * stride + page];
                    if (this.fitsProperties.containsBlanks && dataValue === this.fitsProperties.blankValue) {
                        bmp.setPixel(x, y, 0, 0, 0, 0);
                    }
                    else {
                        var val = scale.map(dataValue);
                        this._setPixelWithColorMap$2(bmp, x, y, val, colorMapper);
                    }
                }
            }
        }
        return bmp;
    },
    _getBitmapFloat$2: function (min, max, scale, z, colorMapper) {
        var buf = this._dataBuffer$2;
        var factor = max - min;
        var stride = this.axisSize[0];
        var page = this.axisSize[0] * this.axisSize[1] * z;
        var bmp = _utilities_bitmap_js__WEBPACK_IMPORTED_MODULE_3__.Bitmap.create(this.axisSize[0], this.axisSize[1]);
        for (var y = 0; y < this.axisSize[1]; y++) {
            var indexY = ((this.axisSize[1] - 1) - y);
            for (var x = 0; x < this.axisSize[0]; x++) {
                if (this._color$2) {
                    var datR = buf[(x + indexY * stride)];
                    var datG = buf[(x + indexY * stride) + page];
                    var datB = buf[(x + indexY * stride) + page * 2];
                    if (this.fitsProperties.containsBlanks && datR === this.fitsProperties.blankValue) {
                        bmp.setPixel(x, y, 0, 0, 0, 0);
                    }
                    else {
                        var r = scale.map(datR);
                        var g = scale.map(datG);
                        var b = scale.map(datB);
                        bmp.setPixel(x, y, r, g, b, 255);
                    }
                }
                else {
                    var dataValue = buf[x + indexY * stride + page];
                    if (this.fitsProperties.containsBlanks && dataValue === this.fitsProperties.blankValue) {
                        bmp.setPixel(x, y, 0, 0, 0, 0);
                    }
                    else {
                        var val = scale.map(dataValue);
                        this._setPixelWithColorMap$2(bmp, x, y, val, colorMapper);
                    }
                }
            }
        }
        return bmp;
    },
    _getBitmapInt$2: function (min, max, scale, z, colorMapper) {
        var buf = this._dataBuffer$2;
        var factor = max - min;
        var stride = this.axisSize[0];
        var page = this.axisSize[0] * this.axisSize[1] * z;
        var bmp = _utilities_bitmap_js__WEBPACK_IMPORTED_MODULE_3__.Bitmap.create(this.axisSize[0], this.axisSize[1]);
        for (var y = 0; y < this.axisSize[1]; y++) {
            var indexY = ((this.axisSize[1] - 1) - y);
            for (var x = 0; x < this.axisSize[0]; x++) {
                if (this._color$2) {
                    var datR = buf[(x + indexY * stride)];
                    var datG = buf[(x + indexY * stride) + page];
                    var datB = buf[(x + indexY * stride) + page * 2];
                    if (this.fitsProperties.containsBlanks && datR === this.fitsProperties.blankValue) {
                        bmp.setPixel(x, y, 0, 0, 0, 0);
                    }
                    else {
                        var r = scale.map(datR);
                        var g = scale.map(datG);
                        var b = scale.map(datB);
                        bmp.setPixel(x, y, r, g, b, 255);
                    }
                }
                else {
                    var dataValue = buf[x + indexY * stride + page];
                    if (this.fitsProperties.containsBlanks && dataValue === this.fitsProperties.blankValue) {
                        bmp.setPixel(x, y, 0, 0, 0, 0);
                    }
                    else {
                        var val = scale.map(dataValue);
                        this._setPixelWithColorMap$2(bmp, x, y, val, colorMapper);
                    }
                }
            }
        }
        return bmp;
    },

    getBitmapShort: function (min, max, scale, z, colorMapper) {
        var buf = this._dataBuffer$2;
        var factor = max - min;
        var stride = this.axisSize[0];
        var page = this.axisSize[0] * this.axisSize[1] * z;
        var bmp = _utilities_bitmap_js__WEBPACK_IMPORTED_MODULE_3__.Bitmap.create(this.axisSize[0], this.axisSize[1]);
        for (var y = 0; y < this.axisSize[1]; y++) {
            var indexY = ((this.axisSize[1] - 1) - y);
            for (var x = 0; x < this.axisSize[0]; x++) {
                if (this._color$2) {
                    var datR = buf[(x + indexY * stride)];
                    var datG = buf[(x + indexY * stride) + page];
                    var datB = buf[(x + indexY * stride) + page * 2];
                    if (this.fitsProperties.containsBlanks && datR === this.fitsProperties.blankValue) {
                        bmp.setPixel(x, y, 0, 0, 0, 0);
                    }
                    else {
                        var r = scale.map(datR);
                        var g = scale.map(datG);
                        var b = scale.map(datB);
                        bmp.setPixel(x, y, r, g, b, 255);
                    }
                }
                else {
                    var dataValue = buf[x + indexY * stride + page];
                    if (this.fitsProperties.containsBlanks && dataValue === this.fitsProperties.blankValue) {
                        bmp.setPixel(x, y, 0, 0, 0, 0);
                    }
                    else {
                        var val = scale.map(dataValue);
                        this._setPixelWithColorMap$2(bmp, x, y, val, colorMapper);
                    }
                }
            }
        }
        return bmp;
    },

    computeWcs: function () {
        if (!this.isTiledFits) {
            _fits_image_js__WEBPACK_IMPORTED_MODULE_5__.FitsImage.prototype.computeWcs.call(this);
        }
    },

    populateHistogram: function (histogram) {
        switch (this.dataType) {
            case DataTypes.byteT:
                this._populateHistogramByte$2(histogram);
                break;
            case DataTypes.int16T:
                this._populateHistogramInt16$2(histogram);
                break;
            case DataTypes.int32T:
                this._populateHistogramInt32$2(histogram);
                break;
            case DataTypes.floatT:
                this._populateHistogramFloat$2(histogram);
                break;
            case DataTypes.doubleT:
                this._populateHistogramDouble$2(histogram);
                break;
        }
    },
    _populateHistogramDouble$2: function (histogram) {
        var buckets = histogram.length;
        var buf = this._dataBuffer$2;
        var factor = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / buckets;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(buf);
        while ($enum1.moveNext()) {
            var val = $enum1.current;
            if (!Number.isNaN(val)) {
                histogram[Math.min(buckets - 1, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((val - this.fitsProperties.minVal) / factor)))]++;
            }
        }
    },
    _populateHistogramFloat$2: function (histogram) {
        var buckets = histogram.length;
        var buf = this._dataBuffer$2;
        var factor = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / buckets;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(buf);
        while ($enum1.moveNext()) {
            var val = $enum1.current;
            if (!(val === _fits_image_js__WEBPACK_IMPORTED_MODULE_5__.FitsImage.naN)) {
                histogram[Math.min(buckets - 1, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((val - this.fitsProperties.minVal) / factor)))]++;
            }
        }
    },
    _populateHistogramInt32$2: function (histogram) {
        var buckets = histogram.length;
        var buf = this._dataBuffer$2;
        var factor = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / buckets;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(buf);
        while ($enum1.moveNext()) {
            var val = $enum1.current;
            histogram[Math.min(buckets - 1, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((val - this.fitsProperties.minVal) / factor)))]++;
        }
    },
    _populateHistogramInt16$2: function (histogram) {
        var buckets = histogram.length;
        var buf = this._dataBuffer$2;
        var factor = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / buckets;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(buf);
        while ($enum1.moveNext()) {
            var val = $enum1.current;
            histogram[Math.min(buckets - 1, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((val - this.fitsProperties.minVal) / factor)))]++;
        }
    },
    _populateHistogramByte$2: function (histogram) {
        var buckets = histogram.length;
        var buf = this._dataBuffer$2;
        var factor = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / buckets;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(buf);
        while ($enum1.moveNext()) {
            var val = $enum1.current;
            histogram[Math.min(buckets - 1, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((val - this.fitsProperties.minVal) / factor)))]++;
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("FitsImageJs", [FitsImageJs, FitsImageJs$, _fits_image_js__WEBPACK_IMPORTED_MODULE_5__.FitsImage]);


/***/ }),

/***/ "./esm/layers/fits_image_tile.js":
/*!***************************************!*\
  !*** ./esm/layers/fits_image_tile.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FitsImageTile: () => (/* binding */ FitsImageTile)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _fits_image_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fits_image.js */ "./esm/layers/fits_image.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A FITS image used as a tile in a pyramid.





// wwtlib.FitsImageTile
//
// Min & Max are already known for pyramid FITS.
// To improve performance, the below per pixel methods are overriden

function FitsImageTile(dataset, file, callMeBack) {
    _fits_image_js__WEBPACK_IMPORTED_MODULE_1__.FitsImage.call(this, dataset, file, null, callMeBack);
}

var FitsImageTile$ = {
    readDataUnitFloat64: function (dataView) {
        var i = 0;
        while (this.position < dataView.byteLength) {
            this.dataUnit[i] = dataView.getFloat64(this.position, false);
            i++;
            this.position += 8;
        }
    },

    readDataUnitFloat32: function (dataView) {
        var i = 0;
        while (this.position < dataView.byteLength) {
            this.dataUnit[i] = dataView.getFloat32(this.position, false);
            i++;
            this.position += 4;
        }
    },

    readDataUnitUint8: function (dataView) {
        var i = 0;
        while (this.position < dataView.byteLength) {
            this.dataUnit[i] = dataView.getUint8(this.position);
            i++;
            this.position += 1;
        }
    },

    readDataUnitInt16: function (dataView) {
        var i = 0;
        while (this.position < dataView.byteLength) {
            this.dataUnit[i] = dataView.getInt16(this.position, false);
            i++;
            this.position += 2;
        }
    },

    readDataUnitInt32: function (dataView) {
        var i = 0;
        while (this.position < dataView.byteLength) {
            this.dataUnit[i] = dataView.getInt32(this.position, false);
            i++;
            this.position += 4;
        }
    },

    computeWcs: function () { }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("FitsImageTile", [FitsImageTile, FitsImageTile$, _fits_image_js__WEBPACK_IMPORTED_MODULE_1__.FitsImage]);


/***/ }),

/***/ "./esm/layers/from_xml.js":
/*!********************************!*\
  !*** ./esm/layers/from_xml.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   layerFromXml: () => (/* binding */ layerFromXml)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _layer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layer.js */ "./esm/layers/layer.js");
/* harmony import */ var _great_circle_route_layer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./great_circle_route_layer.js */ "./esm/layers/great_circle_route_layer.js");
/* harmony import */ var _grid_layer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./grid_layer.js */ "./esm/layers/grid_layer.js");
/* harmony import */ var _imageset_layer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./imageset_layer.js */ "./esm/layers/imageset_layer.js");
/* harmony import */ var _object3d_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./object3d.js */ "./esm/layers/object3d.js");
/* harmony import */ var _orbit_layer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./orbit_layer.js */ "./esm/layers/orbit_layer.js");
/* harmony import */ var _spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./spreadsheet_layer.js */ "./esm/layers/spreadsheet_layer.js");
/* harmony import */ var _vo_table_layer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./vo_table_layer.js */ "./esm/layers/vo_table_layer.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Set up the `Layer.fromXml()` function, which depends on a bunch of Layer
// subclasses.
//
// There are a variety of ways that we could set this up, possibly including
// just implementing this function in `layer.js`. This is a more conservating
// approach that tries to avoid circular module imports.












// The `layerFromXml` function, which we also install as `Layer.fromXml()`. It
// needs to be aware of a bunch of layer subclasses.
function layerFromXml(layerNode, someFlag) {
    var layerClassName = layerNode.attributes.getNamedItem('Type').nodeValue;

    var overLayType = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(layerClassName, 'TerraViewer.', '');
    if (overLayType == null) {
        return null;
    }

    var newLayer = null;
    switch (overLayType) {
        case 'SpreadSheetLayer':
            newLayer = new _spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_7__.SpreadSheetLayer();
            break;
        case 'GreatCirlceRouteLayer':
            newLayer = new _great_circle_route_layer_js__WEBPACK_IMPORTED_MODULE_2__.GreatCirlceRouteLayer();
            break;
        case 'GridLayer':
            newLayer = new _grid_layer_js__WEBPACK_IMPORTED_MODULE_3__.GridLayer();
            break;
        case 'ImageSetLayer':
            newLayer = new _imageset_layer_js__WEBPACK_IMPORTED_MODULE_4__.ImageSetLayer();
            break;
        case 'Object3dLayer':
            newLayer = new _object3d_js__WEBPACK_IMPORTED_MODULE_5__.Object3dLayer();
            break;
        case 'OrbitLayer':
            newLayer = new _orbit_layer_js__WEBPACK_IMPORTED_MODULE_6__.OrbitLayer();
            break;
        case 'VoTableLayer':
            newLayer = new _vo_table_layer_js__WEBPACK_IMPORTED_MODULE_8__.VoTableLayer();
            break;
        default:
            return null;
    }

    newLayer.initFromXml(layerNode);
    return newLayer;
}

_layer_js__WEBPACK_IMPORTED_MODULE_1__.Layer.fromXml = layerFromXml;


/***/ }),

/***/ "./esm/layers/great_circle_route_layer.js":
/*!************************************************!*\
  !*** ./esm/layers/great_circle_route_layer.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GreatCirlceRouteLayer: () => (/* binding */ GreatCirlceRouteLayer)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
/* harmony import */ var _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../graphics/primitives3d.js */ "./esm/graphics/primitives3d.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../coordinates.js */ "./esm/coordinates.js");
/* harmony import */ var _layer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./layer.js */ "./esm/layers/layer.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A layer that renders progress along a great circle.
//
// Yes, there is an egregious typo in the name of this class. But to maintain
// API compatibility, we're not fixing it.








// wwtlib.GreatCirlceRouteLayer

function GreatCirlceRouteLayer() {
    this._triangleList$1 = null;
    this._latStart$1 = 0;
    this._lngStart$1 = 0;
    this._latEnd$1 = 0;
    this._lngEnd$1 = 0;
    this._width$1 = 4;
    this._percentComplete$1 = 100;
    _layer_js__WEBPACK_IMPORTED_MODULE_4__.Layer.call(this);
}

var GreatCirlceRouteLayer$ = {
    // Even if we fix the typo in this class's name in an API break, we need to
    // maintain it here to maintain compatibility with existing data files and
    // older WWT clients.
    getTypeName: function () {
        return 'TerraViewer.GreatCirlceRouteLayer';
    },

    cleanUp: function () {
        if (this._triangleList$1 != null) {
            this._triangleList$1.clear();
        }
        this._triangleList$1 = null;
        _layer_js__WEBPACK_IMPORTED_MODULE_4__.Layer.prototype.cleanUp.call(this);
    },

    draw: function (renderContext, opacity, flat) {
        if (this._triangleList$1 == null) {
            this._initializeRoute$1(renderContext);
        }
        this._triangleList$1.jNow = this._percentComplete$1 / 100;
        this._triangleList$1.draw(renderContext, opacity * this.get_opacity(), 2);
        return true;
    },
    _initializeRoute$1: function (renderContext) {
        this._triangleList$1 = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_2__.TriangleList();
        this._triangleList$1.decay = 1000;
        this._triangleList$1.sky = this.get_astronomical();
        this._triangleList$1.timeSeries = true;
        this._triangleList$1.depthBuffered = false;
        this._triangleList$1.autoTime = false;
        var steps = 500;
        var start = _coordinates_js__WEBPACK_IMPORTED_MODULE_3__.Coordinates.geoTo3dDouble(this._latStart$1, this._lngStart$1);
        var end = _coordinates_js__WEBPACK_IMPORTED_MODULE_3__.Coordinates.geoTo3dDouble(this._latEnd$1, this._lngEnd$1);
        var dir = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.subtractVectors(end, start);
        dir.normalize();
        var startNormal = start;
        startNormal.normalize();
        var left = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.cross(startNormal, dir);
        var right = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.cross(dir, startNormal);
        left.normalize();
        right.normalize();
        left.multiply(0.001 * this._width$1);
        right.multiply(0.001 * this._width$1);
        var lastLeft = new _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d();
        var lastRight = new _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d();
        var firstTime = true;
        for (var i = 0; i <= steps; i++) {
            var v = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.lerp(start, end, i / steps);
            v.normalize();
            var cl = v;
            var cr = v;
            cl.add(left);
            cr.add(right);
            if (!firstTime) {
                this._triangleList$1.addQuad(lastRight, lastLeft, cr, cl, this.get_color(), new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_2__.Dates(i / steps, 2));
            }
            else {
                firstTime = false;
            }
            lastLeft = cl;
            lastRight = cr;
        }
    },

    getParams: function () {
        return [this._percentComplete$1];
    },

    getParamNames: function () {
        return ['Percentage'];
    },

    setParams: function (paramList) {
        if (paramList.length > 0) {
            this._percentComplete$1 = paramList[0];
        }
    },

    get_latStart: function () {
        return this._latStart$1;
    },

    set_latStart: function (value) {
        if (this._latStart$1 !== value) {
            this._latStart$1 = value;
            this.version++;
        }
        return value;
    },

    get_lngStart: function () {
        return this._lngStart$1;
    },

    set_lngStart: function (value) {
        if (this._lngStart$1 !== value) {
            this._lngStart$1 = value;
            this.version++;
        }
        return value;
    },

    get_latEnd: function () {
        return this._latEnd$1;
    },

    set_latEnd: function (value) {
        if (this._latEnd$1 !== value) {
            this._latEnd$1 = value;
            this.version++;
        }
        return value;
    },

    get_lngEnd: function () {
        return this._lngEnd$1;
    },

    set_lngEnd: function (value) {
        if (this._lngEnd$1 !== value) {
            this._lngEnd$1 = value;
            this.version++;
        }
        return value;
    },

    get_width: function () {
        return this._width$1;
    },

    set_width: function (value) {
        if (this._width$1 !== value) {
            this._width$1 = value;
            this.version++;
        }
        return value;
    },

    get_percentComplete: function () {
        return this._percentComplete$1;
    },

    set_percentComplete: function (value) {
        if (this._percentComplete$1 !== value) {
            this._percentComplete$1 = value;
            this.version++;
        }
        return value;
    },

    writeLayerProperties: function (xmlWriter) {
        xmlWriter._writeAttributeString('LatStart', this.get_latStart().toString());
        xmlWriter._writeAttributeString('LngStart', this.get_lngStart().toString());
        xmlWriter._writeAttributeString('LatEnd', this.get_latEnd().toString());
        xmlWriter._writeAttributeString('LngEnd', this.get_lngEnd().toString());
        xmlWriter._writeAttributeString('Width', this.get_width().toString());
        xmlWriter._writeAttributeString('PercentComplete', this.get_percentComplete().toString());
    },

    initializeFromXml: function (node) {
        this._latStart$1 = parseFloat(node.attributes.getNamedItem('LatStart').nodeValue);
        this._lngStart$1 = parseFloat(node.attributes.getNamedItem('LngStart').nodeValue);
        this._latEnd$1 = parseFloat(node.attributes.getNamedItem('LatEnd').nodeValue);
        this._lngEnd$1 = parseFloat(node.attributes.getNamedItem('LngEnd').nodeValue);
        this._width$1 = parseFloat(node.attributes.getNamedItem('Width').nodeValue);
        this._percentComplete$1 = parseFloat(node.attributes.getNamedItem('PercentComplete').nodeValue);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("GreatCirlceRouteLayer", [GreatCirlceRouteLayer, GreatCirlceRouteLayer$, _layer_js__WEBPACK_IMPORTED_MODULE_4__.Layer]);


/***/ }),

/***/ "./esm/layers/grid_layer.js":
/*!**********************************!*\
  !*** ./esm/layers/grid_layer.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GridLayer: () => (/* binding */ GridLayer)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _grids_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../grids.js */ "./esm/grids.js");
/* harmony import */ var _layer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layer.js */ "./esm/layers/layer.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A layer that renders a coordinate grid on a planet.






// wwtlib.GridLayer

function GridLayer() {
    _layer_js__WEBPACK_IMPORTED_MODULE_2__.Layer.call(this);
}

var GridLayer$ = {
    draw: function (renderContext, opacity, flat) {
        _grids_js__WEBPACK_IMPORTED_MODULE_1__.Grids.drawPlanetGrid(renderContext, opacity * this.get_opacity(), this.get_color());
        _grids_js__WEBPACK_IMPORTED_MODULE_1__.Grids.drawPlanetGridText(renderContext, opacity * this.get_opacity(), this.get_color());
        return true;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("GridLayer", [GridLayer, GridLayer$, _layer_js__WEBPACK_IMPORTED_MODULE_2__.Layer]);


/***/ }),

/***/ "./esm/layers/imageset_layer.js":
/*!**************************************!*\
  !*** ./esm/layers/imageset_layer.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ImageSetLayer: () => (/* binding */ ImageSetLayer)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _utilities_histogram_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utilities/histogram.js */ "./esm/utilities/histogram.js");
/* harmony import */ var _color_map_container_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./color_map_container.js */ "./esm/layers/color_map_container.js");
/* harmony import */ var _fits_image_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fits_image.js */ "./esm/layers/fits_image.js");
/* harmony import */ var _fits_image_js_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./fits_image_js.js */ "./esm/layers/fits_image_js.js");
/* harmony import */ var _imageset_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../imageset.js */ "./esm/imageset.js");
/* harmony import */ var _layer_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./layer.js */ "./esm/layers/layer.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A layer that renders an arbitrary imageset













// wwtlib.ImageSetLayer

function ImageSetLayer() {
    this._imageSet$1 = null;
    this._extension$1 = '.txt';
    this._overrideDefaultLayer$1 = false;
    this._loaded$1 = false;
    _layer_js__WEBPACK_IMPORTED_MODULE_9__.Layer.call(this);
}

ImageSetLayer.create = function (set) {
    var isl = new ImageSetLayer();
    isl._imageSet$1 = set;
    return isl;
};

var ImageSetLayer$ = {
    get_imageSet: function () {
        return this._imageSet$1;
    },

    set_imageSet: function (value) {
        this._imageSet$1 = value;
        return value;
    },

    get_overrideDefaultLayer: function () {
        return this._overrideDefaultLayer$1;
    },

    set_overrideDefaultLayer: function (value) {
        this._overrideDefaultLayer$1 = value;
        return value;
    },

    getFitsImage: function () {
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(this._imageSet$1.get_wcsImage(), _fits_image_js__WEBPACK_IMPORTED_MODULE_6__.FitsImage);
    },

    // Test whether our underlying imagery is FITS based.
    //
    // This can come in two flavors: a single FITS image, or tiled FITS.
    // Note that even though the FileType/Extension field can currently
    // specify multiple file formats, the rendering code requires that the
    // extension is exactly ".fits" for FITS rendering to kick in.
    _isFitsImageset$1: function () {
        var hasFitsExt = this._imageSet$1.get_extension() === '.fits';
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(this._imageSet$1.get_wcsImage(), _fits_image_js__WEBPACK_IMPORTED_MODULE_6__.FitsImage) || (this._imageSet$1.get_wcsImage() == null && hasFitsExt);
    },

    initializeFromXml: function (node) {
        var imageSetNode = _baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.selectSingleNode(node, 'ImageSet');
        this._imageSet$1 = _imageset_js__WEBPACK_IMPORTED_MODULE_8__.Imageset.fromXMLNode(imageSetNode);
        if (node.attributes.getNamedItem('Extension') != null) {
            this._extension$1 = node.attributes.getNamedItem('Extension').nodeValue;
        }
        if (node.attributes.getNamedItem('ScaleType') != null) {
            this.get_imageSet().get_fitsProperties().scaleType = _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('ScaleTypes', node.attributes.getNamedItem('ScaleType').nodeValue);
        }
        if (node.attributes.getNamedItem('MinValue') != null) {
            this.get_imageSet().get_fitsProperties().minVal = parseFloat(node.attributes.getNamedItem('MinValue').nodeValue);
            this.get_imageSet().get_fitsProperties().lowerCut = (node.attributes.getNamedItem('LowerCut') != null) ? parseFloat(node.attributes.getNamedItem('LowerCut').nodeValue) : this.get_imageSet().get_fitsProperties().minVal;
        }
        if (node.attributes.getNamedItem('MaxValue') != null) {
            this.get_imageSet().get_fitsProperties().maxVal = parseFloat(node.attributes.getNamedItem('MaxValue').nodeValue);
            this.get_imageSet().get_fitsProperties().upperCut = (node.attributes.getNamedItem('UpperCut') != null) ? parseFloat(node.attributes.getNamedItem('UpperCut').nodeValue) : this.get_imageSet().get_fitsProperties().maxVal;
        }
        if (node.attributes.getNamedItem('ColorMapperName') != null) {
            this.get_imageSet().get_fitsProperties().colorMapName = node.attributes.getNamedItem('ColorMapperName').nodeValue;
        }
        if (node.attributes.getNamedItem('OverrideDefault') != null) {
            this._overrideDefaultLayer$1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('OverrideDefault').nodeValue);
        }
    },

    draw: function (renderContext, opacity, flat) {
        if (!this._loaded$1) {
            return false;
        }
        renderContext.set_worldBase(renderContext.get_world());
        renderContext.set_viewBase(renderContext.get_view());
        renderContext.makeFrustum();
        renderContext.drawImageSet(this._imageSet$1, this.get_opacity() * opacity * 100);
        return true;
    },

    writeLayerProperties: function (xmlWriter) {
        if (this._imageSet$1.get_wcsImage() != null) {
            if (this._isFitsImageset$1()) {
                this._extension$1 = '.fit';
            }
            else {
                this._extension$1 = '.png';
            }
            xmlWriter._writeAttributeString('Extension', this._extension$1);
        }
        if (this._isFitsImageset$1()) {
            xmlWriter._writeAttributeString('ScaleType', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('ScaleTypes', this._imageSet$1.get_fitsProperties().scaleType));
            xmlWriter._writeAttributeString('MinValue', this._imageSet$1.get_fitsProperties().minVal.toString());
            xmlWriter._writeAttributeString('MaxValue', this._imageSet$1.get_fitsProperties().maxVal.toString());
            xmlWriter._writeAttributeString('LowerCut', this._imageSet$1.get_fitsProperties().lowerCut.toString());
            xmlWriter._writeAttributeString('UpperCut', this._imageSet$1.get_fitsProperties().upperCut.toString());
            if (this._imageSet$1.get_fitsProperties().colorMapName != null) {
                xmlWriter._writeAttributeString('ColorMapperName', this._imageSet$1.get_fitsProperties().colorMapName);
            }
        }
        xmlWriter._writeAttributeString('OverrideDefault', this._overrideDefaultLayer$1.toString());
        _imageset_js__WEBPACK_IMPORTED_MODULE_8__.Imageset.saveToXml(xmlWriter, this._imageSet$1, '');
        _layer_js__WEBPACK_IMPORTED_MODULE_9__.Layer.prototype.writeLayerProperties.call(this, xmlWriter);
    },

    getTypeName: function () {
        return 'TerraViewer.ImageSetLayer';
    },

    cleanUp: function () {
        _layer_js__WEBPACK_IMPORTED_MODULE_9__.Layer.prototype.cleanUp.call(this);
    },

    addFilesToCabinet: function (fc) {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(this._imageSet$1.get_wcsImage(), _fits_image_js__WEBPACK_IMPORTED_MODULE_6__.FitsImage)) {
            var fName = (this._imageSet$1.get_wcsImage()).get_filename();
            var fileName = fc.tempDirectory + _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0}\\{1}{2}', fc.get_packageID(), this.id.toString(), this._extension$1);
            fc.addFile(fileName, (this._imageSet$1.get_wcsImage()).sourceBlob);
        }
    },

    getParamNames: function () {
        return _layer_js__WEBPACK_IMPORTED_MODULE_9__.Layer.prototype.getParamNames.call(this);
    },

    getParams: function () {
        return _layer_js__WEBPACK_IMPORTED_MODULE_9__.Layer.prototype.getParams.call(this);
    },

    setParams: function (paramList) {
        _layer_js__WEBPACK_IMPORTED_MODULE_9__.Layer.prototype.setParams.call(this, paramList);
    },

    setImageScale: function (scaleType, min, max) {
        console.warn('SetImageScale is considered deprecated. Use setImageScaleRaw or setImageScalePhysical instead.');
        this.setImageScaleRaw(scaleType, min, max);
    },

    setImageScaleRaw: function (scaleType, min, max) {
        this.get_imageSet().get_fitsProperties().lowerCut = min;
        this.get_imageSet().get_fitsProperties().upperCut = max;
        this.get_imageSet().get_fitsProperties().scaleType = scaleType;
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(this._imageSet$1.get_wcsImage(), _fits_image_js_js__WEBPACK_IMPORTED_MODULE_7__.FitsImageJs)) {
            _utilities_histogram_js__WEBPACK_IMPORTED_MODULE_4__.Histogram.updateScale(this, scaleType, min, max);
        }
    },

    setImageScalePhysical: function (scaleType, min, max) {
        var newMin = min;
        var newMax = max;
        if (this._isFitsImageset$1()) {
            newMin = (newMin - this._imageSet$1.get_fitsProperties().bZero) / this._imageSet$1.get_fitsProperties().bScale;
            newMax = (newMax - this._imageSet$1.get_fitsProperties().bZero) / this._imageSet$1.get_fitsProperties().bScale;
        }
        this.setImageScaleRaw(scaleType, newMin, newMax);
    },

    setImageZ: function (z) {
        if (this._isFitsImageset$1()) {
            _utilities_histogram_js__WEBPACK_IMPORTED_MODULE_4__.Histogram.updateImage(this, z);
        }
    },

    get_colorMapperName: function () {
        return this.get_imageSet().get_fitsProperties().colorMapName;
    },

    set_colorMapperName: function (value) {
        if (_color_map_container_js__WEBPACK_IMPORTED_MODULE_5__.ColorMapContainer.fromNamedColormap(value) == null) {
            throw new Error('Invalid colormap name');
        }
        this.version++;
        if (this._isFitsImageset$1()) {
            if (_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.useGlVersion2) {
                this._imageSet$1.get_fitsProperties().colorMapName = value;
            }
            else {
                _utilities_histogram_js__WEBPACK_IMPORTED_MODULE_4__.Histogram.updateColorMapper(this, value);
            }
        }
        return value;
    },

    get_colorMapper: function () {
        if (this.get_imageSet().get_fitsProperties().colorMapName == null) {
            return null;
        } else {
            return _color_map_container_js__WEBPACK_IMPORTED_MODULE_5__.ColorMapContainer.fromNamedColormap(this.get_imageSet().get_fitsProperties().colorMapName);
        }
    },

    loadData: function (tourDoc, filename) {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.startsWith(this._extension$1.toLowerCase(), '.fit')) {
            var blob = tourDoc.getFileBlob(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(filename, '.txt', this._extension$1));
            var fi;
            if (_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.useGlVersion2) {
                fi = new _fits_image_js__WEBPACK_IMPORTED_MODULE_6__.FitsImage(this._imageSet$1, 'image.fit', blob, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('doneLoading', this));
            }
            else {
                fi = new _fits_image_js_js__WEBPACK_IMPORTED_MODULE_7__.FitsImageJs(this._imageSet$1, 'image.fit', blob, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('doneLoading', this));
            }
            this._imageSet$1.set_wcsImage(fi);
        } else {
            this._loaded$1 = true;
        }
    },

    doneLoading: function (wcsImage) {
        this._loaded$1 = true;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ImageSetLayer", [ImageSetLayer, ImageSetLayer$, _layer_js__WEBPACK_IMPORTED_MODULE_9__.Layer]);


/***/ }),

/***/ "./esm/layers/iss_layer.js":
/*!*********************************!*\
  !*** ./esm/layers/iss_layer.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ISSLayer: () => (/* binding */ ISSLayer)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util.js */ "./esm/util.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _object3d_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./object3d.js */ "./esm/layers/object3d.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A layer that adds the International Space Station (ISS) with an up-to-date orbit.











// wwtlib.ISSLayer

function ISSLayer() {
    _object3d_js__WEBPACK_IMPORTED_MODULE_7__.Object3dLayer.call(this);
    this.id = ISSLayer.issGuid;
}

ISSLayer.issGuid = _util_js__WEBPACK_IMPORTED_MODULE_2__.Guid.fromString('00000001-0002-0003-0405-060708090a0b');
ISSLayer._loading$2 = false;
ISSLayer._issmodel$2 = null;
ISSLayer._doc$2 = null;

ISSLayer.loadBackground = function () {
    // The ISS frame cannot be created in freestanding mode, so I'm not
    // sure if this function will even get called, but just in case, we
    // make sure to noop if we're in freestanding mode.
    if (ISSLayer._loading$2 || _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.freestandingMode) {
        return;
    }
    ISSLayer._loading$2 = true;
    var url = _url_helpers_js__WEBPACK_IMPORTED_MODULE_6__.URLHelpers.singleton.coreStaticUrl('data/iss.wtt');
    ISSLayer._doc$2 = (0,_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.tourDocumentFromUrlRaw)(url, function () {
        ISSLayer.createSpaceStation();
    });
};

ISSLayer.createSpaceStation = function () {
    ISSLayer._doc$2.set_id('28016047-97a9-4b33-a226-cd820262a151');
    var filename = '0c10ae54-b6da-4282-bfda-f34562d403bc.3ds';
    var o3d = new _object3d_js__WEBPACK_IMPORTED_MODULE_7__.Object3d(ISSLayer._doc$2, filename, true, false, true, _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_white());
    if (o3d != null) {
        o3d.issLayer = true;
        ISSLayer._issmodel$2 = o3d;
    }
};

var ISSLayer$ = {
    draw: function (renderContext, opacity, flat) {
        if (this.object3d == null && ISSLayer._issmodel$2 == null) {
            if (!ISSLayer._loading$2) {
                var worldView = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view());
                var v = worldView.transform(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.get_empty());
                var scaleFactor = Math.sqrt(worldView.get_m11() * worldView.get_m11() + worldView.get_m22() * worldView.get_m22() + worldView.get_m33() * worldView.get_m33());
                var dist = v.length();
                var radius = scaleFactor;

                // Calculate pixelsPerUnit which is the number of pixels covered
                // by an object 1 AU at the distance of the planet center from
                // the camera. This calculation works regardless of the projection
                // type.
                var viewportHeight = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(renderContext.height);
                var p11 = renderContext.get_projection().get_m11();
                var p34 = renderContext.get_projection().get_m34();
                var p44 = renderContext.get_projection().get_m44();
                var w = Math.abs(p34) * dist + p44;
                var pixelsPerUnit = (p11 / w) * viewportHeight;
                var radiusInPixels = (radius * pixelsPerUnit);
                if (radiusInPixels > 0.5) {
                    ISSLayer.loadBackground();
                }
            }
        }
        this.object3d = ISSLayer._issmodel$2;
        return _object3d_js__WEBPACK_IMPORTED_MODULE_7__.Object3dLayer.prototype.draw.call(this, renderContext, opacity, flat);
    },

    getPrimaryUI: function () {
        return null;
    },

    addFilesToCabinet: function (fc) {
        return;
    },

    loadData: function (doc, filename) {
        return;
    },

    cleanUp: function () { }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ISSLayer", [ISSLayer, ISSLayer$, _object3d_js__WEBPACK_IMPORTED_MODULE_7__.Object3dLayer]);


/***/ }),

/***/ "./esm/layers/layer.js":
/*!*****************************!*\
  !*** ./esm/layers/layer.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AltUnits: () => (/* binding */ AltUnits),
/* harmony export */   DomainValue: () => (/* binding */ DomainValue),
/* harmony export */   FadeType: () => (/* binding */ FadeType),
/* harmony export */   Layer: () => (/* binding */ Layer),
/* harmony export */   LayerCollection: () => (/* binding */ LayerCollection)
/* harmony export */ });
/* harmony import */ var pako__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pako */ "../node_modules/pako/index.js");
/* harmony import */ var pako__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pako__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../interfaces.js */ "./esm/interfaces.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util.js */ "./esm/util.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Top-level information about a tour.











// wwtlib.AltUnits

var AltUnits = {
    meters: 1,
    feet: 2,
    inches: 3,
    miles: 4,
    kilometers: 5,
    astronomicalUnits: 6,
    lightYears: 7,
    parsecs: 8,
    megaParsecs: 9,
    custom: 10
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_2__.registerType)("AltUnits", AltUnits);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_2__.registerEnum)("AltUnits", AltUnits);


// wwtlib.FadeType

var FadeType = {
    fadeIn: 1,
    fadeOut: 2,
    both: 3,
    none: 4
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_2__.registerType)("FadeType", FadeType);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_2__.registerEnum)("FadeType", FadeType);


// wwtlib.DomainValue

function DomainValue(text, markerIndex) {
    this.markerIndex = 4;
    this.customMarker = null;
    this.text = text;
    this.markerIndex = markerIndex;
}

var DomainValue$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_2__.registerType)("DomainValue", [DomainValue, DomainValue$, null]);


// wwtlib.Layer

function Layer() {
    this.id = _util_js__WEBPACK_IMPORTED_MODULE_6__.Guid.newGuid();
    this.loadedFromTour = false;
    this.tourDocument = null;
    this.opacity = 1;
    this.opened = false;
    this._startTime = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.date('01/01/1900');
    this._endTime = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.date('01/01/2100');
    this._fadeSpan = 0;
    this._fadeType = 4;
    this.version = 0;
    this.color = _color_js__WEBPACK_IMPORTED_MODULE_4__.Colors.get_white();
    this.enabled = true;
    this.astronomical = false;
}

var Layer$ = {
    getPrimaryUI: function () {
        return null;
    },

    getFileStreamUrl: function (filename) {
        if (this.tourDocument != null) {
            return this.tourDocument.getFileStream(filename);
        }
        return null;
    },

    get_opacity: function () {
        return this.opacity;
    },

    set_opacity: function (value) {
        if (this.opacity !== value) {
            this.version++;
            this.opacity = value;
        }
        return value;
    },

    get_opened: function () {
        return this.opened;
    },

    set_opened: function (value) {
        if (this.opened !== value) {
            this.version++;
            this.opened = value;
        }
        return value;
    },

    get_startTime: function () {
        return this._startTime;
    },

    set_startTime: function (value) {
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.compareDates(this._startTime, value)) {
            this.version++;
            this._startTime = value;
        }
        return value;
    },

    get_endTime: function () {
        return this._endTime;
    },

    set_endTime: function (value) {
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.compareDates(this._endTime, value)) {
            this.version++;
            this._endTime = value;
        }
        return value;
    },

    get_fadeSpan: function () {
        return this._fadeSpan;
    },

    set_fadeSpan: function (value) {
        this.version++;
        this._fadeSpan = value;
        return value;
    },

    get_fadeType: function () {
        return this._fadeType;
    },

    set_fadeType: function (value) {
        if (this._fadeType !== value) {
            this.set_version(this.get_version() + 1) - 1;
            this._fadeType = value;
        }
        return value;
    },

    get_version: function () {
        return this.version;
    },

    set_version: function (value) {
        this.version = value;
        return value;
    },

    findClosest: function (target, distance, closestPlace, astronomical) {
        return closestPlace;
    },

    hoverCheckScreenSpace: function (cursor) {
        return false;
    },

    clickCheckScreenSpace: function (cursor) {
        return false;
    },

    draw: function (renderContext, opacity, flat) {
        return true;
    },

    preDraw: function (renderContext, opacity) {
        return true;
    },

    updateData: function (data, purgeOld, purgeAll, hasHeader) {
        return true;
    },

    // "updateData" used to be named this. We add this function as a
    // compatibility shim just in case there's some JavaScript out there
    // still using the old name.
    upadteData: function (data, purgeOld, purgeAll, hasHeader) {
        return this.updateData(data, purgeOld, purgeAll, hasHeader);
    },

    canCopyToClipboard: function () {
        return false;
    },

    copyToClipboard: function () {
        return;
    },

    getParams: function () {
        var paramList = new Array(5);
        paramList[0] = this.color.r / 255;
        paramList[1] = this.color.g / 255;
        paramList[2] = this.color.b / 255;
        paramList[3] = this.color.a / 255;
        paramList[4] = this.opacity;
        return paramList;
    },

    setParams: function (paramList) {
        if (paramList.length === 5) {
            this.opacity = paramList[4];
            this.color = _color_js__WEBPACK_IMPORTED_MODULE_4__.Color.fromArgb((paramList[3] * 255), (paramList[0] * 255), (paramList[1] * 255), (paramList[2] * 255));
        }
    },

    getParamNames: function () {
        return ['Color.Red', 'Color.Green', 'Color.Blue', 'Color.Alpha', 'Opacity'];
    },

    getEditUI: function () {
        return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.safeCast(this, _interfaces_js__WEBPACK_IMPORTED_MODULE_5__.IUiController);
    },

    cleanUp: function () { },

    get_name: function () {
        return this._name;
    },

    set_name: function (value) {
        if (this._name !== value) {
            this.version++;
            this._name = value;
        }
        return value;
    },

    toString: function () {
        return this._name;
    },

    get_referenceFrame: function () {
        return this.referenceFrame;
    },

    set_referenceFrame: function (value) {
        this.referenceFrame = value;
        return value;
    },

    getProps: function () {
        return '';
    },

    get_color: function () {
        return this.color;
    },

    set_color: function (value) {
        if (this.color !== value) {
            this.color = value;
            this.version++;
        }
        return value;
    },

    colorChanged: function () { },

    get_colorValue: function () {
        return this.get_color().toString();
    },

    set_colorValue: function (value) {
        this.set_color(_color_js__WEBPACK_IMPORTED_MODULE_4__.Color.fromName(value));
        return value;
    },

    // These named accessor functions were added so that we can support
    // `enabled` as a "setting" in our TypeScript framework, without breaking
    // anything that might rely on `this.enabled` being a genuine bool.
    get_enabled: function () {
        return this.enabled;
    },

    set_enabled: function (value) {
        this.enabled = value;
        return value;
    },

    get_astronomical: function () {
        return this.astronomical;
    },

    set_astronomical: function (value) {
        if (this.astronomical !== value) {
            this.version++;
            this.astronomical = value;
        }
        return value;
    },

    getTypeName: function () {
        return 'TerraViewer.Layer';
    },

    saveToXml: function (xmlWriter) {
        xmlWriter._writeStartElement('Layer');
        xmlWriter._writeAttributeString('Id', this.id.toString());
        xmlWriter._writeAttributeString('Type', this.getTypeName());
        xmlWriter._writeAttributeString('Name', this.get_name());
        xmlWriter._writeAttributeString('ReferenceFrame', this.referenceFrame);
        xmlWriter._writeAttributeString('Color', this.color.save());
        xmlWriter._writeAttributeString('Opacity', this.opacity.toString());
        xmlWriter._writeAttributeString('StartTime', _baseutil_js__WEBPACK_IMPORTED_MODULE_3__.Util.xmlDate(this.get_startTime()));
        xmlWriter._writeAttributeString('EndTime', _baseutil_js__WEBPACK_IMPORTED_MODULE_3__.Util.xmlDate(this.get_endTime()));
        xmlWriter._writeAttributeString('FadeSpan', this.get_fadeSpan().toString());
        xmlWriter._writeAttributeString('FadeType', this.get_fadeType().toString());
        this.writeLayerProperties(xmlWriter);
        xmlWriter._writeEndElement();
    },

    writeLayerProperties: function (xmlWriter) {
        return;
    },

    initializeFromXml: function (node) { },

    initFromXml: function (node) {
        this.id = _util_js__WEBPACK_IMPORTED_MODULE_6__.Guid.fromString(node.attributes.getNamedItem('Id').nodeValue);
        this.set_name(node.attributes.getNamedItem('Name').nodeValue);
        this.referenceFrame = node.attributes.getNamedItem('ReferenceFrame').nodeValue;
        this.color = _color_js__WEBPACK_IMPORTED_MODULE_4__.Color.load(node.attributes.getNamedItem('Color').nodeValue);
        this.opacity = parseFloat(node.attributes.getNamedItem('Opacity').nodeValue);
        if (node.attributes.getNamedItem('StartTime') != null) {
            this.set_startTime(new Date(node.attributes.getNamedItem('StartTime').nodeValue));
        }
        if (node.attributes.getNamedItem('EndTime') != null) {
            this.set_endTime(new Date(node.attributes.getNamedItem('EndTime').nodeValue));
        }
        if (node.attributes.getNamedItem('FadeSpan') != null) {
            this.set_fadeSpan(_baseutil_js__WEBPACK_IMPORTED_MODULE_3__.Util.parseTimeSpan(node.attributes.getNamedItem('FadeSpan').nodeValue));
        }
        if (node.attributes.getNamedItem('FadeType') != null) {
            switch (node.attributes.getNamedItem('FadeType').nodeValue) {
                case 'In':
                    this.set_fadeType(1);
                    break;
                case 'Out':
                    this.set_fadeType(2);
                    break;
                case 'Both':
                    this.set_fadeType(3);
                    break;
                case 'None':
                    this.set_fadeType(4);
                    break;
                default:
                    break;
            }
        }
        this.initializeFromXml(node);
    },

    loadData: function (doc, filename) {
        return;
    },

    addFilesToCabinet: function (fc) {
        return;
    },

    // This method decompresses a blob into a string, and if the string cannot be decompressed
    // due to an invalid header, we assume the blob is not compressed and return the string
    // as-is.
    getStringFromGzipBlob: function (blob, dataReady) {
        var reader = new FileReader();
        reader.onloadend = function (e) {
            var result = '';
            try {
                result = pako__WEBPACK_IMPORTED_MODULE_0___default().inflate(e.target.result, { to: 'string' });
            }
            catch (err) {
                var errString = err.toString();
                if (errString === 'incorrect header check' || errString === 'unknown compression method') {
                    result = String.fromCharCode.apply(null, new Uint8Array(e.target.result));
                }
                else {
                    throw err;
                }
            }
            dataReady(result);
        };
        reader.readAsArrayBuffer(blob);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_2__.registerType)("Layer", [Layer, Layer$, null]);


// wwtlib.LayerCollection

function LayerCollection() {
    Layer.call(this);
}

var LayerCollection$ = {
    draw: function (renderContext, opacity, flat) {
        return Layer.prototype.draw.call(this, renderContext, opacity, false);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_2__.registerType)("LayerCollection", [LayerCollection, LayerCollection$, Layer]);


/***/ }),

/***/ "./esm/layers/layer_manager.js":
/*!*************************************!*\
  !*** ./esm/layers/layer_manager.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FrameTarget: () => (/* binding */ FrameTarget),
/* harmony export */   GroundOverlayLayer: () => (/* binding */ GroundOverlayLayer),
/* harmony export */   LayerManager: () => (/* binding */ LayerManager),
/* harmony export */   LayerMap: () => (/* binding */ LayerMap),
/* harmony export */   ReferenceFrames: () => (/* binding */ ReferenceFrames),
/* harmony export */   SkyOverlays: () => (/* binding */ SkyOverlays)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
/* harmony import */ var _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../astrocalc/elliptical.js */ "./esm/astrocalc/elliptical.js");
/* harmony import */ var _utilities_histogram_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utilities/histogram.js */ "./esm/utilities/histogram.js");
/* harmony import */ var _utilities_simple_input_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utilities/simple_input.js */ "./esm/utilities/simple_input.js");
/* harmony import */ var _utilities_color_picker_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utilities/color_picker.js */ "./esm/utilities/color_picker.js");
/* harmony import */ var _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utilities/context_menu_strip.js */ "./esm/utilities/context_menu_strip.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
/* harmony import */ var _fits_image_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./fits_image.js */ "./esm/layers/fits_image.js");
/* harmony import */ var _imageset_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../imageset.js */ "./esm/imageset.js");
/* harmony import */ var _planets_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../planets.js */ "./esm/planets.js");
/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../settings.js */ "./esm/settings.js");
/* harmony import */ var _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../space_time_controller.js */ "./esm/space_time_controller.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../util.js */ "./esm/util.js");
/* harmony import */ var _web_file_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../web_file.js */ "./esm/web_file.js");
/* harmony import */ var _layer_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./layer.js */ "./esm/layers/layer.js");
/* harmony import */ var _reference_frame_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./reference_frame.js */ "./esm/layers/reference_frame.js");
/* harmony import */ var _great_circle_route_layer_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./great_circle_route_layer.js */ "./esm/layers/great_circle_route_layer.js");
/* harmony import */ var _grid_layer_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./grid_layer.js */ "./esm/layers/grid_layer.js");
/* harmony import */ var _imageset_layer_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./imageset_layer.js */ "./esm/layers/imageset_layer.js");
/* harmony import */ var _iss_layer_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./iss_layer.js */ "./esm/layers/iss_layer.js");
/* harmony import */ var _orbit_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./orbit.js */ "./esm/layers/orbit.js");
/* harmony import */ var _orbit_layer_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./orbit_layer.js */ "./esm/layers/orbit_layer.js");
/* harmony import */ var _spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./spreadsheet_layer.js */ "./esm/layers/spreadsheet_layer.js");
/* harmony import */ var _vo_table_layer_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./vo_table_layer.js */ "./esm/layers/vo_table_layer.js");
/* harmony import */ var _tours_tour_stop_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../tours/tour_stop.js */ "./esm/tours/tour_stop.js");
/* harmony import */ var _tours_tour_player_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../tours/tour_player.js */ "./esm/tours/tour_player.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Managing the tree of renderer layers.


































// wwtlib.ReferenceFrames

var ReferenceFrames = {
    sky: 0,
    ecliptic: 1,
    galactic: 2,
    sun: 3,
    mercury: 4,
    venus: 5,
    earth: 6,
    mars: 7,
    jupiter: 8,
    saturn: 9,
    uranus: 10,
    neptune: 11,
    pluto: 12,
    moon: 13,
    io: 14,
    europa: 15,
    ganymede: 16,
    callisto: 17,
    custom: 18,
    identity: 19,
    sandbox: 20
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ReferenceFrames", ReferenceFrames);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("ReferenceFrames", ReferenceFrames);


// wwtlib.LayerManager

function LayerManager() { }

LayerManager._version = 0;
LayerManager._tourLayers = false;
LayerManager._layerMaps = {};
LayerManager._layerMapsTours = {};
LayerManager._allMaps = {};
LayerManager._allMapsTours = {};
LayerManager._currentMap = 'Earth';
LayerManager._layerList = {};
LayerManager._layerListTours = {};
LayerManager._moonfile = '';
LayerManager._selectedLayer = null;
LayerManager._lastMenuClick = new _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector2d();

LayerManager.get_version = function () {
    return LayerManager._version;
};

LayerManager.set_version = function (value) {
    LayerManager._version = value;
    return value;
};

LayerManager.get_frameWizardDialog = function () {
    return LayerManager._frameWizardDialog;
};

LayerManager.get_dataVizWizardDialog = function () {
    return LayerManager._dataVizWizardDialog;
};

LayerManager.get_referenceFramePropsDialog = function () {
    return LayerManager._referenceFramePropsDialog;
};

LayerManager.get_greatCircleDlg = function () {
    return LayerManager._greatCircleDialog;
};

LayerManager.get_tourLayers = function () {
    return LayerManager._tourLayers;
};

LayerManager.set_tourLayers = function (value) {
    if (LayerManager._tourLayers !== value && !value) {
        LayerManager._clearLayers();
        LayerManager._tourLayers = value;
        LayerManager.loadTree();
    }
    else if (LayerManager._tourLayers !== value && !!value) {
        LayerManager._tourLayers = value;
        LayerManager.initLayers();
    }
    return value;
};

LayerManager.loadTree = function () {
    if (_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalScriptInterface != null) {
        _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalScriptInterface.refreshLayerManagerNow();
    }
};

LayerManager.get_layerMaps = function () {
    if (LayerManager.get_tourLayers()) {
        return LayerManager._layerMapsTours;
    }
    else {
        return LayerManager._layerMaps;
    }
};

LayerManager.set_layerMaps = function (value) {
    if (LayerManager.get_tourLayers()) {
        LayerManager._layerMapsTours = value;
    }
    else {
        LayerManager._layerMaps = value;
    }
    return value;
};

LayerManager.get_allMaps = function () {
    if (LayerManager.get_tourLayers()) {
        return LayerManager._allMapsTours;
    }
    else {
        return LayerManager._allMaps;
    }
};

(0,_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.set_layerManagerGetAllMaps)(LayerManager.get_allMaps);

LayerManager.set_allMaps = function (value) {
    if (LayerManager.get_tourLayers()) {
        LayerManager._allMapsTours = value;
    }
    else {
        LayerManager._allMaps = value;
    }
    return value;
};

LayerManager.get_currentMap = function () {
    return LayerManager._currentMap;
};

LayerManager.set_currentMap = function (value) {
    LayerManager._currentMap = value;
    return value;
};

LayerManager.get_layerList = function () {
    if (LayerManager.get_tourLayers()) {
        return LayerManager._layerListTours;
    }
    else {
        return LayerManager._layerList;
    }
};

LayerManager.set_layerList = function (value) {
    if (LayerManager.get_tourLayers()) {
        LayerManager._layerListTours = value;
    }
    else {
        LayerManager._layerList = value;
    }
    return value;
};

// This function *can* be called multiple times safely, but it only
// needs to be called once upon app startup. The `InitLayers` function
// can be called more than once, if/when the `TourLayers` setting is
// toggled.
LayerManager.oneTimeInitialization = function () {
    if (LayerManager._webFileMoons == null) {
        LayerManager.getMoonFile(_url_helpers_js__WEBPACK_IMPORTED_MODULE_16__.URLHelpers.singleton.engineAssetUrl('moons.txt'));
    }
    _spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_27__.PushPin.triggerLoadSprite();
};

LayerManager.initLayers = function () {
    LayerManager._clearLayers();
    var iss = null;
    var doISS = !LayerManager.get_tourLayers() && !_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.freestandingMode;
    if (doISS) {
        iss = new LayerMap('ISS', 18);
        iss.frame.epoch = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController._twoLineDateToJulian('10184.51609218');
        iss.frame.semiMajorAxis = 6728829.41;
        iss.frame.referenceFrameType = 1;
        iss.frame.inclination = 51.6442;
        iss.frame.longitudeOfAscendingNode = 147.0262;
        iss.frame.eccentricity = 0.0009909;
        iss.frame.meanAnomolyAtEpoch = 325.5563;
        iss.frame.meanDailyMotion = 360 * 15.72172655;
        iss.frame.argumentOfPeriapsis = 286.4623;
        iss.frame.scale = 1;
        iss.frame.semiMajorAxisUnits = 1;
        iss.frame.meanRadius = 130;
        iss.frame.oblateness = 0;
        iss.frame.showOrbitPath = true;
        var isstle = new Array(0);

        //This is downloaded now on startup
        var url = _url_helpers_js__WEBPACK_IMPORTED_MODULE_16__.URLHelpers.singleton.coreDynamicUrl('wwtweb/isstle.aspx');
        var webFile;
        webFile = new _web_file_js__WEBPACK_IMPORTED_MODULE_18__.WebFile(url);
        webFile.onStateChange = function () {
            if (webFile.get_state() === 1) {
                var data = webFile.getText();
                isstle = data.split('\n');
                if (isstle.length > 1) {
                    iss.frame.fromTLE(isstle[0], isstle[1], 398600441800000);
                }
            }
        };
        webFile.send();
        iss.enabled = true;
    }
    LayerManager.get_layerMaps()['Sun'] = new LayerMap('Sun', 3);
    LayerManager.get_layerMaps()['Sun'].addChild(new LayerMap('Mercury', 4));
    LayerManager.get_layerMaps()['Sun'].addChild(new LayerMap('Venus', 5));
    LayerManager.get_layerMaps()['Sun'].addChild(new LayerMap('Earth', 6));
    LayerManager.get_layerMaps()['Sun'].childMaps['Earth'].addChild(new LayerMap('Moon', 13));
    if (doISS) {
        LayerManager.get_layerMaps()['Sun'].childMaps['Earth'].addChild(iss);
    }
    LayerManager.get_layerMaps()['Sun'].addChild(new LayerMap('Mars', 7));
    LayerManager.get_layerMaps()['Sun'].addChild(new LayerMap('Jupiter', 8));
    LayerManager.get_layerMaps()['Sun'].childMaps['Jupiter'].addChild(new LayerMap('Io', 14));
    LayerManager.get_layerMaps()['Sun'].childMaps['Jupiter'].addChild(new LayerMap('Europa', 15));
    LayerManager.get_layerMaps()['Sun'].childMaps['Jupiter'].addChild(new LayerMap('Ganymede', 16));
    LayerManager.get_layerMaps()['Sun'].childMaps['Jupiter'].addChild(new LayerMap('Callisto', 17));
    LayerManager.get_layerMaps()['Sun'].addChild(new LayerMap('Saturn', 9));
    LayerManager.get_layerMaps()['Sun'].addChild(new LayerMap('Uranus', 10));
    LayerManager.get_layerMaps()['Sun'].addChild(new LayerMap('Neptune', 11));
    LayerManager.get_layerMaps()['Sun'].addChild(new LayerMap('Pluto', 12));
    LayerManager._addMoons(LayerManager._moonfile);
    LayerManager.get_layerMaps()['Sky'] = new LayerMap('Sky', 0);
    LayerManager.get_layerMaps()['Sun'].open = true;
    LayerManager._allMaps = {};
    LayerManager._addAllMaps(LayerManager.get_layerMaps(), null);
    if (doISS) {
        LayerManager._addIss();
    }
    LayerManager._version++;
    LayerManager.loadTree();
};

LayerManager._addIss = function () {
    var layer = new _iss_layer_js__WEBPACK_IMPORTED_MODULE_24__.ISSLayer();
    layer.set_name(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(1314, 'ISS Model  (Toshiyuki Takahei)'));
    layer.enabled = _settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_active().get_showISSModel();
    LayerManager.get_layerList()[layer.id] = layer;
    layer.set_referenceFrame('ISS');
    LayerManager.get_allMaps()['ISS'].layers.push(layer);
    LayerManager.get_allMaps()['ISS'].open = true;
};

LayerManager._addAllMaps = function (maps, parent) {
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(maps));
    while ($enum1.moveNext()) {
        var key = $enum1.current;
        var map = maps[key];
        map.frame.parent = parent;
        LayerManager.get_allMaps()[map.get_name()] = map;
        LayerManager._addAllMaps(map.childMaps, map.get_name());
    }
};

LayerManager._clearLayers = function () {
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(LayerManager.get_layerList()));
    while ($enum1.moveNext()) {
        var key = $enum1.current;
        var layer = LayerManager.get_layerList()[key];
        layer.cleanUp();
    }
    _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.clearKeys(LayerManager.get_layerList());
    _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.clearKeys(LayerManager.get_layerMaps());
};

LayerManager.getMoonFile = function (url) {
    LayerManager._webFileMoons = new _web_file_js__WEBPACK_IMPORTED_MODULE_18__.WebFile(url);
    LayerManager._webFileMoons.onStateChange = LayerManager.moonFileStateChange;
    LayerManager._webFileMoons.send();
};

LayerManager.moonFileStateChange = function () {
    if (LayerManager._webFileMoons.get_state() === 2) {
        alert(LayerManager._webFileMoons.get_message());
    }
    else if (LayerManager._webFileMoons.get_state() === 1) {
        LayerManager._moonfile = LayerManager._webFileMoons.getText();
        LayerManager.initLayers();
    }
};

LayerManager._addMoons = function (file) {
    var data = file.split('\r\n');
    var first = true;
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(data);
    while ($enum1.moveNext()) {
        var line = $enum1.current;
        if (first) {
            first = false;
            continue;
        }
        var parts = line.split('\t');
        if (parts.length > 16) {
            var planet = parts[0];
            var frame = new LayerMap(parts[2], 18);
            frame.frame._systemGenerated = true;
            frame.frame.epoch = parseFloat(parts[1]);
            frame.frame.semiMajorAxis = parseFloat(parts[3]) * 1000;
            frame.frame.referenceFrameType = 1;
            frame.frame.inclination = parseFloat(parts[7]);
            frame.frame.longitudeOfAscendingNode = parseFloat(parts[8]);
            frame.frame.eccentricity = parseFloat(parts[4]);
            frame.frame.meanAnomolyAtEpoch = parseFloat(parts[6]);
            frame.frame.meanDailyMotion = parseFloat(parts[9]);
            frame.frame.argumentOfPeriapsis = parseFloat(parts[5]);
            frame.frame.scale = 1;
            frame.frame.semiMajorAxisUnits = 1;
            frame.frame.meanRadius = parseFloat(parts[16]) * 1000;
            frame.frame.rotationalPeriod = parseFloat(parts[17]);
            frame.frame.showAsPoint = false;
            frame.frame.showOrbitPath = true;
            frame.frame.set_representativeColor(_color_js__WEBPACK_IMPORTED_MODULE_10__.Color.fromArgb(255, 175, 216, 230));
            frame.frame.oblateness = 0;
            LayerManager.get_layerMaps()['Sun'].childMaps[planet].addChild(frame);
        }
    }
};

LayerManager.addVoTableLayer = function (table, title) {
    return LayerManager.addVoTableLayerWithPlotType(table, title, 2);
};

LayerManager.addVoTableLayerWithPlotType = function (table, title, plotType) {
    var layer = _vo_table_layer_js__WEBPACK_IMPORTED_MODULE_28__.VoTableLayer.create(table, plotType);
    layer.set_name(title);
    layer.set_astronomical(true);
    layer.set_referenceFrame('Sky');
    LayerManager.get_layerList()[layer.id] = layer;
    LayerManager.get_allMaps()['Sky'].layers.push(layer);
    LayerManager.get_allMaps()['Sky'].open = true;
    layer.enabled = true;
    LayerManager._version++;
    LayerManager.loadTree();
    return layer;
};

LayerManager.addImageSetLayer = function (imageset, title) {
    var layer = _imageset_layer_js__WEBPACK_IMPORTED_MODULE_23__.ImageSetLayer.create(imageset);
    return LayerManager.addFitsImageSetLayer(layer, title);
};

LayerManager.addImageSetLayerCallback = function (imageset, title, callback) {
    var layer = _imageset_layer_js__WEBPACK_IMPORTED_MODULE_23__.ImageSetLayer.create(imageset);

    // The tile rendering codepaths require that "Extension" is exactly
    // .fits -- multiple extensions are not currently supported.
    var isNonHipsTiledFits =
        imageset.get_extension() === '.fits' &&
        layer.getFitsImage() == null &&
        imageset.get_projection() !== _imageset_js__WEBPACK_IMPORTED_MODULE_12__.ProjectionType.healpix;

    // The goal here is to fire the callback once the initial imageset
    // data have loaded. In particular, for FITS-type imagesets, we
    // inevitably need to download some data in order to figure out
    // parameters like FitsProperties.LowerCut.
    //
    // At the moment, this is only wired up correctly for non-HiPS tiled
    // FITS. In a pretty egregious hack, the OnMainImageLoaded callback
    // below will be fired once the level-0 FITS tile is loaded. We
    // basically needed to add this new callback hook because there
    // wasn't any other way to get something to fire when the level-0
    // tile data actually arrive.
    //
    // HiPS FITS datasets will *eventually* get the right FitsProperties
    // because the fetch of the HipsProperties data sets this up. (This
    // is triggered by the HipsProperties constructor, used in
    // Imageset.GetNewTile.) But the timing of the callback here is
    // uncorrelated with that process. The same is broadly true for
    // untiled FITS. This function should be improved to make sure that
    // the callback argument gets fired at the right time for such
    // datasets.

    if (isNonHipsTiledFits) {
        imageset.get_fitsProperties().onMainImageLoaded = function (image) {
            image.applyDisplaySettings();
            if (callback != null) {
                callback(layer);
            }
        };
    }
    LayerManager.addFitsImageSetLayer(layer, title);

    // For everything not yet handled, just trigger the callback now, if
    // needed.
    if (callback != null && (!isNonHipsTiledFits || imageset.get_fitsProperties().mainImageLoadedEventHasFired)) {
        callback(layer);
    }

    return layer;
};

// This method is somewhat misnamed - there's nothing FITS-specific about it.
LayerManager.addFitsImageSetLayer = function (layer, title) {
    layer.doneLoading(null);
    layer.set_name(title);
    layer.set_astronomical(true);
    layer.set_referenceFrame('Sky');
    LayerManager.get_layerList()[layer.id] = layer;
    LayerManager.get_allMaps()['Sky'].layers.push(layer);
    LayerManager.get_allMaps()['Sky'].open = true;
    layer.enabled = true;
    LayerManager._version++;
    LayerManager.loadTree();
    return layer;
};

LayerManager.getNextFitsName = function () {
    return LayerManager._getNextName('Fits Image');
};

LayerManager.getNextImageSetName = function () {
    return LayerManager._getNextName('Image Set');
};

LayerManager._getNextName = function (type) {
    var currentNumber = 0;
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(LayerManager.get_allMaps()));
    while ($enum1.moveNext()) {
        var key = $enum1.current;
        var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(LayerManager.get_allMaps()[key].layers);
        while ($enum2.moveNext()) {
            var layer = $enum2.current;
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.startsWith(layer.get_name(), type + ' ')) {
                var number = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(layer.get_name(), type + ' ', '');
                try {
                    var num = parseInt(number);
                    if (num > currentNumber) {
                        currentNumber = num;
                    }
                }
                catch ($e3) {
                }
            }
        }
    }
    return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0} {1}', type, currentNumber + 1);
};

LayerManager._closeAllTourLoadedLayers = function () {
    var purgeTargets = [];
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(LayerManager.get_layerList()));
    while ($enum1.moveNext()) {
        var key = $enum1.current;
        var layer = LayerManager.get_layerList()[key];
        if (layer.loadedFromTour) {
            purgeTargets.push(layer.id);
        }
    }
    var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(purgeTargets);
    while ($enum2.moveNext()) {
        var guid = $enum2.current;
        LayerManager.deleteLayerByID(guid, true, false);
    }
    var purgeMapsNames = [];
    var $enum3 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(LayerManager.get_allMaps()));
    while ($enum3.moveNext()) {
        var key = $enum3.current;
        var map = LayerManager.get_allMaps()[key];
        if (map.loadedFromTour && !map.layers.length) {
            purgeMapsNames.push(map.get_name());
        }
    }
    var $enum4 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(purgeMapsNames);
    while ($enum4.moveNext()) {
        var name = $enum4.current;
        LayerManager.purgeLayerMapDeep(LayerManager.get_allMaps()[name], true);
    }
    LayerManager.set_version(LayerManager.get_version() + 1) - 1;
    LayerManager.loadTree();
};

LayerManager.purgeLayerMapDeep = function (target, topLevel) {
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(target.layers);
    while ($enum1.moveNext()) {
        var layer = $enum1.current;
        LayerManager.deleteLayerByID(layer.id, false, false);
    }
    target.layers.length = 0;
    var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(target.childMaps));
    while ($enum2.moveNext()) {
        var key = $enum2.current;
        var map = target.childMaps[key];
        LayerManager.purgeLayerMapDeep(map, false);
    }
    _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.clearKeys(target.childMaps);
    if (topLevel) {
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(target.frame.parent)) {
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_allMaps(), target.frame.parent)) {
                delete LayerManager.get_allMaps()[target.frame.parent].childMaps[target.get_name()];
            }
        } else {
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_layerMaps(), target.get_name())) {
                delete LayerManager.get_layerMaps()[target.get_name()];
            }
        }
    }
    delete LayerManager.get_allMaps()[target.get_name()];
    LayerManager._version++;
};

LayerManager._cleanAllTourLoadedLayers = function () {
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(LayerManager.get_layerList()));
    while ($enum1.moveNext()) {
        var key = $enum1.current;
        var layer = LayerManager.get_layerList()[key];
        if (layer.loadedFromTour) {
            layer.loadedFromTour = false;
        }
    }
};

// Merge layers from Tour Player Alternate universe into the real layer manager layers list
LayerManager.mergeToursLayers = function () {
    LayerManager._tourLayers = false;
    var OverWrite = false;
    var CollisionChecked = false;
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(LayerManager._allMapsTours));
    while ($enum1.moveNext()) {
        var key = $enum1.current;
        var map = LayerManager._allMapsTours[key];
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager._allMaps, map.get_name())) {
            var newMap = new LayerMap(map.get_name(), 18);
            newMap.frame = map.frame;
            newMap.loadedFromTour = true;
            LayerManager.get_allMaps()[newMap.get_name()] = newMap;
        }
    }
    LayerManager.connectAllChildren();
    var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(LayerManager._layerListTours));
    while ($enum2.moveNext()) {
        var key = $enum2.current;
        var layer = LayerManager._layerListTours[key];
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_layerList(), layer.id)) {
            if (!CollisionChecked) {
                OverWrite = true;
                CollisionChecked = true;
            }
            if (OverWrite) {
                LayerManager.deleteLayerByID(layer.id, true, false);
            }
        }
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_layerList(), layer.id)) {
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_allMaps(), layer.get_referenceFrame())) {
                LayerManager.get_layerList()[layer.id] = layer;
                LayerManager.get_allMaps()[layer.get_referenceFrame()].layers.push(layer);
            }
        } else {
            layer.cleanUp();
        }
    }
    _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.clearKeys(LayerManager._layerListTours);
    _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.clearKeys(LayerManager._allMapsTours);
    _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.clearKeys(LayerManager._layerMapsTours);
    LayerManager.loadTree();
};

LayerManager.connectAllChildren = function () {
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(LayerManager.get_allMaps()));
    while ($enum1.moveNext()) {
        var key = $enum1.current;
        var map = LayerManager.get_allMaps()[key];
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(map.frame.parent) && !_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_layerMaps(), map.frame.name)) {
            LayerManager.get_layerMaps()[map.get_name()] = map;
        } else if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(map.frame.parent) && _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_allMaps(), map.frame.parent)) {
            if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_allMaps()[map.frame.parent].childMaps, map.frame.name)) {
                LayerManager.get_allMaps()[map.frame.parent].childMaps[map.frame.name] = map;
                map.parent = LayerManager.get_allMaps()[map.frame.parent];
            }
        }
    }
};

LayerManager.deleteLayerByID = function (ID, removeFromParent, updateTree) {
    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_layerList(), ID)) {
        var layer = LayerManager.get_layerList()[ID];
        layer.cleanUp();
        if (removeFromParent) {
            _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove(LayerManager.get_allMaps()[layer.get_referenceFrame()].layers, layer);
        }
        delete LayerManager.get_layerList()[ID];
        LayerManager._version++;
        if (updateTree) {
            LayerManager.loadTree();
        }
        return true;
    }
    else {
        return false;
    }
};

LayerManager._getFrameTarget = function (renderContext, TrackingFrame) {
    var target = new FrameTarget();
    var targetPoint = _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector3d.get_empty();
    target.target = _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector3d.get_empty();
    target.matrix = _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Matrix3d.get_identity();
    if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_allMaps(), TrackingFrame)) {
        return target;
    }
    var mapList = [];
    var current = LayerManager.get_allMaps()[TrackingFrame];
    mapList.push(current);
    while (current.frame.reference === 18) {
        current = current.parent;
        mapList.splice(0, 0, current);
    }
    var matOld = renderContext.get_world().clone();
    var matOldNonRotating = renderContext.get_worldBaseNonRotating();
    var matOldBase = renderContext.get_worldBase();
    var oldNominalRadius = renderContext.get_nominalRadius();
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(mapList);
    while ($enum1.moveNext()) {
        var map = $enum1.current;
        if (map.frame.reference !== 18 && map.frame.reference !== 20) {
            _planets_js__WEBPACK_IMPORTED_MODULE_13__.Planets.setupPlanetMatrix(renderContext, _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('SolarSystemObjects', map.frame.name), _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector3d.get_empty(), false);
        } else {
            map.computeFrame(renderContext);
            if (map.frame.useRotatingParentFrame()) {
                renderContext.set_world(_double3d_js__WEBPACK_IMPORTED_MODULE_4__.Matrix3d.multiplyMatrix(map.frame.worldMatrix, renderContext.get_world()));
            }
            else {
                renderContext.set_world(_double3d_js__WEBPACK_IMPORTED_MODULE_4__.Matrix3d.multiplyMatrix(map.frame.worldMatrix, renderContext.get_worldBaseNonRotating()));
            }
            if (map.frame.referenceFrameType === 3) {
                renderContext.set_worldBaseNonRotating(renderContext.get_world().clone());
            }
            renderContext.set_nominalRadius(map.frame.meanRadius);
        }
    }
    targetPoint = renderContext.get_world().transform(targetPoint);
    var lookAt = renderContext.get_world().transform(_double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector3d.create(0, 0, 1));
    var lookUp = _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector3d.subtractVectors(renderContext.get_world().transform(_double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector3d.create(0, 1, 0)), targetPoint);
    lookUp.normalize();
    target.matrix = _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Matrix3d.lookAtLH(new _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector3d(), _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector3d.subtractVectors(lookAt, targetPoint), lookUp);
    renderContext.set_nominalRadius(oldNominalRadius);
    renderContext.set_world(matOld);
    renderContext.set_worldBaseNonRotating(matOldNonRotating);
    renderContext.set_worldBase(matOldBase);
    target.target = targetPoint;
    return target;
};

LayerManager._prepTourLayers = function () {
    if (_tours_tour_player_js__WEBPACK_IMPORTED_MODULE_30__.TourPlayer.get_playing()) {
        var player = _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.uiController;
        if (player != null) {
            var tour = player.get_tour();
            if (tour.get_currentTourStop() != null) {
                player.updateTweenPosition(-1);
                if (!tour.get_currentTourStop().get_keyFramed()) {
                    tour.get_currentTourStop()._updateLayerOpacity();
                    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(tour.get_currentTourStop().layers));
                    while ($enum1.moveNext()) {
                        var key = $enum1.current;
                        var info = tour.get_currentTourStop().layers[key];
                        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_layerList(), info.id)) {
                            LayerManager.get_layerList()[info.id].set_opacity(info.frameOpacity);
                            LayerManager.get_layerList()[info.id].setParams(info.frameParams);
                        }
                    }
                }
            }
        }
    }
};

LayerManager._draw = function (renderContext, opacity, astronomical, referenceFrame, nested, cosmos) {
    if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_allMaps(), referenceFrame)) {
        return;
    }
    var thisMap = LayerManager.get_allMaps()[referenceFrame];
    if (!thisMap.enabled || (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyCount(thisMap.childMaps) && !thisMap.layers.length && !(thisMap.frame.showAsPoint || thisMap.frame.showOrbitPath))) {
        return;
    }
    if (_tours_tour_player_js__WEBPACK_IMPORTED_MODULE_30__.TourPlayer.get_playing()) {
        var player = _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.uiController;
        if (player != null) {
            var tour = player.get_tour();
            if (tour.get_currentTourStop() != null) {
                player.updateTweenPosition(-1);
                tour.get_currentTourStop()._updateLayerOpacity();
                var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(tour.get_currentTourStop().layers));
                while ($enum1.moveNext()) {
                    var key = $enum1.current;
                    var info = tour.get_currentTourStop().layers[key];
                    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_layerList(), info.id)) {
                        LayerManager.get_layerList()[info.id].set_opacity(info.frameOpacity);
                        LayerManager.get_layerList()[info.id].setParams(info.frameParams);
                    }
                }
            }
        }
    }
    var matOld = renderContext.get_world();
    var matOldNonRotating = renderContext.get_worldBaseNonRotating();
    var oldNominalRadius = renderContext.get_nominalRadius();
    if ((thisMap.frame.reference === 18 | thisMap.frame.reference === 18) === 1) {
        thisMap.computeFrame(renderContext);
        if (thisMap.frame.referenceFrameType !== 1 && thisMap.frame.referenceFrameType !== 2) {
            renderContext.set_world(_double3d_js__WEBPACK_IMPORTED_MODULE_4__.Matrix3d.multiplyMatrix(thisMap.frame.worldMatrix, renderContext.get_world()));
        } else {
            renderContext.set_world(_double3d_js__WEBPACK_IMPORTED_MODULE_4__.Matrix3d.multiplyMatrix(thisMap.frame.worldMatrix, renderContext.get_worldBaseNonRotating()));
        }
        renderContext.set_nominalRadius(thisMap.frame.meanRadius);
    }
    if (thisMap.frame.showAsPoint) {
        // todo Draw point planet...
        // Planets.DrawPointPlanet(renderContext.Device, new Vector3d(0, 0, 0), (float).2, thisMap.Frame.RepresentativeColor, true);
    }
    for (var pass = 0; pass < 2; pass++) {
        var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(LayerManager.get_allMaps()[referenceFrame].layers);
        while ($enum2.moveNext()) {
            var layer = $enum2.current;
            if ((!pass && _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(layer, _imageset_layer_js__WEBPACK_IMPORTED_MODULE_23__.ImageSetLayer)) || (pass === 1 && !(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(layer, _imageset_layer_js__WEBPACK_IMPORTED_MODULE_23__.ImageSetLayer)))) {
                var skipLayer = false;
                if (!pass) {
                    // Skip default image set layer so that it's not drawn twice
                    skipLayer = !astronomical && (layer).get_overrideDefaultLayer();
                }
                if (layer.enabled && !skipLayer) {
                    var layerStart = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.utcToJulian(layer.get_startTime());
                    var layerEnd = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.utcToJulian(layer.get_endTime());
                    var fadeIn = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.utcToJulian(layer.get_startTime()) - ((layer.get_fadeType() === 1 || layer.get_fadeType() === 3) ? (layer.get_fadeSpan() / 864000000) : 0);
                    var fadeOut = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.utcToJulian(layer.get_endTime()) + ((layer.get_fadeType() === 2 || layer.get_fadeType() === 3) ? (layer.get_fadeSpan() / 864000000) : 0);
                    if (_space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.get_jNow() > fadeIn && _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.get_jNow() < fadeOut) {
                        var fadeOpacity = 1;
                        if (_space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.get_jNow() < layerStart) {
                            fadeOpacity = ((_space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.get_jNow() - fadeIn) / (layer.get_fadeSpan() / 864000000));
                        }
                        if (_space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.get_jNow() > layerEnd) {
                            fadeOpacity = ((fadeOut - _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.get_jNow()) / (layer.get_fadeSpan() / 864000000));
                        }
                        layer.set_astronomical(astronomical);
                        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(layer, _spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_27__.SpreadSheetLayer)) {
                            var tsl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(layer, _spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_27__.SpreadSheetLayer);
                            tsl.draw(renderContext, opacity * fadeOpacity, cosmos);
                        }
                        else {
                            layer.draw(renderContext, opacity * fadeOpacity, cosmos);
                        }
                    }
                }
            }
        }
    }
    if (nested) {
        var $enum3 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(LayerManager.get_allMaps()[referenceFrame].childMaps));
        while ($enum3.moveNext()) {
            var key = $enum3.current;
            var map = LayerManager.get_allMaps()[referenceFrame].childMaps[key];
            if (!(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(map, LayerMap))) {
                continue;
            }
            if (map.enabled && map.frame.showOrbitPath && _settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_active().get_solarSystemOrbits() && _settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_active().get_solarSystemMinorOrbits()) {
                if (map.frame.referenceFrameType === 1) {
                    if (map.frame.get_orbit() == null) {
                        map.frame.set_orbit(new _orbit_js__WEBPACK_IMPORTED_MODULE_25__.Orbit(map.frame.get_elements(), 360, map.frame.get_representativeColor(), 1, map.parent.frame.meanRadius));
                    }
                    var matSaved = renderContext.get_world();
                    renderContext.set_world(_double3d_js__WEBPACK_IMPORTED_MODULE_4__.Matrix3d.multiplyMatrix(thisMap.frame.worldMatrix, renderContext.get_worldBaseNonRotating()));
                    map.frame.get_orbit().draw3D(renderContext, 1 * 0.5, _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector3d.create(0, 0, 0));
                    renderContext.set_world(matSaved);
                }
                else if (map.frame.referenceFrameType === 2) {
                }
            }
            if ((map.frame.reference === 18 || map.frame.reference === 19)) {
                LayerManager._draw(renderContext, opacity, astronomical, map.get_name(), nested, cosmos);
            }
        }
    }
    renderContext.set_nominalRadius(oldNominalRadius);
    renderContext.set_world(matOld);
    renderContext.set_worldBaseNonRotating(matOldNonRotating);
};

LayerManager._getVisibleLayerList = function (previous) {
    var list = {};
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(LayerManager.get_layerList()));
    while ($enum1.moveNext()) {
        var key = $enum1.current;
        var layer = LayerManager.get_layerList()[key];
        if (layer.enabled) {
            var info = new _tours_tour_stop_js__WEBPACK_IMPORTED_MODULE_29__.LayerInfo();
            info.startOpacity = info.endOpacity = layer.get_opacity();
            info.id = layer.id;
            info.startParams = layer.getParams();
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(previous, info.id)) {
                info.endOpacity = previous[info.id].endOpacity;
                info.endParams = previous[info.id].endParams;
            }
            else {
                info.endParams = layer.getParams();
            }
            list[layer.id] = info;
        }
    }
    return list;
};

LayerManager.setVisibleLayerList = function (list) {
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(LayerManager.get_layerList()));
    while ($enum1.moveNext()) {
        var key = $enum1.current;
        var layer = LayerManager.get_layerList()[key];
        layer.enabled = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(list, layer.id);
        try {
            if (layer.enabled) {
                layer.set_opacity(list[layer.id].frameOpacity);
                layer.setParams(list[layer.id].frameParams);
            }
        }
        catch ($e2) {
        }
    }
};

(0,_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.set_setManagerVisibleLayerList)(LayerManager.setVisibleLayerList);

LayerManager._preDraw = function (renderContext, opacity, astronomical, referenceFrame, nested) {
    if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_allMaps(), referenceFrame)) {
        return;
    }
    var thisMap = LayerManager.get_allMaps()[referenceFrame];
    if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyCount(thisMap.childMaps) && !thisMap.layers.length) {
        return;
    }
    if (_tours_tour_player_js__WEBPACK_IMPORTED_MODULE_30__.TourPlayer.get_playing()) {
        var player = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.uiController, _tours_tour_player_js__WEBPACK_IMPORTED_MODULE_30__.TourPlayer);
        if (player != null) {
            var tour = player.get_tour();
            if (tour.get_currentTourStop() != null) {
                player.updateTweenPosition(-1);
                tour.get_currentTourStop()._updateLayerOpacity();
                var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(tour.get_currentTourStop().layers));
                while ($enum1.moveNext()) {
                    var key = $enum1.current;
                    var info = tour.get_currentTourStop().layers[key];
                    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_layerList(), info.id)) {
                        LayerManager.get_layerList()[info.id].set_opacity(info.frameOpacity);
                        LayerManager.get_layerList()[info.id].setParams(info.frameParams);
                    }
                }
            }
        }
    }
    var matOld = renderContext.get_world();
    var matOldNonRotating = renderContext.get_worldBaseNonRotating();
    var oldNominalRadius = renderContext.get_nominalRadius();
    if (thisMap.frame.reference === 18) {
        thisMap.computeFrame(renderContext);
        if (thisMap.frame.referenceFrameType !== 1) {
            renderContext.set_world(_double3d_js__WEBPACK_IMPORTED_MODULE_4__.Matrix3d.multiplyMatrix(thisMap.frame.worldMatrix, renderContext.get_world()));
        } else {
            renderContext.set_world(_double3d_js__WEBPACK_IMPORTED_MODULE_4__.Matrix3d.multiplyMatrix(thisMap.frame.worldMatrix, renderContext.get_worldBaseNonRotating()));
        }
        renderContext.set_nominalRadius(thisMap.frame.meanRadius);
    }
    for (var pass = 0; pass < 2; pass++) {
        var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(LayerManager.get_allMaps()[referenceFrame].layers);
        while ($enum2.moveNext()) {
            var layer = $enum2.current;
            if ((!pass && _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(layer, _imageset_layer_js__WEBPACK_IMPORTED_MODULE_23__.ImageSetLayer)) || (pass === 1 && !(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(layer, _imageset_layer_js__WEBPACK_IMPORTED_MODULE_23__.ImageSetLayer)))) {
                if (layer.enabled) {
                    var layerStart = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.utcToJulian(layer.get_startTime());
                    var layerEnd = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.utcToJulian(layer.get_endTime());
                    var fadeIn = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.utcToJulian(layer.get_startTime()) - ((layer.get_fadeType() === 1 || layer.get_fadeType() === 3) ? (layer.get_fadeSpan() / 864000000) : 0);
                    var fadeOut = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.utcToJulian(layer.get_endTime()) + ((layer.get_fadeType() === 2 || layer.get_fadeType() === 3) ? (layer.get_fadeSpan() / 864000000) : 0);
                    if (_space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.get_jNow() > fadeIn && _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.get_jNow() < fadeOut) {
                        var fadeOpacity = 1;
                        if (_space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.get_jNow() < layerStart) {
                            fadeOpacity = ((_space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.get_jNow() - fadeIn) / (layer.get_fadeSpan() / 864000000));
                        }
                        if (_space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.get_jNow() > layerEnd) {
                            fadeOpacity = ((fadeOut - _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.get_jNow()) / (layer.get_fadeSpan() / 864000000));
                        }
                        if (!thisMap.frame.reference) {
                            layer.set_astronomical(true);
                        }
                        layer.preDraw(renderContext, opacity * fadeOpacity);
                    }
                }
            }
        }
    }
    if (nested) {
        var $enum3 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(LayerManager.get_allMaps()[referenceFrame].childMaps));
        while ($enum3.moveNext()) {
            var key = $enum3.current;
            var map = LayerManager.get_allMaps()[referenceFrame].childMaps[key];
            if ((map.frame.reference === 18 || map.frame.reference === 19)) {
                LayerManager._preDraw(renderContext, opacity, astronomical, map.get_name(), nested);
            }
        }
    }
    renderContext.set_nominalRadius(oldNominalRadius);
    renderContext.set_world(matOld);
    renderContext.set_worldBaseNonRotating(matOldNonRotating);
};

LayerManager.add = function (layer, updateTree) {
    if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_layerList(), layer.id)) {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_allMaps(), layer.get_referenceFrame())) {
            LayerManager.get_layerList()[layer.id] = layer;
            LayerManager.get_allMaps()[layer.get_referenceFrame()].layers.push(layer);
            LayerManager._version++;
            if (updateTree) {
                LayerManager.loadTree();
            }
        }
    }
};

LayerManager.layerSelectionChanged = function (selected) {
    LayerManager._selectedLayer = selected;
    if (LayerManager._selectedLayer != null) {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(LayerManager._selectedLayer, LayerMap)) {
            var map = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(LayerManager._selectedLayer, LayerMap);
            if (map != null) {
                LayerManager.set_currentMap(map.get_name());
            }
        } else {
            var layer = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(LayerManager._selectedLayer, _imageset_layer_js__WEBPACK_IMPORTED_MODULE_23__.ImageSetLayer);
            if (layer != null && _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(layer.get_imageSet().get_wcsImage(), _fits_image_js__WEBPACK_IMPORTED_MODULE_11__.FitsImage)) {
                return;
            }
        }
    }
    _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalScriptInterface.setTimeSlider('left', '');
    _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalScriptInterface.setTimeSlider('right', '');
    _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalScriptInterface.setTimeSlider('title', _util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(667, 'Time Scrubber'));
};

//Fits time slider not implemented for webgl engine (only Windows version)
LayerManager.setTimeSliderValue = function (pos) {
    var layer = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(LayerManager._selectedLayer, _imageset_layer_js__WEBPACK_IMPORTED_MODULE_23__.ImageSetLayer);
    if (layer != null && _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(layer.get_imageSet().get_wcsImage(), _fits_image_js__WEBPACK_IMPORTED_MODULE_11__.FitsImage)) { }
};

LayerManager.showLayerMenu = function (selected, x, y) {
    LayerManager._lastMenuClick = _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector2d.create(x, y);
    LayerManager._selectedLayer = selected;
    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(selected, LayerMap)) {
        LayerManager.set_currentMap((selected).get_name());
    }
    else if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(selected, _layer_js__WEBPACK_IMPORTED_MODULE_19__.Layer)) {
        LayerManager.set_currentMap((selected).get_referenceFrame());
    }
    if (((_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(selected, _layer_js__WEBPACK_IMPORTED_MODULE_19__.Layer)) && !(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(selected, SkyOverlays)))) {
        var selectedLayer = selected;
        LayerManager._contextMenu = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ContextMenuStrip();
        var renameMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(225, 'Rename'));
        var Expand = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(981, 'Expand'));
        var Collapse = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(982, 'Collapse'));
        var copyMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(428, 'Copy'));
        var deleteMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(167, 'Delete'));
        var saveMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(960, 'Save...'));
        var publishMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(983, 'Publish to Community...'));
        var colorMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(458, 'Color/Opacity'));
        var opacityMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(305, 'Opacity'));
        var propertiesMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(20, 'Properties'));
        var scaleMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(1291, 'Scale/Histogram'));
        var lifeTimeMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(683, 'Lifetime'));
        var spacer1 = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripSeparator();
        var top = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(684, 'Move to Top'));
        var up = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(685, 'Move Up'));
        var down = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(686, 'Move Down'));
        var bottom = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(687, 'Move to Bottom'));
        var showViewer = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(957, 'VO Table Viewer'));
        var spacer2 = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripSeparator();
        var defaultImageset = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(1294, 'Background Image Set'));
        top.click = LayerManager._top_Click;
        up.click = LayerManager._up_Click;
        down.click = LayerManager._down_Click;
        bottom.click = LayerManager._bottom_Click;
        saveMenu.click = LayerManager._saveMenu_Click;
        publishMenu.click = LayerManager._publishMenu_Click;
        Expand.click = LayerManager._expand_Click;
        Collapse.click = LayerManager._collapse_Click;
        copyMenu.click = LayerManager._copyMenu_Click;
        colorMenu.click = LayerManager._colorMenu_Click;
        deleteMenu.click = LayerManager._deleteMenu_Click;
        renameMenu.click = LayerManager._renameMenu_Click;
        propertiesMenu.click = LayerManager._propertiesMenu_Click;
        scaleMenu.click = LayerManager.scaleMenu_click;
        defaultImageset.click = LayerManager._defaultImageset_Click;
        opacityMenu.click = LayerManager._opacityMenu_Click;
        lifeTimeMenu.click = LayerManager._lifeTimeMenu_Click;
        showViewer.click = LayerManager._showViewer_Click;
        LayerManager._contextMenu.items.push(renameMenu);
        if (!selectedLayer.get_opened() && selectedLayer.getPrimaryUI() != null && selectedLayer.getPrimaryUI().get_hasTreeViewNodes()) {
            LayerManager._contextMenu.items.push(Expand);
        }
        if (selectedLayer.get_opened()) {
            LayerManager._contextMenu.items.push(Collapse);
        }
        if (selectedLayer.canCopyToClipboard()) {
        }
        LayerManager._contextMenu.items.push(deleteMenu);
        LayerManager._contextMenu.items.push(spacer2);
        LayerManager._contextMenu.items.push(colorMenu);
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(selected, _imageset_layer_js__WEBPACK_IMPORTED_MODULE_23__.ImageSetLayer)) {
            LayerManager._contextMenu.items.push(defaultImageset);
            var isl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(selected, _imageset_layer_js__WEBPACK_IMPORTED_MODULE_23__.ImageSetLayer);
            defaultImageset.checked = isl.get_overrideDefaultLayer();
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(selected, _spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_27__.SpreadSheetLayer) || _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(selected, _great_circle_route_layer_js__WEBPACK_IMPORTED_MODULE_21__.GreatCirlceRouteLayer)) {
            LayerManager._contextMenu.items.push(propertiesMenu);
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(selected, _vo_table_layer_js__WEBPACK_IMPORTED_MODULE_28__.VoTableLayer)) {
            LayerManager._contextMenu.items.push(showViewer);
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(selected, _imageset_layer_js__WEBPACK_IMPORTED_MODULE_23__.ImageSetLayer)) {
            var isl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(selected, _imageset_layer_js__WEBPACK_IMPORTED_MODULE_23__.ImageSetLayer);
            LayerManager._contextMenu.items.push(scaleMenu);
        }
        if (LayerManager.get_allMaps()[selectedLayer.get_referenceFrame()].layers.length > 1) {
            LayerManager._contextMenu.items.push(spacer1);
            LayerManager._contextMenu.items.push(top);
            LayerManager._contextMenu.items.push(up);
            LayerManager._contextMenu.items.push(down);
            LayerManager._contextMenu.items.push(bottom);
        }
        LayerManager._contextMenu._show(_double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector2d.create(x, y));
    }
    else if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(selected, LayerMap)) {
        var map = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(selected, LayerMap);
        var sandbox = map.frame.reference.toString() === 'Sandbox';
        var Dome = map.frame.name === 'Dome';
        var Sky = map.frame.name === 'Sky';
        if (Dome) {
            return;
        }
        LayerManager._contextMenu = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ContextMenuStrip();
        var trackFrame = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(1298, 'Track this frame'));
        var goTo = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(1299, 'Fly Here'));
        var showOrbit = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create('Show Orbit');
        var newMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(674, 'New Reference Frame'));
        var newLayerGroupMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(675, 'New Layer Group'));
        var addMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(166, 'Add'));
        var newLight = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create('Add Light');
        var addFeedMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(956, 'Add OData/table feed as Layer'));
        var addWmsLayer = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(987, 'New WMS Layer'));
        var addGridLayer = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(1300, 'New Lat/Lng Grid'));
        var addGreatCircle = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(988, 'New Great Circle'));
        var importTLE = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(989, 'Import Orbital Elements'));
        var addMpc = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(1301, 'Add Minor Planet'));
        var deleteFrameMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(167, 'Delete'));
        var pasteMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(425, 'Paste'));
        var addToTimeline = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(1290, 'Add to Timeline'));
        var addKeyframe = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(1280, 'Add Keyframe'));
        var popertiesMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(20, 'Properties'));
        var saveMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(990, 'Save Layers'));
        var publishLayers = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(991, 'Publish Layers to Community'));
        var spacer1 = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripSeparator();
        var spacer0 = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripSeparator();
        var spacer2 = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripSeparator();
        var asReferenceFrame = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create('As Reference Frame');
        var asOrbitalLines = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create('As Orbital Line');
        trackFrame.click = LayerManager._trackFrame_Click;
        goTo.click = LayerManager._goTo_Click;
        asReferenceFrame.click = LayerManager._addMpc_Click;
        asOrbitalLines.click = LayerManager._asOrbitalLines_Click;

        // Add Sub Menus
        addMpc.dropDownItems.push(asReferenceFrame);
        addMpc.dropDownItems.push(asOrbitalLines);
        addMenu.click = LayerManager._addMenu_Click;
        newLayerGroupMenu.click = LayerManager._newLayerGroupMenu_Click;
        pasteMenu.click = LayerManager._pasteLayer_Click;
        newMenu.click = LayerManager._newMenu_Click;
        deleteFrameMenu.click = LayerManager._deleteFrameMenu_Click;
        popertiesMenu.click = LayerManager._framePropertiesMenu_Click;
        addGreatCircle.click = LayerManager._addGreatCircle_Click;
        addGridLayer.click = LayerManager._addGirdLayer_Click;
        var convertToOrbit = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_9__.ToolStripMenuItem.create('Extract Orbit Layer');
        if (map.frame.reference !== 19) {
            if ((_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.get_solarSystemMode() | _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.sandboxMode) === 1) {
                var spacerNeeded = false;
                if (map.frame.reference !== 18 && !_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.sandboxMode) {
                    // fly to
                    if (!Sky) {
                    }
                    try {
                        var name = map.frame.reference.toString();
                        if (name !== 'Sandbox') {
                            var ssObj = _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('SolarSystemObjects', name);
                            var id = ssObj;
                            var bit = Math.pow(2, id);
                            showOrbit.checked = !!(_settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_active().get_planetOrbitsFilter() & bit);
                            showOrbit.click = LayerManager._showOrbitPlanet_Click;
                            showOrbit.tag = bit.toString();
                        }
                    }
                    catch ($e1) {
                    }
                }
                else {
                    // track
                    if (!sandbox && !Sky) {
                        LayerManager._contextMenu.items.push(trackFrame);
                        spacerNeeded = true;
                    }
                    showOrbit.checked = map.frame.showOrbitPath;
                    showOrbit.click = LayerManager._showOrbit_Click;
                }
                if (spacerNeeded) {
                    LayerManager._contextMenu.items.push(spacer2);
                }
                if (!Sky && !sandbox) {
                    LayerManager._contextMenu.items.push(showOrbit);
                    LayerManager._contextMenu.items.push(spacer0);
                }
                if (map.frame.reference.toString() === 'Sandbox') {
                    LayerManager._contextMenu.items.push(newLight);
                }
            }
            if (!Sky) {
                LayerManager._contextMenu.items.push(newMenu);
            }
        }
        if (!Sky) {
            LayerManager._contextMenu.items.push(addGreatCircle);
            LayerManager._contextMenu.items.push(addGridLayer);
        }
        if ((map.frame.reference !== 19 && map.frame.name === 'Sun') || (map.frame.reference === 19 && map.parent != null && map.parent.frame.name === 'Sun')) {
            LayerManager._contextMenu.items.push(addMpc);
        }
        if (map.frame.reference === 18 && map.frame.referenceFrameType === 1 && map.parent != null && map.parent.frame.name === 'Sun') {
        }
        if (!Sky) {
        }
        LayerManager._contextMenu.items.push(pasteMenu);
        if (map.frame.reference === 19) {
            LayerManager._contextMenu.items.push(deleteFrameMenu);
        }
        if (map.frame.reference === 18) {
            LayerManager._contextMenu.items.push(deleteFrameMenu);
            LayerManager._contextMenu.items.push(popertiesMenu);
        }
        LayerManager._contextMenu.items.push(spacer1);
        LayerManager._contextMenu._show(_double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector2d.create(x, y));
    }
};

LayerManager._publishMenu_Click = function (sender, e) { };

LayerManager._addGirdLayer_Click = function (sender, e) {
    var layer = new _grid_layer_js__WEBPACK_IMPORTED_MODULE_22__.GridLayer();
    layer.enabled = true;
    layer.set_name('Lat-Lng Grid');
    LayerManager.get_layerList()[layer.id] = layer;
    layer.set_referenceFrame(LayerManager._currentMap);
    LayerManager.get_allMaps()[LayerManager._currentMap].layers.push(layer);
    LayerManager.get_allMaps()[LayerManager._currentMap].open = true;
    LayerManager._version++;
    LayerManager.loadTree();
};

LayerManager._trackFrame_Click = function (sender, e) {
    var target = LayerManager._selectedLayer;
    _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.set_solarSystemTrack(20);
    _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.set_trackingFrame(target.get_name());
    _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera.zoom = _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.targetCamera.zoom = 1E-09;
};

LayerManager._goTo_Click = function (sender, e) { };

LayerManager._saveMenu_Click = function (sender, e) { };

LayerManager._expand_Click = function (sender, e) { };

LayerManager._collapse_Click = function (sender, e) { };

LayerManager._copyMenu_Click = function (sender, e) {
    if (LayerManager._selectedLayer != null && _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(LayerManager._selectedLayer, _layer_js__WEBPACK_IMPORTED_MODULE_19__.Layer)) {
        var node = LayerManager._selectedLayer;
        node.copyToClipboard();
    }
};

LayerManager._newLayerGroupMenu_Click = function (sender, e) { };

LayerManager._importTLEFile = function (filename) { };

LayerManager._makeLayerGroupNow = function (name) {
    var target = LayerManager._selectedLayer;
    LayerManager._makeLayerGroup(name, target);
};

LayerManager._makeLayerGroup = function (name, target) {
    var frame = new _reference_frame_js__WEBPACK_IMPORTED_MODULE_20__.ReferenceFrame();
    frame.name = name;
    frame.reference = 19;
    var newMap = new LayerMap(frame.name, 19);
    newMap.frame = frame;
    newMap.frame._systemGenerated = false;
    target.addChild(newMap);
    newMap.frame.parent = target.get_name();
    LayerManager.get_allMaps()[frame.name] = newMap;
    LayerManager._version++;
};

LayerManager._lifeTimeMenu_Click = function (sender, e) { };

LayerManager._deleteFrameMenu_Click = function (sender, e) { };

LayerManager._framePropertiesMenu_Click = function (sender, e) {
    var target = LayerManager._selectedLayer;
    LayerManager.get_referenceFramePropsDialog().show(target.frame, e);
};

LayerManager._newMenu_Click = function (sender, e) {
    var frame = new _reference_frame_js__WEBPACK_IMPORTED_MODULE_20__.ReferenceFrame();
    LayerManager.get_frameWizardDialog().show(frame, e);
};

LayerManager.referenceFrameWizardFinished = function (frame) {
    var target = LayerManager._selectedLayer;
    var newMap = new LayerMap(frame.name, 18);
    if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_allMaps(), frame.name)) {
        newMap.frame = frame;
        target.addChild(newMap);
        newMap.frame.parent = target.get_name();
        LayerManager.get_allMaps()[frame.name] = newMap;
        LayerManager._version++;
        LayerManager.loadTree();
    }
};

LayerManager.pasteFromTle = function (lines, frame) {
    var line1 = '';
    var line2 = '';
    for (var i = 0; i < lines.length; i++) {
        lines[i] = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(lines[i]);
        if (lines[i].length === 69 && _reference_frame_js__WEBPACK_IMPORTED_MODULE_20__.ReferenceFrame.isTLECheckSumGood(lines[i])) {
            if (!line1.length && lines[i].substring(0, 1) === '1') {
                line1 = lines[i];
            }
            if (!line2.length && lines[i].substring(0, 1) === '2') {
                line2 = lines[i];
            }
        }
    }
    if (line1.length === 69 && line2.length === 69) {
        frame.fromTLE(line1, line2, 398600441800000);
        return true;
    }
    return false;
};

LayerManager._opacityMenu_Click = function (sender, e) { };

LayerManager._defaultImageset_Click = function (sender, e) {
    var isl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(LayerManager._selectedLayer, _imageset_layer_js__WEBPACK_IMPORTED_MODULE_23__.ImageSetLayer);
    isl.set_overrideDefaultLayer(!isl.get_overrideDefaultLayer());
};

LayerManager._propertiesMenu_Click = function (sender, e) {
    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(LayerManager._selectedLayer, _spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_27__.SpreadSheetLayer)) {
        var target = LayerManager._selectedLayer;
        LayerManager.get_dataVizWizardDialog().show(target, e);
    }
    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(LayerManager._selectedLayer, _great_circle_route_layer_js__WEBPACK_IMPORTED_MODULE_21__.GreatCirlceRouteLayer)) {
        LayerManager.get_greatCircleDlg().show(LayerManager._selectedLayer, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
    }
};

LayerManager._renameMenu_Click = function (sender, e) {
    var layer = LayerManager._selectedLayer;
    var input = new _utilities_simple_input_js__WEBPACK_IMPORTED_MODULE_7__.SimpleInput(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(225, 'Rename'), _util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(228, 'New Name'), layer.get_name(), 32);
    input.show(LayerManager._lastMenuClick, function () {
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(input.text)) {
            layer.set_name(input.text);
            LayerManager._version++;
            LayerManager.loadTree();
        }
    });
};

LayerManager._colorMenu_Click = function (sender, e) {
    var layer = LayerManager._selectedLayer;
    var picker = new _utilities_color_picker_js__WEBPACK_IMPORTED_MODULE_8__.ColorPicker();
    if (layer.get_color() != null) {
        picker.color = layer.get_color();
    }
    picker.callBack = function () {
        layer.set_color(picker.color);
    };
    picker.show(e);
};

LayerManager._addMenu_Click = function (sender, e) { };

LayerManager._deleteMenu_Click = function (sender, e) {
    LayerManager._deleteSelectedLayer();
};

LayerManager._deleteSelectedLayer = function () {
    if (LayerManager._selectedLayer != null && _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(LayerManager._selectedLayer, _layer_js__WEBPACK_IMPORTED_MODULE_19__.Layer)) {
        var node = LayerManager._selectedLayer;
        delete LayerManager.get_layerList()[node.id];
        _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove(LayerManager.get_allMaps()[LayerManager.get_currentMap()].layers, node);
        node.cleanUp();
        node.set_version(node.get_version() + 1) - 1;
        LayerManager.loadTree();
        LayerManager._version++;
    }
};

LayerManager.scaleMenu_click = function (sender, e) {
    var isl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(LayerManager._selectedLayer, _imageset_layer_js__WEBPACK_IMPORTED_MODULE_23__.ImageSetLayer);
    if (isl != null) {
        var hist = new _utilities_histogram_js__WEBPACK_IMPORTED_MODULE_6__.Histogram();
        hist.image = isl.getFitsImage();
        hist.layer = isl;
        hist.show(_double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector2d.create(200, 200));
    }
};

LayerManager._showViewer_Click = function (sender, e) {
    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(LayerManager._selectedLayer, _vo_table_layer_js__WEBPACK_IMPORTED_MODULE_28__.VoTableLayer)) {
        var layer = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(LayerManager._selectedLayer, _vo_table_layer_js__WEBPACK_IMPORTED_MODULE_28__.VoTableLayer);
        _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalScriptInterface.displayVoTableLayer(layer);
    }
};

LayerManager._bottom_Click = function (sender, e) {
    var layer = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(LayerManager._selectedLayer, _layer_js__WEBPACK_IMPORTED_MODULE_19__.Layer);
    if (layer != null) {
        _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove(LayerManager.get_allMaps()[layer.get_referenceFrame()].layers, layer);
        LayerManager.get_allMaps()[layer.get_referenceFrame()].layers.push(layer);
    }
    LayerManager._version++;
    LayerManager.loadTree();
};

LayerManager._down_Click = function (sender, e) {
    var layer = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(LayerManager._selectedLayer, _layer_js__WEBPACK_IMPORTED_MODULE_19__.Layer);
    if (layer != null) {
        var index = LayerManager.get_allMaps()[layer.get_referenceFrame()].layers.lastIndexOf(layer);
        if (index < (LayerManager.get_allMaps()[layer.get_referenceFrame()].layers.length - 1)) {
            _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove(LayerManager.get_allMaps()[layer.get_referenceFrame()].layers, layer);
            LayerManager.get_allMaps()[layer.get_referenceFrame()].layers.splice(index + 1, 0, layer);
        }
    }
    LayerManager._version++;
    LayerManager.loadTree();
};

LayerManager._up_Click = function (sender, e) {
    var layer = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(LayerManager._selectedLayer, _layer_js__WEBPACK_IMPORTED_MODULE_19__.Layer);
    if (layer != null) {
        var index = LayerManager.get_allMaps()[layer.get_referenceFrame()].layers.lastIndexOf(layer);
        if (index > 0) {
            _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove(LayerManager.get_allMaps()[layer.get_referenceFrame()].layers, layer);
            LayerManager.get_allMaps()[layer.get_referenceFrame()].layers.splice(index - 1, 0, layer);
        }
    }
    LayerManager._version++;
    LayerManager.loadTree();
};

LayerManager._top_Click = function (sender, e) {
    var layer = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(LayerManager._selectedLayer, _layer_js__WEBPACK_IMPORTED_MODULE_19__.Layer);
    if (layer != null) {
        _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove(LayerManager.get_allMaps()[layer.get_referenceFrame()].layers, layer);
        LayerManager.get_allMaps()[layer.get_referenceFrame()].layers.splice(0, 0, layer);
    }
    LayerManager._version++;
    LayerManager.loadTree();
};

LayerManager._pasteLayer_Click = function (sender, e) {
    LayerManager.get_dataVizWizardDialog().show(LayerManager.get_currentMap(), e);
};

LayerManager.createSpreadsheetLayer = function (frame, name, data) {
    var layer = new _spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_27__.SpreadSheetLayer();
    layer.loadFromString(data, false, false, false, true);
    layer.set_name(name);
    LayerManager.addSpreadsheetLayer(layer, frame);
    return layer;
};

LayerManager.addSpreadsheetLayer = function (layer, frame) {
    layer.enabled = true;
    layer.set_referenceFrame(frame);
    LayerManager.add(layer, true);
};

LayerManager._showOrbitPlanet_Click = function (sender, e) {
    try {
        var bit = parseInt((sender).tag.toString());
        // Flip the state
        if (!(_settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_globalSettings().get_planetOrbitsFilter() & bit)) {
            _settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_globalSettings().set_planetOrbitsFilter(_settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_globalSettings().get_planetOrbitsFilter() | bit);
        } else {
            _settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_globalSettings().set_planetOrbitsFilter(_settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_globalSettings().get_planetOrbitsFilter() & ~bit);
        }
    }
    catch ($e1) { }
};

LayerManager._showOrbit_Click = function (sender, e) {
    // Flip the state
    var map = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(LayerManager._selectedLayer, LayerMap);
    map.frame.showOrbitPath = !map.frame.showOrbitPath;
};

LayerManager._addGreatCircle_Click = function (sender, e) {
    LayerManager._addGreatCircleLayer();
};

LayerManager._addMpc_Click = function (sender, e) {
    var target = LayerManager._selectedLayer;
    var input = new _utilities_simple_input_js__WEBPACK_IMPORTED_MODULE_7__.SimpleInput(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(1302, 'Minor planet name or designation'), _util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(238, 'Name'), '', 32);
    var retry = false;
    do {
        if (input.showDialog() === 1) {
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(target.childMaps, input.text)) {
                retry = true;
            }
            else {
                try {
                    LayerManager._getMpc(input.text, target);
                    retry = false;
                }
                catch ($e1) {
                    retry = true;
                }
            }
        } else {
            retry = false;
        }
    } while (retry);
    return;
};

LayerManager._asOrbitalLines_Click = function (sender, e) {
    var target = LayerManager._selectedLayer;
    var input = new _utilities_simple_input_js__WEBPACK_IMPORTED_MODULE_7__.SimpleInput(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(1302, 'Minor planet name or designation'), _util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(238, 'Name'), '', 32);
    input.show(_util_js__WEBPACK_IMPORTED_MODULE_17__.Cursor.get_position(), function () {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(target.childMaps, input.text)) {
        } else {
            LayerManager._getMpcAsTLE(input.text, target);
        }
    });
};

LayerManager._getMpcAsTLE = function (id, target) {
    var file = new _web_file_js__WEBPACK_IMPORTED_MODULE_18__.WebFile('https://www.minorplanetcenter.net/db_search/show_object?object_id=' + id);
    file.onStateChange = function () {
        if (file.get_state() !== 1) {
            return;
        }
        var data = file.getText();
        var startform = data.indexOf('show-orbit-button');
        var lastForm = data.indexOf('/form', startform);
        var formpart = data.substring(startform, lastForm);
        var name = id;
        var frame = new _reference_frame_js__WEBPACK_IMPORTED_MODULE_20__.ReferenceFrame();
        frame.oblateness = 0;
        frame.showOrbitPath = true;
        frame.showAsPoint = true;
        frame.epoch = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.utcToJulian(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.date(LayerManager._getValueByID(formpart, 'epoch').substring(0, 10)));
        frame.semiMajorAxis = parseFloat(LayerManager._getValueByID(formpart, 'a')) * 149598000 * 1000;
        frame.referenceFrameType = 1;
        frame.inclination = parseFloat(LayerManager._getValueByID(formpart, 'incl'));
        frame.longitudeOfAscendingNode = parseFloat(LayerManager._getValueByID(formpart, 'node'));
        frame.eccentricity = parseFloat(LayerManager._getValueByID(formpart, 'e'));
        frame.meanAnomolyAtEpoch = parseFloat(LayerManager._getValueByID(formpart, 'm'));
        frame.meanDailyMotion = _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_5__.ELL.meanMotionFromSemiMajorAxis(parseFloat(LayerManager._getValueByID(formpart, 'a')));
        frame.argumentOfPeriapsis = parseFloat(LayerManager._getValueByID(formpart, 'peri'));
        frame.scale = 1;
        frame.semiMajorAxisUnits = 1;
        frame.meanRadius = 10;
        frame.oblateness = 0;
        var TLE = name + '\n' + frame.toTLE();
        LayerManager._loadOrbitsFile(id, TLE, target.get_name());
        LayerManager.loadTree();
    };
    file.send();
};

LayerManager._getMpc = function (id, target) {
    var file = new _web_file_js__WEBPACK_IMPORTED_MODULE_18__.WebFile('https://www.minorplanetcenter.net/db_search/show_object?object_id=' + id);
    file.onStateChange = function () {
        var data = file.getText();
        var startform = data.indexOf('show-orbit-button');
        var lastForm = data.indexOf('/form', startform);
        var formpart = data.substring(startform, lastForm);
        var name = id;
        var orbit = new LayerMap(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(name), 18);
        orbit.frame.oblateness = 0;
        orbit.frame.showOrbitPath = true;
        orbit.frame.showAsPoint = true;
        orbit.frame.epoch = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.utcToJulian(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.date(LayerManager._getValueByID(formpart, 'epoch').substring(0, 10)));
        orbit.frame.semiMajorAxis = parseFloat(LayerManager._getValueByID(formpart, 'a')) * 149598000 * 1000;
        orbit.frame.referenceFrameType = 1;
        orbit.frame.inclination = parseFloat(LayerManager._getValueByID(formpart, 'incl'));
        orbit.frame.longitudeOfAscendingNode = parseFloat(LayerManager._getValueByID(formpart, 'node'));
        orbit.frame.eccentricity = parseFloat(LayerManager._getValueByID(formpart, 'e'));
        orbit.frame.meanAnomolyAtEpoch = parseFloat(LayerManager._getValueByID(formpart, 'm'));
        orbit.frame.meanDailyMotion = _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_5__.ELL.meanMotionFromSemiMajorAxis(parseFloat(LayerManager._getValueByID(formpart, 'a')));
        orbit.frame.argumentOfPeriapsis = parseFloat(LayerManager._getValueByID(formpart, 'peri'));
        orbit.frame.scale = 1;
        orbit.frame.semiMajorAxisUnits = 1;
        orbit.frame.meanRadius = 10;
        orbit.frame.oblateness = 0;
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(LayerManager.get_allMaps()[target.get_name()].childMaps, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(name))) {
            LayerManager.get_allMaps()[target.get_name()].addChild(orbit);
        }
        LayerManager.get_allMaps()[orbit.get_name()] = orbit;
        orbit.frame.parent = target.get_name();
        LayerManager._makeLayerGroup('Minor Planet', orbit);
        LayerManager.loadTree();
    };
};

LayerManager._getValueByID = function (data, id) {
    var valStart = data.indexOf('id="' + id + '"');
    valStart = data.indexOf('value=', valStart) + 7;
    var valEnd = data.indexOf('"', valStart);
    return data.substr(valStart, valEnd - valStart);
};

LayerManager._addGreatCircleLayer = function () {
    var layer = new _great_circle_route_layer_js__WEBPACK_IMPORTED_MODULE_21__.GreatCirlceRouteLayer();
    var camera = _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera;
    layer.set_latStart(camera.lat);
    layer.set_latEnd(camera.lat - 5);
    layer.set_lngStart(camera.lng);
    layer.set_lngEnd(camera.lng + 5);
    layer.set_width(4);
    layer.enabled = true;
    layer.set_name(_util_js__WEBPACK_IMPORTED_MODULE_17__.Language.getLocalizedText(1144, 'Great Circle Route'));
    LayerManager.get_layerList()[layer.id] = layer;
    layer.set_referenceFrame(LayerManager._currentMap);
    LayerManager.get_allMaps()[LayerManager._currentMap].layers.push(layer);
    LayerManager.get_allMaps()[LayerManager._currentMap].open = true;
    LayerManager._version++;
    LayerManager.loadTree();
    LayerManager.get_greatCircleDlg().show(layer, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
};

LayerManager._loadOrbitsFile = function (name, data, currentMap) {
    var layer = new _orbit_layer_js__WEBPACK_IMPORTED_MODULE_26__.OrbitLayer();
    layer.loadString(data);
    layer.enabled = true;
    layer.set_name(name);
    LayerManager.get_layerList()[layer.id] = layer;
    layer.set_referenceFrame(currentMap);
    LayerManager.get_allMaps()[currentMap].layers.push(layer);
    LayerManager.get_allMaps()[currentMap].open = true;
    LayerManager._version++;
    LayerManager.loadTree();
    return layer;
};

var LayerManager$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("LayerManager", [LayerManager, LayerManager$, null]);


// wwtlib.LayerMap

function LayerMap(name, reference) {
    this.childMaps = {};
    this.parent = null;
    this.layers = [];
    this.open = false;
    this.enabled = true;
    this.loadedFromTour = false;
    this.frame = new _reference_frame_js__WEBPACK_IMPORTED_MODULE_20__.ReferenceFrame();
    this.set_name(name);
    this.frame.reference = reference;
    var radius = 6371000;
    switch (reference) {
        case 0:
            break;
        case 1:
            break;
        case 2:
            break;
        case 3:
            radius = 696000000;
            break;
        case 4:
            radius = 2439700;
            break;
        case 5:
            radius = 6051800;
            break;
        case 6:
            radius = 6371000;
            break;
        case 7:
            radius = 3390000;
            break;
        case 8:
            radius = 69911000;
            break;
        case 9:
            radius = 58232000;
            break;
        case 10:
            radius = 25362000;
            break;
        case 11:
            radius = 24622000;
            break;
        case 12:
            radius = 1161000;
            break;
        case 13:
            radius = 1737100;
            break;
        case 14:
            radius = 1821500;
            break;
        case 15:
            radius = 1561000;
            break;
        case 16:
            radius = 2631200;
            break;
        case 17:
            radius = 2410300;
            break;
        case 18:
            break;
        case 19:
            break;
        default:
            break;
    }
    this.frame.meanRadius = radius;
}

var LayerMap$ = {
    addChild: function (child) {
        child.parent = this;
        this.childMaps[child.get_name()] = child;
    },

    get_name: function () {
        return this.frame.name;
    },

    set_name: function (value) {
        this.frame.name = value;
        return value;
    },

    computeFrame: function (renderContext) {
        if (this.frame.reference === 18) {
            this.frame.computeFrame(renderContext);
        }
    },

    toString: function () {
        return this.get_name();
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("LayerMap", [LayerMap, LayerMap$, null]);


// wwtlib.SkyOverlays

function SkyOverlays() { }

var SkyOverlays$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("SkyOverlays", [SkyOverlays, SkyOverlays$, null]);


// wwtlib.GroundOverlayLayer

function GroundOverlayLayer() { }

var GroundOverlayLayer$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("GroundOverlayLayer", [GroundOverlayLayer, GroundOverlayLayer$, null]);


// wwtlib.FrameTarget

function FrameTarget() { }

var FrameTarget$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("FrameTarget", [FrameTarget, FrameTarget$, null]);


/***/ }),

/***/ "./esm/layers/layer_ui.js":
/*!********************************!*\
  !*** ./esm/layers/layer_ui.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LayerUI: () => (/* binding */ LayerUI),
/* harmony export */   LayerUIMenuItem: () => (/* binding */ LayerUIMenuItem),
/* harmony export */   LayerUITreeNode: () => (/* binding */ LayerUITreeNode)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A framework for constructing UIs associated with specific layers. Largely
// unused in the web engine context.






// wwtlib.LayerUI

function LayerUI() { }

LayerUI._type = null;

var LayerUI$ = {
    get_hasTreeViewNodes: function () {
        return false;
    },

    getTreeNodes: function () {
        return null;
    },

    getNodeContextMenu: function (node) {
        return null;
    },

    setUICallbacks: function (callbacks) { }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("LayerUI", [LayerUI, LayerUI$, null]);


// wwtlib.LayerUIMenuItem

function LayerUIMenuItem() {
    this._tag = null;
    this._isChecked = false;
    this._isEnabled = true;
    this._subMenus = null;
}

var LayerUIMenuItem$ = {
    get_name: function () {
        return this._name;
    },

    set_name: function (value) {
        this._name = value;
        return value;
    },

    get_tag: function () {
        return this._tag;
    },

    set_tag: function (value) {
        this._tag = value;
        return value;
    },

    get_checked: function () {
        return this._isChecked;
    },

    set_checked: function (value) {
        this._isChecked = value;
        return value;
    },

    get_enabled: function () {
        return this._isEnabled;
    },

    set_enabled: function (value) {
        this._isEnabled = value;
        return value;
    },

    add_menuItemSelected: function (value) {
        this.__menuItemSelected = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__menuItemSelected, value);
    },

    remove_menuItemSelected: function (value) {
        this.__menuItemSelected = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__menuItemSelected, value);
    },

    fireMenuItemSelected: function () {
        if (this.__menuItemSelected != null) {
            this.__menuItemSelected(this);
        }
    },

    get_subMenus: function () {
        if (this._subMenus == null) {
            this._subMenus = [];
        }
        return this._subMenus;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("LayerUIMenuItem", [LayerUIMenuItem, LayerUIMenuItem$, null]);


// wwtlib.LayerUITreeNode

function LayerUITreeNode() {
    this._parent = null;
    this._level = 0;
    this._open = false;
    this._isChecked = false;
    this._bold = false;
    this._color = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_white();
    this._nodes = null;
}

var LayerUITreeNode$ = {
    add_nodeChecked: function (value) {
        this.__nodeChecked = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__nodeChecked, value);
    },

    remove_nodeChecked: function (value) {
        this.__nodeChecked = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__nodeChecked, value);
    },

    fireNodeChecked: function (newState) {
        if (this.__nodeChecked != null) {
            this.__nodeChecked(this, newState);
        }
    },

    add_nodeUpdated: function (value) {
        this.__nodeUpdated = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__nodeUpdated, value);
    },

    remove_nodeUpdated: function (value) {
        this.__nodeUpdated = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__nodeUpdated, value);
    },

    fireNodeUpdated: function () {
        if (this.__nodeUpdated != null) {
            this.__nodeUpdated(this);
        }
    },

    add_nodeSelected: function (value) {
        this.__nodeSelected = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__nodeSelected, value);
    },

    remove_nodeSelected: function (value) {
        this.__nodeSelected = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__nodeSelected, value);
    },

    fireNodeSelected: function () {
        if (this.__nodeSelected != null) {
            this.__nodeSelected(this);
        }
    },

    add_nodeActivated: function (value) {
        this.__nodeActivated = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__nodeActivated, value);
    },

    remove_nodeActivated: function (value) {
        this.__nodeActivated = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__nodeActivated, value);
    },

    fireNodeActivated: function () {
        if (this.__nodeActivated != null) {
            this.__nodeActivated(this);
        }
    },

    get_name: function () {
        return this._name;
    },

    set_name: function (value) {
        if (this._name !== value) {
            this._name = value;
            this.fireNodeUpdated();
        }
        return value;
    },

    get_parent: function () {
        return this._parent;
    },

    set_parent: function (value) {
        this._parent = value;
        return value;
    },

    get_level: function () {
        return this._level;
    },

    set_level: function (value) {
        this._level = value;
        return value;
    },

    get_tag: function () {
        return this._tag;
    },

    set_tag: function (value) {
        this._tag = value;
        return value;
    },

    get_referenceTag: function () {
        return this._referenceTag;
    },

    set_referenceTag: function (value) {
        this._referenceTag = value;
        return value;
    },

    get_opened: function () {
        return this._open;
    },

    set_opened: function (value) {
        if (this._open !== value) {
            this._open = value;
            this.fireNodeUpdated();
        }
        return value;
    },

    get_checked: function () {
        return this._isChecked;
    },

    set_checked: function (value) {
        if (this._isChecked !== value) {
            this._isChecked = value;
            this.fireNodeUpdated();
        }
        return value;
    },

    get_bold: function () {
        return this._bold;
    },

    set_bold: function (value) {
        if (this._bold !== value) {
            this._bold = value;
            this.fireNodeUpdated();
        }
        return value;
    },

    get_color: function () {
        return this._color;
    },

    set_color: function (value) {
        if (this._color !== value) {
            this._color = value;
            this.fireNodeUpdated();
        }
        return value;
    },

    add: function (name) {
        var node = new LayerUITreeNode();
        node.set_name(name);
        node.set_parent(this);
        node.set_level(this.get_level() + 1);
        this.get_nodes().push(node);
        return node;
    },

    get_nodes: function () {
        if (this._nodes == null) {
            this._nodes = [];
        }
        return this._nodes;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("LayerUITreeNode", [LayerUITreeNode, LayerUITreeNode$, null]);


/***/ }),

/***/ "./esm/layers/manager_dialogs.js":
/*!***************************************!*\
  !*** ./esm/layers/manager_dialogs.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DataVizWizard: () => (/* binding */ DataVizWizard),
/* harmony export */   FrameWizard: () => (/* binding */ FrameWizard),
/* harmony export */   GreatCircleDialog: () => (/* binding */ GreatCircleDialog),
/* harmony export */   ReferenceFrameProps: () => (/* binding */ ReferenceFrameProps)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _utilities_dialog_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utilities/dialog.js */ "./esm/utilities/dialog.js");
/* harmony import */ var _layer_manager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layer_manager.js */ "./esm/layers/layer_manager.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Types defining UI elements associated with the layer manager.
//
// These don't do anything in the web client, but to preserve API compatibility,
// we keep them hanging around.






// wwtlib.FrameWizard
//
// This was originally defined in `Utilities/Dialog.cs`.

function FrameWizard() {
    _utilities_dialog_js__WEBPACK_IMPORTED_MODULE_1__.Dialog.call(this);
}

var FrameWizard$ = {
    OK: function (frame) {
        _layer_manager_js__WEBPACK_IMPORTED_MODULE_2__.LayerManager.referenceFrameWizardFinished(frame);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("FrameWizard", [FrameWizard, FrameWizard$, _utilities_dialog_js__WEBPACK_IMPORTED_MODULE_1__.Dialog]);


// wwtlib.ReferenceFrameProps
//
// This was originally defined in `Utilities/Dialog.cs`.

function ReferenceFrameProps() {
    _utilities_dialog_js__WEBPACK_IMPORTED_MODULE_1__.Dialog.call(this);
}

var ReferenceFrameProps$ = {
    OK: function (frame) {
        _layer_manager_js__WEBPACK_IMPORTED_MODULE_2__.LayerManager.loadTree();
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("ReferenceFrameProps", [ReferenceFrameProps, ReferenceFrameProps$, _utilities_dialog_js__WEBPACK_IMPORTED_MODULE_1__.Dialog]);


// wwtlib.GreatCircleDialog
//
// This was originally defined in `Utilities/Dialog.cs`.

function GreatCircleDialog() {
    _utilities_dialog_js__WEBPACK_IMPORTED_MODULE_1__.Dialog.call(this);
}

var GreatCircleDialog$ = {
    OK: function (frame) { }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("GreatCircleDialog", [GreatCircleDialog, GreatCircleDialog$, _utilities_dialog_js__WEBPACK_IMPORTED_MODULE_1__.Dialog]);


// wwtlib.DataVizWizard
//
// This was originally defined in `Utilities/Dialog.cs`.

function DataVizWizard() {
    _utilities_dialog_js__WEBPACK_IMPORTED_MODULE_1__.Dialog.call(this);
}

var DataVizWizard$ = {
    OK: function () { }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("DataVizWizard", [DataVizWizard, DataVizWizard$, _utilities_dialog_js__WEBPACK_IMPORTED_MODULE_1__.Dialog]);


// Initialize:

_layer_manager_js__WEBPACK_IMPORTED_MODULE_2__.LayerManager._frameWizardDialog = new FrameWizard();
_layer_manager_js__WEBPACK_IMPORTED_MODULE_2__.LayerManager._dataVizWizardDialog = new DataVizWizard();
_layer_manager_js__WEBPACK_IMPORTED_MODULE_2__.LayerManager._referenceFramePropsDialog = new ReferenceFrameProps();
_layer_manager_js__WEBPACK_IMPORTED_MODULE_2__.LayerManager._greatCircleDialog = new GreatCircleDialog();


/***/ }),

/***/ "./esm/layers/object3d.js":
/*!********************************!*\
  !*** ./esm/layers/object3d.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Group: () => (/* binding */ Group),
/* harmony export */   Material: () => (/* binding */ Material),
/* harmony export */   Mesh: () => (/* binding */ Mesh),
/* harmony export */   Object3d: () => (/* binding */ Object3d),
/* harmony export */   Object3dLayer: () => (/* binding */ Object3dLayer),
/* harmony export */   Object3dLayerUI: () => (/* binding */ Object3dLayerUI),
/* harmony export */   ObjectNode: () => (/* binding */ ObjectNode),
/* harmony export */   VertexPosition: () => (/* binding */ VertexPosition)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../graphics/webgl_constants.js */ "./esm/graphics/webgl_constants.js");
/* harmony import */ var _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../graphics/primitives3d.js */ "./esm/graphics/primitives3d.js");
/* harmony import */ var _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../graphics/gl_buffers.js */ "./esm/graphics/gl_buffers.js");
/* harmony import */ var _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../graphics/shaders.js */ "./esm/graphics/shaders.js");
/* harmony import */ var _utilities_binary_reader_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utilities/binary_reader.js */ "./esm/utilities/binary_reader.js");
/* harmony import */ var _baseplanets_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../baseplanets.js */ "./esm/baseplanets.js");
/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../interfaces.js */ "./esm/interfaces.js");
/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../settings.js */ "./esm/settings.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../util.js */ "./esm/util.js");
/* harmony import */ var _layer_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./layer.js */ "./esm/layers/layer.js");
/* harmony import */ var _layer_ui_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./layer_ui.js */ "./esm/layers/layer_ui.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A layer adding a 3D object model, and supporting code.



















// wwtlib.Material
//
// This was defined in `RenderContext.cs` in the C# code, but that really didn't
// make any sense, so we've moved it here.

function Material() {
    this.specularSharpness = 0;
    this.opacity = 0;
    this.isDefault = false;
}

var Material$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Material", [Material, Material$, null]);


// wwtlib.Object3dLayer

function Object3dLayer() {
    this._primaryUI$1 = null;
    this._heading$1 = 0;
    this._flipV$1 = true;
    this._flipHandedness$1 = false;
    this._smooth$1 = true;
    this._twoSidedGeometry$1 = false;
    this._pitch$1 = 0;
    this._roll$1 = 0;
    this._scale$1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(1, 1, 1);
    this._translate$1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, 0, 0);
    this._lightID$1 = 0;
    this._dirty$1 = false;
    this.objType = false;
    this._xHandle$1 = new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d();
    this._yHandle$1 = new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d();
    this._zHandle$1 = new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d();
    this._hprHandles$1 = new Array(6);
    this._uiScale$1 = 1;
    this._showEditUi$1 = false;
    this._dragMode$1 = 0;
    this._pntDown$1 = new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d();
    this._valueOnDown$1 = 0;
    this._valueOnDown2$1 = 0;
    this._hitDist$1 = 20;
    this._lockPreferedAxis$1 = false;
    this._preferY$1 = false;
    _layer_js__WEBPACK_IMPORTED_MODULE_14__.Layer.call(this);
}

Object3dLayer._translateUI$1 = null;
Object3dLayer._translateUILines$1 = null;
Object3dLayer._scaleUI$1 = null;
Object3dLayer._rotateUi$1 = null;

Object3dLayer._initTranslateUI$1 = function () {
    Object3dLayer._translateUILines$1 = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.LineList();
    Object3dLayer._translateUILines$1.timeSeries = false;
    Object3dLayer._translateUILines$1.set_depthBuffered(false);
    Object3dLayer._translateUILines$1.showFarSide = true;
    Object3dLayer._translateUI$1 = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.TriangleList();
    Object3dLayer._translateUI$1.depthBuffered = false;
    Object3dLayer._translateUI$1.timeSeries = false;
    Object3dLayer._translateUI$1.writeZbuffer = false;
    var twoPi = Math.PI * 2;
    var step = twoPi / 45;
    var rad = 0.05;

    // X

    for (var a = 0; a < twoPi; a += step) {
        var pnt1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(1 - rad * 4, 0, 0);
        var pnt2 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(1 - rad * 4, Math.cos(a) * rad, Math.sin(a) * rad);
        var pnt3 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(1 - rad * 4, Math.cos(a + step) * rad, Math.sin(a + step) * rad);
        Object3dLayer._translateUI$1.addTriangle(pnt1, pnt2, pnt3, _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_red(), _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
    }
    for (var a = 0; a < twoPi; a += step) {
        var pnt1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(1, 0, 0);
        var pnt3 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(1 - rad * 4, Math.cos(a) * rad, Math.sin(a) * rad);
        var pnt2 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(1 - rad * 4, Math.cos(a + step) * rad, Math.sin(a + step) * rad);
        Object3dLayer._translateUI$1.addTriangle(pnt1, pnt2, pnt3, _color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(255, 255, Math.max(0, (Math.sin(a) * 128)), Math.max(0, (Math.sin(a) * 128))), _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
    }
    Object3dLayer._translateUILines$1.addLine(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, 0, 0), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(1, 0, 0), _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_red(), _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());

    // Y

    for (var a = 0; a < twoPi; a += step) {
        var pnt1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, 1 - rad * 4, 0);
        var pnt3 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a) * rad, 1 - rad * 4, Math.sin(a) * rad);
        var pnt2 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a + step) * rad, 1 - rad * 4, Math.sin(a + step) * rad);
        Object3dLayer._translateUI$1.addTriangle(pnt1, pnt2, pnt3, _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_green(), _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
    }
    for (var a = 0; a < twoPi; a += step) {
        var pnt1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, 1, 0);
        var pnt2 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a) * rad, 1 - rad * 4, Math.sin(a) * rad);
        var pnt3 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a + step) * rad, 1 - rad * 4, Math.sin(a + step) * rad);
        Object3dLayer._translateUI$1.addTriangle(pnt1, pnt2, pnt3, _color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(255, Math.max(0, (Math.sin(a) * 128)), 255, Math.max(0, (Math.sin(a) * 128))), _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
    }
    Object3dLayer._translateUILines$1.addLine(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, 0, 0), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, 1, 0), _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_green(), _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());

    // Z

    for (var a = 0; a < twoPi; a += step) {
        var pnt1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, 0, 1 - rad * 4);
        var pnt2 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a) * rad, Math.sin(a) * rad, 1 - rad * 4);
        var pnt3 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a + step) * rad, Math.sin(a + step) * rad, 1 - rad * 4);
        Object3dLayer._translateUI$1.addTriangle(pnt1, pnt2, pnt3, _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_blue(), _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
    }
    for (var a = 0; a < twoPi; a += step) {
        var pnt1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, 0, 1);
        var pnt3 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a) * rad, Math.sin(a) * rad, 1 - rad * 4);
        var pnt2 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a + step) * rad, Math.sin(a + step) * rad, 1 - rad * 4);
        Object3dLayer._translateUI$1.addTriangle(pnt1, pnt2, pnt3, _color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(255, Math.max(0, (Math.sin(a) * 128)), Math.max(0, (Math.sin(a) * 128)), 255), _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
    }
    Object3dLayer._translateUILines$1.addLine(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, 0, 0), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, 0, 1), _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_blue(), _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
    Object3dLayer._initRotateUI$1();
    Object3dLayer._initScaleUI$1();
};

Object3dLayer._initScaleUI$1 = function () {
    Object3dLayer._scaleUI$1 = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.TriangleList();
    Object3dLayer._scaleUI$1.depthBuffered = false;
    Object3dLayer._scaleUI$1.timeSeries = false;
    Object3dLayer._scaleUI$1.writeZbuffer = false;
    var twoPi = Math.PI * 2;
    var step = twoPi / 45;
    var rad = 0.05;
    Object3dLayer._makeCube$1(Object3dLayer._scaleUI$1, _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(1 - rad * 2, 0, 0), rad * 2, _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_red());
    Object3dLayer._makeCube$1(Object3dLayer._scaleUI$1, _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, 1 - rad * 2, 0), rad * 2, _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_green());
    Object3dLayer._makeCube$1(Object3dLayer._scaleUI$1, _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, 0, 1 - rad * 2), rad * 2, _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_blue());
};

Object3dLayer._makeCube$1 = function (tl, center, size, color) {
    var dark = _color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(255, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((color.r * 0.6)), color.g, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((color.b * 0.6)));
    var med = _color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(255, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((color.r * 0.8)), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((color.g * 0.8)), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((color.b * 0.8)));
    tl.addQuad(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x + size, center.y + size, center.z + size), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x + size, center.y + size, center.z - size), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x - size, center.y + size, center.z + size), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x - size, center.y + size, center.z - size), color, _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
    tl.addQuad(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x + size, center.y - size, center.z + size), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x - size, center.y - size, center.z + size), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x + size, center.y - size, center.z - size), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x - size, center.y - size, center.z - size), color, _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
    tl.addQuad(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x - size, center.y + size, center.z + size), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x - size, center.y + size, center.z - size), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x - size, center.y - size, center.z + size), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x - size, center.y - size, center.z - size), dark, _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
    tl.addQuad(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x + size, center.y + size, center.z + size), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x + size, center.y - size, center.z + size), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x + size, center.y + size, center.z - size), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x + size, center.y - size, center.z - size), dark, _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
    tl.addQuad(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x + size, center.y + size, center.z + size), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x - size, center.y + size, center.z + size), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x + size, center.y - size, center.z + size), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x - size, center.y - size, center.z + size), med, _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
    tl.addQuad(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x + size, center.y + size, center.z - size), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x + size, center.y - size, center.z - size), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x - size, center.y + size, center.z - size), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(center.x - size, center.y - size, center.z - size), med, _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
};

Object3dLayer._initRotateUI$1 = function () {
    Object3dLayer._rotateUi$1 = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.TriangleList();
    Object3dLayer._rotateUi$1.depthBuffered = false;
    Object3dLayer._rotateUi$1.timeSeries = false;
    Object3dLayer._rotateUi$1.writeZbuffer = false;
    var twoPi = Math.PI * 2;
    var step = twoPi / 40;
    var rad = 0.05;
    var index = 0;
    for (var a = 0; a < twoPi; a += step) {
        var start = !(index % 10);
        var end = !((index + 1) % 10);
        var pnt1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(rad * ((start) ? 0 : ((end) ? 1.5 : 1)), Math.cos(a), Math.sin(a));
        var pnt2 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(-rad * ((start) ? 0 : ((end) ? 1.5 : 1)), Math.cos(a), Math.sin(a));
        var pnt3 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(rad * ((start) ? 1.5 : ((end) ? 0 : 1)), Math.cos(a + step), Math.sin(a + step));
        var pnt4 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(-rad * ((start) ? 1.5 : ((end) ? 0 : 1)), Math.cos(a + step), Math.sin(a + step));
        Object3dLayer._rotateUi$1.addQuad(pnt1, pnt3, pnt2, pnt4, _color_js__WEBPACK_IMPORTED_MODULE_2__.Color._fromArgbColor(192, _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_red()), _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
        index++;
    }
    index = 0;
    for (var a = 0; a < twoPi; a += step) {
        var start = !(index % 10);
        var end = !((index + 1) % 10);
        var pnt1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a), Math.sin(a), rad * ((start) ? 0 : ((end) ? 1.5 : 1)));
        var pnt2 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a), Math.sin(a), -rad * ((start) ? 0 : ((end) ? 1.5 : 1)));
        var pnt3 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a + step), Math.sin(a + step), rad * ((start) ? 1.5 : ((end) ? 0 : 1)));
        var pnt4 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a + step), Math.sin(a + step), -rad * ((start) ? 1.5 : ((end) ? 0 : 1)));
        Object3dLayer._rotateUi$1.addQuad(pnt1, pnt3, pnt2, pnt4, _color_js__WEBPACK_IMPORTED_MODULE_2__.Color._fromArgbColor(192, _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_blue()), _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
        index++;
    }
    index = 0;
    for (var a = 0; a < twoPi; a += step) {
        var start = !(index % 10);
        var end = !((index + 1) % 10);
        var pnt1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a), rad * ((start) ? 0 : ((end) ? 1.5 : 1)), Math.sin(a));
        var pnt2 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a), -rad * ((start) ? 0 : ((end) ? 1.5 : 1)), Math.sin(a));
        var pnt3 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a + step), rad * ((start) ? 1.5 : ((end) ? 0 : 1)), Math.sin(a + step));
        var pnt4 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a + step), -rad * ((start) ? 1.5 : ((end) ? 0 : 1)), Math.sin(a + step));
        Object3dLayer._rotateUi$1.addQuad(pnt1, pnt2, pnt3, pnt4, _color_js__WEBPACK_IMPORTED_MODULE_2__.Color._fromArgbColor(192, _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_green()), _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
        index++;
    }

    // X

    index = 0;
    for (var a = 0; a < twoPi; a += step) {
        var start = !(index % 10);
        var end = !((index + 1) % 10);
        var pnt1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(-rad * ((start) ? 0 : ((end) ? 1.5 : 1)), Math.cos(a), Math.sin(a));
        var pnt2 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(rad * ((start) ? 0 : ((end) ? 1.5 : 1)), Math.cos(a), Math.sin(a));
        var pnt3 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(-rad * ((start) ? 1.5 : ((end) ? 0 : 1)), Math.cos(a + step), Math.sin(a + step));
        var pnt4 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(rad * ((start) ? 1.5 : ((end) ? 0 : 1)), Math.cos(a + step), Math.sin(a + step));
        Object3dLayer._rotateUi$1.addQuad(pnt1, pnt3, pnt2, pnt4, _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_red(), _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
        index++;
    }

    // Y

    index = 0;
    for (var a = 0; a < twoPi; a += step) {
        var start = !(index % 10);
        var end = !((index + 1) % 10);
        var pnt1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a), Math.sin(a), -rad * ((start) ? 0 : ((end) ? 1.5 : 1)));
        var pnt2 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a), Math.sin(a), rad * ((start) ? 0 : ((end) ? 1.5 : 1)));
        var pnt3 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a + step), Math.sin(a + step), -rad * ((start) ? 1.5 : ((end) ? 0 : 1)));
        var pnt4 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a + step), Math.sin(a + step), rad * ((start) ? 1.5 : ((end) ? 0 : 1)));
        Object3dLayer._rotateUi$1.addQuad(pnt1, pnt3, pnt2, pnt4, _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_blue(), _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
        index++;
    }

    // Z

    index = 0;
    for (var a = 0; a < twoPi; a += step) {
        var start = !(index % 10);
        var end = !((index + 1) % 10);
        var pnt1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a), -rad * ((start) ? 0 : ((end) ? 1.5 : 1)), Math.sin(a));
        var pnt2 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a), rad * ((start) ? 0 : ((end) ? 1.5 : 1)), Math.sin(a));
        var pnt3 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a + step), -rad * ((start) ? 1.5 : ((end) ? 0 : 1)), Math.sin(a + step));
        var pnt4 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(Math.cos(a + step), rad * ((start) ? 1.5 : ((end) ? 0 : 1)), Math.sin(a + step));
        Object3dLayer._rotateUi$1.addQuad(pnt1, pnt2, pnt3, pnt4, _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_green(), _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_6__.Dates.empty());
        index++;
    }
};

var Object3dLayer$ = {
    getPrimaryUI: function () {
        if (this._primaryUI$1 == null) {
            this._primaryUI$1 = new Object3dLayerUI(this);
        }
        return this._primaryUI$1;
    },

    get_flipV: function () {
        return this._flipV$1;
    },

    set_flipV: function (value) {
        if (this._flipV$1 !== value) {
            this._flipV$1 = value;
            if (this.object3d != null) {
                this.object3d.flipV = this._flipV$1;
                this.object3d._reload();
            }
            this.version++;
        }
        return value;
    },

    get_flipHandedness: function () {
        return this._flipHandedness$1;
    },

    set_flipHandedness: function (value) {
        if (this._flipHandedness$1 !== value) {
            this._flipHandedness$1 = value;
            if (this.object3d != null) {
                this.object3d.flipHandedness = this._flipHandedness$1;
                this.object3d._reload();
            }
            this.version++;
        }
        return value;
    },

    get_smooth: function () {
        return this._smooth$1;
    },

    set_smooth: function (value) {
        if (this._smooth$1 !== value) {
            this._smooth$1 = value;
            if (this.object3d != null) {
                this.object3d.smooth = this._smooth$1;
                this.object3d._reload();
            }
            this.version++;
        }
        return value;
    },

    get_twoSidedGeometry: function () {
        return this._twoSidedGeometry$1;
    },

    set_twoSidedGeometry: function (value) {
        if (this._twoSidedGeometry$1 !== value) {
            this._twoSidedGeometry$1 = value;
            this.version++;
        }
        return value;
    },

    get_heading: function () {
        return this._heading$1;
    },

    set_heading: function (value) {
        if (this._heading$1 !== value) {
            this.version++;
            this._heading$1 = value;
        }
        return value;
    },

    get_pitch: function () {
        return this._pitch$1;
    },

    set_pitch: function (value) {
        if (this._pitch$1 !== value) {
            this.version++;
            this._pitch$1 = value;
        }
        return value;
    },

    get_roll: function () {
        return this._roll$1;
    },

    set_roll: function (value) {
        if (this._roll$1 !== value) {
            this.version++;
            this._roll$1 = value;
        }
        return value;
    },

    get_scale: function () {
        return this._scale$1;
    },

    set_scale: function (value) {
        if (this._scale$1 !== value) {
            this.version++;
            this._scale$1 = value;
        }
        return value;
    },

    get_translate: function () {
        return this._translate$1;
    },

    set_translate: function (value) {
        if (this._translate$1 !== value) {
            this.version++;
            this._translate$1 = value;
        }
        return value;
    },

    get_lightID: function () {
        return this._lightID$1;
    },

    set_lightID: function (value) {
        this._lightID$1 = value;
        return value;
    },

    cleanUp: function () {
        this._dirty$1 = true;
    },

    colorChanged: function () {
        if (this.object3d != null) {
            this.object3d.color = this.get_color();
        }
    },

    writeLayerProperties: function (xmlWriter) {
        xmlWriter._writeAttributeString('FlipV', this.get_flipV().toString());
        xmlWriter._writeAttributeString('FlipHandedness', this.get_flipHandedness().toString());
        xmlWriter._writeAttributeString('Smooth', this.get_smooth().toString());
        xmlWriter._writeAttributeString('TwoSidedGeometry', this.get_twoSidedGeometry().toString());
        xmlWriter._writeAttributeString('Heading', this.get_heading().toString());
        xmlWriter._writeAttributeString('Pitch', this.get_pitch().toString());
        xmlWriter._writeAttributeString('Roll', this.get_roll().toString());
        xmlWriter._writeAttributeString('Scale', this.get_scale().toString());
        xmlWriter._writeAttributeString('Translate', this.get_translate().toString());
        xmlWriter._writeAttributeString('LightID', this.get_lightID().toString());
        xmlWriter._writeAttributeString('Obj', this.objType.toString());
    },

    getParams: function () {
        var paramList = new Array(14);
        paramList[0] = this._heading$1;
        paramList[1] = this._pitch$1;
        paramList[2] = this._roll$1;
        paramList[3] = this._scale$1.x;
        paramList[4] = this._scale$1.y;
        paramList[5] = this._scale$1.z;
        paramList[6] = this._translate$1.x;
        paramList[7] = this._translate$1.y;
        paramList[8] = this._translate$1.z;
        paramList[9] = this.get_color().r / 255;
        paramList[10] = this.get_color().g / 255;
        paramList[11] = this.get_color().b / 255;
        paramList[12] = this.get_color().a / 255;
        paramList[13] = this.get_opacity();
        return paramList;
    },

    getParamNames: function () {
        return ['Heading', 'Pitch', 'Roll', 'Scale.X', 'Scale.Y', 'Scale.Z', 'Translate.X', 'Translate.Y', 'Translate.Z', 'Colors.Red', 'Colors.Green', 'Colors.Blue', 'Colors.Alpha', 'Opacity'];
    },

    setParams: function (paramList) {
        if (paramList.length === 14) {
            this._heading$1 = paramList[0];
            this._pitch$1 = paramList[1];
            this._roll$1 = paramList[2];
            this._scale$1.x = paramList[3];
            this._scale$1.y = paramList[4];
            this._scale$1.z = paramList[5];
            this._translate$1.x = paramList[6];
            this._translate$1.y = paramList[7];
            this._translate$1.z = paramList[8];
            this.set_opacity(paramList[13]);
            var color = _color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((paramList[12] * 255)), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((paramList[9] * 255)), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((paramList[10] * 255)), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((paramList[11] * 255)));
            this.set_color(color);
        }
    },

    add_propertiesChanged: function (value) {
        this.__propertiesChanged$1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__propertiesChanged$1, value);
    },

    remove_propertiesChanged: function (value) {
        this.__propertiesChanged$1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__propertiesChanged$1, value);
    },

    fireChanged: function () {
        if (this.__propertiesChanged$1 != null) {
            this.__propertiesChanged$1(this, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
        }
    },

    getEditUI: function () {
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(this, _interfaces_js__WEBPACK_IMPORTED_MODULE_11__.IUiController);
    },

    initializeFromXml: function (node) {
        this.set_flipV(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('FlipV').nodeValue));
        if (node.attributes.getNamedItem('FlipHandedness') != null) {
            this.set_flipHandedness(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('FlipHandedness').nodeValue));
        } else {
            this.set_flipHandedness(false);
        }
        if (node.attributes.getNamedItem('Smooth') != null) {
            this.set_smooth(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('Smooth').nodeValue));
        } else {
            this.set_smooth(true);
        }
        if (node.attributes.getNamedItem('TwoSidedGeometry') != null) {
            this.set_twoSidedGeometry(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('TwoSidedGeometry').nodeValue));
        } else {
            this.set_twoSidedGeometry(false);
        }
        if (node.attributes.getNamedItem('Obj') != null) {
            this.objType = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('Obj').nodeValue);
        } else {
            this.objType = false;
        }
        this.set_heading(parseFloat(node.attributes.getNamedItem('Heading').nodeValue));
        this.set_pitch(parseFloat(node.attributes.getNamedItem('Pitch').nodeValue));
        this.set_roll(parseFloat(node.attributes.getNamedItem('Roll').nodeValue));
        this.set_scale(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.parse(node.attributes.getNamedItem('Scale').nodeValue));
        this.set_translate(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.parse(node.attributes.getNamedItem('Translate').nodeValue));
        if (node.attributes.getNamedItem('LightID') != null) {
            this.set_lightID(parseInt(node.attributes.getNamedItem('LightID').nodeValue));
        }
    },

    draw: function (renderContext, opacity, flat) {
        var oldWorld = renderContext.get_world();
        var rotation = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.multiplyMatrix(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.multiplyMatrix(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationZ(-this._roll$1 / 180 * Math.PI), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationX(-this._pitch$1 / 180 * Math.PI)), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationY(this._heading$1 / 180 * Math.PI));
        renderContext.set_world(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.multiplyMatrix(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.multiplyMatrix(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.multiplyMatrix(rotation, _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._scaling(this._scale$1.x, this._scale$1.y, this._scale$1.z)), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.translation(this._translate$1)), oldWorld));
        renderContext.set_twoSidedLighting(this.get_twoSidedGeometry());
        _baseplanets_js__WEBPACK_IMPORTED_MODULE_10__.BasePlanets.drawPointPlanet(renderContext, new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d(), 1, _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_red(), false);
        if (this._lightID$1 > 0) {
            // draw light
        } else {
            if (this.object3d != null) {
                this.object3d.color = this.get_color();
                this.object3d.render(renderContext, opacity * this.get_opacity());
            }
        }

        // todo enable edit UI

        renderContext.set_twoSidedLighting(false);
        renderContext.set_world(oldWorld);
        return true;
    },

    addFilesToCabinet: function (fc) {
        // todo: implement
    },

    loadData: function (doc, filename) {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.endsWith(filename.toLowerCase(), '.obj')) {
            this.objType = true;
        }
        if (!this._lightID$1) {
            if (this.objType) {
                this.object3d = new Object3d(doc, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(filename, '.txt', '.obj'), this.get_flipV(), this._flipHandedness$1, true, this.get_color());
            }
            else {
                this.object3d = new Object3d(doc, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(filename, '.txt', '.3ds'), this.get_flipV(), this._flipHandedness$1, true, this.get_color());
            }
        }
    },

    pointToView: function (pnt) {
        var clientHeight = _render_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalRenderContext.height;
        var clientWidth = _render_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalRenderContext.width;
        var viewWidth = (_render_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalRenderContext.width / _render_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalRenderContext.height) * 1116;
        var x = ((pnt.x) / (clientWidth) * viewWidth) - ((viewWidth - 1920) / 2);
        var y = (pnt.y) / clientHeight * 1116;
        return _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.create(x, y);
    },

    render: function (renderEngine) {
        this._showEditUi$1 = true;
        return;
    },

    preRender: function (renderEngine) {
        this._showEditUi$1 = true;
        return;
    },

    mouseDown: function (sender, e) {
        var location = this.pointToView(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.create(e.offsetX, e.offsetY));
        this._pntDown$1 = location;
        var pnt = location;
        if (e.shiftKey) {
            if (_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.subtract(pnt, this._xHandle$1).get_length() < this._hitDist$1) {
                this._dragMode$1 = 10;
                this._valueOnDown$1 = this._scale$1.x;
                return true;
            }
            if (_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.subtract(pnt, this._yHandle$1).get_length() < this._hitDist$1) {
                this._dragMode$1 = 10;
                this._valueOnDown$1 = this._scale$1.y;
                return true;
            }
            if (_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.subtract(pnt, this._zHandle$1).get_length() < this._hitDist$1) {
                this._dragMode$1 = 10;
                this._valueOnDown$1 = this._scale$1.z;
                return true;
            }
        } else {
            if (_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.subtract(pnt, this._xHandle$1).get_length() < this._hitDist$1) {
                this._dragMode$1 = 1;
                this._valueOnDown$1 = this._translate$1.x;
                return true;
            }
            if (_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.subtract(pnt, this._yHandle$1).get_length() < this._hitDist$1) {
                this._dragMode$1 = 2;
                this._valueOnDown$1 = this._translate$1.y;
                return true;
            }
            if (_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.subtract(pnt, this._zHandle$1).get_length() < this._hitDist$1) {
                this._dragMode$1 = 3;
                this._valueOnDown$1 = this._translate$1.z;
                return true;
            }
        }
        for (var i = 0; i < this._hprHandles$1.length; i++) {
            if (_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.subtract(pnt, this._hprHandles$1[i]).get_length() < this._hitDist$1) {
                switch (i) {
                    case 0:
                        this._dragMode$1 = 4;
                        this._valueOnDown$1 = this._heading$1;
                        this._valueOnDown2$1 = this._pitch$1;
                        return true;
                    case 1:
                        this._dragMode$1 = 7;
                        this._valueOnDown$1 = this._heading$1;
                        this._valueOnDown2$1 = this._pitch$1;
                        return true;
                    case 2:
                        this._dragMode$1 = 5;
                        this._valueOnDown$1 = this._pitch$1;
                        this._valueOnDown2$1 = this._roll$1;
                        return true;
                    case 3:
                        this._dragMode$1 = 8;
                        this._valueOnDown$1 = this._pitch$1;
                        this._valueOnDown2$1 = this._roll$1;
                        return true;
                    case 4:
                        this._dragMode$1 = 6;
                        this._valueOnDown$1 = this._roll$1;
                        this._valueOnDown2$1 = this._heading$1;
                        return true;
                    case 5:
                        this._dragMode$1 = 9;
                        this._valueOnDown$1 = this._roll$1;
                        this._valueOnDown2$1 = this._heading$1;
                        return true;
                    default:
                        break;
                }
            }
        }
        return false;
    },

    mouseUp: function (sender, e) {
        if (!!this._dragMode$1) {
            this._dragMode$1 = 0;
            this._lockPreferedAxis$1 = false;
            return true;
        }
        return false;
    },

    mouseMove: function (sender, e) {
        var location = this.pointToView(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.create(e.offsetX, e.offsetY));
        if (!!this._dragMode$1) {
            var dist = 0;
            var distX = location.x - this._pntDown$1.x;
            var distY = -(location.y - this._pntDown$1.y);
            if (this._lockPreferedAxis$1) {
                if (this._preferY$1) {
                    dist = distY;
                    this._preferY$1 = true;
                    _util_js__WEBPACK_IMPORTED_MODULE_13__.Cursor.set_current(_util_js__WEBPACK_IMPORTED_MODULE_13__.Cursors.get_sizeNS());
                }
                else {
                    dist = distX;
                    this._preferY$1 = false;
                    _util_js__WEBPACK_IMPORTED_MODULE_13__.Cursor.set_current(_util_js__WEBPACK_IMPORTED_MODULE_13__.Cursors.get_sizeWE());
                }
            }
            else {
                if (Math.abs(distX) > Math.abs(distY)) {
                    dist = distX;
                    this._preferY$1 = false;
                }
                else {
                    dist = distY;
                    this._preferY$1 = true;
                }
                if (dist > 5) {
                    this._lockPreferedAxis$1 = true;
                }
            }
            switch (this._dragMode$1) {
                case 0:
                    break;
                case 1:
                    this._translate$1.x = this._valueOnDown$1 + (12 * this._uiScale$1 * (dist / _render_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalRenderContext.width));
                    break;
                case 2:
                    this._translate$1.y = this._valueOnDown$1 + (12 * this._uiScale$1 * (dist / _render_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalRenderContext.width));
                    break;
                case 3:
                    this._translate$1.z = this._valueOnDown$1 + (12 * this._uiScale$1 * (dist / _render_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalRenderContext.width));
                    break;
                case 4:
                    this._heading$1 = this._valueOnDown$1 - distX / 4;
                    this._pitch$1 = this._valueOnDown2$1 + distY / 4;
                    break;
                case 5:
                    this._pitch$1 = this._valueOnDown$1 + distY / 4;
                    this._roll$1 = this._valueOnDown2$1 - distX / 4;
                    break;
                case 6:
                    this._roll$1 = this._valueOnDown$1 + distY / 4;
                    this._heading$1 = this._valueOnDown2$1 - distX / 4;
                    break;
                case 7:
                    this._heading$1 = this._valueOnDown$1 - distX / 4;
                    this._pitch$1 = this._valueOnDown2$1 - distY / 4;
                    break;
                case 8:
                    this._pitch$1 = this._valueOnDown$1 + distY / 4;
                    this._roll$1 = this._valueOnDown2$1 + distX / 4;
                    break;
                case 9:
                    this._roll$1 = this._valueOnDown$1 - distY / 4;
                    this._heading$1 = this._valueOnDown2$1 - distX / 4;
                    break;
                case 10:
                    this._scale$1.x = this._scale$1.y = this._scale$1.z = this._valueOnDown$1 * Math.pow(2, (dist / 100));
                    break;
                default:
                    break;
            }
            this.fireChanged();
            return true;
        } else {
            var pnt = location;
            if (_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.subtract(pnt, this._xHandle$1).get_length() < this._hitDist$1) {
                _util_js__WEBPACK_IMPORTED_MODULE_13__.Cursor.set_current(_util_js__WEBPACK_IMPORTED_MODULE_13__.Cursors.get_sizeAll());
                return true;
            }
            if (_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.subtract(pnt, this._yHandle$1).get_length() < this._hitDist$1) {
                _util_js__WEBPACK_IMPORTED_MODULE_13__.Cursor.set_current(_util_js__WEBPACK_IMPORTED_MODULE_13__.Cursors.get_sizeAll());
                return true;
            }
            if (_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.subtract(pnt, this._zHandle$1).get_length() < this._hitDist$1) {
                _util_js__WEBPACK_IMPORTED_MODULE_13__.Cursor.set_current(_util_js__WEBPACK_IMPORTED_MODULE_13__.Cursors.get_sizeAll());
                return true;
            }
            for (var i = 0; i < this._hprHandles$1.length; i++) {
                if (_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.subtract(pnt, this._hprHandles$1[i]).get_length() < this._hitDist$1) {
                    _util_js__WEBPACK_IMPORTED_MODULE_13__.Cursor.set_current(_util_js__WEBPACK_IMPORTED_MODULE_13__.Cursors.get_sizeAll());
                    return true;
                }
            }
        }
        return false;
    },

    mouseClick: function (sender, e) {
        return false;
    },

    click: function (sender, e) {
        return false;
    },

    mouseDoubleClick: function (sender, e) {
        return false;
    },

    keyDown: function (sender, e) {
        return false;
    },

    keyUp: function (sender, e) {
        return false;
    },

    hover: function (pnt) {
        return false;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Object3dLayer", [Object3dLayer, Object3dLayer$, _layer_js__WEBPACK_IMPORTED_MODULE_14__.Layer, _interfaces_js__WEBPACK_IMPORTED_MODULE_11__.IUiController]);


// wwtlib.Group

function Group() {
    this.startIndex = 0;
    this.indexCount = 0;
    this.materialIndex = 0;
}

var Group$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Group", [Group, Group$, null]);

// wwtlib.Mesh

function Mesh() {
    this.boundingSphere = new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.SphereHull();
}

Mesh.create = function (vertices, indices) {
    var mesh = new Mesh();
    mesh.vertices = vertices;
    mesh.indices = indices;
    var points = new Array(vertices.length);
    for (var i = 0; i < vertices.length; ++i) {
        points[i] = vertices[i].get_position();
    }
    mesh.boundingSphere = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.ConvexHull.findEnclosingSphereFast(points);
    return mesh;
};

Mesh.createTangent = function (vertices, indices) {
    var mesh = new Mesh();
    mesh.tangentVertices = vertices;
    mesh.indices = indices;
    var points = new Array(mesh.tangentVertices.length);
    for (var i = 0; i < mesh.tangentVertices.length; ++i) {
        points[i] = mesh.tangentVertices[i].get_position();
    }
    mesh.boundingSphere = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.ConvexHull.findEnclosingSphereFast(points);
    return mesh;
};

var Mesh$ = {
    dispose: function () {
        if (this.vertexBuffer != null) {
            this.vertexBuffer.dispose();
            this.vertexBuffer = null;
        }
        if (this.tangentVertexBuffer != null) {
            this.tangentVertexBuffer.dispose();
            this.tangentVertexBuffer = null;
        }
        if (this.indexBuffer != null) {
            this.indexBuffer.dispose();
            this.indexBuffer = null;
        }
    },

    setObjects: function (objects) {
        this._objects = objects;
    },

    // Convert the vertex data to a GPU vertex buffer
    commitToDevice: function () {
        if (this.vertices != null) {
            this.vertexBuffer = _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_7__.PositionNormalTexturedVertexBuffer.create(this.vertices);
        } else if (this.tangentVertices != null) {
            this.tangentVertexBuffer = _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_7__.PositionNormalTexturedTangentVertexBuffer.create(this.tangentVertices);
        }
        this.indexBuffer = new _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_7__.IndexBuffer(new Uint32Array(this.indices));
    },

    beginDrawing: function (renderContext) {
        if (this.vertexBuffer != null) {
            renderContext._setVertexBuffer(this.vertexBuffer);
        } else if (this.tangentVertexBuffer != null) {
            renderContext._setVertexBuffer(this.tangentVertexBuffer);
        }
        if (this.indexBuffer != null) {
            renderContext._setIndexBuffer(this.indexBuffer);
        }
    },

    drawSubset: function (renderContext, materialIndex) {
        if (this.indexBuffer == null || this._objects == null) {
            return;
        }
        this.drawHierarchy(this._objects, materialIndex, renderContext, 0);
    },

    drawHierarchy: function (nodes, materialIndex, renderContext, depth) {
        if (depth > 1212) {
            return;
        }
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(nodes);
        while ($enum1.moveNext()) {
            var node = $enum1.current;
            if (node.drawGroup != null && node.enabled) {
                var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(node.drawGroup);
                while ($enum2.moveNext()) {
                    var group = $enum2.current;
                    if (group.materialIndex === materialIndex) {
                        renderContext.gl.drawElements(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TRIANGLES, group.indexCount, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.UNSIGNED_INT, group.startIndex * 4);
                    }
                }
            }
            this.drawHierarchy(node.children, materialIndex, renderContext, depth + 1);
        }
    },

    get_objects: function () {
        return this._objects;
    },

    set_objects: function (value) {
        this._objects = value;
        return value;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Mesh", [Mesh, Mesh$, null, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.IDisposable]);


// wwtlib.VertexPosition

function VertexPosition() {
    this.index = 0;
}

var VertexPosition$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("VertexPosition", [VertexPosition, VertexPosition$, null]);


// wwtlib.Object3d

function Object3d(tourDoc, filename, flipV, flipHandedness, smooth, color) {
    this.flipHandedness = false;
    this.flipV = true;
    this.smooth = true;
    this._mesh = null; // Our mesh object in sysmem
    this._meshMaterials = [];
    this._meshTextures = [];
    this._meshSpecularTextures = [];
    this._meshNormalMaps = [];
    this.meshFilenames = [];
    this.color = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_white();
    this._textureCache = {};
    this._matFiles = new Array(0);
    this._matFileIndex = 0;
    this.objects = [];
    this._matLib = {};
    this._textureLib = {};
    this._tourDocument = null;
    this.issLayer = false;
    this._readyToRender = false;
    this.useCurrentAmbient = false;
    this._dirty = true;
    this.color = color;
    this.smooth = smooth;
    this.flipV = flipV;
    this.flipHandedness = flipHandedness;
    this.filename = filename;
    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.endsWith(this.filename.toLowerCase(), '.obj')) {
        this._loadMeshFromObj(tourDoc, this.filename);
    }
    else {
        this._loadMeshFrom3ds(tourDoc, this.filename, 1);
    }
}

Object3d._compareVector3 = function (v0, v1) {
    if (v0.x < v1.x) {
        return -1;
    }
    else if (v0.x > v1.x) {
        return 1;
    }
    else if (v0.y < v1.y) {
        return -1;
    }
    else if (v0.y > v1.y) {
        return 1;
    }
    else if (v0.z < v1.z) {
        return -1;
    }
    else if (v0.z > v1.z) {
        return 1;
    }
    else {
        return 0;
    }
};

Object3d._compareVector = function (v0, v1) {
    if (v0.x < v1.x) {
        return -1;
    }
    else if (v0.x > v1.x) {
        return 1;
    }
    else if (v0.y < v1.y) {
        return -1;
    }
    else if (v0.y > v1.y) {
        return 1;
    }
    else {
        return 0;
    }
};

Object3d._getMaterialID = function (material, materialNames) {
    var index = 0;
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(materialNames);
    while ($enum1.moveNext()) {
        var mat = $enum1.current;
        if (mat === material) {
            return index;
        }
        index++;
    }
    return -1;
};

Object3d._disposeTextureList = function (textures) {
    if (textures != null) {
        for (var i = 0; i < textures.length; ++i) {
            if (textures[i] != null) {
                textures[i].dispose();
                textures[i] = null;
            }
        }
        textures.length = 0;
    }
};

var Object3d$ = {
    _reload: function () {
        if (!this.issLayer) {
            this.dispose();
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.endsWith(this.filename.toLowerCase(), '.obj')) {
                this._loadMeshFromObj(this._tourDocument, this.filename);
            }
            else {
                this._loadMeshFrom3ds(this._tourDocument, this.filename, 1);
            }
        }
    },

    // Calculate per-vertex normals by averaging face normals. Normals of adjacent faces with an
    // angle of greater than crease angle are not included in the average. CalculateVertexNormalsMerged
    // is slower than the other normal generation method, CalculateVertexNormals, but it produces better
    // results. Vertices with identical positions (bot possibly different texture coordinates) are treated
    // as the same vertex for purposes of normal calculation. This allows smooth normals across texture
    // wrap seams.
    //
    // This method returns an array of vertex normals, one for each index in the index list
    _calculateVertexNormalsMerged: function (vertexList, indexList, creaseAngleRad) {
        if (!vertexList.length) {
            return null;
        }
        var vertexCount = vertexList.length;
        var triangleCount = Math.floor(indexList.length / 3);

        // Create a list of vertices sorted by their positions. This will be used to
        // produce a list of vertices with unique positions.
        var vertexPositions = [];
        for (var vertexIndex = 0; vertexIndex < vertexList.length; ++vertexIndex) {
            var vp = new VertexPosition();
            vp.position = vertexList[vertexIndex].get_position();
            vp.index = vertexIndex;
            vertexPositions.push(vp);
        }
        vertexPositions.sort(function (v0, v1) {
            return Object3d._compareVector3(v0.position, v1.position);
        });

        // vertexMap will map a vertex index to the index of a vertex with a unique position
        var vertexMap = new Array(vertexPositions.length);
        var uniqueVertexCount = 0;
        for (var vertexIndex = 0; vertexIndex < vertexPositions.length; vertexIndex++) {
            if (!vertexIndex || !!Object3d._compareVector3(vertexPositions[vertexIndex].position, vertexPositions[vertexIndex - 1].position)) {
                ++uniqueVertexCount;
            }
            vertexMap[vertexPositions[vertexIndex].index] = uniqueVertexCount - 1;
        }
        var vertexInstanceCounts = new Array(uniqueVertexCount);
        for (var i = 0; i < uniqueVertexCount; i++) {
            vertexInstanceCounts[i] = 0;
        }
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(indexList);
        while ($enum1.moveNext()) {
            var vertexIndex = $enum1.current;
            var uniqueIndex = vertexMap[vertexIndex];
            vertexInstanceCounts[uniqueIndex]++;
        }

        // vertexInstances contains the list of faces each vertex is referenced in
        var vertexInstances = new Array(uniqueVertexCount);
        for (var i = 0; i < uniqueVertexCount; ++i) {
            var count = vertexInstanceCounts[i];
            if (count > 0) {
                vertexInstances[i] = new Array(count);
                for (var j = 0; j < count; j++) {
                    vertexInstances[i][j] = 0;
                }
            }
        }

        // For each vertex, record all faces which include it
        for (var i = 0; i < indexList.length; ++i) {
            var faceIndex = Math.floor(i / 3);
            var uniqueIndex = vertexMap[indexList[i]];
            vertexInstances[uniqueIndex][--vertexInstanceCounts[uniqueIndex]] = faceIndex;
        }

        // At this point, vertexInstanceCounts should contain nothing but zeroes

        // Compute normals for all faces
        var faceNormals = new Array(triangleCount);
        for (var i = 0; i < triangleCount; ++i) {
            // The face normal is just the cross product of the two edge vectors
            var i0 = indexList[i * 3 + 0];
            var i1 = indexList[i * 3 + 1];
            var i2 = indexList[i * 3 + 2];
            var edge0 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.subtractVectors(vertexList[i1].get_position(), vertexList[i0].get_position());
            var edge1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.subtractVectors(vertexList[i2].get_position(), vertexList[i1].get_position());
            faceNormals[i] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.cross(edge0, edge1);
            faceNormals[i].normalize();
        }

        // Finally, average the face normals
        var newVertexCount = triangleCount * 3;
        var vertexNormals = new Array(newVertexCount);
        var cosCreaseAngle = Math.min(0.9999, Math.cos(creaseAngleRad));
        for (var i = 0; i < newVertexCount; ++i) {
            var vertexIndex = indexList[i];
            var uniqueIndex = vertexMap[vertexIndex];
            var faceNormal = faceNormals[Math.floor(i / 3)];
            var sum = new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d();
            var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(vertexInstances[uniqueIndex]);
            while ($enum2.moveNext()) {
                var faceIndex = $enum2.current;
                var n = faceNormals[faceIndex];
                if (_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.dot(faceNormal, n) > cosCreaseAngle) {
                    sum.add(n);
                }
            }
            vertexNormals[i] = sum;
            vertexNormals[i].normalize();
        }
        return vertexNormals;
    },

    // Calculate tangent vectors at each vertex. The 'face tangent' is a direction in the plane of the
    // triangle and parallel to the direction of increasing tex coord u, i.e. the partial derivative
    // with respect to u of the triangle's plane equation expressed in terms of the texture coordinate
    // (u, v). Partial derivatives of the triangles containing a vertex are averaged to compute the
    // vertex tangent. Faces are not included in the when the angle formed with the test face is
    // greater than the crease angle, or when the texture texture coordinates are not continuous.
    //
    // This method returns an array of vertex normals, one for each index in the index list
    _calculateVertexTangents: function (vertexList, indexList, creaseAngleRad) {
        if (!vertexList.length) {
            return null;
        }
        var vertexCount = vertexList.length;
        var triangleCount = Math.floor(indexList.length / 3);

        // Create a list of vertices sorted by their positions. This will be used to
        // produce a list of vertices with unique positions.
        var vertexPositions = [];
        for (var vertexIndex = 0; vertexIndex < vertexList.length; ++vertexIndex) {
            var vp = new VertexPosition();
            vp.position = vertexList[vertexIndex].get_position();
            vp.index = vertexIndex;
            vertexPositions.push(vp);
        }
        vertexPositions.sort(function (v0, v1) {
            return Object3d._compareVector3(v0.position, v1.position);
        });

        // vertexMap will map a vertex index to the index of a vertex with a unique position
        var vertexMap = new Array(vertexPositions.length);
        var uniqueVertexCount = 0;
        for (var vertexIndex = 0; vertexIndex < vertexPositions.length; vertexIndex++) {
            if (!vertexIndex || !!Object3d._compareVector3(vertexPositions[vertexIndex].position, vertexPositions[vertexIndex - 1].position)) {
                ++uniqueVertexCount;
            }
            vertexMap[vertexPositions[vertexIndex].index] = (uniqueVertexCount - 1);
        }
        var vertexInstanceCounts = new Array(uniqueVertexCount);
        for (var i = 0; i < uniqueVertexCount; i++) {
            vertexInstanceCounts[i] = 0;
        }
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(indexList);
        while ($enum1.moveNext()) {
            var vertexIndex = $enum1.current;
            var uniqueIndex = vertexMap[vertexIndex];
            vertexInstanceCounts[uniqueIndex]++;
        }

        // vertexInstances contains the list of faces each vertex is referenced in
        var vertexInstances = new Array(uniqueVertexCount);
        for (var i = 0; i < uniqueVertexCount; ++i) {
            var count = vertexInstanceCounts[i];
            if (count > 0) {
                vertexInstances[i] = new Array(count);
                for (var j = 0; j < count; j++) {
                    vertexInstances[i][j] = 0;
                }
            }
        }

        // For each vertex, record all faces which include it
        for (var i = 0; i < indexList.length; ++i) {
            var faceIndex = Math.floor(i / 3);
            var uniqueIndex = vertexMap[indexList[i]];
            vertexInstances[uniqueIndex][--vertexInstanceCounts[uniqueIndex]] = faceIndex;
        }

        // At this point, vertexInstanceCounts should contain nothing but zeroes

        // Compute partial derivatives for all faces
        var partials = new Array(triangleCount);
        for (var i = 0; i < triangleCount; ++i) {
            var v0 = vertexList[indexList[i * 3 + 0]];
            var v1 = vertexList[indexList[i * 3 + 1]];
            var v2 = vertexList[indexList[i * 3 + 2]];
            var edge0 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.subtractVectors(v1.get_position(), v0.get_position());
            var edge1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.subtractVectors(v2.get_position(), v0.get_position());
            var m00 = v1.tu - v0.tu;
            var m01 = v1.tv - v0.tv;
            var m10 = v2.tu - v0.tu;
            var m11 = v2.tv - v0.tv;
            var determinant = m00 * m11 - m01 * m10;
            if (Math.abs(determinant) < 1E-06) {
                if (edge0.lengthSq() > 0) {
                    // No unique vector; just select one of the edges
                    partials[i] = edge0;
                    partials[i].normalize();
                }
                else {
                    // Degenerate edge; just use the unit x vector
                    partials[i] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(1, 0, 0);
                }
            }
            else {
                // Matrix n is the inverse of m
                var invDeterminant = 1 / determinant;
                var n00 = m11 * invDeterminant;
                var n01 = -m01 * invDeterminant;
                var n10 = -m10 * invDeterminant;
                var n11 = m00 * invDeterminant;
                partials[i] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.addVectors(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.multiplyScalar(edge0, n00), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.multiplyScalar(edge1, n01));
                partials[i].normalize();
            }
        }

        // Finally, average the partial derivatives
        var newVertexCount = triangleCount * 3;
        var tangents = new Array(newVertexCount);
        var cosCreaseAngle = Math.min(0.9999, Math.cos(creaseAngleRad));
        for (var i = 0; i < newVertexCount; ++i) {
            var vertexIndex = indexList[i];
            var uniqueIndex = vertexMap[vertexIndex];
            var du = partials[Math.floor(i / 3)];
            var sum = new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d();
            var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(vertexInstances[uniqueIndex]);
            while ($enum2.moveNext()) {
                var faceIndex = $enum2.current;
                var T = partials[faceIndex];
                if (_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.dot(du, T) > cosCreaseAngle) {
                    sum.add(T);
                }
            }
            var N = vertexList[vertexIndex].get_normal();

            // Make the tangent orthogonal to the vertex normal
            tangents[i] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.subtractVectors(sum, _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.multiplyScalar(N, _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.dot(N, sum)));
            tangents[i].normalize();
        }
        return tangents;
    },

    // Calculate per-vertex normals by averaging face normals. Normals of adjacent faces with an
    // angle of greater than crease angle are not included in the average.
    //
    // This method returns an array of vertex normals, one for each index in the index list
    _calculateVertexNormals: function (vertexList, indexList, creaseAngleRad) {
        var vertexCount = vertexList.length;
        var triangleCount = Math.floor(indexList.length / 3);

        // vertexInstanceCounts contains the number of times each vertex is referenced in the mesh
        var vertexInstanceCounts = new Array(vertexCount);
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(indexList);
        while ($enum1.moveNext()) {
            var vertexIndex = $enum1.current;
            vertexInstanceCounts[vertexIndex]++;
        }

        // vertexInstances contains the list of faces each vertex is referenced in
        var vertexInstances = new Array(vertexCount);
        for (var i = 0; i < vertexCount; ++i) {
            var count = vertexInstanceCounts[i];
            if (count > 0) {
                vertexInstances[i] = new Array(count);
            }
        }

        // For each vertex, record all faces which include it
        for (var i = 0; i < indexList.length; ++i) {
            var faceIndex = Math.floor(i / 3);
            var vertexIndex = indexList[i];
            vertexInstances[vertexIndex][--vertexInstanceCounts[vertexIndex]] = faceIndex;
        }

        // At this point, vertexInstanceCounts should contain nothing but zeroes

        // Compute normals for all faces
        var faceNormals = new Array(triangleCount);
        for (var i = 0; i < triangleCount; ++i) {
            // The face normal is just the cross product of the two edge vectors
            var i0 = indexList[i * 3 + 0];
            var i1 = indexList[i * 3 + 1];
            var i2 = indexList[i * 3 + 2];
            var edge0 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.subtractVectors(vertexList[i1].get_position(), vertexList[i0].get_position());
            var edge1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.subtractVectors(vertexList[i2].get_position(), vertexList[i1].get_position());
            faceNormals[i] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.cross(edge0, edge1);
            faceNormals[i].normalize();
        }

        // Finally, average the face normals
        var newVertexCount = triangleCount * 3;
        var vertexNormals = new Array(newVertexCount);
        var cosCreaseAngle = Math.min(0.9999, Math.cos(creaseAngleRad));
        for (var i = 0; i < newVertexCount; ++i) {
            var vertexIndex = indexList[i];
            var faceNormal = faceNormals[Math.floor(i / 3)];
            var sum = new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d();
            var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(vertexInstances[vertexIndex]);
            while ($enum2.moveNext()) {
                var faceIndex = $enum2.current;
                var n = faceNormals[faceIndex];
                if (_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.dot(faceNormal, n) > cosCreaseAngle) {
                    sum.add(n);
                }
            }
            vertexNormals[i] = sum;
            vertexNormals[i].normalize();
        }
        return vertexNormals;
    },

    // Add textures to ensure that we have as many textures as [...]
    _addMaterial: function (material) {
        this._meshMaterials.push(material);
        while (this._meshTextures.length < this._meshMaterials.length) {
            this._meshTextures.push(null);
        }
        while (this._meshSpecularTextures.length < this._meshMaterials.length) {
            this._meshSpecularTextures.push(null);
        }
        while (this._meshNormalMaps.length < this._meshMaterials.length) {
            this._meshNormalMaps.push(null);
        }
    },

    // Load a color chunk from a 3ds file`
    // Colors may be stored in a 3ds file either as 3 floats or 3 bytes
    _loadColorChunk: function (br) {
        var chunkID = br.readUInt16();
        var chunkLength = br.readUInt32();
        var color = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_black();
        if ((chunkID === 16 || chunkID === 19) && chunkLength === 18) {
            // Need to guard against values outside of [0, 1], otherwise Colors.FromArgb
            // will throw an exception.
            var r = Math.max(0, Math.min(1, br.readSingle()));
            var g = Math.max(0, Math.min(1, br.readSingle()));
            var b = Math.max(0, Math.min(1, br.readSingle()));
            color = _color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(255, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((255 * r)), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((255 * g)), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((255 * b)));
        } else if ((chunkID === 17 || chunkID === 18) && chunkLength === 9) {
            color = _color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(255, br.readByte(), br.readByte(), br.readByte());
        } else {
            // Unknown color block; ignore it
            br.readBytes(chunkLength - 6);
        }
        return color;
    },

    // Load a percentage chunk from a 3ds file
    // A percentage may be stored as either a float or a 16-bit integer
    _loadPercentageChunk: function (br) {
        var chunkID = br.readUInt16();
        var chunkLength = br.readUInt32();
        var percentage = 0;
        if (chunkID === 48 && chunkLength === 8) {
            percentage = br.readUInt16();
        } else if (chunkID === 49 && chunkLength === 10) {
            percentage = br.readSingle();
        } else {
            // Unknown percentage block; ignore it
            br.readBytes(chunkLength - 6);
        }
        return percentage;
    },

    _loadMeshFromObj: function (doc, filename) {
        var $this = this;

        this.filename = filename;
        this._tourDocument = doc;
        var blob = doc.getFileBlob(filename);
        var chunck = new FileReader();
        chunck.onloadend = function (e) {
            $this._matFiles = $this._readObjMaterialsFromBin(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(chunck.result, String));
            $this._matFileIndex = 0;

            // pass data to LoadMatLib. It will chain load all the material
            // files, then load the obj from this data - hack for having no
            // synchronous blob reading in javascript
            $this._loadMatLib(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(chunck.result, String));
        };
        chunck.readAsText(blob);
    },

    _readObjMaterialsFromBin: function (data) {
        var matFiles = [];
        var lines = data.split('\n');
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(lines);
        while ($enum1.moveNext()) {
            var lineraw = $enum1.current;
            var line = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(lineraw, '  ', ' ');
            var parts = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(line).split(' ');
            if (parts.length > 0) {
                switch (parts[0]) {
                    case 'mtllib':
                        var path = this.filename.substring(0, this.filename.lastIndexOf('\\') + 1);
                        var matFile = path + parts[1];
                        matFiles.push(matFile);
                        break;
                }
            }
        }
        return matFiles;
    },

    _readObjFromBin: function (data) {
        var objectFound = false;
        var objects = [];
        var currentObject = new ObjectNode();
        currentObject.name = 'Default';
        var triangleCount = 0;
        var vertexCount = 0;
        var vertexList = [];
        var vertList = [];
        var normList = [];
        var uvList = [];
        vertList.push(new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d());
        normList.push(new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d());
        uvList.push(new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d());
        var indexList = [];
        var attribList = [];
        var applyLists = [];
        var applyListsIndex = [];
        var materialNames = [];
        var currentMaterialIndex = -1;
        var currentMaterial = new Material();
        var currentGroup = new Group();
        var currentIndex = 0;

        // initialize the default material
        currentMaterial = new Material();
        currentMaterial.diffuse = this.color;
        currentMaterial.ambient = this.color;
        currentMaterial.specular = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_white();
        currentMaterial.specularSharpness = 30;
        currentMaterial.opacity = 1;
        currentMaterial.isDefault = true;

        // initialize the group
        currentGroup.startIndex = 0;
        currentGroup.indexCount = 0;
        currentGroup.materialIndex = 0;
        var lines = data.split('\n');
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(lines);
        while ($enum1.moveNext()) {
            var lineraw = $enum1.current;
            var line = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(lineraw, '  ', ' ');
            var parts = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(line).split(' ');
            if (parts.length > 0) {
                switch (parts[0]) {
                    case 'mtllib':
                        // We have to pre-load these now in JavaScript, since we
                        // can't synchronously load the file and we need file
                        // contents to interpret the rest of this file
                        break;
                    case 'usemtl':
                        var materialName = parts[1];
                        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this._matLib, materialName)) {
                            if (currentMaterialIndex === -1 && currentIndex > 0) {
                                this._addMaterial(currentMaterial);
                                currentMaterialIndex++;
                            }
                            if (currentMaterialIndex > -1) {
                                currentGroup.indexCount = currentIndex - currentGroup.startIndex;
                                currentObject.drawGroup.push(currentGroup);
                            }
                            currentMaterialIndex++;
                            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this._matLib, materialName)) {
                                currentMaterial = this._matLib[materialName];
                                if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this._textureLib, materialName)) {
                                    try {
                                        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this._textureCache, this._textureLib[materialName])) {
                                            var path = this.filename.substring(0, this.filename.lastIndexOf('\\') + 1);
                                            var tex = this._tourDocument.getCachedTexture2d(path + this._textureLib[materialName]);
                                            if (tex != null) {
                                                this.meshFilenames.push(this._textureLib[materialName]);
                                                this._textureCache[this._textureLib[materialName]] = tex;
                                            }
                                        }
                                        this._meshTextures.push(this._textureCache[this._textureLib[materialName]]);
                                    }
                                    catch ($e2) {
                                    }
                                }
                                this._addMaterial(currentMaterial);
                                currentGroup = new Group();
                                currentGroup.startIndex = currentIndex;
                                currentGroup.indexCount = 0;
                                currentGroup.materialIndex = currentMaterialIndex;
                            }
                        }
                        break;
                    case 'v':
                        vertexCount++;
                        if (this.flipHandedness) {
                            vertList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(-parseFloat(parts[1]), parseFloat(parts[2]), parseFloat(parts[3])));
                        }
                        else {
                            vertList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(parseFloat(parts[1]), parseFloat(parts[2]), parseFloat(parts[3])));
                        }
                        break;
                    case 'vn':
                        if (this.flipHandedness) {
                            normList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(-parseFloat(parts[1]), parseFloat(parts[2]), parseFloat(parts[3])));
                        }
                        else {
                            normList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(parseFloat(parts[1]), parseFloat(parts[2]), parseFloat(parts[3])));
                        }
                        break;
                    case 'vt':
                        uvList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.create(parseFloat(parts[1]), (this.flipV) ? (1 - parseFloat(parts[2])) : parseFloat(parts[2])));
                        break;
                    case 'g':
                    case 'o':
                        if (objectFound) {
                            if (currentMaterialIndex > -1) {
                                currentGroup.indexCount = currentIndex - currentGroup.startIndex;
                                currentObject.drawGroup.push(currentGroup);
                                currentGroup = new Group();
                                currentGroup.startIndex = currentIndex;
                                currentGroup.indexCount = 0;
                                currentGroup.materialIndex = currentMaterialIndex;
                            }
                            currentObject = new ObjectNode();
                        }
                        objectFound = true;
                        if (parts.length > 1) {
                            currentObject.name = parts[1];
                        }
                        else {
                            currentObject.name = 'Unnamed';
                        }
                        objects.push(currentObject);
                        break;
                    case 'f':
                        var indexiesA = this._getIndexies(parts[1]);
                        var indexiesB = this._getIndexies(parts[2]);
                        var indexiesC = this._getIndexies(parts[3]);
                        vertexList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionNormalTextured.createUV(vertList[indexiesA[0]], normList[indexiesA[2]], uvList[indexiesA[1]]));
                        vertexList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionNormalTextured.createUV(vertList[indexiesB[0]], normList[indexiesB[2]], uvList[indexiesB[1]]));
                        vertexList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionNormalTextured.createUV(vertList[indexiesC[0]], normList[indexiesC[2]], uvList[indexiesC[1]]));
                        if (this.flipHandedness) {
                            indexList.push(currentIndex);
                            indexList.push(currentIndex + 2);
                            indexList.push(currentIndex + 1);
                        }
                        else {
                            indexList.push(currentIndex);
                            indexList.push(currentIndex + 1);
                            indexList.push(currentIndex + 2);
                        }
                        triangleCount++;
                        currentIndex += 3;
                        if (parts.length > 4) {
                            var partIndex = 4;
                            while (partIndex < parts.length) {
                                if (this.flipHandedness) {
                                    indexiesA = this._getIndexies(parts[1]);
                                    indexiesC = this._getIndexies(parts[partIndex]);
                                    indexiesB = this._getIndexies(parts[partIndex - 1]);
                                }
                                else {
                                    indexiesA = this._getIndexies(parts[1]);
                                    indexiesB = this._getIndexies(parts[partIndex - 1]);
                                    indexiesC = this._getIndexies(parts[partIndex]);
                                }
                                vertexList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionNormalTextured.createUV(vertList[indexiesA[0]], normList[indexiesA[2]], uvList[indexiesA[1]]));
                                vertexList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionNormalTextured.createUV(vertList[indexiesB[0]], normList[indexiesB[2]], uvList[indexiesB[1]]));
                                vertexList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionNormalTextured.createUV(vertList[indexiesC[0]], normList[indexiesC[2]], uvList[indexiesC[1]]));
                                indexList.push(currentIndex);
                                indexList.push(currentIndex + 1);
                                indexList.push(currentIndex + 2);
                                triangleCount++;
                                currentIndex += 3;
                                partIndex++;
                            }
                        }
                        break;
                }
            }
        }

        if (!objectFound) {
            // add the default object
            objects.push(currentObject);
        }

        if (currentMaterialIndex === -1 && currentIndex > 0) {
            this._addMaterial(currentMaterial);
            currentMaterialIndex++;
        }

        if (currentMaterialIndex > -1) {
            currentGroup.indexCount = (currentIndex - currentGroup.startIndex);
            currentObject.drawGroup.push(currentGroup);
        }

        if (normList.length < 2) {
            var degtorag = Math.PI / 180;
            var creaseAngleRad = ((this.smooth) ? 170 * degtorag : 45 * degtorag);
            var vertexNormals = this._calculateVertexNormalsMerged(vertexList, indexList, creaseAngleRad);
            var newVertexList = [];
            var newVertexCount = indexList.length;
            for (var vertexIndex = 0; vertexIndex < newVertexCount; ++vertexIndex) {
                var v = vertexList[indexList[vertexIndex]];
                v.set_normal(vertexNormals[vertexIndex]);
                newVertexList.push(v);
            }
            vertexList = newVertexList;
        }
        this._mesh = Mesh.create(vertexList, indexList);
        var rootDummy = new ObjectNode();
        rootDummy.name = 'Root';
        rootDummy.parent = null;
        rootDummy.level = -1;
        rootDummy.drawGroup = null;
        rootDummy.children = objects;
        this.objects = [];
        this.objects.push(rootDummy);
        this._mesh.setObjects(this.objects);
        this._mesh.commitToDevice();
        this._dirty = false;
        this._readyToRender = true;
    },

    _loadMatLib: function (data) {
        var $this = this;

        if (this._matFileIndex < this._matFiles.length) {
            var filename = this._matFiles[this._matFileIndex++];
            var blob = this._tourDocument.getFileBlob(filename);
            var chunck = new FileReader();
            chunck.onloadend = function (e) {
                $this._readMatLibFromBin(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(chunck.result, String));
                $this._loadMatLib(data);
            };
            chunck.readAsText(blob);
        } else {
            this._readObjFromBin(data);
        }
    },

    _readMatLibFromBin: function (data) {
        try {
            var currentMaterial = new Material();
            var materialName = '';
            this._matLib = {};
            this._textureLib = {};
            var lines = data.split('\n');
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(lines);
            while ($enum1.moveNext()) {
                var lineraw = $enum1.current;
                var line = lineraw;
                var parts = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(line).split(' ');
                if (parts.length > 0) {
                    switch (parts[0]) {
                        case 'newmtl':
                            if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(materialName)) {
                                this._matLib[materialName] = currentMaterial;
                            }
                            currentMaterial = new Material();
                            currentMaterial.diffuse = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_white();
                            currentMaterial.ambient = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_white();
                            currentMaterial.specular = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_black();
                            currentMaterial.specularSharpness = 30;
                            currentMaterial.opacity = 1;
                            materialName = parts[1];
                            break;
                        case 'Ka':
                            currentMaterial.ambient = _color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(255, Math.min(parseFloat(parts[1]) * 255, 255), Math.min(parseFloat(parts[2]) * 255, 255), Math.min(parseFloat(parts[3]) * 255, 255));
                            break;
                        case 'map_Kd':
                            //ENDURE TEXTURES ARE NOT BLACK!
                            currentMaterial.diffuse = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_white();
                            var textureFilename = parts[1];
                            for (var i = 2; i < parts.length; i++) {
                                textureFilename += ' ' + parts[i];
                            }
                            var path = this.filename.substring(0, this.filename.lastIndexOf('\\') + 1);
                            textureFilename = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(textureFilename, '/', '\\');
                            if (textureFilename.indexOf('\\') !== -1) {
                                textureFilename = textureFilename.substring(textureFilename.lastIndexOf('\\') + 1);
                            }
                            this._textureLib[materialName] = textureFilename;
                            break;
                        case 'Kd':
                            currentMaterial.diffuse = _color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(255, Math.min(parseFloat(parts[1]) * 255, 255), Math.min(parseFloat(parts[2]) * 255, 255), Math.min(parseFloat(parts[3]) * 255, 255));
                            break;
                        case 'Ks':
                            currentMaterial.specular = _color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(255, Math.min(parseFloat(parts[1]) * 255, 255), Math.min(parseFloat(parts[2]) * 255, 255), Math.min(parseFloat(parts[3]) * 255, 255));
                            break;
                        case 'd':
                            // Where does this map?
                            currentMaterial.opacity = parseFloat(parts[1]);
                            break;
                        case 'Tr':
                            // Where does this map?
                            currentMaterial.opacity = 1 - parseFloat(parts[1]);
                            break;
                        case 'illum':
                            // Where does this map?
                            var illuminationMode = parseInt(parts[1]);
                            break;
                        case 'sharpness':
                            currentMaterial.specularSharpness = parseFloat(parts[1]);
                            break;
                        case 'Ns':
                            currentMaterial.specularSharpness = 1 + 2 * parseFloat(parts[1]);
                            currentMaterial.specularSharpness = Math.max(10, currentMaterial.specularSharpness);
                            break;
                    }
                }
            }
            if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(materialName)) {
                this._matLib[materialName] = currentMaterial;
            }
        }
        catch ($e2) {
        }
    },

    _getIndexies: function (data) {
        var parts = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(data).split('/');
        var indecies = new Array(3);
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(data)) {
            return indecies;
        }
        if (parts.length > 0) {
            indecies[0] = parseInt(parts[0]);
        }
        if (parts.length > 1) {
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(parts[1])) {
                indecies[1] = 0;
            }
            else {
                indecies[1] = parseInt(parts[1]);
            }
        }
        if (parts.length > 2) {
            indecies[2] = parseInt(parts[2]);
        }
        return indecies;
    },

    _loadMeshFrom3ds: function (doc, filename, scale) {
        var $this = this;

        this._tourDocument = doc;
        var blob = doc.getFileBlob(filename);
        var chunck = new FileReader();
        chunck.onloadend = function (e) {
            $this._read3dsFromBin(new _utilities_binary_reader_js__WEBPACK_IMPORTED_MODULE_9__.BinaryReader(new Uint8Array(chunck.result)), scale);
        };
        chunck.readAsArrayBuffer(blob);
    },

    _read3dsFromBin: function (br, scale) {
        var i;
        var sectionID;
        var sectionLength;
        var name = '';
        var material = '';
        var triangleCount = 0;
        var vertexCount = 0;
        var vertexList = [];
        var indexList = [];
        var attribList = [];
        var materialNames = [];
        var currentMaterialIndex = -1;
        var currentMaterial = new Material();
        var attributeID = 0;
        var count = 0;
        var lastID = 0;
        var exit = false;
        var normalMapFound = false;
        var offsetX = 0;
        var offsetY = 0;
        var offsetZ = 0;
        var objects = [];
        var currentObject = null;
        var objHierarchy = [];
        var objNames = [];
        var objectTable = {};
        var dummyCount = 0;
        var length = br.get_length() - 1;
        var startMapIndex = 0;
        var startTriangleIndex = 0;

        // Loop to scan the whole file
        while (br.get_position() < length && !exit) {
            sectionID = br.readUInt16();
            sectionLength = br.readUInt32();
            switch (sectionID) {
                //This section the begining of the file
                case 0x4D4D:
                    break;

                // This section marks the edit section containing the 3d models (3d3d get it? very punny!)
                case 0x3D3D:
                    break;

                // Object section contains meshes, etc.
                case 0x4000:
                    name = '';
                    var b;
                    do {
                        b = br.readByte();
                        if (b > 0) {
                            name += String.fromCharCode(b);
                        }
                    } while (!!b);
                    currentObject = new ObjectNode();
                    currentObject.name = name;
                    objects.push(currentObject);
                    if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(objectTable, currentObject.name)) {
                        objectTable[currentObject.name] = currentObject;
                    }
                    break;

                // Marks the start of a mesh section
                case 0x4100:
                    startMapIndex = vertexList.length;
                    startTriangleIndex = Math.floor(indexList.length / 3);
                    break;

                // This section has the vertex list.. Maps to Vertext buffer in Direct3d
                case 0x4110:
                    vertexCount = br.readUInt16();
                    for (i = 0; i < vertexCount; i++) {
                        var x = br.readSingle() - offsetX;
                        var y = br.readSingle() - offsetY;
                        var z = br.readSingle() - offsetZ;
                        var vert = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionNormalTextured._create(x * scale, z * scale, y * scale, 0, 0, 0, 0, 0);
                        vertexList.push(vert);
                    }
                    break;

                // This section is a triangle index list. Maps to Index Buffer in Direct3d
                case 0x4120:
                    var triCount = br.readUInt16();
                    triangleCount += triCount;
                    for (i = 0; i < triCount; i++) {
                        var aa = br.readUInt16() + startMapIndex;
                        var bb = br.readUInt16() + startMapIndex;
                        var cc = br.readUInt16() + startMapIndex;
                        indexList.push(cc);
                        indexList.push(bb);
                        indexList.push(aa);
                        var flags = br.readUInt16();
                    }
                    break;

                // Material for face from start face to triCount
                case 0x4130:
                    material = '';
                    i = 0;
                    var b1;
                    do {
                        b1 = br.readByte();
                        if (b1 > 0) {
                            material += String.fromCharCode(b1);
                        }
                        i++;
                    } while (!!b1);
                    var triCount = br.readUInt16();
                    var applyList = new Array(triCount);
                    attributeID = Object3d._getMaterialID(material, materialNames);
                    for (i = 0; i < triCount; i++) {
                        applyList[i] = br.readUInt16() + startTriangleIndex;
                    }
                    currentObject.applyLists.push(applyList);
                    currentObject.applyListsIndex.push(attributeID);
                    break;

                // Section for UV texture maps
                case 0x4140:
                    count = br.readUInt16();
                    for (i = 0; i < count; i++) {
                        var vert = vertexList[startMapIndex + i];
                        var texCoord = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.create(br.readSingle(), (this.flipV) ? (1 - br.readSingle()) : br.readSingle());
                        vertexList[startMapIndex + i] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionNormalTextured.createUV(vert.get_position(), new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d(), texCoord);
                    }
                    break;

                // Section for Smoothing Groups ??
                case 0x4160:
                    var mat = new Array(12);
                    for (i = 0; i < 12; i++) {
                        mat[i] = br.readSingle();
                    }
                    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(objectTable, name)) {
                        objectTable[name].localMat = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.create(mat[0], mat[1], mat[2], 0, mat[3], mat[4], mat[5], 0, mat[6], mat[7], mat[8], 0, mat[9], mat[10], mat[11], 1);
                        objectTable[name].localMat.invert();
                    }
                    break;

                // Materials library section
                case 0xAFFF:
                    break;

                // Material Name
                case 0xA000:
                    var matName = '';
                    i = 0;
                    var b2;
                    do {
                        b2 = br.readByte();
                        if (b2 > 0) {
                            matName += String.fromCharCode(b2);
                        }
                        i++;
                    } while (!!b2);
                    materialNames.push(matName);
                    if (currentMaterialIndex > -1) {
                        this._addMaterial(currentMaterial);
                    }
                    currentMaterialIndex++;
                    currentMaterial = new Material();
                    currentMaterial.diffuse = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_white();
                    currentMaterial.ambient = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_white();
                    currentMaterial.specular = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_black();
                    currentMaterial.specularSharpness = 30;
                    currentMaterial.opacity = 1;
                    break;

                // Ambient color
                case 0xA010:
                    currentMaterial.ambient = this._loadColorChunk(br);
                    break;

                // Diffuse color
                case 0xA020:
                    currentMaterial.diffuse = this._loadColorChunk(br);
                    break;

                // Specular color
                case 0xA030:
                    currentMaterial.specular = this._loadColorChunk(br);
                    break;

                // Specular power
                case 0xA040:
                    // This is just a reasonable guess at the mapping from percentage to
                    // specular exponent used by 3D Studio.
                    currentMaterial.specularSharpness = 1 + 2 * this._loadPercentageChunk(br);

                    // Minimum sharpness of 10 enforced here because of bad specular exponents
                    // in ISS model.
                    // TODO: Fix ISS and permit lower specular exponents here
                    currentMaterial.specularSharpness = Math.max(10, currentMaterial.specularSharpness);
                    break;

                //Texture map file
                case 0xA200:
                    break;

                // Texture file name
                case 0xA300:
                    var textureFilename = '';
                    i = 0;
                    var b2;
                    do {
                        b2 = br.readByte();
                        if (b2 > 0) {
                            textureFilename += String.fromCharCode(b2);
                        }
                        i++;
                    } while (!!b2);
                    var path = this.filename.substring(0, this.filename.lastIndexOf('\\') + 1);
                    try {
                        var tex = this._tourDocument.getCachedTexture2d(path + textureFilename);
                        if (tex != null) {
                            this._meshTextures.push(tex);
                            this.meshFilenames.push(textureFilename);
                            // The ISS model has black for the diffuse color; to work around this
                            // we'll set the diffuse color to white when there's a texture present.
                            // The correct fix is to modify the 3ds model of ISS.
                            currentMaterial.diffuse = _color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_white();
                        }
                        else {
                            this._meshTextures.push(null);
                        }
                    }
                    catch ($e1) {
                        this._meshTextures.push(null);
                    }
                    break;

                // Bump map
                case 0xA230:
                    var percentage = this._loadPercentageChunk(br);
                    var nameId = br.readUInt16();
                    var nameBlockLength = br.readUInt32();
                    var textureFilename = '';
                    i = 0;
                    var b2;
                    do {
                        b2 = br.readByte();
                        if (b2 > 0) {
                            textureFilename += String.fromCharCode(b2);
                        }
                        i++;
                    } while (!!b2);
                    var path = this.filename.substring(0, this.filename.lastIndexOf('\\') + 1);
                    try {
                        var tex = this._tourDocument.getCachedTexture2d(path + textureFilename);
                        if (tex != null) {
                            this._meshNormalMaps.push(tex);
                            this.meshFilenames.push(textureFilename);
                            // Indicate that we have a normal map so that we know to generate tangent vectors for the mesh
                            normalMapFound = true;
                        }
                        else {
                            this._meshNormalMaps.push(null);
                        }
                    }
                    catch ($e2) {
                        this._meshNormalMaps.push(null);
                    }
                    break;

                // Specular map
                case 0xA204:
                    var strength = this._loadPercentageChunk(br);
                    var nameId = br.readUInt16();
                    var nameBlockLength = br.readUInt32();
                    var textureFilename = '';
                    i = 0;
                    var b2;
                    do {
                        b2 = br.readByte();
                        if (b2 > 0) {
                            textureFilename += String.fromCharCode(b2);
                        }
                        i++;
                    } while (!!b2);
                    var path = this.filename.substring(0, this.filename.lastIndexOf('\\') + 1);
                    try {
                        var tex = this._tourDocument.getCachedTexture2d(path + textureFilename);
                        if (tex != null) {
                            this._meshSpecularTextures.push(tex);
                            this.meshFilenames.push(textureFilename);
                            // Set the current specular color from the specular texture strength
                            var gray = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((255.99 * strength / 100));
                            currentMaterial.specular = _color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(255, gray, gray, gray);
                        }
                        else {
                            this._meshSpecularTextures.push(null);
                        }
                    }
                    catch ($e3) {
                        this._meshSpecularTextures.push(null);
                    }
                    break;

                case 0xB000:
                    break;
                case 0xB002:
                    break;
                case 0xB010:
                    name = '';
                    i = 0;
                    var b1;
                    do {
                        b1 = br.readByte();
                        if (b1 > 0) {
                            name += String.fromCharCode(b1);
                        }
                        i++;
                    } while (!!b1);
                    var dum1 = br.readUInt16();
                    var dum2 = br.readUInt16();
                    var level = br.readUInt16();
                    if (level === 65535) {
                        level = -1;
                    }
                    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.startsWith(name, '$')) {
                        dummyCount++;
                    }
                    else {
                        objNames.push(name);
                    }
                    objHierarchy.push(level);
                    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(objectTable, name)) {
                        objectTable[name].level = level;
                    }
                    break;

                case 0xB011:
                    name = '';
                    i = 0;
                    var b1;
                    do {
                        b1 = br.readByte();
                        if (b1 > 0) {
                            name += String.fromCharCode(b1);
                        }
                        i++;
                    } while (!!b1);
                    objNames.push('$$$' + name);
                    break;

                case 0xB013:
                    // pivot point
                    var points = new Array(3);
                    for (i = 0; i < 3; i++) {
                        points[i] = br.readSingle();
                    }
                    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(objectTable, name)) {
                        objectTable[name].pivotPoint = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(-points[0], -points[1], -points[2]);
                    }
                    break;

                case 0xB020:
                    var pos = new Array(8);
                    for (i = 0; i < 8; i++) {
                        pos[i] = br.readSingle();
                    }
                    break;

                // If we don't recognize a section then jump over it. Subract the header from the section length
                default:
                    br.seekRelative((sectionLength - 6));
                    break;
            }

            lastID = sectionID;
        }

        br.close();
        if (currentMaterialIndex > -1) {
            this._addMaterial(currentMaterial);
        }

        // Generate vertex normals

        // Vertex normals are computed by averaging the normals of all faces
        // with an angle between them less than the crease angle. By setting
        // the crease angle to 0 degrees, the model will have a faceted appearance.
        // Right now, the smooth flag selects between one of two crease angles,
        // but some smoothing is always applied.

        var degtorag = Math.PI / 180;
        var creaseAngleRad = ((this.smooth) ? 70 * degtorag : 45 * degtorag);
        var vertexNormals = this._calculateVertexNormalsMerged(vertexList, indexList, creaseAngleRad);
        var newVertexList = [];
        var newVertexCount = triangleCount * 3;
        for (var vertexIndex = 0; vertexIndex < newVertexCount; ++vertexIndex) {
            var v = vertexList[indexList[vertexIndex]];
            v.set_normal(vertexNormals[vertexIndex]);
            newVertexList.push(v);
        }

        // Use the triangle mesh and material assignments to create a single
        // index list for the mesh.
        var newIndexList = [];
        var $enum4 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(objects);
        while ($enum4.moveNext()) {
            var node = $enum4.current;
            var materialGroups = [];
            for (i = 0; i < node.applyLists.length; i++) {
                var matId = node.applyListsIndex[i];
                var startIndex = newIndexList.length;
                var $enum5 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(node.applyLists[i]);
                while ($enum5.moveNext()) {
                    var triangleIndex = $enum5.current;
                    newIndexList.push((triangleIndex * 3));
                    newIndexList.push((triangleIndex * 3 + 1));
                    newIndexList.push((triangleIndex * 3 + 2));
                }
                var group = new Group();
                group.startIndex = startIndex;
                group.indexCount = node.applyLists[i].length * 3;
                group.materialIndex = matId;
                materialGroups.push(group);
            }
            node.drawGroup = materialGroups;
        }

        // Turn objects into tree
        var nodeStack = new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.Stack();
        var nodeTreeRoot = [];
        var rootDummy = new ObjectNode();
        rootDummy.name = 'Root';
        rootDummy.parent = null;
        rootDummy.level = -1;
        rootDummy.drawGroup = null;
        var currentLevel = -1;
        nodeStack.push(rootDummy);
        nodeTreeRoot.push(rootDummy);
        for (i = 0; i < objHierarchy.length; i++) {
            var level = objHierarchy[i];
            if (level <= currentLevel) {
                // pop out all the nodes to intended parent
                while (level <= nodeStack.peek().level && nodeStack.count > 1) {
                    nodeStack.pop();
                }
                currentLevel = level;
            }
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.startsWith(objNames[i], '$$$')) {
                var dummy = new ObjectNode();
                dummy.name = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(objNames[i], '$$$', '');
                dummy.parent = nodeStack.peek();
                dummy.parent.children.push(dummy);
                dummy.level = currentLevel = level;
                dummy.drawGroup = null;
                nodeStack.push(dummy);
            }
            else {
                objectTable[objNames[i]].level = currentLevel = level;
                objectTable[objNames[i]].parent = nodeStack.peek();
                objectTable[objNames[i]].parent.children.push(objectTable[objNames[i]]);
                nodeStack.push(objectTable[objNames[i]]);
            }
        }
        if (!objHierarchy.length) {
            var $enum6 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(objects);
            while ($enum6.moveNext()) {
                var node = $enum6.current;
                rootDummy.children.push(node);
                node.parent = rootDummy;
            }
        }
        if (normalMapFound) {
            // If we've got a normal map, we want to generate tangent vectors for the mesh

            // Mapping of vertices to geometry is extremely straightforward now, but this could
            // change when a mesh optimization step is introduced.
            var tangentIndexList = [];
            for (var tangentIndex = 0; tangentIndex < newVertexCount; ++tangentIndex) {
                tangentIndexList.push(tangentIndex);
            }
            var tangents = this._calculateVertexTangents(newVertexList, tangentIndexList, creaseAngleRad);

            // Copy the tangents in the vertex data list
            var vertices = new Array(newVertexList.length);
            var vertexIndex = 0;
            var $enum7 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(newVertexList);
            while ($enum7.moveNext()) {
                var v = $enum7.current;
                var tvertex = new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionNormalTexturedTangent(v.get_position(), v.get_normal(), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.create(v.tu, v.tv), tangents[vertexIndex]);
                vertices[vertexIndex] = tvertex;
                ++vertexIndex;
            }
            this._mesh = Mesh.createTangent(vertices, newIndexList);
        } else {
            this._mesh = Mesh.create(newVertexList, newIndexList);
        }
        this.objects = nodeTreeRoot;
        this._mesh.setObjects(nodeTreeRoot);
        this._mesh.commitToDevice();
        this._dirty = false;
        this._readyToRender = true;
    },

    _offsetObjects: function (vertList, objects, offsetMat, offsetPoint) {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(objects);
        while ($enum1.moveNext()) {
            var node = $enum1.current;
            var matLoc = node.localMat;
            this._offsetObjects(vertList, node.children, matLoc, _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.addVectors(node.pivotPoint, offsetPoint));
            var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(node.drawGroup);
            while ($enum2.moveNext()) {
                var group = $enum2.current;
                var end = group.startIndex + group.indexCount;
                for (var i = group.startIndex; i < end; i++) {
                    var vert = vertList[i];
                    vert.set_position(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.addVectors(vert.get_position(), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.addVectors(node.pivotPoint, offsetPoint)));
                    vertList[i] = vert;
                }
            }
        }
    },

    // Set up lighting state to account for:
    //   - Light reflected from a nearby planet
    //   - Shadows cast by nearby planets
    setupLighting: function (renderContext) {
        var objPosition = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(renderContext.get_world().get_offsetX(), renderContext.get_world().get_offsetY(), renderContext.get_world().get_offsetZ());
        var objToLight = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.subtractVectors(objPosition, renderContext.get_reflectedLightPosition());
        var sunPosition = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.subtractVectors(renderContext.get_sunPosition(), renderContext.get_reflectedLightPosition());
        var cosPhaseAngle = (sunPosition.length() <= 0) ? 1 : _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.dot(objToLight, sunPosition) / (objToLight.length() * sunPosition.length());
        var reflectedLightFactor = Math.max(0, cosPhaseAngle);
        reflectedLightFactor = Math.sqrt(reflectedLightFactor); // Tweak falloff of reflected light
        var hemiLightFactor = 0;

        // 1. Reduce the amount of sunlight when the object is in the shadow of a planet
        // 2. Introduce some lighting due to scattering by the planet's atmosphere if it's
        //    close to the surface.
        var sunlightFactor = 1;
        if (renderContext.get_occludingPlanetRadius() > 0) {
            var objAltitude = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.subtractVectors(objPosition, renderContext.get_occludingPlanetPosition()).length() - renderContext.get_occludingPlanetRadius();
            hemiLightFactor = Math.max(0, Math.min(1, 1 - (objAltitude / renderContext.get_occludingPlanetRadius()) * 300));
            reflectedLightFactor *= (1 - hemiLightFactor);

            // Compute the distance from the center of the object to the line between the sun and occluding planet
            // We're assuming that the radius of the object is very small relative to Earth;
            // for large objects the amount of shadow will vary, and we should use circular
            // eclipse shadows.
            var sunToPlanet = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.subtractVectors(renderContext.get_occludingPlanetPosition(), renderContext.get_sunPosition());
            var objToPlanet = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.subtractVectors(renderContext.get_occludingPlanetPosition(), objPosition);
            var hemiLightDirection = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(-objToPlanet.x, -objToPlanet.y, -objToPlanet.z);
            hemiLightDirection.normalize();
            renderContext.set_hemisphereLightUp(hemiLightDirection);
            var objToSun = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.subtractVectors(renderContext.get_sunPosition(), objPosition);
            var sunPlanetDistance = sunToPlanet.length();
            var t = -_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.dot(objToSun, sunToPlanet) / (sunPlanetDistance * sunPlanetDistance);
            if (t > 1) {
                // Object is on the side of the planet opposite the sun, so a shadow is possible

                // Compute the position of the object projected onto the shadow axis
                var shadowAxisPoint = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.addVectors(renderContext.get_sunPosition(), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.multiplyScalar(sunToPlanet, t));

                // d is the distance to the shadow axis
                var d = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.subtractVectors(shadowAxisPoint, objPosition).length();

                // s is the distance from the sun along the shadow axis
                var s = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.subtractVectors(shadowAxisPoint, renderContext.get_sunPosition()).length();

                // Use the sun's radius to accurately compute the penumbra and umbra cones
                var solarRadius = 0.004645784;
                var penumbraRadius = renderContext.get_occludingPlanetRadius() + (t - 1) * (renderContext.get_occludingPlanetRadius() + solarRadius);
                var umbraRadius = renderContext.get_occludingPlanetRadius() + (t - 1) * (renderContext.get_occludingPlanetRadius() - solarRadius);
                if (d < penumbraRadius) {
                    // The object is inside the penumbra, so it is at least partly shadowed
                    var minimumShadow = 0;
                    if (umbraRadius < 0) {
                        // No umbra at this point; degree of shadowing is limited because the
                        // planet doesn't completely cover the sun even when the object is positioned
                        // exactly on the shadow axis.
                        var occlusion = Math.pow(1 / (1 - umbraRadius), 2);
                        umbraRadius = 0;
                        minimumShadow = 1 - occlusion;
                    }

                    // Approximate the amount of shadow with linear interpolation. The accurate
                    // calculation involves computing the area of the intersection of two circles.
                    var u = Math.max(0, umbraRadius);
                    sunlightFactor = Math.max(minimumShadow, (d - u) / (penumbraRadius - u));
                    var gray = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((255.99 * sunlightFactor));
                    renderContext.set_sunlightColor(_color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(255, gray, gray, gray));

                    // Reduce sky-scattered light as well
                    hemiLightFactor *= sunlightFactor;
                }
            }
        }
        renderContext.set_reflectedLightColor(_color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(255, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((renderContext.get_reflectedLightColor().r * reflectedLightFactor)), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((renderContext.get_reflectedLightColor().g * reflectedLightFactor)), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((renderContext.get_reflectedLightColor().b * reflectedLightFactor))));
        renderContext.set_hemisphereLightColor(_color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(255, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((renderContext.get_hemisphereLightColor().r * hemiLightFactor)), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((renderContext.get_hemisphereLightColor().g * hemiLightFactor)), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((renderContext.get_hemisphereLightColor().b * hemiLightFactor))));
    },

    render: function (renderContext, opacity) {
        if (!this._readyToRender) {
            return;
        }
        if (this._dirty && !this.issLayer) {
            this._reload();
        }
        var oldWorld = renderContext.get_world();
        var offset = this._mesh.boundingSphere.center;
        var unitScale = 1;
        if (this._mesh.boundingSphere.radius > 0) {
            unitScale = 1 / this._mesh.boundingSphere.radius;
        }
        renderContext.set_world(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.multiplyMatrix(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.multiplyMatrix(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.translation(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(-offset.x, -offset.y, -offset.z)), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._scaling(unitScale, unitScale, unitScale)), oldWorld));
        var worldView = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.multiplyMatrix(renderContext.get_world(), renderContext.get_view());
        var v = worldView.transform(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.get_empty());
        var scaleFactor = Math.sqrt(worldView.get_m11() * worldView.get_m11() + worldView.get_m22() * worldView.get_m22() + worldView.get_m33() * worldView.get_m33()) / unitScale;
        var dist = v.length();
        var radius = scaleFactor;

        // Calculate pixelsPerUnit which is the number of pixels covered
        // by an object 1 AU at the distance of the planet center from
        // the camera. This calculation works regardless of the projection
        // type.
        var viewportHeight = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(renderContext.height);
        var p11 = renderContext.get_projection().get_m11();
        var p34 = renderContext.get_projection().get_m34();
        var p44 = renderContext.get_projection().get_m44();
        var w = Math.abs(p34) * dist + p44;
        var pixelsPerUnit = (p11 / w) * viewportHeight;
        var radiusInPixels = (radius * pixelsPerUnit);
        if (radiusInPixels < 0.5) {
            // Too small to be visible; skip rendering
            return;
        }

        // These colors can be modified by shadows, distance from planet, etc. Restore
        // the original values after rendering.
        var savedSunlightColor = renderContext.get_sunlightColor();
        var savedReflectedColor = renderContext.get_reflectedLightColor();
        var savedHemiColor = renderContext.get_hemisphereLightColor();
        if (_settings_js__WEBPACK_IMPORTED_MODULE_12__.Settings.get_current().get_solarSystemLighting()) {
            this.setupLighting(renderContext);
            if (!this.useCurrentAmbient) {
                renderContext.set_ambientLightColor(_color_js__WEBPACK_IMPORTED_MODULE_2__.Color.fromArgb(255, 11, 11, 11));
            }
        } else {
            // No lighting: set ambient light to white and turn off all other light sources
            renderContext.set_sunlightColor(_color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_black());
            renderContext.set_reflectedLightColor(_color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_black());
            renderContext.set_hemisphereLightColor(_color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_black());
            renderContext.set_ambientLightColor(_color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_white());
        }
        if (this._mesh == null) {
            return;
        }
        _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_8__.ModelShader.minLightingBrightness = 0.1;
        var count = this._meshMaterials.length;
        this._mesh.beginDrawing(renderContext);
        if (count > 0) {
            for (var i = 0; i < this._meshMaterials.length; i++) {
                if (this._meshMaterials[i].isDefault) {
                    var mat = this._meshMaterials[i];
                    mat.diffuse = this.color;
                    mat.ambient = this.color;
                    this._meshMaterials[i] = mat;
                }

                // Set the material and texture for this subset
                renderContext.setMaterial(this._meshMaterials[i], this._meshTextures[i], this._meshSpecularTextures[i], this._meshNormalMaps[i], opacity);
                if (this._mesh.vertexBuffer != null) {
                    _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_8__.ModelShader.use(renderContext, this._mesh.vertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, (this._meshTextures[i] != null) ? this._meshTextures[i].texture2d : null, opacity, false, 32);
                }
                else {
                    _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_8__.ModelShader.use(renderContext, this._mesh.tangentVertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, (this._meshTextures[i] != null) ? this._meshTextures[i].texture2d : null, opacity, false, 44);
                }
                renderContext.preDraw();
                this._mesh.drawSubset(renderContext, i);
            }
        } else {
            renderContext.preDraw();
            for (var i = 0; i < this._meshTextures.length; i++) {
                if (this._meshTextures[i] != null) {
                    renderContext.set_mainTexture(this._meshTextures[i]);
                    if (this._mesh.vertexBuffer != null) {
                        _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_8__.ModelShader.use(renderContext, this._mesh.vertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, (this._meshTextures[i] != null) ? this._meshTextures[i].texture2d : null, opacity, false, 32);
                    }
                    else {
                        _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_8__.ModelShader.use(renderContext, this._mesh.tangentVertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, (this._meshTextures[i] != null) ? this._meshTextures[i].texture2d : null, opacity, false, 44);
                    }
                }
                renderContext.preDraw();
                this._mesh.drawSubset(renderContext, i);
            }
        }
        renderContext.set_world(oldWorld);
        renderContext.set_sunlightColor(savedSunlightColor);
        renderContext.set_reflectedLightColor(savedReflectedColor);
        renderContext.set_hemisphereLightColor(savedHemiColor);
        renderContext.set_ambientLightColor(_color_js__WEBPACK_IMPORTED_MODULE_2__.Colors.get_black());
    },

    dispose: function () {
        if (this._mesh != null) {
            this._mesh.dispose();
            this._mesh = null;
        }
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(this._textureCache));
        while ($enum1.moveNext()) {
            var key = $enum1.current;
            var tex = this._textureCache[key];
            if (tex != null) {
                tex.dispose();
            }
        }
        _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.clearKeys(this._textureCache);
        Object3d._disposeTextureList(this._meshTextures);
        Object3d._disposeTextureList(this._meshSpecularTextures);
        Object3d._disposeTextureList(this._meshNormalMaps);
        this._meshMaterials.length = 0;
        this._dirty = true;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Object3d", [Object3d, Object3d$, null]);


// wwtlib.ObjectNode

function ObjectNode() {
    this.level = -1;
    this.children = [];
    this.enabled = true;
    this.drawGroup = [];
    this.applyLists = [];
    this.applyListsIndex = [];
}

var ObjectNode$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ObjectNode", [ObjectNode, ObjectNode$, null]);


// wwtlib.Object3dLayerUI

function Object3dLayerUI(layer) {
    this._layer$1 = null;
    this._opened$1 = true;
    this._callbacks$1 = null;
    _layer_ui_js__WEBPACK_IMPORTED_MODULE_15__.LayerUI.call(this);
    this._layer$1 = layer;
}

var Object3dLayerUI$ = {
    setUICallbacks: function (callbacks) {
        this._callbacks$1 = callbacks;
    },

    get_hasTreeViewNodes: function () {
        return true;
    },

    getTreeNodes: function () {
        var nodes = [];
        if (this._layer$1.object3d.objects.length > 0 && this._layer$1.object3d.objects[0].children != null) {
            this._loadTree$1(nodes, this._layer$1.object3d.objects[0].children);
        }
        return nodes;
    },
    _loadTree$1: function (nodes, children) {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(children);
        while ($enum1.moveNext()) {
            var child = $enum1.current;
            var node = new _layer_ui_js__WEBPACK_IMPORTED_MODULE_15__.LayerUITreeNode();
            node.set_name(child.name);
            node.set_tag(child);
            node.set_checked(child.enabled);
            node.add_nodeSelected(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_node_NodeSelected$1', this));
            node.add_nodeChecked(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_node_NodeChecked$1', this));
            nodes.push(node);
            this._loadTree$1(node.get_nodes(), child.children);
        }
    },
    _node_NodeChecked$1: function (node, newState) {
        var child = node.get_tag();
        if (child != null) {
            child.enabled = newState;
        }
    },
    _node_NodeSelected$1: function (node) {
        if (this._callbacks$1 != null) {
            var child = node.get_tag();
            var rowData = {};
            rowData['Name'] = child.name;
            rowData['Pivot.X'] = child.pivotPoint.x.toString();
            rowData['Pivot.Y'] = child.pivotPoint.y.toString();
            rowData['Pivot.Z'] = child.pivotPoint.z.toString();
            this._callbacks$1.showRowData(rowData);
        }
    },

    getNodeContextMenu: function (node) {
        return _layer_ui_js__WEBPACK_IMPORTED_MODULE_15__.LayerUI.prototype.getNodeContextMenu.call(this, node);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Object3dLayerUI", [Object3dLayerUI, Object3dLayerUI$, _layer_ui_js__WEBPACK_IMPORTED_MODULE_15__.LayerUI]);


/***/ }),

/***/ "./esm/layers/orbit.js":
/*!*****************************!*\
  !*** ./esm/layers/orbit.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EllipseRenderer: () => (/* binding */ EllipseRenderer),
/* harmony export */   Orbit: () => (/* binding */ Orbit)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
/* harmony import */ var _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../graphics/webgl_constants.js */ "./esm/graphics/webgl_constants.js");
/* harmony import */ var _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../graphics/shaders.js */ "./esm/graphics/shaders.js");
/* harmony import */ var _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../graphics/gl_buffers.js */ "./esm/graphics/gl_buffers.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../coordinates.js */ "./esm/coordinates.js");
/* harmony import */ var _space_time_controller_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../space_time_controller.js */ "./esm/space_time_controller.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Arbitrary orbits and how we render them.












// wwtlib.Orbit

function Orbit(elements, segments, color, thickness, scale) {
    this._elements = null;
    this._orbitColor = _color_js__WEBPACK_IMPORTED_MODULE_6__.Colors.get_white();
    this._scale = 0;
    this._segmentCount = 0;
    this._elements = elements;
    this._segmentCount = segments;
    this._orbitColor = color;
    this._scale = scale;
}

// Convert from standard coordinate system with z normal to the orbital plane
// to WWT's system where y is the normal. Note that this transformation is not
// a pure rotation: it incorporates a reflection, because the two systems have
// different handedness.
Orbit._orbitalToWwt = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.create(1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1);
Orbit._initBegun = false;

var Orbit$ = {
    cleanUp: function () { },

    // Get the radius of a sphere (centered at a focus of the ellipse) that is
    // large enough to contain the orbit. The value returned has units of the orbit scale.
    get_boundingRadius: function () {
        if (this._elements != null) {
            return (this._elements.a * (1 + this._elements.e)) / this._scale;
        } else {
            return 0;
        }
    },

    draw3D: function (renderContext, opacity, centerPoint) {
        // Extra transformation required because the ellipse shader uses the xy-plane, but WWT uses the
        // xz-plane as the reference.
        var orbitalPlaneOrientation = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationZ(_coordinates_js__WEBPACK_IMPORTED_MODULE_7__.Coordinates.degreesToRadians(this._elements.w)), _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationX(_coordinates_js__WEBPACK_IMPORTED_MODULE_7__.Coordinates.degreesToRadians(this._elements.i)), _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationZ(_coordinates_js__WEBPACK_IMPORTED_MODULE_7__.Coordinates.degreesToRadians(this._elements.omega))));
        orbitalPlaneOrientation = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(orbitalPlaneOrientation, Orbit._orbitalToWwt);

        var worldMatrix = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(orbitalPlaneOrientation, _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.translation(centerPoint)), renderContext.get_world());
        var M = this._elements.n * (_space_time_controller_js__WEBPACK_IMPORTED_MODULE_8__.SpaceTimeController.get_jNow() - this._elements.t);
        var F = 1;
        if (M < 0) {
            F = -1;
        }
        M = Math.abs(M) / 360;
        M = (M - _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(M)) * 360 * F;
        var color = _color_js__WEBPACK_IMPORTED_MODULE_6__.Color._fromArgbColor(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((opacity * 255)), this._orbitColor);

        // Newton-Raphson iteration to solve Kepler's equation.
        // This is faster than calling CAAKepler.Calculate(), and 5 steps
        // is more than adequate for draw the orbit paths of small satellites
        // (which are ultimately rendered using single-precision floating point.)
        M = _coordinates_js__WEBPACK_IMPORTED_MODULE_7__.Coordinates.degreesToRadians(M);
        var E = M;
        for (var i = 0; i < 5; i++) {
            E += (M - E + this._elements.e * Math.sin(E)) / (1 - this._elements.e * Math.cos(E));
        }
        EllipseRenderer.drawEllipse(renderContext, this._elements.a / this._scale, this._elements.e, E, color, worldMatrix);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Orbit", [Orbit, Orbit$, null]);


// wwtlib.EllipseRenderer

function EllipseRenderer() { }

// Draw an ellipse with the specified semi-major axis and eccentricity. The orbit is drawn over a single period,
// fading from full brightness at the given eccentric anomaly.
//
// In order to match exactly the position at which a planet is drawn, the planet's position at the current time
// must be passed as a parameter. positionNow is in the current coordinate system of the render context, not the
// translated and rotated system of the orbital plane.
EllipseRenderer.drawEllipseWithPosition = function (renderContext, semiMajorAxis, eccentricity, eccentricAnomaly, color, worldMatrix, positionNow) {
    if (EllipseRenderer._ellipseShader == null) {
        EllipseRenderer._ellipseShader = new _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_4__.EllipseShader();
    }
    if (EllipseRenderer._ellipseVertexBuffer == null) {
        EllipseRenderer._ellipseVertexBuffer = EllipseRenderer.createEllipseVertexBuffer(500);
    }
    var savedWorld = renderContext.get_world();
    renderContext.set_world(worldMatrix);
    renderContext.gl.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, EllipseRenderer._ellipseVertexBuffer.vertexBuffer);
    renderContext.gl.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ELEMENT_ARRAY_BUFFER, null);
    _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_4__.EllipseShader.use(renderContext, semiMajorAxis, eccentricity, eccentricAnomaly, color, 1, savedWorld, positionNow);
    renderContext.gl.drawArrays(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.LINE_STRIP, 0, EllipseRenderer._ellipseVertexBuffer.count);
    renderContext.set_world(savedWorld);
};

// This version of DrawEllipse works without a 'head' point
EllipseRenderer.drawEllipse = function (renderContext, semiMajorAxis, eccentricity, eccentricAnomaly, color, worldMatrix) {
    if (EllipseRenderer._ellipseShader == null) {
        EllipseRenderer._ellipseShader = new _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_4__.EllipseShader();
    }
    if (EllipseRenderer._ellipseWithoutStartPointVertexBuffer == null) {
        EllipseRenderer._ellipseWithoutStartPointVertexBuffer = EllipseRenderer.createEllipseVertexBufferWithoutStartPoint(360);
    }
    var savedWorld = renderContext.get_world();
    renderContext.set_world(worldMatrix);
    renderContext.gl.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ARRAY_BUFFER, EllipseRenderer._ellipseWithoutStartPointVertexBuffer.vertexBuffer);
    renderContext.gl.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.ELEMENT_ARRAY_BUFFER, null);
    _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_4__.EllipseShader.use(renderContext, semiMajorAxis, eccentricity, eccentricAnomaly, color, 1, savedWorld, _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 0, 0));
    renderContext.gl.drawArrays(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.LINE_STRIP, 0, EllipseRenderer._ellipseWithoutStartPointVertexBuffer.count - 1);
    renderContext.set_world(savedWorld);
};

EllipseRenderer.createEllipseVertexBuffer = function (vertexCount) {
    var vb = new _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_5__.PositionVertexBuffer(vertexCount);
    var verts = vb.lock();
    var index = 0;

    // Pack extra samples into the front of the orbit to avoid obvious segmentation
    // when viewed from near the planet or moon.
    for (var i = 0; i < vertexCount / 2; ++i) {
        verts[index++] = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(2 * i / vertexCount * 0.05, 0, 0);
    }
    for (var i = 0; i < vertexCount / 2; ++i) {
        verts[index++] = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(2 * i / vertexCount * 0.95 + 0.05, 0, 0);
    }
    vb.unlock();
    return vb;
};

EllipseRenderer.createEllipseVertexBufferWithoutStartPoint = function (vertexCount) {
    var vb = new _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_5__.PositionVertexBuffer(vertexCount);
    var verts = vb.lock();

    // Setting a non-zero value will prevent the ellipse shader from using the 'head' point
    verts[0] = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(1E-06, 0, 0);
    for (var i = 1; i < vertexCount; ++i) {
        verts[i] = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(2 * i / vertexCount, 0, 0);
    }
    vb.unlock();
    return vb;
};

var EllipseRenderer$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("EllipseRenderer", [EllipseRenderer, EllipseRenderer$, null]);


/***/ }),

/***/ "./esm/layers/orbit_layer.js":
/*!***********************************!*\
  !*** ./esm/layers/orbit_layer.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OrbitLayer: () => (/* binding */ OrbitLayer),
/* harmony export */   OrbitLayerUI: () => (/* binding */ OrbitLayerUI)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
/* harmony import */ var _layer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./layer.js */ "./esm/layers/layer.js");
/* harmony import */ var _layer_ui_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./layer_ui.js */ "./esm/layers/layer_ui.js");
/* harmony import */ var _orbit_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./orbit.js */ "./esm/layers/orbit.js");
/* harmony import */ var _reference_frame_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./reference_frame.js */ "./esm/layers/reference_frame.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A layer that renders an orbit.











// wwtlib.OrbitLayer

function OrbitLayer() {
    this._frames$1 = [];
    this._primaryUI$1 = null;
    this._pointOpacity$1 = 1;
    this._pointColor$1 = _color_js__WEBPACK_IMPORTED_MODULE_3__.Colors.get_yellow();
    this._filename$1 = '';
    this._dataFile$1 = '';
    _layer_js__WEBPACK_IMPORTED_MODULE_4__.Layer.call(this);
}

var OrbitLayer$ = {
    get_frames: function () {
        return this._frames$1;
    },

    set_frames: function (value) {
        this._frames$1 = value;
        return value;
    },

    getPrimaryUI: function () {
        if (this._primaryUI$1 == null) {
            this._primaryUI$1 = new OrbitLayerUI(this);
        }
        return this._primaryUI$1;
    },

    cleanUp: function () {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._frames$1);
        while ($enum1.moveNext()) {
            var frame = $enum1.current;
            if (frame.get_orbit() != null) {
                frame.get_orbit().cleanUp();
                frame.set_orbit(null);
            }
        }
    },

    writeLayerProperties: function (xmlWriter) {
        xmlWriter._writeAttributeString('PointOpacity', this.get_pointOpacity().toString());
        xmlWriter._writeAttributeString('PointColor', this._pointColor$1.save());
    },

    get_pointOpacity: function () {
        return this._pointOpacity$1;
    },

    set_pointOpacity: function (value) {
        if (this._pointOpacity$1 !== value) {
            this.version++;
            this._pointOpacity$1 = value;
        }
        return value;
    },

    get_pointColor: function () {
        return this._pointColor$1;
    },

    set_pointColor: function (value) {
        if (this._pointColor$1 !== value) {
            this.version++;
            this._pointColor$1 = value;
        }
        return value;
    },

    getParams: function () {
        var paramList = new Array(6);
        paramList[0] = this._pointOpacity$1;
        paramList[1] = this.get_color().r / 255;
        paramList[2] = this.get_color().g / 255;
        paramList[3] = this.get_color().b / 255;
        paramList[4] = this.get_color().a / 255;
        paramList[5] = this.get_opacity();
        return paramList;
    },

    getParamNames: function () {
        return ['PointOpacity', 'Color.Red', 'Color.Green', 'Color.Blue', 'Color.Alpha', 'Opacity'];
    },

    setParams: function (paramList) {
        if (paramList.length === 6) {
            this._pointOpacity$1 = paramList[0];
            this.set_opacity(paramList[5]);
            var color = _color_js__WEBPACK_IMPORTED_MODULE_3__.Color.fromArgb(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((paramList[4] * 255)), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((paramList[1] * 255)), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((paramList[2] * 255)), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((paramList[3] * 255)));
            this.set_color(color);
        }
    },

    initializeFromXml: function (node) {
        this.set_pointOpacity(parseFloat(node.attributes.getNamedItem('PointOpacity').nodeValue));
        this.set_pointColor(_color_js__WEBPACK_IMPORTED_MODULE_3__.Color.load(node.attributes.getNamedItem('PointColor').nodeValue));
    },

    draw: function (renderContext, opacity, flat) {
        var matSaved = renderContext.get_world();
        renderContext.set_world(renderContext.get_worldBaseNonRotating());
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._frames$1);
        while ($enum1.moveNext()) {
            var frame = $enum1.current;
            if (frame.showOrbitPath) {
                if (frame.get_orbit() == null) {
                    frame.set_orbit(new _orbit_js__WEBPACK_IMPORTED_MODULE_6__.Orbit(frame.get_elements(), 360, this.get_color(), 1, renderContext.get_nominalRadius()));
                }
                frame.get_orbit().draw3D(renderContext, opacity * this.get_opacity(), new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d());
            }
        }
        renderContext.set_world(matSaved);
        return true;
    },

    addFilesToCabinet: function (fc) {
        this._filename$1 = fc.tempDirectory + _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0}\\{1}.txt', fc.get_packageID(), this.id.toString());
        var dir = this._filename$1.substring(0, this._filename$1.lastIndexOf('\\'));
        var blob = new Blob([this._dataFile$1]);
        fc.addFile(this._filename$1, blob);
        _layer_js__WEBPACK_IMPORTED_MODULE_4__.Layer.prototype.addFilesToCabinet.call(this, fc);
    },

    loadData: function (tourDoc, filename) {
        var $this = this;

        var blob = tourDoc.getFileBlob(filename);
        var doc = new FileReader();
        doc.onloadend = function (ee) {
            $this._dataFile$1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(doc.result, String);
            $this.loadString($this._dataFile$1);
        };
        doc.readAsText(blob);
    },

    loadString: function (dataFile) {
        var data = dataFile.split('\n');
        this._frames$1.length = 0;
        for (var i = 0; i < data.length; i += 2) {
            var line1 = i;
            var line2 = i + 1;
            if (data[i].length > 0) {
                var frame = new _reference_frame_js__WEBPACK_IMPORTED_MODULE_7__.ReferenceFrame();
                if (data[i].substring(0, 1) !== '1') {
                    line1++;
                    line2++;
                    frame.name = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(data[i]);
                    i++;
                }
                else if (data[i].substring(0, 1) === '1') {
                    frame.name = data[i].substring(2, 5);
                }
                else {
                    i -= 2;
                    continue;
                }
                frame.reference = 18;
                frame.oblateness = 0;
                frame.showOrbitPath = true;
                frame.showAsPoint = true;
                frame.referenceFrameType = 1;
                frame.scale = 1;
                frame.semiMajorAxisUnits = 1;
                frame.meanRadius = 10;
                frame.oblateness = 0;
                frame.fromTLE(data[line1], data[line2], 398600441800000);
                this._frames$1.push(frame);
            }
            else {
                i -= 1;
            }
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("OrbitLayer", [OrbitLayer, OrbitLayer$, _layer_js__WEBPACK_IMPORTED_MODULE_4__.Layer]);


// wwtlib.OrbitLayerUI

function OrbitLayerUI(layer) {
    this._layer$1 = null;
    this._opened$1 = true;
    this._callbacks$1 = null;
    _layer_ui_js__WEBPACK_IMPORTED_MODULE_5__.LayerUI.call(this);
    this._layer$1 = layer;
}

var OrbitLayerUI$ = {
    setUICallbacks: function (callbacks) {
        this._callbacks$1 = callbacks;
    },

    get_hasTreeViewNodes: function () {
        return true;
    },

    getTreeNodes: function () {
        var nodes = [];
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._layer$1.get_frames());
        while ($enum1.moveNext()) {
            var frame = $enum1.current;
            var node = new _layer_ui_js__WEBPACK_IMPORTED_MODULE_5__.LayerUITreeNode();
            node.set_name(frame.name);
            node.set_tag(frame);
            node.set_checked(frame.showOrbitPath);
            node.add_nodeSelected(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_node_NodeSelected$1', this));
            node.add_nodeChecked(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_node_NodeChecked$1', this));
            nodes.push(node);
        }
        return nodes;
    },
    _node_NodeChecked$1: function (node, newState) {
        var frame = node.get_tag();
        if (frame != null) {
            frame.showOrbitPath = newState;
        }
    },
    _node_NodeSelected$1: function (node) {
        if (this._callbacks$1 != null) {
            var frame = node.get_tag();
            var rowData = {};
            rowData['Name'] = frame.name;
            rowData['SemiMajor Axis'] = frame.semiMajorAxis.toString();
            rowData['SMA Units'] = frame.semiMajorAxisUnits.toString();
            rowData['Inclination'] = frame.inclination.toString();
            rowData['Eccentricity'] = frame.eccentricity.toString();
            rowData['Long of Asc. Node'] = frame.longitudeOfAscendingNode.toString();
            rowData['Argument Of Periapsis'] = frame.argumentOfPeriapsis.toString();
            rowData['Epoch'] = frame.epoch.toString();
            rowData['Mean Daily Motion'] = frame.meanDailyMotion.toString();
            rowData['Mean Anomoly at Epoch'] = frame.meanAnomolyAtEpoch.toString();
            this._callbacks$1.showRowData(rowData);
        }
    },

    getNodeContextMenu: function (node) {
        return _layer_ui_js__WEBPACK_IMPORTED_MODULE_5__.LayerUI.prototype.getNodeContextMenu.call(this, node);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("OrbitLayerUI", [OrbitLayerUI, OrbitLayerUI$, _layer_ui_js__WEBPACK_IMPORTED_MODULE_5__.LayerUI]);


/***/ }),

/***/ "./esm/layers/reference_frame.js":
/*!***************************************!*\
  !*** ./esm/layers/reference_frame.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ReferenceFrame: () => (/* binding */ ReferenceFrame),
/* harmony export */   ReferenceFrameTypes: () => (/* binding */ ReferenceFrameTypes)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../astrocalc/elliptical.js */ "./esm/astrocalc/elliptical.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
/* harmony import */ var _space_time_controller_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../space_time_controller.js */ "./esm/space_time_controller.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A reference frame for the 3D mode.









// wwtlib.ReferenceFrameTypes

var ReferenceFrameTypes = {
    fixedSherical: 0,
    orbital: 1,
    trajectory: 2,
    synodic: 3
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ReferenceFrameTypes", ReferenceFrameTypes);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("ReferenceFrameTypes", ReferenceFrameTypes);


// wwtlib.ReferenceFrame

function ReferenceFrame() {
    this._systemGenerated = false;

    // Calclulated
    this.meanAnomoly = 0;
    this.orbitalYears = 0;

    // Serialized
    this.observingLocation = false;
    this.reference = 18;
    this.parentsRoationalBase = false;
    this.referenceFrameType = 0;
    this.meanRadius = 6371000;
    this.oblateness = 0.0033528;
    this.heading = 0;
    this.pitch = 0;
    this.roll = 0;
    this.scale = 1;
    this.tilt = 0;
    this.translation = new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d();

    // For Spherical Offset
    this.lat = 0;
    this.lng = 0;
    this.altitude = 0;

    // For Rotating frames
    this.rotationalPeriod = 0; // days
    this.zeroRotationDate = 0; // julian decimal

    // For representing orbits & distant point location
    this.representativeColor = _color_js__WEBPACK_IMPORTED_MODULE_4__.Colors.get_white(); // Used for orbits and points
    this.showAsPoint = false;
    this.showOrbitPath = false;
    this.stationKeeping = true;

    this.semiMajorAxis = 0; // a Au's
    this.semiMajorAxisUnits = 1; // AltUnits
    this.eccentricity = 0; // e
    this.inclination = 0; // i
    this.argumentOfPeriapsis = 0; // w
    this.longitudeOfAscendingNode = 0; // Omega
    this.meanAnomolyAtEpoch = 0; // M
    this.meanDailyMotion = 0; // n .degrees day
    this.epoch = 0; // standard equinox

    this._orbit = null;
    this._elements = new _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_2__.EOE();
    this.worldMatrix = new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d();
    this.worldMatrix = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.get_identity();
}

ReferenceFrame.isTLECheckSumGood = function (line) {
    if (line.length !== 69) {
        return false;
    }
    var checksum = 0;
    for (var i = 0; i < 68; i++) {
        switch (line.substr(i, 1)) {
            case '1':
                checksum += 1;
                break;
            case '2':
                checksum += 2;
                break;
            case '3':
                checksum += 3;
                break;
            case '4':
                checksum += 4;
                break;
            case '5':
                checksum += 5;
                break;
            case '6':
                checksum += 6;
                break;
            case '7':
                checksum += 7;
                break;
            case '8':
                checksum += 8;
                break;
            case '9':
                checksum += 9;
                break;
            case '-':
                checksum += 1;
                break;
        }
    }
    return (checksum % 10).toString() === line.charAt(68).toString();
};

ReferenceFrame.toTLEExponential = function (num, size) {
    var exp = num.toExponential(size);
    if (exp.length < size + 6) {
        exp = exp.substring(0, size + 4) + '0' + exp.substr(size + 4, 1);
    }
    return exp;
};

ReferenceFrame.tleNumberString = function (num, left, right) {
    var formated = num.toFixed(right);
    var point = formated.indexOf('.');
    if (point === -1) {
        point = formated.length;
        formated += '.0';
    }
    var len = formated.length - point - 1;
    var fill = '00000000';
    formated = fill.substr(0, left - point) + formated + fill.substr(0, right - len);
    return formated;
};

ReferenceFrame.computeTLECheckSum = function (line) {
    if (line.length !== 68) {
        return '0';
    }
    var checksum = 0;
    for (var i = 0; i < 68; i++) {
        switch (line[i]) {
            case '1':
                checksum += 1;
                break;
            case '2':
                checksum += 2;
                break;
            case '3':
                checksum += 3;
                break;
            case '4':
                checksum += 4;
                break;
            case '5':
                checksum += 5;
                break;
            case '6':
                checksum += 6;
                break;
            case '7':
                checksum += 7;
                break;
            case '8':
                checksum += 8;
                break;
            case '9':
                checksum += 9;
                break;
            case '-':
                checksum += 1;
                break;
        }
    }
    return ((checksum % 10));
};

var ReferenceFrame$ = {
    get_representativeColor: function () {
        return this.representativeColor;
    },

    set_representativeColor: function (value) {
        if (value !== this.representativeColor) {
            this.representativeColor = value;
            this._orbit = null;
        }
        return value;
    },

    get_orbit: function () {
        return this._orbit;
    },

    set_orbit: function (value) {
        this._orbit = value;
        return value;
    },

    getIndentifier: function () {
        return this.name;
    },

    importTrajectory: function (filename) { },

    saveToXml: function (xmlWriter) {
        xmlWriter._writeStartElement('ReferenceFrame');
        xmlWriter._writeAttributeString('Name', this.name);
        xmlWriter._writeAttributeString('Parent', this.parent);
        xmlWriter._writeAttributeString('ReferenceFrameType', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('ReferenceFrameTypes', this.referenceFrameType));
        xmlWriter._writeAttributeString('Reference', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('ReferenceFrames', this.reference));
        xmlWriter._writeAttributeString('ParentsRoationalBase', this.parentsRoationalBase.toString());
        xmlWriter._writeAttributeString('MeanRadius', this.meanRadius.toString());
        xmlWriter._writeAttributeString('Oblateness', this.oblateness.toString());
        xmlWriter._writeAttributeString('Heading', this.heading.toString());
        xmlWriter._writeAttributeString('Pitch', this.pitch.toString());
        xmlWriter._writeAttributeString('Roll', this.roll.toString());
        xmlWriter._writeAttributeString('Scale', this.scale.toString());
        xmlWriter._writeAttributeString('Tilt', this.tilt.toString());
        xmlWriter._writeAttributeString('Translation', this.translation.toString());
        if (!this.referenceFrameType) {
            xmlWriter._writeAttributeString('Lat', this.lat.toString());
            xmlWriter._writeAttributeString('Lng', this.lng.toString());
            xmlWriter._writeAttributeString('Altitude', this.altitude.toString());
        }
        xmlWriter._writeAttributeString('RotationalPeriod', this.rotationalPeriod.toString());
        xmlWriter._writeAttributeString('ZeroRotationDate', this.zeroRotationDate.toString());
        xmlWriter._writeAttributeString('RepresentativeColor', this.get_representativeColor().save());
        xmlWriter._writeAttributeString('ShowAsPoint', this.showAsPoint.toString());
        xmlWriter._writeAttributeString('ShowOrbitPath', this.showOrbitPath.toString());
        xmlWriter._writeAttributeString('StationKeeping', this.stationKeeping.toString());
        if (this.referenceFrameType === 1) {
            xmlWriter._writeAttributeString('SemiMajorAxis', this.semiMajorAxis.toString());
            xmlWriter._writeAttributeString('SemiMajorAxisScale', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('AltUnits', this.semiMajorAxisUnits));
            xmlWriter._writeAttributeString('Eccentricity', this.eccentricity.toString());
            xmlWriter._writeAttributeString('Inclination', this.inclination.toString());
            xmlWriter._writeAttributeString('ArgumentOfPeriapsis', this.argumentOfPeriapsis.toString());
            xmlWriter._writeAttributeString('LongitudeOfAscendingNode', this.longitudeOfAscendingNode.toString());
            xmlWriter._writeAttributeString('MeanAnomolyAtEpoch', this.meanAnomolyAtEpoch.toString());
            xmlWriter._writeAttributeString('MeanDailyMotion', this.meanDailyMotion.toString());
            xmlWriter._writeAttributeString('Epoch', this.epoch.toString());
        }
        xmlWriter._writeEndElement();
    },

    initializeFromXml: function (node) {
        this.name = node.attributes.getNamedItem('Name').nodeValue;
        this.parent = node.attributes.getNamedItem('Parent').nodeValue;
        this.referenceFrameType = _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('ReferenceFrameTypes', node.attributes.getNamedItem('ReferenceFrameType').nodeValue);
        this.reference = _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('ReferenceFrames', node.attributes.getNamedItem('Reference').nodeValue);
        this.parentsRoationalBase = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('ParentsRoationalBase').nodeValue);
        this.meanRadius = parseFloat(node.attributes.getNamedItem('MeanRadius').nodeValue);
        this.oblateness = parseFloat(node.attributes.getNamedItem('Oblateness').nodeValue);
        this.heading = parseFloat(node.attributes.getNamedItem('Heading').nodeValue);
        this.pitch = parseFloat(node.attributes.getNamedItem('Pitch').nodeValue);
        this.roll = parseFloat(node.attributes.getNamedItem('Roll').nodeValue);
        this.scale = parseFloat(node.attributes.getNamedItem('Scale').nodeValue);
        this.tilt = parseFloat(node.attributes.getNamedItem('Tilt').nodeValue);
        this.translation = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.parse(node.attributes.getNamedItem('Translation').nodeValue);
        if (!this.referenceFrameType) {
            this.lat = parseFloat(node.attributes.getNamedItem('Lat').nodeValue);
            this.lng = parseFloat(node.attributes.getNamedItem('Lng').nodeValue);
            this.altitude = parseFloat(node.attributes.getNamedItem('Altitude').nodeValue);
        }
        this.rotationalPeriod = parseFloat(node.attributes.getNamedItem('RotationalPeriod').nodeValue);
        this.zeroRotationDate = parseFloat(node.attributes.getNamedItem('ZeroRotationDate').nodeValue);
        this.set_representativeColor(_color_js__WEBPACK_IMPORTED_MODULE_4__.Color.load(node.attributes.getNamedItem('RepresentativeColor').nodeValue));
        this.showAsPoint = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('ShowAsPoint').nodeValue);
        if (node.attributes.getNamedItem('StationKeeping') != null) {
            this.stationKeeping = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('StationKeeping').nodeValue);
        }
        if (this.referenceFrameType === 1) {
            this.showOrbitPath = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('ShowOrbitPath').nodeValue);
            this.semiMajorAxis = parseFloat(node.attributes.getNamedItem('SemiMajorAxis').nodeValue);
            this.semiMajorAxisUnits = _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('AltUnits', node.attributes.getNamedItem('SemiMajorAxisScale').nodeValue);
            this.eccentricity = parseFloat(node.attributes.getNamedItem('Eccentricity').nodeValue);
            this.inclination = parseFloat(node.attributes.getNamedItem('Inclination').nodeValue);
            this.argumentOfPeriapsis = parseFloat(node.attributes.getNamedItem('ArgumentOfPeriapsis').nodeValue);
            this.longitudeOfAscendingNode = parseFloat(node.attributes.getNamedItem('LongitudeOfAscendingNode').nodeValue);
            this.meanAnomolyAtEpoch = parseFloat(node.attributes.getNamedItem('MeanAnomolyAtEpoch').nodeValue);
            this.meanDailyMotion = parseFloat(node.attributes.getNamedItem('MeanDailyMotion').nodeValue);
            this.epoch = parseFloat(node.attributes.getNamedItem('Epoch').nodeValue);
        }
    },

    fromTLE: function (line1, line2, gravity) {
        this.epoch = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_5__.SpaceTimeController._twoLineDateToJulian(line1.substr(18, 14));
        this.eccentricity = parseFloat('0.' + line2.substr(26, 7));
        this.inclination = parseFloat(line2.substr(8, 8));
        this.longitudeOfAscendingNode = parseFloat(line2.substr(17, 8));
        this.argumentOfPeriapsis = parseFloat(line2.substr(34, 8));
        var revs = parseFloat(line2.substr(52, 11));
        this.meanAnomolyAtEpoch = parseFloat(line2.substr(43, 8));
        this.meanDailyMotion = revs * 360;
        var part = (86400 / revs) / (Math.PI * 2);
        this.semiMajorAxis = Math.pow((part * part) * gravity, 1 / 3);
        this.semiMajorAxisUnits = 1;
    },

    toTLE: function () {
        // Epoch need to convert to TLE time string.
        // Ecentricity remove "0." from the begin and trim to 7 digits
        // Inclination decimal degrees 8 digits max
        // LOAN decimal degrees 8 digits
        // AOP
        // mean anomoly at epoch 8 digits
        // Mean motion (revs per day) Compute
        // Convert Semi-major-axis to meters from storage unit
        // Compute revs
        var line1 = new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.StringBuilder();
        line1.append('1 99999U 00111AAA ');
        line1.append(_space_time_controller_js__WEBPACK_IMPORTED_MODULE_5__.SpaceTimeController.julianToTwoLineDate(this.epoch));
        line1.append(' ');
        line1.append(this.semiMajorAxis.toExponential(4));
        line1.append(' 00000-0 ');
        line1.append(ReferenceFrame.toTLEExponential(this.meanDailyMotion, 5));
        line1.append('  001');
        line1.append(ReferenceFrame.computeTLECheckSum(line1.toString()));
        line1.appendLine('');
        var line2 = new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.StringBuilder();
        line2.append('2 99999 ');
        line2.append(ReferenceFrame.tleNumberString(this.inclination, 3, 4) + ' ');
        line2.append(ReferenceFrame.tleNumberString(this.longitudeOfAscendingNode, 3, 4) + ' ');
        line2.append((ReferenceFrame.tleNumberString(this.eccentricity, 1, 7) + ' ').substring(2));
        line2.append(ReferenceFrame.tleNumberString(this.argumentOfPeriapsis, 3, 4) + ' ');
        line2.append(ReferenceFrame.tleNumberString(this.meanAnomolyAtEpoch, 3, 4) + ' ');
        line2.append(ReferenceFrame.toTLEExponential(this.meanDailyMotion / 207732, 5));
        line2.append('00001');
        line2.append(ReferenceFrame.computeTLECheckSum(line2.toString()));
        line2.appendLine('');
        return line1.toString() + line2.toString();
    },

    get_elements: function () {
        this._elements.a = this.semiMajorAxis;
        this._elements.e = this.eccentricity;
        this._elements.i = this.inclination;
        this._elements.w = this.argumentOfPeriapsis;
        this._elements.omega = this.longitudeOfAscendingNode;
        this._elements.jdEquinox = this.epoch;
        if (!this.meanDailyMotion) {
            this._elements.n = _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_2__.ELL.meanMotionFromSemiMajorAxis(this._elements.a);
        } else {
            this._elements.n = this.meanDailyMotion;
        }
        this._elements.t = this.epoch - (this.meanAnomolyAtEpoch / this._elements.n);
        return this._elements;
    },

    set_elements: function (value) {
        this._elements = value;
        return value;
    },

    computeFrame: function (renderContext) {
        switch (this.referenceFrameType) {
            case 1:
                this._computeOrbital(renderContext);
                break;
            case 0:
                this._computeFixedSherical(renderContext);
                break;
            case 2:
                this._computeFrameTrajectory(renderContext);
                break;
            default:
                break;
        }
    },

    useRotatingParentFrame: function () {
        switch (this.referenceFrameType) {
            case 1:
            case 2:
            case 3:
                return false;
            default:
                return true;
        }
    },

    _computeFixedRectangular: function (renderContext) { },

    _computeFixedSherical: function (renderContext) {
        if (this.observingLocation) {
            this.lat = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_5__.SpaceTimeController.get_location().get_lat();
            this.lng = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_5__.SpaceTimeController.get_location().get_lng();
            this.altitude = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_5__.SpaceTimeController.get_altitude();
        }
        this.worldMatrix = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.get_identity();
        this.worldMatrix.translate(this.translation);
        var localScale = (1 / renderContext.get_nominalRadius()) * this.scale * this.meanRadius;
        this.worldMatrix.scale(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(localScale, localScale, localScale));
        this.worldMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.rotationYawPitchRoll((this.heading / 180 * Math.PI), (this.pitch / 180 * Math.PI), (this.roll / 180 * Math.PI)));
        this.worldMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationZ(-90 / 180 * Math.PI));
        if (!!this.rotationalPeriod) {
            var rotationCurrent = (((_space_time_controller_js__WEBPACK_IMPORTED_MODULE_5__.SpaceTimeController.get_jNow() - this.zeroRotationDate) / this.rotationalPeriod) * Math.PI * 2) % (Math.PI * 2);
            this.worldMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationX(-rotationCurrent));
        }
        this.worldMatrix.translate(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(1 + (this.altitude / renderContext.get_nominalRadius()), 0, 0));
        this.worldMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationZ(this.lat / 180 * Math.PI));
        this.worldMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationY(-(this.lng + 180) / 180 * Math.PI));
    },

    _computeFrameTrajectory: function (renderContext) { },

    _computeOrbital: function (renderContext) {
        var ee = this.get_elements();
        var point = _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_2__.ELL.calculateRectangularJD(_space_time_controller_js__WEBPACK_IMPORTED_MODULE_5__.SpaceTimeController.get_jNow(), ee);
        this.meanAnomoly = ee.meanAnnomolyOut;
        var pointInstantLater = _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_2__.ELL.calculateRectangular(ee, this.meanAnomoly + 0.001);
        var direction = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.subtractVectors(point, pointInstantLater);
        var up = point.copy();
        up.normalize();
        direction.normalize();
        var dist = point.length();
        var scaleFactor = 1;
        switch (this.semiMajorAxisUnits) {
            case 1:
                scaleFactor = 1;
                break;
            case 2:
                scaleFactor = 1 / 3.2808399;
                break;
            case 3:
                scaleFactor = (1 / 3.2808399) / 12;
                break;
            case 4:
                scaleFactor = 1609.344;
                break;
            case 5:
                scaleFactor = 1000;
                break;
            case 6:
                scaleFactor = 149598000 * 1000;
                break;
            case 7:
                scaleFactor = 63239.6717 * 149598000 * 1000;
                break;
            case 8:
                scaleFactor = 206264.806 * 149598000 * 1000;
                break;
            case 9:
                scaleFactor = 206264.806 * 149598000 * 1000 * 1000000;
                break;
            case 10:
                scaleFactor = 1;
                break;
            default:
                break;
        }
        scaleFactor *= 1 / renderContext.get_nominalRadius();
        var look = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.lookAtLH(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, 0, 0), direction, up);
        look.invert();
        this.worldMatrix = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.get_identity();
        this.worldMatrix.translate(this.translation);
        var localScale = (1 / renderContext.get_nominalRadius()) * this.scale * this.meanRadius;
        this.worldMatrix.scale(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(localScale, localScale, localScale));
        this.worldMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.rotationYawPitchRoll((this.heading / 180 * Math.PI), (this.pitch / 180 * Math.PI), (this.roll / 180 * Math.PI)));
        if (!!this.rotationalPeriod) {
            var rotationCurrent = (((_space_time_controller_js__WEBPACK_IMPORTED_MODULE_5__.SpaceTimeController.get_jNow() - this.zeroRotationDate) / this.rotationalPeriod) * Math.PI * 2) % (Math.PI * 2);
            this.worldMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d._rotationX(-rotationCurrent));
        }
        point = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.scale(point, scaleFactor);
        this.worldMatrix.translate(point);
        if (this.stationKeeping) {
            this.worldMatrix = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Matrix3d.multiplyMatrix(look, this.worldMatrix);
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ReferenceFrame", [ReferenceFrame, ReferenceFrame$, null]);


/***/ }),

/***/ "./esm/layers/spreadsheet_layer.js":
/*!*****************************************!*\
  !*** ./esm/layers/spreadsheet_layer.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CatalogSpreadSheetLayer: () => (/* binding */ CatalogSpreadSheetLayer),
/* harmony export */   KmlCoordinate: () => (/* binding */ KmlCoordinate),
/* harmony export */   KmlLineList: () => (/* binding */ KmlLineList),
/* harmony export */   PushPin: () => (/* binding */ PushPin),
/* harmony export */   SpreadSheetLayer: () => (/* binding */ SpreadSheetLayer)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../graphics/webgl_constants.js */ "./esm/graphics/webgl_constants.js");
/* harmony import */ var _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../graphics/primitives3d.js */ "./esm/graphics/primitives3d.js");
/* harmony import */ var _graphics_texture_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../graphics/texture.js */ "./esm/graphics/texture.js");
/* harmony import */ var _graphics_tessellator_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../graphics/tessellator.js */ "./esm/graphics/tessellator.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../coordinates.js */ "./esm/coordinates.js");
/* harmony import */ var _space_time_controller_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../space_time_controller.js */ "./esm/space_time_controller.js");
/* harmony import */ var _ui_tools_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../ui_tools.js */ "./esm/ui_tools.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _color_map_container_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./color_map_container.js */ "./esm/layers/color_map_container.js");
/* harmony import */ var _layer_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./layer.js */ "./esm/layers/layer.js");
/* harmony import */ var _table_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./table.js */ "./esm/layers/table.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A layer that renders tabular data.





















// wwtlib.KmlCoordinate

function KmlCoordinate() {
    this.lat = 0;
    this.lng = 0;
    this.alt = 0;
}

var KmlCoordinate$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("KmlCoordinate", [KmlCoordinate, KmlCoordinate$, null]);


// wwtlib.KmlLineList

function KmlLineList() {
    this.extrude = false;
    this.astronomical = false;
    this.meanRadius = 6371000;
    this.pointList = [];
}

var KmlLineList$ = {
    parseWkt: function (geoText, option, alt, date) {
        var parts = _ui_tools_js__WEBPACK_IMPORTED_MODULE_13__.UiTools.split(geoText, '(,)');
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(parts);
        while ($enum1.moveNext()) {
            var part = $enum1.current;
            var coordinates = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(part).split(' ');
            if (coordinates.length > 1) {
                var pnt = new KmlCoordinate();
                pnt.lng = parseFloat(coordinates[0]);
                if (this.astronomical) {
                    pnt.lng -= 180;
                }
                pnt.lat = parseFloat(coordinates[1]);
                if (coordinates.length > 2 && !alt) {
                    pnt.alt = parseFloat(coordinates[2]);
                }
                else {
                    pnt.alt = alt;
                }
                pnt.date = date;
                this.pointList.push(pnt);
            }
        }
    },

    getCenterPoint: function () {
        var point = new KmlCoordinate();
        point.lat = 0;
        point.lng = 0;
        point.alt = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.pointList);
        while ($enum1.moveNext()) {
            var pnt = $enum1.current;
            point.lat += pnt.lat;
            point.lng += pnt.lng;
            point.alt += pnt.alt;
        }
        point.lat /= this.pointList.length;
        point.lng /= this.pointList.length;
        point.alt /= this.pointList.length;
        return point;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("KmlLineList", [KmlLineList, KmlLineList$, null]);


// wwtlib.PushPin

function PushPin() { }

PushPin._pinTextureCache = {};
PushPin._pins = null;

PushPin.triggerLoadSprite = function () {
    if (PushPin._pins == null) {
        PushPin._pins = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_8__.Texture.fromUrl(_url_helpers_js__WEBPACK_IMPORTED_MODULE_14__.URLHelpers.singleton.engineAssetUrl('pins.png'));
    }
};

PushPin.getPushPinTexture = function (pinId) {
    var texture = null;
    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(PushPin._pinTextureCache, pinId)) {
        return PushPin._pinTextureCache[pinId];
    }
    try {
        texture = _render_globals_js__WEBPACK_IMPORTED_MODULE_5__.tilePrepDevice.createTexture();
        _render_globals_js__WEBPACK_IMPORTED_MODULE_5__.tilePrepDevice.bindTexture(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.TEXTURE_2D, texture);
        var row = Math.floor(pinId / 16);
        var col = pinId % 16;
        var temp = document.createElement('canvas');
        temp.height = 32;
        temp.width = 32;
        var ctx = temp.getContext('2d');
        //Substitute the resized image
        ctx.drawImage(PushPin._pins.imageElement, (col * 32), (row * 32), 32, 32, 0, 0, 32, 32);
        var image = temp;
        _render_globals_js__WEBPACK_IMPORTED_MODULE_5__.tilePrepDevice.texParameteri(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.TEXTURE_2D, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.TEXTURE_WRAP_S, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.CLAMP_TO_EDGE);
        _render_globals_js__WEBPACK_IMPORTED_MODULE_5__.tilePrepDevice.texParameteri(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.TEXTURE_2D, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.TEXTURE_WRAP_T, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.CLAMP_TO_EDGE);
        _render_globals_js__WEBPACK_IMPORTED_MODULE_5__.tilePrepDevice.texImage2D(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.TEXTURE_2D, 0, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.RGBA, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.RGBA, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.UNSIGNED_BYTE, image);
        _render_globals_js__WEBPACK_IMPORTED_MODULE_5__.tilePrepDevice.texParameteri(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.TEXTURE_2D, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.TEXTURE_MIN_FILTER, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.LINEAR_MIPMAP_NEAREST);
        _render_globals_js__WEBPACK_IMPORTED_MODULE_5__.tilePrepDevice.generateMipmap(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.TEXTURE_2D);
        _render_globals_js__WEBPACK_IMPORTED_MODULE_5__.tilePrepDevice.bindTexture(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.TEXTURE_2D, null);
        PushPin._pinTextureCache[pinId] = texture;
    }
    catch ($e1) { }
    return texture;
};

var PushPin$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("PushPin", [PushPin, PushPin$, null]);


// wwtlib.SpreadSheetLayer

function SpreadSheetLayer() {
    this._dataDirty$1 = false;
    this._lastNormalizeSizeColumnIndex$1 = -1;
    this._lastDynamicColorColumnIndex$1 = -1;
    this._table_backcompat$1 = null;
    this._barChartBitmask$1 = 0;
    this._barScaleFactor$1 = 20;
    this._meanRadius$1 = 6371000;
    this._table$1 = new _table_js__WEBPACK_IMPORTED_MODULE_17__.Table();
    this.isLongIndex = false;
    this.shapeVertexCount = 0;
    this.lines = false;
    this.latColumn = -1;
    this.fixedSize = 1;
    this.decay = 16;
    this.timeSeries = false;
    this._dynamicData$1 = false;
    this._autoUpdate$1 = false;
    this._dataSourceUrl$1 = '';
    this._beginRange$1 = new Date('1/1/2100');
    this._endRange$1 = new Date('01/01/1800');
    this.markerDomainValues = {};
    this.colorDomainValues = {};
    this._coordinatesType$1 = 0;
    this.lngColumn = -1;
    this.geometryColumn = -1;
    this._xAxisColumn$1 = -1;
    this._yAxisColumn$1 = -1;
    this._zAxisColumn$1 = -1;
    this._xAxisReverse$1 = false;
    this._yAxisReverse$1 = false;
    this._zAxisReverse$1 = false;
    this._altType$1 = 3;
    this._markerMix$1 = 0;
    this._raUnits$1 = 0;
    this.colorMap = 3;
    this.colorMapperName = 'Greys';

    // The following attributes control whether and how to map values from
    // the ColorMapColumn to colors. The overall option DynamicColor
    // determines whether colors should be determined on-the-fly from column
    // values. In this case, first, if NormalizeColorMap is true, the values
    // are normalized to the range [0:1] using:
    //
    // new_value = (value - NormalizeColorMapMin) / (NormalizeColorMapMax - NormalizeColorMapMin)
    //
    // Whether or not the values are normalized, they are then mapped to colors using
    // the color map with the name given by ColorMapName.

    // Note that we use a hard-coded UUID since we need it to always be the same across
    // all WWT sessions so that we can remove it when it isn't needed.

    this._dynamicColorColumnName$1 = '2efc32e3-b9d9-47ff-8036-8cc344c585bd';
    this.dynamicColor = false;
    this.normalizeColorMap = false;
    this.normalizeColorMapMin = 0;
    this.normalizeColorMapMax = 1;
    this._markerColumn$1 = -1;
    this.colorMapColumn = -1;
    this._plotType$1 = 0;
    this._markerIndex$1 = 0;
    this._showFarSide$1 = false;
    this._markerScale$1 = 1;
    this._altUnit$1 = 1;
    this._cartesianScale$1 = 1;
    this._cartesianCustomScale$1 = 1;
    this.altColumn = -1;
    this.startDateColumn = -1;
    this.endDateColumn = -1;
    this.sizeColumn = -1;

    // The following attributes control whether the point sizes should be normalized before
    // being used. When NormalizeSize is true, the point sizes are scaled using
    //
    // new_size = (size - NormalizeSizeMin) / (NormalizeSizeMax - NormalizeSizeMin)
    //
    // The NormalizeSizeClip attribute can be used to determine whether the sizes should
    // be clipped to the range [0:1]. At this time, normalization is only applied if
    // PointScaleTypes is Linear or Power.

    // Note that we use a hard-coded UUID since we need it to always be the same across
    // all WWT sessions so that we can remove it when it isn't needed.

    this._normalizeSizeColumnName$1 = 'dfe78b4c-f972-4796-b04f-68c5efd4ecb0';
    this.normalizeSize = false;
    this.normalizeSizeClip = false;
    this.normalizeSizeMin = 0;
    this.normalizeSizeMax = 1;
    this.nameColumn = 0;
    this._hyperlinkFormat$1 = '';
    this._hyperlinkColumn$1 = -1;
    this.scaleFactor = 1;
    this.pointScaleType = 1;
    this.positions = [];
    this.bufferIsFlat = false;
    this.baseDate = new Date(2010, 0, 1, 12, 0, 0);
    this.dirty = true;
    this.lastVersion = 0;
    _layer_js__WEBPACK_IMPORTED_MODULE_16__.Layer.call(this);
}

SpreadSheetLayer._circleTexture$1 = null;

SpreadSheetLayer._getDatafromFeed$1 = function (url) {
    return '';
};

SpreadSheetLayer._executeQuery$1 = function (url) {
    return '';
};

SpreadSheetLayer.parseDate = function (date) {
    var dt = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now();
    try {
        dt = new Date(date);
    }
    catch ($e1) {
        try {
            return SpreadSheetLayer.execlToDateTime(parseFloat(date));
        }
        catch ($e2) {
        }
    }
    return dt;
};

SpreadSheetLayer.execlToDateTime = function (excelDate) {
    if (excelDate > 59) {
        excelDate -= 1;
    }
    if (excelDate > 730000) {
        excelDate = 730000;
    }
    var es = new Date(1899, 12, 31);
    return new Date(es.getDate() + _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((excelDate * 24 * 60 * 60 * 1000)));
};

SpreadSheetLayer.get__circleTexture$1 = function () {
    if (SpreadSheetLayer._circleTexture$1 == null) {
        var url = _url_helpers_js__WEBPACK_IMPORTED_MODULE_14__.URLHelpers.singleton.engineAssetUrl('circle.png');
        SpreadSheetLayer._circleTexture$1 = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_8__.Texture.fromUrl(url);
    }
    return SpreadSheetLayer._circleTexture$1;
};

var SpreadSheetLayer$ = {
    getTypeName: function () {
        return 'TerraViewer.SpreadSheetLayer';
    },

    get_header: function () {
        return this._table$1.header;
    },

    canCopyToClipboard: function () {
        return true;
    },

    copyToClipboard: function () { },

    dynamicUpdate: function () {
        var data = SpreadSheetLayer._getDatafromFeed$1(this.get_dataSourceUrl());
        if (data != null) {
            this.updateData(data, false, true, true);
            this.guessHeaderAssignments();
            return true;
        }
        return false;
    },

    updateData: function (data, purgeOld, purgeAll, hasHeader) {
        this.loadFromString(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(data, String), true, purgeOld, purgeAll, hasHeader);
        this.computeDateDomainRange(-1, -1);
        this._dataDirty$1 = true;
        this.dirty = true;
        return true;
    },

    loadData: function (tourDoc, filename) {
        var $this = this;

        this._table$1 = new _table_js__WEBPACK_IMPORTED_MODULE_17__.Table();
        var blob = tourDoc.getFileBlob(filename);
        this.getStringFromGzipBlob(blob, function (data) {
            $this._table$1.loadFromString(data, false, true, true);

            // The NormalizeSizeColumnName column is only present for backward-compatibility
            // and should be removed in this version of SpreadSheetLayer, otherwise we might
            // keep adding it several times if exporting to XML again.
            if ($this._table$1.header.indexOf($this._normalizeSizeColumnName$1) > -1) {
                $this._table$1.removeColumn($this._normalizeSizeColumnName$1);
            }
            $this.computeDateDomainRange(-1, -1);
            if ($this.get_dynamicData() && $this.get_autoUpdate()) {
                $this.dynamicUpdate();
            }
            $this._dataDirty$1 = true;
            $this.dirty = true;
        });
    },

    addFilesToCabinet: function (fc) {
        this._fileName$1 = fc.tempDirectory + _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0}\\{1}.txt', fc.get_packageID(), this.id.toString());
        var dir = this._fileName$1.substring(0, this._fileName$1.lastIndexOf('\\'));
        var data = '';

        // See PrepareBackCompatTable for an explanation of the
        // circumstances under which table_backcompat is used.
        if (this._table_backcompat$1 == null) {
            data = this._table$1.save();
        } else {
            data = this._table_backcompat$1.save();
        }
        var blob = new Blob([data]);
        fc.addFile(this._fileName$1, blob);
        _layer_js__WEBPACK_IMPORTED_MODULE_16__.Layer.prototype.addFilesToCabinet.call(this, fc);
    },
    _prepareBackCompatTable$1: function () {
        // In this this layer class we implement dynamic normalization of the
        // points based on one of the existing numerical columns. However, we
        // need to produce XML files that are backward-compatible with older
        // versions of WWT, so the approach we take is to add a column with
        // the computed sizes for versions of WWT that can't do the dynamic
        // scaling - while in newer versions we ignore this additional column
        // and use the dynamic scaling.

        // Take a shortcut to avoid copying the table if possible
        if ((this.sizeColumn === -1 || !this.get_normalizeSize()) && (this.colorMapColumn === -1 || !this.get_dynamicColor())) {
            this._lastNormalizeSizeColumnIndex$1 = -1;
            this._lastDynamicColorColumnIndex$1 = -1;
            return;
        }
        this._table_backcompat$1 = this._table$1.clone();
        if (this.sizeColumn > -1 && this.get_normalizeSize()) {
            var normalizedPointSize = [];
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._table_backcompat$1.rows);
            while ($enum1.moveNext()) {
                var row = $enum1.current;
                normalizedPointSize.push(this.normalizePointSize(parseFloat(row[this.sizeColumn])).toString());
            }
            this._table_backcompat$1.addColumn(this._normalizeSizeColumnName$1, normalizedPointSize);
            this._lastNormalizeSizeColumnIndex$1 = this._table_backcompat$1.header.length - 1;
        } else {
            this._lastNormalizeSizeColumnIndex$1 = -1;
        }
        if (this.colorMapColumn > -1 && this.get_dynamicColor()) {
            var pointColors = [];
            var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._table_backcompat$1.rows);
            while ($enum2.moveNext()) {
                var row = $enum2.current;
                pointColors.push(this.get_colorMapper().findClosestColor(this.normalizeColorMapValue(parseFloat(row[this.get_colorMapColumn()]))).toSimpleHex());
            }
            this._table_backcompat$1.addColumn(this._dynamicColorColumnName$1, pointColors);
            this._lastDynamicColorColumnIndex$1 = this._table_backcompat$1.header.length - 1;
        } else {
            this._lastDynamicColorColumnIndex$1 = -1;
        }
    },

    guessHeaderAssignments: function () {
        var index = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._table$1.header);
        while ($enum1.moveNext()) {
            var headerName = $enum1.current;
            this._guessHeaderAssignment$1(headerName, index++);
        }
        if (this._table$1.header.length > 0) {
            this.nameColumn = 0;
        }
    },

    guessHeaderAssignmentsFromVoTable: function (votable) {
        var decColumn = votable.getDecColumn();
        if (decColumn != null) {
            this.latColumn = decColumn.index;
            this.astronomical = true;
        }
        var raColumn = votable.getRAColumn();
        if (raColumn != null) {
            this.lngColumn = raColumn.index;
            this.astronomical = true;
            this.pointScaleType = 4;
        }
        var magColumn = votable.getMagColumn();
        if (magColumn != null) {
            this.sizeColumn = magColumn.index;
        }
        var index = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(votable.column);
        while ($enum1.moveNext()) {
            var column = $enum1.current;
            this._guessHeaderAssignment$1(column.name, index++);
        }
        if (this._table$1.header.length > 0) {
            this.nameColumn = 0;
        }
    },
    _guessHeaderAssignment$1: function (name, index) {
        name = name.toLowerCase();
        if (name.indexOf('lat') > -1 && this.latColumn === -1) {
            this.latColumn = index;
        }
        if ((name.indexOf('lon') > -1 || name.indexOf('lng') > -1) && this.lngColumn === -1) {
            this.lngColumn = index;
        }
        if (name.indexOf('dec') > -1 && this.latColumn === -1) {
            this.latColumn = index;
            this.astronomical = true;
        }
        if ((name.indexOf('ra') > -1 || name.indexOf('ascen') > -1) && this.lngColumn === -1) {
            this.lngColumn = index;
            this.astronomical = true;
            this.pointScaleType = 4;
        }
        if ((name.indexOf('mag') > -1 || name.indexOf('size') > -1) && this.sizeColumn === -1) {
            this.sizeColumn = index;
        }
        if ((name.indexOf('date') > -1 || name.indexOf('time') > -1 || name.indexOf('dt') > -1 || name.indexOf('tm') > -1)) {
            if (name.indexOf('end') > -1 && this.endDateColumn === -1) {
                this.endDateColumn = index;
            }
            else if (this.startDateColumn === -1) {
                this.startDateColumn = index;
            }
        }
        if ((name.indexOf('altitude') > -1 || name.indexOf('alt') > -1) && this.altColumn === -1) {
            this.altColumn = index;
            this.set_altType(1);
            this.set_altUnit(1);
        }
        if (name.indexOf('depth') > -1 && this.altColumn === -1) {
            this.altColumn = index;
            this.set_altType(0);
            this.set_altUnit(5);
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.startsWith(name, 'x') && this.get_xAxisColumn() === -1) {
            this.set_xAxisColumn(index);
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.startsWith(name, 'y') && this.get_yAxisColumn() === -1) {
            this.set_yAxisColumn(index);
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.startsWith(name, 'z') && this.get_zAxisColumn() === -1) {
            this.set_zAxisColumn(index);
        }
        if (name.indexOf('color') > -1 && this.get_colorMapColumn() === -1) {
            this.set_colorMapColumn(index);
        }
        if ((name.indexOf('geometry') > -1 || name.indexOf('geography') > -1) && this.geometryColumn === -1) {
            this.geometryColumn = index;
        }
    },

    computeDateDomainRange: function (columnStart, columnEnd) {
        if (columnStart === -1) {
            columnStart = this.startDateColumn;
        }
        if (columnEnd === -1) {
            columnEnd = this.endDateColumn;
        }
        if (columnEnd === -1) {
            columnEnd = columnStart;
        }
        this.set_beginRange(new Date('12/31/2100'));
        this.set_endRange(new Date('12/31/1890'));
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._table$1.rows);
        while ($enum1.moveNext()) {
            var row = $enum1.current;
            try {
                if (columnStart > -1) {
                    var sucsess = true;
                    var dateTimeStart = new Date('12/31/2100');
                    try {
                        dateTimeStart = new Date(row[columnStart]);
                        if (dateTimeStart < this.get_beginRange()) {
                            this.set_beginRange(dateTimeStart);
                        }
                    }
                    catch ($e2) {
                    }
                    try {
                        var dateTimeEnd = new Date('12/31/1890');
                        if (columnEnd > -1) {
                            dateTimeEnd = new Date(row[columnEnd]);
                            if (sucsess && dateTimeEnd > this.get_endRange()) {
                                this.set_endRange(dateTimeEnd);
                            }
                        }
                    }
                    catch ($e3) {
                    }
                }
            }
            catch ($e4) {
            }
        }
    },

    checkState: function () { },

    getMaxValue: function (column) {
        var max = 0;
        this._table$1.lock();
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._table$1.rows);
        while ($enum1.moveNext()) {
            var row = $enum1.current;
            try {
                if (column > -1) {
                    var sucsess = true;
                    try {
                        var val = parseFloat(row[column]);
                        if (sucsess && val > max) {
                            max = val;
                        }
                    }
                    catch ($e2) {
                    }
                }
            }
            catch ($e3) {
            }
        }
        this._table$1.unlock();
        return max;
    },

    getDomainValues: function (column) {
        var domainValues = [];
        this._table$1.lock();
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._table$1.rows);
        while ($enum1.moveNext()) {
            var row = $enum1.current;
            try {
                if (column > -1) {
                    if (!(domainValues.indexOf(row[column]) >= 0)) {
                        domainValues.push(row[column]);
                    }
                }
            }
            catch ($e2) {
            }
        }
        domainValues.sort();
        this._table$1.unlock();
        return domainValues;
    },

    get_barChartBitmask: function () {
        return this._barChartBitmask$1;
    },

    set_barChartBitmask: function (value) {
        this._barChartBitmask$1 = value;
        return value;
    },
    _isPointInFrustum$1: function (position, frustum) {
        var centerV4 = new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector4d(position.x, position.y, position.z, 1);
        for (var i = 0; i < 6; i++) {
            if (frustum[i].dot(centerV4) < 0) {
                return false;
            }
        }
        return true;
    },

    getTableDataInView: function () {
        var data = '';
        var first = true;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.get_header());
        while ($enum1.moveNext()) {
            var col = $enum1.current;
            if (!first) {
                data += '\t';
            }
            else {
                first = false;
            }
            data += col;
        }
        data += '\r\n';
        var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.get__table().rows);
        while ($enum2.moveNext()) {
            var row = $enum2.current;
            var ra = parseFloat(row[this.get_lngColumn()]);
            var dec = parseFloat(row[this.get_latColumn()]);
            var position = _coordinates_js__WEBPACK_IMPORTED_MODULE_11__.Coordinates.geoTo3dDouble(dec, ra);
            if (!this._isPointInFrustum$1(position, _render_globals_js__WEBPACK_IMPORTED_MODULE_5__.globalRenderContext.get_frustum())) {
                continue;
            }
            first = true;
            var $enum3 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(row);
            while ($enum3.moveNext()) {
                var col = $enum3.current;
                if (!first) {
                    data += '\t';
                }
                else {
                    first = false;
                }
                data += col;
            }
            data += '\r\n';
        }
        return data;
    },

    prepVertexBuffer: function (renderContext, opacity) {
        this._table$1.lock();
        if (this.lineList != null) {
            this.lineList.clear();
        }
        if (this.lineList2d != null) {
            this.lineList2d.clear();
        }
        if (this.triangleList != null) {
            this.triangleList.clear();
        }
        if (this.pointList != null) {
            this.pointList.clear();
        }
        if (this.triangleList2d != null) {
            this.triangleList2d.clear();
        }
        if (this.lineList == null) {
            this.lineList = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__.LineList();
        }
        if (this.pointList == null) {
            this.pointList = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__.PointList(renderContext);
        }
        this.lineList.timeSeries = this.timeSeries;
        if (this.lineList2d == null) {
            this.lineList2d = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__.LineList();
            this.lineList2d.set_depthBuffered(false);
        }
        this.lineList.timeSeries = this.timeSeries;
        if (this.triangleList == null) {
            this.triangleList = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__.TriangleList();
        }
        if (this.triangleList2d == null) {
            this.triangleList2d = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__.TriangleList();
            this.triangleList2d.depthBuffered = false;
        }
        this.positions.length = 0;
        var currentIndex = 0;
        var colorLocal = this.get_color();

        // for space 3d
        var ecliptic = _coordinates_js__WEBPACK_IMPORTED_MODULE_11__.Coordinates.meanObliquityOfEcliptic(_space_time_controller_js__WEBPACK_IMPORTED_MODULE_12__.SpaceTimeController.get_jNow()) / 180 * Math.PI;
        var selectDomain = {};
        var mr = (0,_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.layerManagerGetAllMaps)()[this.get_referenceFrame()].frame.meanRadius;
        if (!!mr) {
            this._meanRadius$1 = mr;
        }
        var position = new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d();
        var pointSize = 0.0002;
        var pointColor = _color_js__WEBPACK_IMPORTED_MODULE_10__.Colors.get_white();
        var pointStartTime = 0;
        var pointEndTime = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._table$1.rows);
        while ($enum1.moveNext()) {
            var row = $enum1.current;
            try {
                if (this.geometryColumn > -1 || (!this.get_coordinatesType() && (this.lngColumn > -1 && this.latColumn > -1)) || ((this.get_coordinatesType() === 1) && (this.get_xAxisColumn() > -1 && this.get_yAxisColumn() > -1))) {
                    var Xcoord = 0;
                    var Ycoord = 0;
                    var Zcoord = 0;
                    var alt = 1;
                    var altitude = 0;
                    var distParces = 0;
                    var factor = this.getScaleFactor(this.get_altUnit(), 1);
                    if (this.altColumn === -1 || this.get_altType() === 3 || this.bufferIsFlat) {
                        alt = 1;
                        if ((this.astronomical & !this.bufferIsFlat) === 1) {
                            alt = 63239.6717 * 100;
                        }
                    }
                    else {
                        if (!this.get_altType()) {
                            factor = -factor;
                        }
                        alt = 0;
                        try {
                            alt = parseFloat(row[this.altColumn]);
                        }
                        catch ($e2) {
                        }
                        if (this.astronomical) {
                            factor = factor / (1000 * 149598000);
                            distParces = (alt * factor) / 206264.806;
                            altitude = (factor * alt);
                            alt = (factor * alt);
                        }
                        else if (this.get_altType() === 2) {
                            altitude = (factor * alt);
                            alt = (factor * alt / this._meanRadius$1);
                        }
                        else {
                            altitude = (factor * alt);
                            alt = 1 + (factor * alt / this._meanRadius$1);
                        }
                    }
                    if (!this.get_coordinatesType() && this.lngColumn > -1 && this.latColumn > -1) {
                        Xcoord = parseFloat(row[this.lngColumn]);
                        Ycoord = parseFloat(row[this.latColumn]);
                        if (this.astronomical) {
                            if (!this.get_raUnits()) {
                                Xcoord *= 15;
                            }
                            if (this.bufferIsFlat) {
                            }
                        }
                        else {
                            Xcoord += 180;
                        }
                        var pos = _coordinates_js__WEBPACK_IMPORTED_MODULE_11__.Coordinates.geoTo3dRad(Ycoord, Xcoord, alt);
                        if (this.astronomical && !this.bufferIsFlat) {
                            pos.rotateX(ecliptic);
                        }
                        position = pos;
                        this.positions.push(position);
                    }
                    else if (this.get_coordinatesType() === 1) {
                        var xyzScale = this.getScaleFactor(this.get_cartesianScale(), this.get_cartesianCustomScale());
                        if (this.astronomical) {
                            xyzScale /= (1000 * 149598000);
                        }
                        else {
                            xyzScale /= this._meanRadius$1;
                        }
                        if (this.get_zAxisColumn() > -1) {
                            Zcoord = parseFloat(row[this.get_zAxisColumn()]);
                        }
                        Xcoord = parseFloat(row[this.get_xAxisColumn()]);
                        Ycoord = parseFloat(row[this.get_yAxisColumn()]);
                        if (this.get_xAxisReverse()) {
                            Xcoord = -Xcoord;
                        }
                        if (this.get_yAxisReverse()) {
                            Ycoord = -Ycoord;
                        }
                        if (this.get_zAxisReverse()) {
                            Zcoord = -Zcoord;
                        }
                        position = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create((Xcoord * xyzScale), (Zcoord * xyzScale), (Ycoord * xyzScale));
                        this.positions.push(position);
                    }
                    switch (this.get_colorMap()) {
                        case 0:
                            pointColor = colorLocal;
                            break;
                        case 3:
                            if (this.get_colorMapColumn() > -1) {
                                if (this.get_dynamicColor()) {
                                    pointColor = this.get_colorMapper().findClosestColor(this.normalizeColorMapValue(parseFloat(row[this.get_colorMapColumn()])));
                                }
                                else {
                                    pointColor = this._parseColor$1(row[this.get_colorMapColumn()], colorLocal);
                                }
                            }
                            else {
                                pointColor = colorLocal;
                            }
                            break;
                        default:
                            break;
                    }
                    if (pointColor == null) {
                        pointColor = _color_js__WEBPACK_IMPORTED_MODULE_10__.Colors.get_transparent();
                    }
                    if (this.sizeColumn > -1) {
                        switch (this.pointScaleType) {
                            case 0:
                                pointSize = parseFloat(row[this.sizeColumn]);
                                pointSize = this.normalizePointSize(pointSize);
                                break;
                            case 2:
                                pointSize = parseFloat(row[this.sizeColumn]);
                                pointSize = Math.log(pointSize);
                                break;
                            case 1:
                                try {
                                    pointSize = parseFloat(row[this.sizeColumn]);
                                    pointSize = this.normalizePointSize(pointSize);
                                    pointSize = Math.pow(2, pointSize);
                                }
                                catch ($e3) {
                                    pointSize = 0;
                                }
                                break;
                            case 4:
                                var size = 0;
                                try {
                                    size = parseFloat(row[this.sizeColumn]);
                                    if (!this.bufferIsFlat) {
                                        size = size - 5 * (_baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.logN(distParces, 10) - 1);
                                        pointSize = (120000000 / Math.pow(1.6, size));
                                    }
                                    else {
                                        pointSize = (40 / Math.pow(1.6, size));
                                    }
                                }
                                catch ($e4) {
                                    pointSize = 0;
                                }
                                break;
                            case 3:
                                pointSize = 1;
                                break;
                            default:
                                break;
                        }
                    }
                    else {
                        pointSize = 0.2;
                    }
                    if (this.get_plotType() === 1) {
                        pointSize = 1;
                    }
                    if ((this.astronomical & !this.bufferIsFlat) === 1) {
                    }
                    if (this.startDateColumn > -1) {
                        var dateTime = new Date(row[this.startDateColumn]);
                        pointStartTime = (_space_time_controller_js__WEBPACK_IMPORTED_MODULE_12__.SpaceTimeController.utcToJulian(dateTime) - _space_time_controller_js__WEBPACK_IMPORTED_MODULE_12__.SpaceTimeController.utcToJulian(this.baseDate));
                        if (this.endDateColumn > -1) {
                            dateTime = new Date(row[this.endDateColumn]);
                            pointEndTime = (_space_time_controller_js__WEBPACK_IMPORTED_MODULE_12__.SpaceTimeController.utcToJulian(dateTime) - _space_time_controller_js__WEBPACK_IMPORTED_MODULE_12__.SpaceTimeController.utcToJulian(this.baseDate));
                        }
                        else {
                            pointEndTime = pointStartTime;
                        }
                    }
                    this.pointList.addPoint(position, pointColor, new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__.Dates(pointStartTime, pointEndTime), pointSize);
                    if (this.geometryColumn > -1) {
                        this._parseGeometry$1(row[this.geometryColumn], pointColor, pointColor, altitude, new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_7__.Dates(pointStartTime, pointEndTime));
                    }
                    currentIndex++;
                }
            }
            catch ($e5) {
            }
            this.lines = false;
        }
        this._table$1.unlock();
        this._dataDirty$1 = false;
        this.dirty = false;
        return false;
    },
    _parseGeometry$1: function (gs, lineColor, polyColor, alt, date) {
        gs = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(gs).toLowerCase();
        var index = gs.indexOf('(');
        if (index < 0) {
            return;
        }
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.endsWith(gs, ')')) {
            return;
        }
        var commandPart = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(gs.substring(0, index));
        var parens = gs.substr(index);
        var parts = commandPart.split(' ');
        var command = null;
        var mods = null;
        if (parts.length > 0) {
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(parts);
            while ($enum1.moveNext()) {
                var item = $enum1.current;
                if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(command)) {
                    command = item;
                }
                else if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(mods)) {
                    mods = item;
                }
            }
        }
        switch (command) {
            case 'multipolygon':
            case 'polygon':
                this._parsePolygon$1(parens, mods, lineColor, polyColor, alt, date);
                break;
            case 'multilinestring':
                this._parseLineString$1(parens, mods, lineColor, alt, false, date);
                break;
            case 'linestring':
                this._parseLineString$1(parens, mods, lineColor, alt, true, date);
                break;
            case 'geometrycollection':
                parens = parens.substring(1, parens.length - 2);
                var shapes = _ui_tools_js__WEBPACK_IMPORTED_MODULE_13__.UiTools.splitString(parens, ',');
                var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(shapes);
                while ($enum2.moveNext()) {
                    var shape = $enum2.current;
                    this._parseGeometry$1(shape, lineColor, polyColor, alt, date);
                }
                break;
            default:
                break;
        }
    },
    _parsePolygon$1: function (parens, mods, lineColor, polyColor, alt, date) {
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.startsWith(parens, '(') && _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.endsWith(parens, ')')) {
            return;
        }

        // string the top level of parens
        parens = parens.substring(1, parens.length - 2);
        var shapes = _ui_tools_js__WEBPACK_IMPORTED_MODULE_13__.UiTools.splitString(parens, ',');
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(shapes);
        while ($enum1.moveNext()) {
            var shape = $enum1.current;
            var lineList = new KmlLineList();
            lineList.astronomical = this.astronomical;
            lineList.meanRadius = this._meanRadius$1;
            lineList.parseWkt(shape, mods, alt, date);
            if (!alt) {
                this._addPolygonFlat$1(false, lineList, 1, polyColor, lineColor, true, true, date);
            }
            else {
                this._addPolygon$1(false, lineList, 1, polyColor, lineColor, true, true, date);
            }
        }
    },
    _parseLineString$1: function (parens, mods, lineColor, alt, single, date) {
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.startsWith(parens, '(') && _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.endsWith(parens, ')')) {
            return;
        }
        if (!single) {
            // string the top level of parens
            parens = parens.substring(1, parens.length - 2);
        }
        var shapes = _ui_tools_js__WEBPACK_IMPORTED_MODULE_13__.UiTools.splitString(parens, ',');
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(shapes);
        while ($enum1.moveNext()) {
            var shape = $enum1.current;
            var lineList = new KmlLineList();
            lineList.astronomical = this.astronomical;
            lineList.meanRadius = this._meanRadius$1;
            lineList.parseWkt(shape, mods, alt, date);
            this._addPolygon$1(false, lineList, 1, _color_js__WEBPACK_IMPORTED_MODULE_10__.Colors.get_white(), lineColor, false, false, date);
        }
    },
    _splitShapes$1: function (shapes) {
        var shapeList = [];
        var nesting = 0;
        var current = 0;
        while (current < shapes.length) {
            if (shapes.substr(current, 1) === '(') {
                nesting++;
            }
        }
        return shapeList;
    },
    _addPolygon$1: function (sky, geo, lineWidth, polyColor, lineColor, extrude, fill, date) {
        //todo can we save this work for later?
        var vertexList = [];
        var vertexListGround = [];
        for (var i = 0; i < geo.pointList.length; i++) {
            vertexList.push(_coordinates_js__WEBPACK_IMPORTED_MODULE_11__.Coordinates.geoTo3dRad(geo.pointList[i].lat, geo.pointList[i].lng, 1 + (geo.pointList[i].alt / this._meanRadius$1)));
            vertexListGround.push(_coordinates_js__WEBPACK_IMPORTED_MODULE_11__.Coordinates.geoTo3dRad(geo.pointList[i].lat, geo.pointList[i].lng, 1));
        }
        for (var i = 0; i < (geo.pointList.length - 1); i++) {
            if (sky) {
                // todo reenable this
            }
            else {
                if (extrude) {
                    this.triangleList.addQuad(vertexList[i], vertexList[i + 1], vertexListGround[i], vertexListGround[i + 1], polyColor, date);
                }
                if (lineWidth > 0) {
                    if (extrude) {
                        this.lineList.addLine(vertexList[i], vertexList[i + 1], lineColor, date);
                    }
                    else {
                        this.lineList2d.addLine(vertexList[i], vertexList[i + 1], lineColor, date);
                    }
                    if (extrude) {
                        this.lineList.addLine(vertexListGround[i], vertexListGround[i + 1], lineColor, date);
                        this.lineList.addLine(vertexList[i], vertexListGround[i], lineColor, date);
                        this.lineList.addLine(vertexList[i + 1], vertexListGround[i + 1], lineColor, date);
                    }
                }
            }
        }
        if (fill) {
            var indexes = _graphics_tessellator_js__WEBPACK_IMPORTED_MODULE_9__.Tessellator.tesselateSimplePoly(vertexList);
            for (var i = 0; i < indexes.length; i += 3) {
                this.triangleList.addTriangle(vertexList[indexes[i]], vertexList[indexes[i + 1]], vertexList[indexes[i + 2]], polyColor, date);
            }
        }
    },
    _addPolygonFlat$1: function (sky, geo, lineWidth, polyColor, lineColor, extrude, fill, date) {
        var vertexList = [];
        for (var i = 0; i < geo.pointList.length; i++) {
            vertexList.push(_coordinates_js__WEBPACK_IMPORTED_MODULE_11__.Coordinates.geoTo3dRad(geo.pointList[i].lat, geo.pointList[i].lng, 1 + (geo.pointList[i].alt / this._meanRadius$1)));
        }
        for (var i = 0; i < (geo.pointList.length - 1); i++) {
            if (sky) {
            }
            else {
                if (lineWidth > 0) {
                    this.lineList2d.addLine(vertexList[i], vertexList[i + 1], lineColor, date);
                }
            }
        }
        if (fill) {
            var indexes = _graphics_tessellator_js__WEBPACK_IMPORTED_MODULE_9__.Tessellator.tesselateSimplePoly(vertexList);
            for (var i = 0; i < indexes.length; i += 3) {
                this.triangleList2d.addSubdividedTriangles(vertexList[indexes[i]], vertexList[indexes[i + 1]], vertexList[indexes[i + 2]], polyColor, date, 2);
            }
        }
    },
    _parseColor$1: function (colorText, defaultColor) {
        return _color_js__WEBPACK_IMPORTED_MODULE_10__.Color.load(colorText);
    },

    getScaleFactor: function (AltUnit, custom) {
        var factor = 1;
        switch (AltUnit) {
            case 1:
                factor = 1;
                break;
            case 2:
                factor = 1 * 0.3048;
                break;
            case 3:
                factor = (1 / 12) * 0.3048;
                break;
            case 4:
                factor = 5280 * 0.3048;
                break;
            case 5:
                factor = 1000;
                break;
            case 6:
                factor = 1000 * 149598000;
                break;
            case 7:
                factor = 1000 * 149598000 * 63239.6717;
                break;
            case 8:
                factor = 1000 * 149598000 * 206264.806;
                break;
            case 9:
                factor = 1000 * 149598000 * 206264.806 * 1000000;
                break;
            case 10:
                factor = custom;
                break;
            default:
                break;
        }
        return factor;
    },

    get__table: function () {
        return this._table$1;
    },

    set__table: function (value) {
        this._table$1 = value;
        return value;
    },

    useHeadersFromVoTable: function (voTable) {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(voTable.column);
        while ($enum1.moveNext()) {
            var column = $enum1.current;
            this.get_header().push(column.name);
        }
        this.guessHeaderAssignmentsFromVoTable(voTable);
        if (voTable.getRAColumn() != null && voTable.getRAColumn().unit.toLowerCase() === 'deg') {
            this.set_raUnits(1);
        }
    },

    loadFromString: function (data, isUpdate, purgeOld, purgeAll, hasHeader) {
        if (!isUpdate) {
            this._table$1 = new _table_js__WEBPACK_IMPORTED_MODULE_17__.Table();
        }
        this._table$1.lock();
        this._table$1.loadFromString(data, isUpdate, purgeAll, hasHeader);
        if (!isUpdate) {
            this.guessHeaderAssignments();
            if (this.astronomical && this.lngColumn > -1) {
                var max = this.getMaxValue(this.lngColumn);
                if (max > 24) {
                    this.set_raUnits(1);
                }
            }
        }
        if (purgeOld) {
            this.purgeByTime();
        }
        this._table$1.unlock();
    },

    purgeByTime: function () {
        if (this.startDateColumn < 0) {
            return;
        }
        var columnToUse = this.startDateColumn;
        if (this.endDateColumn > -1) {
            columnToUse = this.endDateColumn;
        }
        var threasholdTime = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_12__.SpaceTimeController.get_now();
        var ts = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(this.decay) * 24 * 60 * 60 * 1000;
        threasholdTime = new Date(threasholdTime.getDate() - ts);
        var count = this._table$1.rows.length;
        for (var i = 0; i < count; i++) {
            try {
                var row = this._table$1.rows[i];
                var colDate = new Date(row[columnToUse]);
                if (colDate < threasholdTime) {
                    this._table$1.rows.splice(i, 1);
                    count--;
                    i--;
                }
            }
            catch ($e1) {
            }
        }
    },

    cleanUp: function () {
        this.cleanUpBase();
        this._table$1.lock();
        _layer_js__WEBPACK_IMPORTED_MODULE_16__.Layer.prototype.cleanUp.call(this);
        this._table$1.unlock();
        this.dirty = true;
    },

    writeLayerProperties: function (xmlWriter) {
        xmlWriter._writeAttributeString('TimeSeries', this.get_timeSeries().toString());
        xmlWriter._writeAttributeString('BeginRange', _baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.xmlDate(this.get_beginRange()));
        xmlWriter._writeAttributeString('EndRange', _baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.xmlDate(this.get_endRange()));
        xmlWriter._writeAttributeString('Decay', this.get_decay().toString());
        xmlWriter._writeAttributeString('CoordinatesType', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('CoordinatesTypes', this.get_coordinatesType()));
        xmlWriter._writeAttributeString('LatColumn', this.get_latColumn().toString());
        xmlWriter._writeAttributeString('LngColumn', this.get_lngColumn().toString());
        xmlWriter._writeAttributeString('GeometryColumn', this.get_geometryColumn().toString());
        xmlWriter._writeAttributeString('AltType', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('AltTypes', this.get_altType()));
        xmlWriter._writeAttributeString('MarkerMix', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('MarkerMixes', this.get_markerMix()));
        xmlWriter._writeAttributeString('ColorMap', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('ColorMaps', this.get_colorMap()));
        xmlWriter._writeAttributeString('MarkerColumn', this.get_markerColumn().toString());
        xmlWriter._writeAttributeString('PlotType', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('PlotTypes', this.get_plotType()));
        xmlWriter._writeAttributeString('MarkerIndex', this.get_markerIndex().toString());
        xmlWriter._writeAttributeString('MarkerScale', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('MarkerScales', this.get_markerScale()));
        xmlWriter._writeAttributeString('AltUnit', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('AltUnits', this.get_altUnit()));
        xmlWriter._writeAttributeString('AltColumn', this.get_altColumn().toString());
        xmlWriter._writeAttributeString('StartDateColumn', this.get_startDateColumn().toString());
        xmlWriter._writeAttributeString('EndDateColumn', this.get_endDateColumn().toString());

        // In this layer class we implement dynamic scaling and coloring of the points
        // based on one of the existing numerical columns. However, we need to produce
        // XML files that are backward-compatible with older versions of WWT. If
        // dynamic scaling/coloring is used, we therefore point sizeColumn and/or
        // colorMapColumn to the hard-coded sizes/colors, and then if we detect
        // normalization arguments when reading in the XML, we switch sizeColumn
        // and/or colorMapColumn to the original one.

        // Note that we need to call this here since WriteLayerProperties
        // gets called before AddFilesToCabinet.
        this._prepareBackCompatTable$1();
        if (this._lastNormalizeSizeColumnIndex$1 > -1) {
            xmlWriter._writeAttributeString('SizeColumn', this._lastNormalizeSizeColumnIndex$1);
            xmlWriter._writeAttributeString('NormalizeSizeColumn', this.sizeColumn.toString());
        } else {
            xmlWriter._writeAttributeString('SizeColumn', this.get_sizeColumn().toString());
        }
        xmlWriter._writeAttributeString('NormalizeSize', this.get_normalizeSize().toString());
        xmlWriter._writeAttributeString('NormalizeSizeClip', this.get_normalizeSizeClip().toString());
        xmlWriter._writeAttributeString('NormalizeSizeMin', this.get_normalizeSizeMin().toString());
        xmlWriter._writeAttributeString('NormalizeSizeMax', this.get_normalizeSizeMax().toString());
        if (this._lastDynamicColorColumnIndex$1 > -1) {
            xmlWriter._writeAttributeString('ColorMapColumn', this._lastDynamicColorColumnIndex$1);
            xmlWriter._writeAttributeString('DynamicColorColumn', this.get_colorMapColumn().toString());
        } else {
            xmlWriter._writeAttributeString('ColorMapColumn', this.get_colorMapColumn().toString());
        }
        xmlWriter._writeAttributeString('DynamicColor', this.get_dynamicColor().toString());
        xmlWriter._writeAttributeString('ColorMapperName', this.get_colorMapperName());
        xmlWriter._writeAttributeString('NormalizeColorMap', this.get_normalizeColorMap().toString());
        xmlWriter._writeAttributeString('NormalizeColorMapMin', this.get_normalizeColorMapMin().toString());
        xmlWriter._writeAttributeString('NormalizeColorMapMax', this.get_normalizeColorMapMax().toString());
        xmlWriter._writeAttributeString('HyperlinkFormat', this.get_hyperlinkFormat());
        xmlWriter._writeAttributeString('HyperlinkColumn', this.get_hyperlinkColumn().toString());
        xmlWriter._writeAttributeString('ScaleFactor', this.get_scaleFactor().toString());
        xmlWriter._writeAttributeString('PointScaleType', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('PointScaleTypes', this.get_pointScaleType()));
        xmlWriter._writeAttributeString('ShowFarSide', this.get_showFarSide().toString());
        xmlWriter._writeAttributeString('RaUnits', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('RAUnits', this.get_raUnits()));
        xmlWriter._writeAttributeString('HoverTextColumn', this.get_nameColumn().toString());
        xmlWriter._writeAttributeString('XAxisColumn', this.get_xAxisColumn().toString());
        xmlWriter._writeAttributeString('XAxisReverse', this.get_xAxisReverse().toString());
        xmlWriter._writeAttributeString('YAxisColumn', this.get_yAxisColumn().toString());
        xmlWriter._writeAttributeString('YAxisReverse', this.get_yAxisReverse().toString());
        xmlWriter._writeAttributeString('ZAxisColumn', this.get_zAxisColumn().toString());
        xmlWriter._writeAttributeString('ZAxisReverse', this.get_zAxisReverse().toString());
        xmlWriter._writeAttributeString('CartesianScale', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('AltUnits', this.get_cartesianScale()));
        xmlWriter._writeAttributeString('CartesianCustomScale', this.get_cartesianCustomScale().toString());
        xmlWriter._writeAttributeString('DynamicData', this.get_dynamicData().toString());
        xmlWriter._writeAttributeString('AutoUpdate', this.get_autoUpdate().toString());
        xmlWriter._writeAttributeString('DataSourceUrl', this.get_dataSourceUrl());
    },

    get_dynamicData: function () {
        return this._dynamicData$1;
    },

    set_dynamicData: function (value) {
        this._dynamicData$1 = value;
        return value;
    },

    get_autoUpdate: function () {
        return this._autoUpdate$1;
    },

    set_autoUpdate: function (value) {
        this._autoUpdate$1 = value;
        return value;
    },

    get_dataSourceUrl: function () {
        return this._dataSourceUrl$1;
    },

    set_dataSourceUrl: function (value) {
        this._dataSourceUrl$1 = value;
        return value;
    },

    get_timeSeries: function () {
        return this.timeSeries;
    },

    set_timeSeries: function (value) {
        if (this.timeSeries !== value) {
            this.version++;
            this.timeSeries = value;
        }
        return value;
    },

    get_beginRange: function () {
        return this._beginRange$1;
    },

    set_beginRange: function (value) {
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.compareDates(this._beginRange$1, value)) {
            this.version++;
            this._beginRange$1 = value;
        }
        return value;
    },

    get_endRange: function () {
        return this._endRange$1;
    },

    set_endRange: function (value) {
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.compareDates(this._endRange$1, value)) {
            this.version++;
            this._endRange$1 = value;
        }
        return value;
    },

    initializeFromXml: function (node) {
        this.set_timeSeries(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('TimeSeries').nodeValue));
        this.set_beginRange(new Date(node.attributes.getNamedItem('BeginRange').nodeValue));
        this.set_endRange(new Date(node.attributes.getNamedItem('EndRange').nodeValue));
        this.set_decay(parseFloat(node.attributes.getNamedItem('Decay').nodeValue));
        this.set_coordinatesType(_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('CoordinatesTypes', node.attributes.getNamedItem('CoordinatesType').nodeValue));
        if (this.get_coordinatesType() < 0) {
            this.set_coordinatesType(0);
        }
        this.set_latColumn(parseInt(node.attributes.getNamedItem('LatColumn').nodeValue));
        this.set_lngColumn(parseInt(node.attributes.getNamedItem('LngColumn').nodeValue));
        if (node.attributes.getNamedItem('GeometryColumn') != null) {
            this.set_geometryColumn(parseInt(node.attributes.getNamedItem('GeometryColumn').nodeValue));
        }
        this.set_altType(_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('AltTypes', node.attributes.getNamedItem('AltType').nodeValue));
        this.set_markerMix(0);
        this.set_colorMap(_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('ColorMaps', node.attributes.getNamedItem('ColorMap').nodeValue));
        this.set_markerColumn(parseInt(node.attributes.getNamedItem('MarkerColumn').nodeValue));
        this.set_colorMapColumn(parseInt(node.attributes.getNamedItem('ColorMapColumn').nodeValue));
        this.set_plotType(_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('PlotTypes', node.attributes.getNamedItem('PlotType').nodeValue));
        this.set_markerIndex(parseInt(node.attributes.getNamedItem('MarkerIndex').nodeValue));
        this.set_markerScale(_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('MarkerScales', node.attributes.getNamedItem('MarkerScale').nodeValue));
        this.set_altUnit(_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('AltUnits', node.attributes.getNamedItem('AltUnit').nodeValue));
        this.set_altColumn(parseInt(node.attributes.getNamedItem('AltColumn').nodeValue));
        this.set_startDateColumn(parseInt(node.attributes.getNamedItem('StartDateColumn').nodeValue));
        this.set_endDateColumn(parseInt(node.attributes.getNamedItem('EndDateColumn').nodeValue));

        // In this layer class we implement dynamic scaling and coloring of the points
        // based on one of the existing numerical columns. However, we need to produce
        // XML files that are backward-compatible with older versions of WWT. Since we
        // can deal with size/color scaling here, we ignore SizeColumn and ColorMapColumn
        // and use NormalizeSizeColumn and DynamicColorColumn instead, if present.

        if (node.attributes.getNamedItem('NormalizeSizeColumn') != null) {
            this.set_sizeColumn(parseInt(node.attributes.getNamedItem('NormalizeSizeColumn').nodeValue));
        } else {
            this.set_sizeColumn(parseInt(node.attributes.getNamedItem('SizeColumn').nodeValue));
        }

        // Only recent files have normalization parameters

        if (node.attributes.getNamedItem('NormalizeSize') != null) {
            this.set_normalizeSize(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('NormalizeSize').nodeValue));
            this.set_normalizeSizeClip(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('NormalizeSizeClip').nodeValue));
            this.set_normalizeSizeMin(parseFloat(node.attributes.getNamedItem('NormalizeSizeMin').nodeValue));
            this.set_normalizeSizeMax(parseFloat(node.attributes.getNamedItem('NormalizeSizeMax').nodeValue));
        }
        if (node.attributes.getNamedItem('DynamicColorColumn') != null) {
            this.set_colorMapColumn(parseInt(node.attributes.getNamedItem('DynamicColorColumn').nodeValue));
        } else {
            this.set_colorMapColumn(parseInt(node.attributes.getNamedItem('ColorMapColumn').nodeValue));
        }

        // Only recent files have normalization parameters

        if (node.attributes.getNamedItem('DynamicColor') != null) {
            this.set_dynamicColor(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('DynamicColor').nodeValue));
            this.set_colorMapperName(node.attributes.getNamedItem('ColorMapperName').nodeValue);
            this.set_normalizeColorMap(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('NormalizeColorMap').nodeValue));
            this.set_normalizeColorMapMin(parseFloat(node.attributes.getNamedItem('NormalizeColorMapMin').nodeValue));
            this.set_normalizeColorMapMax(parseFloat(node.attributes.getNamedItem('NormalizeColorMapMax').nodeValue));
        }
        this.set_hyperlinkFormat(node.attributes.getNamedItem('HyperlinkFormat').nodeValue);
        this.set_hyperlinkColumn(parseInt(node.attributes.getNamedItem('HyperlinkColumn').nodeValue));
        this.set_scaleFactor(parseFloat(node.attributes.getNamedItem('ScaleFactor').nodeValue));
        this.set_pointScaleType(_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('PointScaleTypes', node.attributes.getNamedItem('PointScaleType').nodeValue));
        if (node.attributes.getNamedItem('ShowFarSide') != null) {
            this.set_showFarSide(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('ShowFarSide').nodeValue));
        }
        if (node.attributes.getNamedItem('RaUnits') != null) {
            this.set_raUnits(_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('RAUnits', node.attributes.getNamedItem('RaUnits').nodeValue));
        }
        if (node.attributes.getNamedItem('HoverTextColumn') != null) {
            this.set_nameColumn(parseInt(node.attributes.getNamedItem('HoverTextColumn').nodeValue));
        }
        if (node.attributes.getNamedItem('XAxisColumn') != null) {
            this.set_xAxisColumn(parseInt(node.attributes.getNamedItem('XAxisColumn').nodeValue));
            this.set_xAxisReverse(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('XAxisReverse').nodeValue));
            this.set_yAxisColumn(parseInt(node.attributes.getNamedItem('YAxisColumn').nodeValue));
            this.set_yAxisReverse(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('YAxisReverse').nodeValue));
            this.set_zAxisColumn(parseInt(node.attributes.getNamedItem('ZAxisColumn').nodeValue));
            this.set_zAxisReverse(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('ZAxisReverse').nodeValue));
            this.set_cartesianScale(_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('AltUnits', node.attributes.getNamedItem('CartesianScale').nodeValue));
            this.set_cartesianCustomScale(parseFloat(node.attributes.getNamedItem('CartesianCustomScale').nodeValue));
        }
        if (node.attributes.getNamedItem('DynamicData') != null) {
            this.set_dynamicData(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('DynamicData').nodeValue));
            this.set_autoUpdate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('AutoUpdate').nodeValue));
            this.set_dataSourceUrl(node.attributes.getNamedItem('DataSourceUrl').nodeValue);
        }
    },

    get_decay: function () {
        return this.decay;
    },

    set_decay: function (value) {
        if (this.decay !== value) {
            this.version++;
            this.decay = value;
        }
        return value;
    },

    get_coordinatesType: function () {
        return this._coordinatesType$1;
    },

    set_coordinatesType: function (value) {
        if (this._coordinatesType$1 !== value) {
            this.version++;
            this._coordinatesType$1 = value;
        }
        return value;
    },

    get_latColumn: function () {
        return this.latColumn;
    },

    set_latColumn: function (value) {
        if (this.latColumn !== value) {
            this.version++;
            this.latColumn = value;
        }
        return value;
    },

    get_lngColumn: function () {
        return this.lngColumn;
    },

    set_lngColumn: function (value) {
        if (this.lngColumn !== value) {
            this.version++;
            this.lngColumn = value;
        }
        return value;
    },

    get_geometryColumn: function () {
        return this.geometryColumn;
    },

    set_geometryColumn: function (value) {
        if (this.geometryColumn !== value) {
            this.version++;
            this.geometryColumn = value;
        }
        return value;
    },

    get_xAxisColumn: function () {
        return this._xAxisColumn$1;
    },

    set_xAxisColumn: function (value) {
        if (this._xAxisColumn$1 !== value) {
            this.version++;
            this._xAxisColumn$1 = value;
        }
        return value;
    },

    get_yAxisColumn: function () {
        return this._yAxisColumn$1;
    },

    set_yAxisColumn: function (value) {
        if (this._yAxisColumn$1 !== value) {
            this.version++;
            this._yAxisColumn$1 = value;
        }
        return value;
    },

    get_zAxisColumn: function () {
        return this._zAxisColumn$1;
    },

    set_zAxisColumn: function (value) {
        if (this._zAxisColumn$1 !== value) {
            this.version++;
            this._zAxisColumn$1 = value;
        }
        return value;
    },

    get_xAxisReverse: function () {
        return this._xAxisReverse$1;
    },

    set_xAxisReverse: function (value) {
        if (this._xAxisReverse$1 !== value) {
            this.version++;
            this._xAxisReverse$1 = value;
        }
        return value;
    },

    get_yAxisReverse: function () {
        return this._yAxisReverse$1;
    },

    set_yAxisReverse: function (value) {
        if (this._yAxisReverse$1 !== value) {
            this.version++;
            this._yAxisReverse$1 = value;
        }
        return value;
    },

    get_zAxisReverse: function () {
        return this._zAxisReverse$1;
    },

    set_zAxisReverse: function (value) {
        if (this._zAxisReverse$1 !== value) {
            this.version++;
            this._zAxisReverse$1 = value;
        }
        return value;
    },

    get_altType: function () {
        return this._altType$1;
    },

    set_altType: function (value) {
        if (this._altType$1 !== value) {
            this.version++;
            this._altType$1 = value;
        }
        return value;
    },

    get_markerMix: function () {
        return this._markerMix$1;
    },

    set_markerMix: function (value) {
        if (this._markerMix$1 !== value) {
            this.version++;
            this._markerMix$1 = value;
        }
        return value;
    },

    get_raUnits: function () {
        return this._raUnits$1;
    },

    set_raUnits: function (value) {
        if (this._raUnits$1 !== value) {
            this.version++;
            this._raUnits$1 = value;
        }
        return value;
    },

    get_colorMap: function () {
        return this.colorMap;
    },

    set_colorMap: function (value) {
        if (this.colorMap !== value) {
            this.version++;
            this.colorMap = value;
        }
        return value;
    },

    get_colorMapperName: function () {
        return this.colorMapperName;
    },

    set_colorMapperName: function (value) {
        if (_color_map_container_js__WEBPACK_IMPORTED_MODULE_15__.ColorMapContainer.fromNamedColormap(value) == null) {
            throw new Error('Invalid colormap name');
        }
        this.version++;
        this.colorMapperName = value;
        return value;
    },

    get_colorMapper: function () {
        return _color_map_container_js__WEBPACK_IMPORTED_MODULE_15__.ColorMapContainer.fromNamedColormap(this.colorMapperName);
    },

    get_dynamicColor: function () {
        return this.dynamicColor;
    },

    set_dynamicColor: function (value) {
        this.version++;
        this.dynamicColor = value;
        return value;
    },

    get_normalizeColorMap: function () {
        return this.normalizeColorMap;
    },

    set_normalizeColorMap: function (value) {
        this.version++;
        this.normalizeColorMap = value;
        return value;
    },

    get_normalizeColorMapMin: function () {
        return this.normalizeColorMapMin;
    },

    set_normalizeColorMapMin: function (value) {
        this.version++;
        this.normalizeColorMapMin = value;
        return value;
    },

    get_normalizeColorMapMax: function () {
        return this.normalizeColorMapMax;
    },

    set_normalizeColorMapMax: function (value) {
        this.version++;
        this.normalizeColorMapMax = value;
        return value;
    },

    normalizeColorMapValue: function (value) {
        if (!this.get_normalizeColorMap()) {
            return value;
        }
        var new_value = (value - this.get_normalizeColorMapMin()) / (this.get_normalizeColorMapMax() - this.get_normalizeColorMapMin());
        if (new_value < 0) {
            new_value = 0;
        } else if (new_value > 1) {
            new_value = 1;
        }
        return new_value;
    },

    get_markerColumn: function () {
        return this._markerColumn$1;
    },

    set_markerColumn: function (value) {
        if (this._markerColumn$1 !== value) {
            this.version++;
            this._markerColumn$1 = value;
        }
        return value;
    },

    get_colorMapColumn: function () {
        return this.colorMapColumn;
    },

    set_colorMapColumn: function (value) {
        if (this.colorMapColumn !== value) {
            this.version++;
            this.colorMapColumn = value;
        }
        return value;
    },

    get_plotType: function () {
        return this._plotType$1;
    },

    set_plotType: function (value) {
        if (this._plotType$1 !== value) {
            this.version++;
            this._plotType$1 = value;
        }
        return value;
    },

    get_markerIndex: function () {
        return this._markerIndex$1;
    },

    set_markerIndex: function (value) {
        if (this._markerIndex$1 !== value) {
            this.version++;
            this._markerIndex$1 = value;
        }
        return value;
    },

    get_showFarSide: function () {
        return this._showFarSide$1;
    },

    set_showFarSide: function (value) {
        if (this._showFarSide$1 !== value) {
            this.version++;
            this._showFarSide$1 = value;
        }
        return value;
    },

    get_markerScale: function () {
        return this._markerScale$1;
    },

    set_markerScale: function (value) {
        if (this._markerScale$1 !== value) {
            this.version++;
            this._markerScale$1 = value;
        }
        return value;
    },

    get_altUnit: function () {
        return this._altUnit$1;
    },

    set_altUnit: function (value) {
        if (this._altUnit$1 !== value) {
            this.version++;
            this._altUnit$1 = value;
        }
        return value;
    },

    get_cartesianScale: function () {
        return this._cartesianScale$1;
    },

    set_cartesianScale: function (value) {
        if (this._cartesianScale$1 !== value) {
            this.version++;
            this._cartesianScale$1 = value;
        }
        return value;
    },

    get_cartesianCustomScale: function () {
        return this._cartesianCustomScale$1;
    },

    set_cartesianCustomScale: function (value) {
        if (this._cartesianCustomScale$1 !== value) {
            this.version++;
            this._cartesianCustomScale$1 = value;
        }
        return value;
    },

    get_altColumn: function () {
        return this.altColumn;
    },

    set_altColumn: function (value) {
        if (this.altColumn !== value) {
            this.version++;
            this.altColumn = value;
        }
        return value;
    },

    get_startDateColumn: function () {
        return this.startDateColumn;
    },

    set_startDateColumn: function (value) {
        if (this.startDateColumn !== value) {
            this.version++;
            this.startDateColumn = value;
        }
        return value;
    },

    get_endDateColumn: function () {
        return this.endDateColumn;
    },

    set_endDateColumn: function (value) {
        if (this.endDateColumn !== value) {
            this.version++;
            this.endDateColumn = value;
        }
        return value;
    },

    get_sizeColumn: function () {
        return this.sizeColumn;
    },

    set_sizeColumn: function (value) {
        if (this.sizeColumn !== value) {
            this.version++;
            this.sizeColumn = value;
        }
        return value;
    },

    get_normalizeSize: function () {
        return this.normalizeSize;
    },

    set_normalizeSize: function (value) {
        if (this.normalizeSize !== value) {
            this.version++;
            this.normalizeSize = value;
        }
        return value;
    },

    get_normalizeSizeClip: function () {
        return this.normalizeSizeClip;
    },

    set_normalizeSizeClip: function (value) {
        if (this.normalizeSizeClip !== value) {
            this.version++;
            this.normalizeSizeClip = value;
        }
        return value;
    },

    get_normalizeSizeMin: function () {
        return this.normalizeSizeMin;
    },

    set_normalizeSizeMin: function (value) {
        if (this.normalizeSizeMin !== value) {
            this.version++;
            this.normalizeSizeMin = value;
        }
        return value;
    },

    get_normalizeSizeMax: function () {
        return this.normalizeSizeMax;
    },

    set_normalizeSizeMax: function (value) {
        if (this.normalizeSizeMax !== value) {
            this.version++;
            this.normalizeSizeMax = value;
        }
        return value;
    },

    normalizePointSize: function (value) {
        if (!this.get_normalizeSize()) {
            return value;
        }
        var new_value = (value - this.get_normalizeSizeMin()) / (this.get_normalizeSizeMax() - this.get_normalizeSizeMin());
        if (this.get_normalizeSizeClip()) {
            if (new_value < 0) {
                new_value = 0;
            }
            else if (new_value > 1) {
                new_value = 1;
            }
        }
        return new_value;
    },

    get_nameColumn: function () {
        return this.nameColumn;
    },

    set_nameColumn: function (value) {
        if (this.nameColumn !== value) {
            this.version++;
            this.nameColumn = value;
        }
        return value;
    },

    get_hyperlinkFormat: function () {
        return this._hyperlinkFormat$1;
    },

    set_hyperlinkFormat: function (value) {
        if (this._hyperlinkFormat$1 !== value) {
            this.version++;
            this._hyperlinkFormat$1 = value;
        }
        return value;
    },

    get_hyperlinkColumn: function () {
        return this._hyperlinkColumn$1;
    },

    set_hyperlinkColumn: function (value) {
        if (this._hyperlinkColumn$1 !== value) {
            this.version++;
            this._hyperlinkColumn$1 = value;
        }
        return value;
    },

    get_scaleFactor: function () {
        return this.scaleFactor;
    },

    set_scaleFactor: function (value) {
        if (this.scaleFactor !== value) {
            this.version++;
            this.scaleFactor = value;
        }
        return value;
    },

    get_pointScaleType: function () {
        return this.pointScaleType;
    },

    set_pointScaleType: function (value) {
        if (this.pointScaleType !== value) {
            this.version++;
            this.pointScaleType = value;
        }
        return value;
    },

    draw: function (renderContext, opacity, flat) {
        var device = renderContext;
        if (this.version !== this.lastVersion) {
            this.cleanUp();
        }
        this.lastVersion = this.version;
        if (this.bufferIsFlat !== flat) {
            this.cleanUp();
            this.bufferIsFlat = flat;
        }
        if (this.dirty) {
            this.prepVertexBuffer(device, opacity);
        }
        var jNow = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_12__.SpaceTimeController.get_jNow() - _space_time_controller_js__WEBPACK_IMPORTED_MODULE_12__.SpaceTimeController.utcToJulian(this.baseDate);
        var adjustedScale = this.scaleFactor * 3;
        if (flat && this.astronomical && (this._markerScale$1 === 1)) {
            adjustedScale = (this.scaleFactor / (renderContext.viewCamera.zoom / 360));
        }
        if (this.triangleList2d != null) {
            this.triangleList2d.decay = this.decay;
            this.triangleList2d.sky = this.get_astronomical();
            this.triangleList2d.timeSeries = this.timeSeries;
            this.triangleList2d.jNow = jNow;
            this.triangleList2d.draw(renderContext, opacity * this.get_opacity(), 1);
        }
        if (this.triangleList != null) {
            this.triangleList.decay = this.decay;
            this.triangleList.sky = this.get_astronomical();
            this.triangleList.timeSeries = this.timeSeries;
            this.triangleList.jNow = jNow;
            this.triangleList.draw(renderContext, opacity * this.get_opacity(), 1);
        }
        if (this.pointList != null) {
            this.pointList.depthBuffered = false;
            this.pointList.showFarSide = this.get_showFarSide();
            this.pointList.decay = (this.timeSeries) ? this.decay : 0;
            this.pointList.sky = this.get_astronomical();
            this.pointList.timeSeries = this.timeSeries;
            this.pointList.jNow = jNow;
            this.pointList.scale = (this._markerScale$1 === 1) ? adjustedScale : -adjustedScale;
            switch (this._plotType$1) {
                case 0:
                    this.pointList.draw(renderContext, opacity * this.get_opacity(), false);
                    break;
                case 2:
                    this.pointList.drawTextured(renderContext, SpreadSheetLayer.get__circleTexture$1().texture2d, opacity * this.get_opacity());
                    break;
                case 1:
                    this.pointList.drawTextured(renderContext, PushPin.getPushPinTexture(19), opacity * this.get_opacity());
                    break;
                case 3:
                    this.pointList.drawTextured(renderContext, PushPin.getPushPinTexture(35), opacity * this.get_opacity());
                    break;
                case 5:
                case 4:
                    this.pointList.drawTextured(renderContext, PushPin.getPushPinTexture(this._markerIndex$1), opacity * this.get_opacity());
                    break;
                default:
                    break;
            }
        }
        if (this.lineList != null) {
            this.lineList.sky = this.get_astronomical();
            this.lineList.decay = this.decay;
            this.lineList.timeSeries = this.timeSeries;
            this.lineList.jNow = jNow;
            this.lineList.drawLines(renderContext, opacity * this.get_opacity());
        }
        if (this.lineList2d != null) {
            this.lineList2d.sky = this.get_astronomical();
            this.lineList2d.decay = this.decay;
            this.lineList2d.timeSeries = this.timeSeries;
            this.lineList2d.showFarSide = this.get_showFarSide();
            this.lineList2d.jNow = jNow;
            this.lineList2d.drawLines(renderContext, opacity * this.get_opacity());
        }
        return true;
    },

    cleanUpBase: function () {
        if (this.lineList != null) {
            this.lineList.clear();
        }
        if (this.lineList2d != null) {
            this.lineList2d.clear();
        }
        if (this.triangleList2d != null) {
            this.triangleList2d.clear();
        }
        if (this.pointList != null) {
            this.pointList.clear();
        }
        if (this.triangleList != null) {
            this.triangleList.clear();
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("SpreadSheetLayer", [SpreadSheetLayer, SpreadSheetLayer$, _layer_js__WEBPACK_IMPORTED_MODULE_16__.Layer]);


// wwtlib.CatalogSpreadSheetLayer

function CatalogSpreadSheetLayer() {
    this._addedTiles$2 = {};
    SpreadSheetLayer.call(this);
}

var CatalogSpreadSheetLayer$ = {
    addTileRows: function (tileKey, catalogRows) {
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this._addedTiles$2, tileKey)) {
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(catalogRows);
            while ($enum1.moveNext()) {
                var row = $enum1.current;
                this.get__table().rows.push(row);
            }
            this.dirty = true;
            this._addedTiles$2[tileKey] = true;
        }
    },

    removeTileRows: function (tileKey, catalogRows) {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this._addedTiles$2, tileKey)) {
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(catalogRows);
            while ($enum1.moveNext()) {
                var row = $enum1.current;
                _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove(this.get__table().rows, row);
            }
            this.dirty = true;
            delete this._addedTiles$2[tileKey];
        }
    },

    cleanUp: function () {
        SpreadSheetLayer.prototype.cleanUp.call(this);
        _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.clearKeys(this._addedTiles$2);
        this.get__table().rows.length = 0;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("CatalogSpreadSheetLayer", [CatalogSpreadSheetLayer, CatalogSpreadSheetLayer$, SpreadSheetLayer]);


/***/ }),

/***/ "./esm/layers/table.js":
/*!*****************************!*\
  !*** ./esm/layers/table.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Table: () => (/* binding */ Table)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util.js */ "./esm/util.js");
/* harmony import */ var _ui_tools_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ui_tools.js */ "./esm/ui_tools.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Tabular data.







// wwtlib.Table

function Table() {
    this.guid = new _util_js__WEBPACK_IMPORTED_MODULE_2__.Guid();
    this.header = [];
    this.rows = [];
    this.delimiter = '\t';
    this.locked = false;
}

var Table$ = {
    lock: function () {
        this.locked = true;
    },

    unlock: function () {
        this.locked = false;
    },

    save: function () {
        var data = '';
        var first = true;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.header);
        while ($enum1.moveNext()) {
            var col = $enum1.current;
            if (!first) {
                data += '\t';
            }
            else {
                first = false;
            }
            data += col;
        }
        data += '\r\n';
        var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.rows);
        while ($enum2.moveNext()) {
            var row = $enum2.current;
            first = true;
            var $enum3 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(row);
            while ($enum3.moveNext()) {
                var col = $enum3.current;
                if (!first) {
                    data += '\t';
                }
                else {
                    first = false;
                }
                data += col;
            }
            data += '\r\n';
        }
        return data;
    },

    loadFromString: function (data, isUpdate, purge, hasHeader) {
        var count = 0;
        var lines = data.split('\r\n');
        if (!isUpdate || hasHeader) {
            if (lines.length > 0) {
                var headerLine = lines[0];
                count++;
                if (headerLine.indexOf('\t') === -1 && headerLine.indexOf(',') > -1) {
                    this.delimiter = ',';
                }
                if (!isUpdate) {
                    this.rows.length = 0;
                }
                this.header = _ui_tools_js__WEBPACK_IMPORTED_MODULE_3__.UiTools.splitString(headerLine, this.delimiter);
            }
            else {
                this.header = [];
            }
        }
        var temp = [];
        if (!purge) {
            temp = this.rows;
        }
        while (count < lines.length) {
            var line = lines[count];
            var rowData = _ui_tools_js__WEBPACK_IMPORTED_MODULE_3__.UiTools.splitString(line, this.delimiter);
            if (rowData.length < 1) {
                break;
            }
            temp.push(rowData);
            count++;
        }
        if (purge) {
            this.rows = temp;
        }
    },

    clone: function () {
        var cloned_table = new Table();
        for (var i = 0; i < this.header.length; i++) {
            cloned_table.header.push(this.header[i]);
        }
        for (var j = 0; j < this.rows.length; j++) {
            cloned_table.rows.push([]);
            for (var i = 0; i < this.rows[j].length; i++) {
                cloned_table.rows[j].push(this.rows[j][i]);
            }
        }
        return cloned_table;
    },

    addColumn: function (name, data) {
        this.header.push(name);
        for (var i = 0; i < data.length; i++) {
            this.rows[i].push(data[i]);
        }
    },

    removeColumn: function (name) {
        var remove_index = this.header.indexOf(name);
        if (remove_index > -1) {
            this.header.splice(remove_index, 1);
            for (var i = 0; i < this.rows.length; i++) {
                this.rows[i].splice(remove_index, 1);
            }
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Table", [Table, Table$, null]);


/***/ }),

/***/ "./esm/layers/time_series_layer.js":
/*!*****************************************!*\
  !*** ./esm/layers/time_series_layer.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AltTypes: () => (/* binding */ AltTypes),
/* harmony export */   ColorMaps: () => (/* binding */ ColorMaps),
/* harmony export */   CoordinatesTypes: () => (/* binding */ CoordinatesTypes),
/* harmony export */   MarkerMixes: () => (/* binding */ MarkerMixes),
/* harmony export */   MarkerScales: () => (/* binding */ MarkerScales),
/* harmony export */   PlotTypes: () => (/* binding */ PlotTypes),
/* harmony export */   RAUnits: () => (/* binding */ RAUnits),
/* harmony export */   TimeSeriesLayer: () => (/* binding */ TimeSeriesLayer)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _space_time_controller_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../space_time_controller.js */ "./esm/space_time_controller.js");
/* harmony import */ var _layer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./layer.js */ "./esm/layers/layer.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A layer for rendering time-series data.
//
// This layer is essentially unimplemented in the WWT WebGL engine. See
// "spreadsheetlayer" and "votablelayer" for functionality that is actually
// available.







// wwtlib.CoordinatesTypes

var CoordinatesTypes = {
    spherical: 0,
    rectangular: 1,
    orbital: 2
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("CoordinatesTypes", CoordinatesTypes);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("CoordinatesTypes", CoordinatesTypes);


// wwtlib.AltTypes

var AltTypes = {
    depth: 0,
    altitude: 1,
    distance: 2,
    seaLevel: 3,
    terrain: 4
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("AltTypes", AltTypes);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("AltTypes", AltTypes);


// wwtlib.MarkerMixes

var MarkerMixes = {
    same_For_All: 0
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("MarkerMixes", MarkerMixes);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("MarkerMixes", MarkerMixes);


// wwtlib.ColorMaps

var ColorMaps = {
    same_For_All: 0,
    group_by_Values: 2,
    per_Column_Literal: 3
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ColorMaps", ColorMaps);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("ColorMaps", ColorMaps);


// wwtlib.PlotTypes

var PlotTypes = {
    gaussian: 0,
    point: 1,
    circle: 2,
    square: 3,
    pushPin: 4,
    custom: 5
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("PlotTypes", PlotTypes);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("PlotTypes", PlotTypes);


// wwtlib.MarkerScales

var MarkerScales = {
    screen: 0,
    world: 1
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("MarkerScales", MarkerScales);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("MarkerScales", MarkerScales);


// wwtlib.RAUnits

var RAUnits = {
    hours: 0,
    degrees: 1
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("RAUnits", RAUnits);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("RAUnits", RAUnits);


// wwtlib.TimeSeriesLayer

function TimeSeriesLayer() {
    this.isLongIndex = false;
    this.shapeVertexCount = 0;
    this.lines = false;
    this.latColumn = -1;
    this.fixedSize = 1;
    this.decay = 16;
    this.timeSeries = false;
    this._dynamicData$1 = false;
    this._autoUpdate$1 = false;
    this._dataSourceUrl$1 = '';
    this._beginRange$1 = new Date('1/1/2100');
    this._endRange$1 = new Date('01/01/1800');
    this.markerDomainValues = {};
    this.colorDomainValues = {};
    this._coordinatesType$1 = 0;
    this.lngColumn = -1;
    this.geometryColumn = -1;
    this._xAxisColumn$1 = -1;
    this._yAxisColumn$1 = -1;
    this._zAxisColumn$1 = -1;
    this._xAxisReverse$1 = false;
    this._yAxisReverse$1 = false;
    this._zAxisReverse$1 = false;
    this._altType$1 = 3;
    this._markerMix$1 = 0;
    this._raUnits$1 = 0;
    this._colorMap$1 = 3;
    this._markerColumn$1 = -1;
    this._colorMapColumn$1 = -1;
    this._plotType$1 = 0;
    this._markerIndex$1 = 0;
    this._showFarSide$1 = false;
    this._markerScale$1 = 1;
    this._altUnit$1 = 1;
    this._cartesianScale$1 = 1;
    this._cartesianCustomScale$1 = 1;
    this.altColumn = -1;
    this.startDateColumn = -1;
    this.endDateColumn = -1;
    this.sizeColumn = -1;
    this.nameColumn = 0;
    this._hyperlinkFormat$1 = '';
    this._hyperlinkColumn$1 = -1;
    this.scaleFactor = 1;
    this.pointScaleType = 1;
    this.positions = [];
    this.bufferIsFlat = false;
    this.baseDate = new Date(2010, 0, 1, 12, 0, 0);
    this.dirty = true;
    this.lastVersion = 0;
    _layer_js__WEBPACK_IMPORTED_MODULE_3__.Layer.call(this);
}

TimeSeriesLayer._circleTexture$1 = null;

TimeSeriesLayer.get__circleTexture$1 = function () {
    return TimeSeriesLayer._circleTexture$1;
};

var TimeSeriesLayer$ = {
    get_dynamicData: function () {
        return this._dynamicData$1;
    },

    set_dynamicData: function (value) {
        this._dynamicData$1 = value;
        return value;
    },

    get_autoUpdate: function () {
        return this._autoUpdate$1;
    },

    set_autoUpdate: function (value) {
        this._autoUpdate$1 = value;
        return value;
    },

    get_dataSourceUrl: function () {
        return this._dataSourceUrl$1;
    },

    set_dataSourceUrl: function (value) {
        this._dataSourceUrl$1 = value;
        return value;
    },

    get_timeSeries: function () {
        return this.timeSeries;
    },

    set_timeSeries: function (value) {
        if (this.timeSeries !== value) {
            this.version++;
            this.timeSeries = value;
        }
        return value;
    },

    get_header: function () {
        return null;
    },

    get_beginRange: function () {
        return this._beginRange$1;
    },

    set_beginRange: function (value) {
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.compareDates(this._beginRange$1, value)) {
            this.version++;
            this._beginRange$1 = value;
        }
        return value;
    },

    get_endRange: function () {
        return this._endRange$1;
    },

    set_endRange: function (value) {
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.compareDates(this._endRange$1, value)) {
            this.version++;
            this._endRange$1 = value;
        }
        return value;
    },

    initializeFromXml: function (node) {
        this.set_timeSeries(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('TimeSeries').nodeValue));
        this.set_beginRange(new Date(node.attributes.getNamedItem('BeginRange').nodeValue));
        this.set_endRange(new Date(node.attributes.getNamedItem('EndRange').nodeValue));
        this.set_decay(parseFloat(node.attributes.getNamedItem('Decay').nodeValue));
        this.set_coordinatesType(_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('CoordinatesTypes', node.attributes.getNamedItem('CoordinatesType').nodeValue));
        if (this.get_coordinatesType() < 0) {
            this.set_coordinatesType(0);
        }
        this.set_latColumn(parseInt(node.attributes.getNamedItem('LatColumn').nodeValue));
        this.set_lngColumn(parseInt(node.attributes.getNamedItem('LngColumn').nodeValue));
        if (node.attributes.getNamedItem('GeometryColumn') != null) {
            this.set_geometryColumn(parseInt(node.attributes.getNamedItem('GeometryColumn').nodeValue));
        }
        switch (node.attributes.getNamedItem('AltType').nodeValue) {
            case 'Depth':
                this.set_altType(0);
                break;
            case 'Altitude':
                this.set_altType(1);
                break;
            case 'Distance':
                this.set_altType(2);
                break;
            case 'SeaLevel':
                this.set_altType(3);
                break;
            case 'Terrain':
                this.set_altType(4);
                break;
            default:
                break;
        }
        this.set_markerMix(0);
        switch (node.attributes.getNamedItem('ColorMap').nodeValue) {
            case 'Same_For_All':
                this.set__colorMap(0);
                break;
            case 'Group_by_Values':
                this.set__colorMap(2);
                break;
            case 'Per_Column_Literal':
                this.set__colorMap(3);
                break;
            default:
                break;
        }
        this.set_markerColumn(parseInt(node.attributes.getNamedItem('MarkerColumn').nodeValue));
        this.set_colorMapColumn(parseInt(node.attributes.getNamedItem('ColorMapColumn').nodeValue));
        switch (node.attributes.getNamedItem('PlotType').nodeValue) {
            case 'Gaussian':
                this.set_plotType(0);
                break;
            case 'Point':
                this.set_plotType(1);
                break;
            case 'Circle':
                this.set_plotType(2);
                break;
            case 'PushPin':
                this.set_plotType(4);
                break;
            default:
                break;
        }
        this.set_markerIndex(parseInt(node.attributes.getNamedItem('MarkerIndex').nodeValue));
        switch (node.attributes.getNamedItem('MarkerScale').nodeValue) {
            case 'Screen':
                this.set_markerScale(0);
                break;
            case 'World':
                this.set_markerScale(1);
                break;
            default:
                break;
        }
        switch (node.attributes.getNamedItem('AltUnit').nodeValue) {
            case 'Meters':
                this.set_altUnit(1);
                break;
            case 'Feet':
                this.set_altUnit(2);
                break;
            case 'Inches':
                this.set_altUnit(3);
                break;
            case 'Miles':
                this.set_altUnit(4);
                break;
            case 'Kilometers':
                this.set_altUnit(5);
                break;
            case 'AstronomicalUnits':
                this.set_altUnit(6);
                break;
            case 'LightYears':
                this.set_altUnit(7);
                break;
            case 'Parsecs':
                this.set_altUnit(8);
                break;
            case 'MegaParsecs':
                this.set_altUnit(9);
                break;
            case 'Custom':
                this.set_altUnit(10);
                break;
            default:
                break;
        }
        this.set_altColumn(parseInt(node.attributes.getNamedItem('AltColumn').nodeValue));
        this.set_startDateColumn(parseInt(node.attributes.getNamedItem('StartDateColumn').nodeValue));
        this.set_endDateColumn(parseInt(node.attributes.getNamedItem('EndDateColumn').nodeValue));
        this.set_sizeColumn(parseInt(node.attributes.getNamedItem('SizeColumn').nodeValue));
        this.set_hyperlinkFormat(node.attributes.getNamedItem('HyperlinkFormat').nodeValue);
        this.set_hyperlinkColumn(parseInt(node.attributes.getNamedItem('HyperlinkColumn').nodeValue));
        this.set_scaleFactor(parseFloat(node.attributes.getNamedItem('ScaleFactor').nodeValue));
        switch (node.attributes.getNamedItem('PointScaleType').nodeValue) {
            case 'Linear':
                this.set_pointScaleType(0);
                break;
            case 'Power':
                this.set_pointScaleType(1);
                break;
            case 'Log':
                this.set_pointScaleType(2);
                break;
            case 'Constant':
                this.set_pointScaleType(3);
                break;
            case 'StellarMagnitude':
                this.set_pointScaleType(4);
                break;
            default:
                break;
        }
        if (node.attributes.getNamedItem('ShowFarSide') != null) {
            this.set_showFarSide(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('ShowFarSide').nodeValue));
        }
        if (node.attributes.getNamedItem('RaUnits') != null) {
            switch (node.attributes.getNamedItem('RaUnits').nodeValue) {
                case 'Hours':
                    this.set_raUnits(0);
                    break;
                case 'Degrees':
                    this.set_raUnits(1);
                    break;
            }
        }
        if (node.attributes.getNamedItem('HoverTextColumn') != null) {
            this.set_nameColumn(parseInt(node.attributes.getNamedItem('HoverTextColumn').nodeValue));
        }
        if (node.attributes.getNamedItem('XAxisColumn') != null) {
            this.set_xAxisColumn(parseInt(node.attributes.getNamedItem('XAxisColumn').nodeValue));
            this.set_xAxisReverse(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('XAxisReverse').nodeValue));
            this.set_yAxisColumn(parseInt(node.attributes.getNamedItem('YAxisColumn').nodeValue));
            this.set_yAxisReverse(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('YAxisReverse').nodeValue));
            this.set_zAxisColumn(parseInt(node.attributes.getNamedItem('ZAxisColumn').nodeValue));
            this.set_zAxisReverse(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('ZAxisReverse').nodeValue));
            switch (node.attributes.getNamedItem('CartesianScale').nodeValue) {
                case 'Meters':
                    this.set_cartesianScale(1);
                    break;
                case 'Feet':
                    this.set_cartesianScale(2);
                    break;
                case 'Inches':
                    this.set_cartesianScale(3);
                    break;
                case 'Miles':
                    this.set_cartesianScale(4);
                    break;
                case 'Kilometers':
                    this.set_cartesianScale(5);
                    break;
                case 'AstronomicalUnits':
                    this.set_cartesianScale(6);
                    break;
                case 'LightYears':
                    this.set_cartesianScale(7);
                    break;
                case 'Parsecs':
                    this.set_cartesianScale(8);
                    break;
                case 'MegaParsecs':
                    this.set_cartesianScale(9);
                    break;
                case 'Custom':
                    this.set_cartesianScale(10);
                    break;
                default:
                    break;
            }
            this.set_cartesianCustomScale(parseFloat(node.attributes.getNamedItem('CartesianCustomScale').nodeValue));
        }
        if (node.attributes.getNamedItem('DynamicData') != null) {
            this.set_dynamicData(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('DynamicData').nodeValue));
            this.set_autoUpdate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('AutoUpdate').nodeValue));
            this.set_dataSourceUrl(node.attributes.getNamedItem('DataSourceUrl').nodeValue);
        }
    },

    computeDateDomainRange: function (columnStart, columnEnd) { },

    getDomainValues: function (column) {
        return [];
    },

    get_decay: function () {
        return this.decay;
    },

    set_decay: function (value) {
        if (this.decay !== value) {
            this.version++;
            this.decay = value;
        }
        return value;
    },

    get_coordinatesType: function () {
        return this._coordinatesType$1;
    },

    set_coordinatesType: function (value) {
        if (this._coordinatesType$1 !== value) {
            this.version++;
            this._coordinatesType$1 = value;
        }
        return value;
    },

    get_latColumn: function () {
        return this.latColumn;
    },

    set_latColumn: function (value) {
        if (this.latColumn !== value) {
            this.version++;
            this.latColumn = value;
        }
        return value;
    },

    get_lngColumn: function () {
        return this.lngColumn;
    },

    set_lngColumn: function (value) {
        if (this.lngColumn !== value) {
            this.version++;
            this.lngColumn = value;
        }
        return value;
    },

    get_geometryColumn: function () {
        return this.geometryColumn;
    },

    set_geometryColumn: function (value) {
        if (this.geometryColumn !== value) {
            this.version++;
            this.geometryColumn = value;
        }
        return value;
    },

    get_xAxisColumn: function () {
        return this._xAxisColumn$1;
    },

    set_xAxisColumn: function (value) {
        if (this._xAxisColumn$1 !== value) {
            this.version++;
            this._xAxisColumn$1 = value;
        }
        return value;
    },

    get_yAxisColumn: function () {
        return this._yAxisColumn$1;
    },

    set_yAxisColumn: function (value) {
        if (this._yAxisColumn$1 !== value) {
            this.version++;
            this._yAxisColumn$1 = value;
        }
        return value;
    },

    get_zAxisColumn: function () {
        return this._zAxisColumn$1;
    },

    set_zAxisColumn: function (value) {
        if (this._zAxisColumn$1 !== value) {
            this.version++;
            this._zAxisColumn$1 = value;
        }
        return value;
    },

    get_xAxisReverse: function () {
        return this._xAxisReverse$1;
    },

    set_xAxisReverse: function (value) {
        if (this._xAxisReverse$1 !== value) {
            this.version++;
            this._xAxisReverse$1 = value;
        }
        return value;
    },

    get_yAxisReverse: function () {
        return this._yAxisReverse$1;
    },

    set_yAxisReverse: function (value) {
        if (this._yAxisReverse$1 !== value) {
            this.version++;
            this._yAxisReverse$1 = value;
        }
        return value;
    },

    get_zAxisReverse: function () {
        return this._zAxisReverse$1;
    },

    set_zAxisReverse: function (value) {
        if (this._zAxisReverse$1 !== value) {
            this.version++;
            this._zAxisReverse$1 = value;
        }
        return value;
    },

    get_altType: function () {
        return this._altType$1;
    },

    set_altType: function (value) {
        if (this._altType$1 !== value) {
            this.version++;
            this._altType$1 = value;
        }
        return value;
    },

    get_markerMix: function () {
        return this._markerMix$1;
    },

    set_markerMix: function (value) {
        if (this._markerMix$1 !== value) {
            this.version++;
            this._markerMix$1 = value;
        }
        return value;
    },

    get_raUnits: function () {
        return this._raUnits$1;
    },

    set_raUnits: function (value) {
        if (this._raUnits$1 !== value) {
            this.version++;
            this._raUnits$1 = value;
        }
        return value;
    },

    get__colorMap: function () {
        return this._colorMap$1;
    },

    set__colorMap: function (value) {
        if (this._colorMap$1 !== value) {
            this.version++;
            this._colorMap$1 = value;
        }
        return value;
    },

    get_markerColumn: function () {
        return this._markerColumn$1;
    },

    set_markerColumn: function (value) {
        if (this._markerColumn$1 !== value) {
            this.version++;
            this._markerColumn$1 = value;
        }
        return value;
    },

    get_colorMapColumn: function () {
        return this._colorMapColumn$1;
    },

    set_colorMapColumn: function (value) {
        if (this._colorMapColumn$1 !== value) {
            this.version++;
            this._colorMapColumn$1 = value;
        }
        return value;
    },

    get_plotType: function () {
        return this._plotType$1;
    },

    set_plotType: function (value) {
        if (this._plotType$1 !== value) {
            this.version++;
            this._plotType$1 = value;
        }
        return value;
    },

    get_markerIndex: function () {
        return this._markerIndex$1;
    },

    set_markerIndex: function (value) {
        if (this._markerIndex$1 !== value) {
            this.version++;
            this._markerIndex$1 = value;
        }
        return value;
    },

    get_showFarSide: function () {
        return this._showFarSide$1;
    },

    set_showFarSide: function (value) {
        if (this._showFarSide$1 !== value) {
            this.version++;
            this._showFarSide$1 = value;
        }
        return value;
    },

    get_markerScale: function () {
        return this._markerScale$1;
    },

    set_markerScale: function (value) {
        if (this._markerScale$1 !== value) {
            this.version++;
            this._markerScale$1 = value;
        }
        return value;
    },

    get_altUnit: function () {
        return this._altUnit$1;
    },

    set_altUnit: function (value) {
        if (this._altUnit$1 !== value) {
            this.version++;
            this._altUnit$1 = value;
        }
        return value;
    },

    get_cartesianScale: function () {
        return this._cartesianScale$1;
    },

    set_cartesianScale: function (value) {
        if (this._cartesianScale$1 !== value) {
            this.version++;
            this._cartesianScale$1 = value;
        }
        return value;
    },

    get_cartesianCustomScale: function () {
        return this._cartesianCustomScale$1;
    },

    set_cartesianCustomScale: function (value) {
        if (this._cartesianCustomScale$1 !== value) {
            this.version++;
            this._cartesianCustomScale$1 = value;
        }
        return value;
    },

    get_altColumn: function () {
        return this.altColumn;
    },

    set_altColumn: function (value) {
        if (this.altColumn !== value) {
            this.version++;
            this.altColumn = value;
        }
        return value;
    },

    get_startDateColumn: function () {
        return this.startDateColumn;
    },

    set_startDateColumn: function (value) {
        if (this.startDateColumn !== value) {
            this.version++;
            this.startDateColumn = value;
        }
        return value;
    },

    get_endDateColumn: function () {
        return this.endDateColumn;
    },

    set_endDateColumn: function (value) {
        if (this.endDateColumn !== value) {
            this.version++;
            this.endDateColumn = value;
        }
        return value;
    },

    get_sizeColumn: function () {
        return this.sizeColumn;
    },

    set_sizeColumn: function (value) {
        if (this.sizeColumn !== value) {
            this.version++;
            this.sizeColumn = value;
        }
        return value;
    },

    get_nameColumn: function () {
        return this.nameColumn;
    },

    set_nameColumn: function (value) {
        if (this.nameColumn !== value) {
            this.version++;
            this.nameColumn = value;
        }
        return value;
    },

    get_hyperlinkFormat: function () {
        return this._hyperlinkFormat$1;
    },

    set_hyperlinkFormat: function (value) {
        if (this._hyperlinkFormat$1 !== value) {
            this.version++;
            this._hyperlinkFormat$1 = value;
        }
        return value;
    },

    get_hyperlinkColumn: function () {
        return this._hyperlinkColumn$1;
    },

    set_hyperlinkColumn: function (value) {
        if (this._hyperlinkColumn$1 !== value) {
            this.version++;
            this._hyperlinkColumn$1 = value;
        }
        return value;
    },

    get_scaleFactor: function () {
        return this.scaleFactor;
    },

    set_scaleFactor: function (value) {
        if (this.scaleFactor !== value) {
            this.version++;
            this.scaleFactor = value;
        }
        return value;
    },

    get_pointScaleType: function () {
        return this.pointScaleType;
    },

    set_pointScaleType: function (value) {
        if (this.pointScaleType !== value) {
            this.version++;
            this.pointScaleType = value;
        }
        return value;
    },

    prepVertexBuffer: function (renderContext, opacity) {
        return true;
    },

    draw: function (renderContext, opacity, flat) {
        var device = renderContext;
        if (this.version !== this.lastVersion) {
            this.cleanUp();
        }
        if (this.bufferIsFlat !== flat) {
            this.cleanUp();
            this.bufferIsFlat = flat;
        }
        if (this.dirty) {
            this.prepVertexBuffer(device, opacity);
        }
        var jNow = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_2__.SpaceTimeController.get_jNow() - _space_time_controller_js__WEBPACK_IMPORTED_MODULE_2__.SpaceTimeController.utcToJulian(this.baseDate);
        var adjustedScale = this.scaleFactor;
        if (flat && this.astronomical && (this._markerScale$1 === 1)) {
            adjustedScale = (this.scaleFactor / (renderContext.viewCamera.zoom / 360));
        }
        if (this.triangleList2d != null) {
            this.triangleList2d.decay = this.decay;
            this.triangleList2d.sky = this.get_astronomical();
            this.triangleList2d.timeSeries = this.timeSeries;
            this.triangleList2d.jNow = jNow;
            this.triangleList2d.draw(renderContext, opacity * this.get_opacity(), 1);
        }
        if (this.triangleList != null) {
            this.triangleList.decay = this.decay;
            this.triangleList.sky = this.get_astronomical();
            this.triangleList.timeSeries = this.timeSeries;
            this.triangleList.jNow = jNow;
            this.triangleList.draw(renderContext, opacity * this.get_opacity(), 1);
        }
        if (this.pointList != null) {
            this.pointList.depthBuffered = false;
            this.pointList.decay = this.decay;
            this.pointList.sky = this.get_astronomical();
            this.pointList.timeSeries = this.timeSeries;
            this.pointList.jNow = jNow;
            this.pointList.scale = (this._markerScale$1 === 1) ? adjustedScale : -adjustedScale;
            this.pointList.draw(renderContext, opacity * this.get_opacity(), false);
        }
        if (this.lineList != null) {
            this.lineList.sky = this.get_astronomical();
            this.lineList.decay = this.decay;
            this.lineList.timeSeries = this.timeSeries;
            this.lineList.jNow = jNow;
            this.lineList.drawLines(renderContext, opacity * this.get_opacity());
        }
        if (this.lineList2d != null) {
            this.lineList2d.sky = this.get_astronomical();
            this.lineList2d.decay = this.decay;
            this.lineList2d.timeSeries = this.timeSeries;
            this.lineList2d.showFarSide = this.get_showFarSide();
            this.lineList2d.jNow = jNow;
            this.lineList2d.drawLines(renderContext, opacity * this.get_opacity());
        }
        return true;
    },

    initFromXml: function (node) {
        _layer_js__WEBPACK_IMPORTED_MODULE_3__.Layer.prototype.initFromXml.call(this, node);
    },

    cleanUp: function () {
        if (this.lineList != null) {
            this.lineList.clear();
        }
        if (this.lineList2d != null) {
            this.lineList2d.clear();
        }
        if (this.triangleList2d != null) {
            this.triangleList2d.clear();
        }
        if (this.pointList != null) {
            this.pointList.clear();
        }
        if (this.triangleList != null) {
            this.triangleList.clear();
        }
    },

    dynamicUpdate: function () {
        return false;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("TimeSeriesLayer", [TimeSeriesLayer, TimeSeriesLayer$, _layer_js__WEBPACK_IMPORTED_MODULE_3__.Layer]);


/***/ }),

/***/ "./esm/layers/vo_table.js":
/*!********************************!*\
  !*** ./esm/layers/vo_table.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Primitives: () => (/* binding */ Primitives),
/* harmony export */   VoColumn: () => (/* binding */ VoColumn),
/* harmony export */   VoRow: () => (/* binding */ VoRow),
/* harmony export */   VoTable: () => (/* binding */ VoTable)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _web_file_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../web_file.js */ "./esm/web_file.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// The Virtual Observatory table (VOTable) format.








// wwtlib.Primitives

var Primitives = {
    voBoolean: 1,
    voBit: 2,
    voUnsignedByte: 3,
    voShort: 4,
    voInt: 5,
    voLong: 6,
    voChar: 7,
    voUnicodeChar: 8,
    voFloat: 9,
    voDouble: 10,
    voFloatComplex: 11,
    voDoubleComplex: 12,
    voUndefined: 13
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Primitives", Primitives);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("Primitives", Primitives);


// wwtlib.VoTable

function VoTable() {
    this.columns = {};
    this.column = [];
    this.rows = [];
    this.loadFilename = '';
    this.sampId = '';
    this.selectedRow = null;
    this.error = false;
    this.errorText = '';
}

VoTable.loadFromUrl = function (url, complete) {
    var temp = new VoTable();
    temp._onComplete = complete;
    temp._webFile = new _web_file_js__WEBPACK_IMPORTED_MODULE_4__.WebFile(_url_helpers_js__WEBPACK_IMPORTED_MODULE_3__.URLHelpers.singleton.rewrite(url, 1));
    temp._webFile.onStateChange = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_loadData', temp);
    temp._webFile.send();
    return temp;
};

VoTable.loadFromString = function (data) {
    var xParser = new DOMParser();
    var doc = xParser.parseFromString(data, 'text/xml');
    var table = new VoTable();
    table.loadFromXML(doc);
    return table;
};

var VoTable$ = {
    _loadData: function () {
        if (this._webFile.get_state() === 2) {
            alert(this._webFile.get_message());
        } else if (this._webFile.get_state() === 1) {
            this.loadFromXML(this._webFile.getXml());
            if (this._onComplete != null) {
                this._onComplete();
            }
        }
    },

    loadFromXML: function (xml) {
        var voTable = _baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.selectSingleNode(xml, 'VOTABLE');
        if (voTable == null) {
            return;
        }
        var index = 0;
        try {
            var table = _baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.selectSingleNode(_baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.selectSingleNode(voTable, 'RESOURCE'), 'TABLE');
            if (table != null) {
                var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(table.childNodes);
                while ($enum1.moveNext()) {
                    var node = $enum1.current;
                    if (node.nodeName === 'FIELD') {
                        var col = new VoColumn(node, index++);
                        this.columns[col.name] = col;
                        this.column.push(col);
                    }
                }
            }
        }
        catch ($e2) {
            this.error = true;
            this.errorText = _baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.selectSingleNode(voTable, 'DESCRIPTION').text;
        }
        try {
            var tableData = _baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.selectSingleNode(_baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.selectSingleNode(_baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.selectSingleNode(_baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.selectSingleNode(voTable, 'RESOURCE'), 'TABLE'), 'DATA'), 'TABLEDATA');
            if (tableData != null) {
                var $enum3 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(tableData.childNodes);
                while ($enum3.moveNext()) {
                    var node = $enum3.current;
                    if (node.nodeName === 'TR') {
                        var row = new VoRow(this);
                        row.columnData = new Array(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyCount(this.columns));
                        index = 0;
                        var $enum4 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(node.childNodes);
                        while ($enum4.moveNext()) {
                            var child = $enum4.current;
                            if (child.nodeName === 'TD') {
                                row.columnData[index++] = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(_baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.getInnerText(child));
                            }
                        }
                        this.rows.push(row);
                    }
                }
            }
        }
        catch ($e5) {
        }
    },

    save: function (filename) {
        return true;
    },

    getColumnByUcd: function (ucd) {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(this.columns));
        while ($enum1.moveNext()) {
            var key = $enum1.current;
            var col = this.columns[key];
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(col.ucd, '_', '.').toLocaleLowerCase().indexOf(ucd.toLocaleLowerCase()) > -1) {
                return col;
            }
        }
        return null;
    },

    getRAColumn: function () {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(this.columns));
        while ($enum1.moveNext()) {
            var key = $enum1.current;
            var col = this.columns[key];
            if (col.ucd.toLocaleLowerCase().indexOf('pos.eq.ra') > -1 || col.ucd.toLocaleLowerCase().indexOf('pos_eq_ra') > -1) {
                return col;
            }
        }
        var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(this.columns));
        while ($enum2.moveNext()) {
            var key = $enum2.current;
            var col = this.columns[key];
            if (col.name.toLocaleLowerCase().indexOf('ra') > -1) {
                return col;
            }
        }
        return null;
    },

    getDecColumn: function () {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(this.columns));
        while ($enum1.moveNext()) {
            var key = $enum1.current;
            var col = this.columns[key];
            if (col.ucd.toLowerCase().indexOf('pos.eq.dec') > -1 || col.ucd.toLowerCase().indexOf('pos_eq_dec') > -1) {
                return col;
            }
        }
        var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(this.columns));
        while ($enum2.moveNext()) {
            var key = $enum2.current;
            var col = this.columns[key];
            if (col.name.toLowerCase().indexOf('dec') > -1) {
                return col;
            }
        }
        return null;
    },

    getMagColumn: function () {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(this.columns));
        while ($enum1.moveNext()) {
            var key = $enum1.current;
            var col = this.columns[key];
            if (col.ucd.toLowerCase().indexOf('phot.mag') > -1 || col.ucd.toLowerCase().indexOf('phot_mag') > -1) {
                return col;
            }
        }
        return null;
    },

    getDistanceColumn: function () {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(this.columns));
        while ($enum1.moveNext()) {
            var key = $enum1.current;
            var col = this.columns[key];
            if (col.ucd.toLowerCase().indexOf('pos.distance') > -1 || col.ucd.toLowerCase().indexOf('pos_distance') > -1) {
                return col;
            }
        }
        return null;
    },

    toString: function () {
        var sb = new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.StringBuilder();
        var first = true;

        // Copy header

        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(this.columns));
        while ($enum1.moveNext()) {
            var key = $enum1.current;
            var col = this.columns[key];
            if (first) {
                first = false;
            }
            else {
                sb.append('\t');
            }
            sb.append(col.name);
        }
        sb.appendLine('');

        // copy rows

        var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.rows);
        while ($enum2.moveNext()) {
            var row = $enum2.current;
            first = true;
            var $enum3 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(row.columnData);
            while ($enum3.moveNext()) {
                var col = $enum3.current;
                if (first) {
                    first = false;
                }
                else {
                    sb.append('\t');
                }
                sb.append(col.toString());
            }
            sb.appendLine('');
        }
        return sb.toString();
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("VoTable", [VoTable, VoTable$, null]);


// wwtlib.VoRow

function VoRow(owner) {
    this.selected = false;
    this.owner = owner;
}

var VoRow$ = {
    getColumnData: function (key) {
        if (this.owner.columns[key] != null) {
            return this.columnData[this.owner.columns[key].index];
        }
        return null;
    },

    get_item: function (index) {
        if (index < 0 || index >= this.columnData.length) {
            return null;
        }
        return this.columnData[index];
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("VoRow", [VoRow, VoRow$, null]);


// wwtlib.VoColumn

function VoColumn(node, index) {
    this.id = '';
    this.type = 0;
    this.precision = 0;
    this.dimentions = 0;
    this.sizes = null;
    this.ucd = '';
    this.unit = '';
    this.name = '';
    this.index = 0;
    this.index = index;
    if (node.attributes.getNamedItem('datatype') != null) {
        this.type = VoColumn.getType(node.attributes.getNamedItem('datatype').nodeValue);
    }
    if (node.attributes.getNamedItem('ucd') != null) {
        this.ucd = node.attributes.getNamedItem('ucd').nodeValue;
    }
    if (node.attributes.getNamedItem('precision') != null) {
        try {
            this.precision = parseInt(node.attributes.getNamedItem('precision').nodeValue);
        }
        catch ($e1) {
        }
    }
    if (node.attributes.getNamedItem('ID') != null) {
        this.id = node.attributes.getNamedItem('ID').nodeValue;
    }
    if (node.attributes.getNamedItem('name') != null) {
        this.name = node.attributes.getNamedItem('name').nodeValue;
    }
    else {
        this.name = this.id;
    }
    if (node.attributes.getNamedItem('unit') != null) {
        this.unit = node.attributes.getNamedItem('unit').nodeValue;
    }
    if (node.attributes.getNamedItem('arraysize') != null) {
        var split = node.attributes.getNamedItem('arraysize').nodeValue.split('x');
        this.dimentions = split.length;
        this.sizes = new Array(split.length);
        var indexer = 0;
        var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(split);
        while ($enum2.moveNext()) {
            var dim = $enum2.current;
            if (!(dim.indexOf('*') > -1)) {
                this.sizes[indexer++] = parseInt(dim);
            }
            else {
                var len = 9999;
                var lenString = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(dim, '*', '');
                if (lenString.length > 0) {
                    len = parseInt(lenString);
                }
                this.sizes[indexer++] = len;
            }
        }
    }
}

VoColumn.getType = function (type) {
    var Type = 13;
    switch (type) {
        case 'boolean':
            Type = 1;
            break;
        case 'bit':
            Type = 2;
            break;
        case 'unsignedByte':
            Type = 3;
            break;
        case 'short':
            Type = 4;
            break;
        case 'int':
            Type = 5;
            break;
        case 'long':
            Type = 6;
            break;
        case 'char':
            Type = 7;
            break;
        case 'unicodeChar':
            Type = 8;
            break;
        case 'float':
            Type = 9;
            break;
        case 'double':
            Type = 10;
            break;
        case 'floatComplex':
            Type = 11;
            break;
        case 'doubleComplex':
            Type = 12;
            break;
        default:
            Type = 13;
            break;
    }
    return Type;
};

var VoColumn$ = {
    toString: function () {
        return this.name;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("VoColumn", [VoColumn, VoColumn$, null]);



/***/ }),

/***/ "./esm/layers/vo_table_layer.js":
/*!**************************************!*\
  !*** ./esm/layers/vo_table_layer.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VoTableLayer: () => (/* binding */ VoTableLayer)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
/* harmony import */ var _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../graphics/primitives3d.js */ "./esm/graphics/primitives3d.js");
/* harmony import */ var _graphics_texture_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../graphics/texture.js */ "./esm/graphics/texture.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../coordinates.js */ "./esm/coordinates.js");
/* harmony import */ var _place_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../place.js */ "./esm/place.js");
/* harmony import */ var _space_time_controller_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../space_time_controller.js */ "./esm/space_time_controller.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _layer_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./layer.js */ "./esm/layers/layer.js");
/* harmony import */ var _vo_table_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./vo_table.js */ "./esm/layers/vo_table.js");
/* harmony import */ var _spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./spreadsheet_layer.js */ "./esm/layers/spreadsheet_layer.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A layer that renders a VO data table.
//
// This has massive redundancy with SpreadSheetLayer, which I think was
// necessitated by limitations in ScriptSharp. It would be nice to streamline
// things.
















// wwtlib.VoTableLayer

function VoTableLayer() {
    this.isLongIndex = false;
    this.shapeVertexCount = 0;
    this.lines = false;
    this.latColumn = -1;
    this.fixedSize = 1;
    this.decay = 0;
    this.timeSeries = false;
    this._dynamicData$1 = false;
    this._autoUpdate$1 = false;
    this._dataSourceUrl$1 = '';
    this._beginRange$1 = new Date('1/1/2100');
    this._endRange$1 = new Date('01/01/1800');
    this.markerDomainValues = {};
    this.colorDomainValues = {};
    this._coordinatesType$1 = 0;
    this.lngColumn = -1;
    this.geometryColumn = -1;
    this._xAxisColumn$1 = -1;
    this._yAxisColumn$1 = -1;
    this._zAxisColumn$1 = -1;
    this._xAxisReverse$1 = false;
    this._yAxisReverse$1 = false;
    this._zAxisReverse$1 = false;
    this._altType$1 = 3;
    this._markerMix$1 = 0;
    this._raUnits$1 = 0;
    this._colorMap$1 = 3;
    this._markerColumn$1 = -1;
    this._colorMapColumn$1 = -1;
    this._plotType$1 = 0;
    this._markerIndex$1 = 0;
    this._showFarSide$1 = false;
    this._markerScale$1 = 1;
    this._altUnit$1 = 1;
    this._cartesianScale$1 = 1;
    this._cartesianCustomScale$1 = 1;
    this.altColumn = -1;
    this.startDateColumn = -1;
    this.endDateColumn = -1;
    this.sizeColumn = -1;
    this.nameColumn = 0;
    this._hyperlinkFormat$1 = '';
    this._hyperlinkColumn$1 = -1;
    this.scaleFactor = 1;
    this.pointScaleType = 1;
    this.positions = [];
    this.bufferIsFlat = false;
    this.baseDate = new Date(2010, 0, 1, 12, 0, 0);
    this.dirty = true;
    this._filename$1 = '';
    _layer_js__WEBPACK_IMPORTED_MODULE_10__.Layer.call(this);
    this._table$1 = null;
    this._filename$1 = '';
    this.set_plotType(2);
}

VoTableLayer._circleTexture$1 = null;

VoTableLayer.get__circleTexture$1 = function () {
    if (VoTableLayer._circleTexture$1 == null) {
        var url = _url_helpers_js__WEBPACK_IMPORTED_MODULE_9__.URLHelpers.singleton.engineAssetUrl('circle.png');
        VoTableLayer._circleTexture$1 = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_4__.Texture.fromUrl(url);
    }
    return VoTableLayer._circleTexture$1;
};

VoTableLayer.create = function (table, plotType) {
    var layer = new VoTableLayer();
    layer._table$1 = table;
    layer._filename$1 = table.loadFilename;
    layer.set_lngColumn(table.getRAColumn().index);
    layer.set_latColumn(table.getDecColumn().index);
    layer.sizeColumn = table.getColumnByUcd('phot.mag').index;
    layer.set_plotType(plotType);
    return layer;
};

var VoTableLayer$ = {
    get_dynamicData: function () {
        return this._dynamicData$1;
    },

    set_dynamicData: function (value) {
        this._dynamicData$1 = value;
        return value;
    },

    get_autoUpdate: function () {
        return this._autoUpdate$1;
    },

    set_autoUpdate: function (value) {
        this._autoUpdate$1 = value;
        return value;
    },

    get_dataSourceUrl: function () {
        return this._dataSourceUrl$1;
    },

    set_dataSourceUrl: function (value) {
        this._dataSourceUrl$1 = value;
        return value;
    },

    get_timeSeries: function () {
        return this.timeSeries;
    },

    set_timeSeries: function (value) {
        if (this.timeSeries !== value) {
            this.version++;
            this.timeSeries = value;
        }
        return value;
    },

    get_beginRange: function () {
        return this._beginRange$1;
    },

    set_beginRange: function (value) {
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.compareDates(this._beginRange$1, value)) {
            this.version++;
            this._beginRange$1 = value;
        }
        return value;
    },

    get_endRange: function () {
        return this._endRange$1;
    },

    set_endRange: function (value) {
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.compareDates(this._endRange$1, value)) {
            this.version++;
            this._endRange$1 = value;
        }
        return value;
    },

    initializeFromXml: function (node) {
        this.set_timeSeries(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('TimeSeries').nodeValue));
        this.set_beginRange(new Date(node.attributes.getNamedItem('BeginRange').nodeValue));
        this.set_endRange(new Date(node.attributes.getNamedItem('EndRange').nodeValue));
        this.set_decay(parseFloat(node.attributes.getNamedItem('Decay').nodeValue));
        this.set_coordinatesType(_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('CoordinatesTypes', node.attributes.getNamedItem('CoordinatesType').nodeValue));
        if (this.get_coordinatesType() < 0) {
            this.set_coordinatesType(0);
        }
        this.set_latColumn(parseInt(node.attributes.getNamedItem('LatColumn').nodeValue));
        this.set_lngColumn(parseInt(node.attributes.getNamedItem('LngColumn').nodeValue));
        if (node.attributes.getNamedItem('GeometryColumn') != null) {
            this.set_geometryColumn(parseInt(node.attributes.getNamedItem('GeometryColumn').nodeValue));
        }
        switch (node.attributes.getNamedItem('AltType').nodeValue) {
            case 'Depth':
                this.set_altType(0);
                break;
            case 'Altitude':
                this.set_altType(1);
                break;
            case 'Distance':
                this.set_altType(2);
                break;
            case 'SeaLevel':
                this.set_altType(3);
                break;
            case 'Terrain':
                this.set_altType(4);
                break;
            default:
                break;
        }
        this.set_markerMix(0);
        switch (node.attributes.getNamedItem('ColorMap').nodeValue) {
            case 'Same_For_All':
                this.set__colorMap(0);
                break;
            case 'Group_by_Values':
                this.set__colorMap(2);
                break;
            case 'Per_Column_Literal':
                this.set__colorMap(3);
                break;
            default:
                break;
        }
        this.set_markerColumn(parseInt(node.attributes.getNamedItem('MarkerColumn').nodeValue));
        this.set_colorMapColumn(parseInt(node.attributes.getNamedItem('ColorMapColumn').nodeValue));
        switch (node.attributes.getNamedItem('PlotType').nodeValue) {
            case 'Gaussian':
                this.set_plotType(0);
                break;
            case 'Point':
                this.set_plotType(1);
                break;
            case 'Circle':
                this.set_plotType(2);
                break;
            case 'PushPin':
                this.set_plotType(4);
                break;
            default:
                break;
        }
        this.set_markerIndex(parseInt(node.attributes.getNamedItem('MarkerIndex').nodeValue));
        switch (node.attributes.getNamedItem('MarkerScale').nodeValue) {
            case 'Screen':
                this.set_markerScale(0);
                break;
            case 'World':
                this.set_markerScale(1);
                break;
            default:
                break;
        }
        switch (node.attributes.getNamedItem('AltUnit').nodeValue) {
            case 'Meters':
                this.set_altUnit(1);
                break;
            case 'Feet':
                this.set_altUnit(2);
                break;
            case 'Inches':
                this.set_altUnit(3);
                break;
            case 'Miles':
                this.set_altUnit(4);
                break;
            case 'Kilometers':
                this.set_altUnit(5);
                break;
            case 'AstronomicalUnits':
                this.set_altUnit(6);
                break;
            case 'LightYears':
                this.set_altUnit(7);
                break;
            case 'Parsecs':
                this.set_altUnit(8);
                break;
            case 'MegaParsecs':
                this.set_altUnit(9);
                break;
            case 'Custom':
                this.set_altUnit(10);
                break;
            default:
                break;
        }
        this.set_altColumn(parseInt(node.attributes.getNamedItem('AltColumn').nodeValue));
        this.set_startDateColumn(parseInt(node.attributes.getNamedItem('StartDateColumn').nodeValue));
        this.set_endDateColumn(parseInt(node.attributes.getNamedItem('EndDateColumn').nodeValue));
        this.set_sizeColumn(parseInt(node.attributes.getNamedItem('SizeColumn').nodeValue));
        this.set_hyperlinkFormat(node.attributes.getNamedItem('HyperlinkFormat').nodeValue);
        this.set_hyperlinkColumn(parseInt(node.attributes.getNamedItem('HyperlinkColumn').nodeValue));
        this.set_scaleFactor(parseFloat(node.attributes.getNamedItem('ScaleFactor').nodeValue));
        switch (node.attributes.getNamedItem('PointScaleType').nodeValue) {
            case 'Linear':
                this.set_pointScaleType(0);
                break;
            case 'Power':
                this.set_pointScaleType(1);
                break;
            case 'Log':
                this.set_pointScaleType(2);
                break;
            case 'Constant':
                this.set_pointScaleType(3);
                break;
            case 'StellarMagnitude':
                this.set_pointScaleType(4);
                break;
            default:
                break;
        }
        if (node.attributes.getNamedItem('ShowFarSide') != null) {
            this.set_showFarSide(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('ShowFarSide').nodeValue));
        }
        if (node.attributes.getNamedItem('RaUnits') != null) {
            switch (node.attributes.getNamedItem('RaUnits').nodeValue) {
                case 'Hours':
                    this.set_raUnits(0);
                    break;
                case 'Degrees':
                    this.set_raUnits(1);
                    break;
            }
        }
        if (node.attributes.getNamedItem('HoverTextColumn') != null) {
            this.set_nameColumn(parseInt(node.attributes.getNamedItem('HoverTextColumn').nodeValue));
        }
        if (node.attributes.getNamedItem('XAxisColumn') != null) {
            this.set_xAxisColumn(parseInt(node.attributes.getNamedItem('XAxisColumn').nodeValue));
            this.set_xAxisReverse(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('XAxisReverse').nodeValue));
            this.set_yAxisColumn(parseInt(node.attributes.getNamedItem('YAxisColumn').nodeValue));
            this.set_yAxisReverse(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('YAxisReverse').nodeValue));
            this.set_zAxisColumn(parseInt(node.attributes.getNamedItem('ZAxisColumn').nodeValue));
            this.set_zAxisReverse(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('ZAxisReverse').nodeValue));
            switch (node.attributes.getNamedItem('CartesianScale').nodeValue) {
                case 'Meters':
                    this.set_cartesianScale(1);
                    break;
                case 'Feet':
                    this.set_cartesianScale(2);
                    break;
                case 'Inches':
                    this.set_cartesianScale(3);
                    break;
                case 'Miles':
                    this.set_cartesianScale(4);
                    break;
                case 'Kilometers':
                    this.set_cartesianScale(5);
                    break;
                case 'AstronomicalUnits':
                    this.set_cartesianScale(6);
                    break;
                case 'LightYears':
                    this.set_cartesianScale(7);
                    break;
                case 'Parsecs':
                    this.set_cartesianScale(8);
                    break;
                case 'MegaParsecs':
                    this.set_cartesianScale(9);
                    break;
                case 'Custom':
                    this.set_cartesianScale(10);
                    break;
                default:
                    break;
            }
            this.set_cartesianCustomScale(parseFloat(node.attributes.getNamedItem('CartesianCustomScale').nodeValue));
        }
        if (node.attributes.getNamedItem('DynamicData') != null) {
            this.set_dynamicData(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('DynamicData').nodeValue));
            this.set_autoUpdate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('AutoUpdate').nodeValue));
            this.set_dataSourceUrl(node.attributes.getNamedItem('DataSourceUrl').nodeValue);
        }
    },

    get_decay: function () {
        return this.decay;
    },

    set_decay: function (value) {
        if (this.decay !== value) {
            this.version++;
            this.decay = value;
        }
        return value;
    },

    get_coordinatesType: function () {
        return this._coordinatesType$1;
    },

    set_coordinatesType: function (value) {
        if (this._coordinatesType$1 !== value) {
            this.version++;
            this._coordinatesType$1 = value;
        }
        return value;
    },

    get_latColumn: function () {
        return this.latColumn;
    },

    set_latColumn: function (value) {
        if (this.latColumn !== value) {
            this.version++;
            this.latColumn = value;
        }
        return value;
    },

    get_lngColumn: function () {
        return this.lngColumn;
    },

    set_lngColumn: function (value) {
        if (this.lngColumn !== value) {
            this.version++;
            this.lngColumn = value;
        }
        return value;
    },

    get_geometryColumn: function () {
        return this.geometryColumn;
    },

    set_geometryColumn: function (value) {
        if (this.geometryColumn !== value) {
            this.version++;
            this.geometryColumn = value;
        }
        return value;
    },

    get_xAxisColumn: function () {
        return this._xAxisColumn$1;
    },

    set_xAxisColumn: function (value) {
        if (this._xAxisColumn$1 !== value) {
            this.version++;
            this._xAxisColumn$1 = value;
        }
        return value;
    },

    get_yAxisColumn: function () {
        return this._yAxisColumn$1;
    },

    set_yAxisColumn: function (value) {
        if (this._yAxisColumn$1 !== value) {
            this.version++;
            this._yAxisColumn$1 = value;
        }
        return value;
    },

    get_zAxisColumn: function () {
        return this._zAxisColumn$1;
    },

    set_zAxisColumn: function (value) {
        if (this._zAxisColumn$1 !== value) {
            this.version++;
            this._zAxisColumn$1 = value;
        }
        return value;
    },

    get_xAxisReverse: function () {
        return this._xAxisReverse$1;
    },

    set_xAxisReverse: function (value) {
        if (this._xAxisReverse$1 !== value) {
            this.version++;
            this._xAxisReverse$1 = value;
        }
        return value;
    },

    get_yAxisReverse: function () {
        return this._yAxisReverse$1;
    },

    set_yAxisReverse: function (value) {
        if (this._yAxisReverse$1 !== value) {
            this.version++;
            this._yAxisReverse$1 = value;
        }
        return value;
    },

    get_zAxisReverse: function () {
        return this._zAxisReverse$1;
    },

    set_zAxisReverse: function (value) {
        if (this._zAxisReverse$1 !== value) {
            this.version++;
            this._zAxisReverse$1 = value;
        }
        return value;
    },

    get_altType: function () {
        return this._altType$1;
    },

    set_altType: function (value) {
        if (this._altType$1 !== value) {
            this.version++;
            this._altType$1 = value;
        }
        return value;
    },

    get_markerMix: function () {
        return this._markerMix$1;
    },

    set_markerMix: function (value) {
        if (this._markerMix$1 !== value) {
            this.version++;
            this._markerMix$1 = value;
        }
        return value;
    },

    get_raUnits: function () {
        return this._raUnits$1;
    },

    set_raUnits: function (value) {
        if (this._raUnits$1 !== value) {
            this.version++;
            this._raUnits$1 = value;
        }
        return value;
    },

    get__colorMap: function () {
        return this._colorMap$1;
    },

    set__colorMap: function (value) {
        if (this._colorMap$1 !== value) {
            this.version++;
            this._colorMap$1 = value;
        }
        return value;
    },

    get_markerColumn: function () {
        return this._markerColumn$1;
    },

    set_markerColumn: function (value) {
        if (this._markerColumn$1 !== value) {
            this.version++;
            this._markerColumn$1 = value;
        }
        return value;
    },

    get_colorMapColumn: function () {
        return this._colorMapColumn$1;
    },

    set_colorMapColumn: function (value) {
        if (this._colorMapColumn$1 !== value) {
            this.version++;
            this._colorMapColumn$1 = value;
        }
        return value;
    },

    get_plotType: function () {
        return this._plotType$1;
    },

    set_plotType: function (value) {
        if (this._plotType$1 !== value) {
            this.version++;
            this._plotType$1 = value;
        }
        return value;
    },

    get_markerIndex: function () {
        return this._markerIndex$1;
    },

    set_markerIndex: function (value) {
        if (this._markerIndex$1 !== value) {
            this.version++;
            this._markerIndex$1 = value;
        }
        return value;
    },

    get_showFarSide: function () {
        return this._showFarSide$1;
    },

    set_showFarSide: function (value) {
        if (this._showFarSide$1 !== value) {
            this.version++;
            this._showFarSide$1 = value;
        }
        return value;
    },

    get_markerScale: function () {
        return this._markerScale$1;
    },

    set_markerScale: function (value) {
        if (this._markerScale$1 !== value) {
            this.version++;
            this._markerScale$1 = value;
        }
        return value;
    },

    get_altUnit: function () {
        return this._altUnit$1;
    },

    set_altUnit: function (value) {
        if (this._altUnit$1 !== value) {
            this.version++;
            this._altUnit$1 = value;
        }
        return value;
    },

    get_cartesianScale: function () {
        return this._cartesianScale$1;
    },

    set_cartesianScale: function (value) {
        if (this._cartesianScale$1 !== value) {
            this.version++;
            this._cartesianScale$1 = value;
        }
        return value;
    },

    get_cartesianCustomScale: function () {
        return this._cartesianCustomScale$1;
    },

    set_cartesianCustomScale: function (value) {
        if (this._cartesianCustomScale$1 !== value) {
            this.version++;
            this._cartesianCustomScale$1 = value;
        }
        return value;
    },

    get_altColumn: function () {
        return this.altColumn;
    },

    set_altColumn: function (value) {
        if (this.altColumn !== value) {
            this.version++;
            this.altColumn = value;
        }
        return value;
    },

    get_startDateColumn: function () {
        return this.startDateColumn;
    },

    set_startDateColumn: function (value) {
        if (this.startDateColumn !== value) {
            this.version++;
            this.startDateColumn = value;
        }
        return value;
    },

    get_endDateColumn: function () {
        return this.endDateColumn;
    },

    set_endDateColumn: function (value) {
        if (this.endDateColumn !== value) {
            this.version++;
            this.endDateColumn = value;
        }
        return value;
    },

    get_sizeColumn: function () {
        return this.sizeColumn;
    },

    set_sizeColumn: function (value) {
        if (this.sizeColumn !== value) {
            this.version++;
            this.sizeColumn = value;
        }
        return value;
    },

    get_nameColumn: function () {
        return this.nameColumn;
    },

    set_nameColumn: function (value) {
        if (this.nameColumn !== value) {
            this.version++;
            this.nameColumn = value;
        }
        return value;
    },

    get_hyperlinkFormat: function () {
        return this._hyperlinkFormat$1;
    },

    set_hyperlinkFormat: function (value) {
        if (this._hyperlinkFormat$1 !== value) {
            this.version++;
            this._hyperlinkFormat$1 = value;
        }
        return value;
    },

    get_hyperlinkColumn: function () {
        return this._hyperlinkColumn$1;
    },

    set_hyperlinkColumn: function (value) {
        if (this._hyperlinkColumn$1 !== value) {
            this.version++;
            this._hyperlinkColumn$1 = value;
        }
        return value;
    },

    get_scaleFactor: function () {
        return this.scaleFactor;
    },

    set_scaleFactor: function (value) {
        if (this.scaleFactor !== value) {
            this.version++;
            this.scaleFactor = value;
        }
        return value;
    },

    get_pointScaleType: function () {
        return this.pointScaleType;
    },

    set_pointScaleType: function (value) {
        if (this.pointScaleType !== value) {
            this.version++;
            this.pointScaleType = value;
        }
        return value;
    },

    draw: function (renderContext, opacity, flat) {
        var device = renderContext;
        if (this.bufferIsFlat !== flat) {
            this.cleanUp();
            this.bufferIsFlat = flat;
        }
        if (this.dirty) {
            this.prepVertexBuffer(renderContext, opacity);
            this.dirty = false;
        }
        var jNow = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_8__.SpaceTimeController.get_jNow() - _space_time_controller_js__WEBPACK_IMPORTED_MODULE_8__.SpaceTimeController.utcToJulian(this.baseDate);
        var adjustedScale = this.scaleFactor;
        if (flat && this.astronomical && (this._markerScale$1 === 1)) {
            adjustedScale = (this.scaleFactor / (renderContext.viewCamera.zoom / 360));
        }
        if (this.triangleList2d != null) {
            this.triangleList2d.decay = this.decay;
            this.triangleList2d.sky = this.get_astronomical();
            this.triangleList2d.timeSeries = this.timeSeries;
            this.triangleList2d.jNow = jNow;
            this.triangleList2d.draw(renderContext, opacity * this.get_opacity(), 1);
        }
        if (this.triangleList != null) {
            this.triangleList.decay = this.decay;
            this.triangleList.sky = this.get_astronomical();
            this.triangleList.timeSeries = this.timeSeries;
            this.triangleList.jNow = jNow;
            this.triangleList.draw(renderContext, opacity * this.get_opacity(), 1);
        }
        if (this.pointList != null) {
            this.pointList.depthBuffered = false;
            this.pointList.showFarSide = this.get_showFarSide();
            this.pointList.decay = (this.timeSeries) ? this.decay : 0;
            this.pointList.sky = this.get_astronomical();
            this.pointList.timeSeries = this.timeSeries;
            this.pointList.jNow = jNow;
            this.pointList.scale = (this._markerScale$1 === 1) ? adjustedScale : -adjustedScale;
            switch (this._plotType$1) {
                case 0:
                    this.pointList.draw(renderContext, opacity * this.get_opacity(), false);
                    break;
                case 2:
                    this.pointList.drawTextured(renderContext, VoTableLayer.get__circleTexture$1().texture2d, opacity * this.get_opacity());
                    break;
                case 1:
                    this.pointList.drawTextured(renderContext, _spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_12__.PushPin.getPushPinTexture(19), opacity * this.get_opacity());
                    break;
                case 3:
                    this.pointList.drawTextured(renderContext, _spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_12__.PushPin.getPushPinTexture(35), opacity * this.get_opacity());
                    break;
                case 5:
                case 4:
                    this.pointList.drawTextured(renderContext, _spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_12__.PushPin.getPushPinTexture(this._markerIndex$1), opacity * this.get_opacity());
                    break;
                default:
                    break;
            }
        }
        if (this.lineList != null) {
            this.lineList.sky = this.get_astronomical();
            this.lineList.decay = this.decay;
            this.lineList.timeSeries = this.timeSeries;
            this.lineList.jNow = jNow;
            this.lineList.drawLines(renderContext, opacity * this.get_opacity());
        }
        if (this.lineList2d != null) {
            this.lineList2d.sky = this.get_astronomical();
            this.lineList2d.decay = this.decay;
            this.lineList2d.timeSeries = this.timeSeries;
            this.lineList2d.showFarSide = this.get_showFarSide();
            this.lineList2d.jNow = jNow;
            this.lineList2d.drawLines(renderContext, opacity * this.get_opacity());
        }
        return true;
    },

    initFromXml: function (node) {
        _layer_js__WEBPACK_IMPORTED_MODULE_10__.Layer.prototype.initFromXml.call(this, node);
    },

    cleanUp: function () {
        this.dirty = true;
        if (this.lineList != null) {
            this.lineList.clear();
        }
        if (this.lineList2d != null) {
            this.lineList2d.clear();
        }
        if (this.triangleList2d != null) {
            this.triangleList2d.clear();
        }
        if (this.pointList != null) {
            this.pointList.clear();
        }
        if (this.triangleList != null) {
            this.triangleList.clear();
        }
    },

    dynamicUpdate: function () {
        return false;
    },

    addFilesToCabinet: function (fc) {
        var fName = this._filename$1;
        var fileName = fc.tempDirectory + _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0}\\{1}.txt', fc.get_packageID(), this.id.toString());
        var path = fName.substring(0, fName.lastIndexOf('\\') + 1);
        var path2 = fileName.substring(0, fileName.lastIndexOf('\\') + 1);
    },

    loadData: function (tourDoc, filename) {
        var $this = this;

        var blob = tourDoc.getFileBlob(filename);
        var doc = new FileReader();
        doc.onloadend = function (ee) {
            var data = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(doc.result, String);
            $this._table$1 = _vo_table_js__WEBPACK_IMPORTED_MODULE_11__.VoTable.loadFromString(data);
            $this.set_lngColumn($this._table$1.getRAColumn().index);
            $this.set_latColumn($this._table$1.getDecColumn().index);
        };
        doc.readAsText(blob);
    },

    canCopyToClipboard: function () {
        return true;
    },

    copyToClipboard: function () { },

    findClosest: function (target, distance, defaultPlace, astronomical) {
        var searchPoint = _coordinates_js__WEBPACK_IMPORTED_MODULE_6__.Coordinates.geoTo3dDouble(target.get_lat(), target.get_lng());
        var dist;
        if (defaultPlace != null) {
            var testPoint = _coordinates_js__WEBPACK_IMPORTED_MODULE_6__.Coordinates.raDecTo3dAu(defaultPlace.get_RA(), -defaultPlace.get_dec(), -1);
            dist = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(searchPoint, testPoint);
            distance = dist.length();
        }
        var closestItem = -1;
        var index = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.positions);
        while ($enum1.moveNext()) {
            var point = $enum1.current;
            dist = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(searchPoint, point);
            if (dist.length() < distance) {
                distance = dist.length();
                closestItem = index;
            }
            index++;
        }
        if (closestItem === -1) {
            return defaultPlace;
        }
        var pnt = _coordinates_js__WEBPACK_IMPORTED_MODULE_6__.Coordinates.cartesianToSpherical2(this.positions[closestItem]);
        var name = this._table$1.rows[closestItem].columnData[this.nameColumn].toString();
        if (this.nameColumn === this.startDateColumn || this.nameColumn === this.endDateColumn) {
            name = _spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_12__.SpreadSheetLayer.parseDate(name).toString();
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(name)) {
            name = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('RA={0}, Dec={1}', _coordinates_js__WEBPACK_IMPORTED_MODULE_6__.Coordinates.formatHMS(pnt.get_RA()), _coordinates_js__WEBPACK_IMPORTED_MODULE_6__.Coordinates.formatDMS(pnt.get_dec()));
        }
        var place = _place_js__WEBPACK_IMPORTED_MODULE_7__.Place.create(name, pnt.get_lat(), pnt.get_RA(), 268435456, '', 2, -1);
        var rowData = {};
        for (var i = 0; i < _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyCount(this._table$1.columns); i++) {
            var colValue = this._table$1.rows[closestItem].get_item(i).toString();
            if (i === this.startDateColumn || i === this.endDateColumn) {
                colValue = _spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_12__.SpreadSheetLayer.parseDate(colValue).toString();
            }
            if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(rowData, this._table$1.column[i].name) && !_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._table$1.column[i].name)) {
                rowData[this._table$1.column[i].name] = colValue;
            }
            else {
                rowData['Column' + i.toString()] = colValue;
            }
        }
        place.set_tag(rowData);
        return place;
    },

    prepVertexBuffer: function (renderContext, opacity) {
        var col = this._table$1.getColumnByUcd('meta.id');
        if (col == null) {
            col = this._table$1.column[0];
        }
        var siapSet = this.isSiapResultSet();
        if (this.pointList == null) {
            this.pointList = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__.PointList(renderContext);
        }
        if (this.lineList2d == null) {
            this.lineList2d = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__.LineList();
        }
        this.lineList2d.clear();
        var stcsCol = this._table$1.getColumnByUcd('phys.area;obs.field');
        if (stcsCol == null && _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this._table$1.columns, 'regionSTCS')) {
            stcsCol = this._table$1.columns['regionSTCS'];
        }
        if (!this.get_plotType()) {
            this.set_markerScale(1);
        } else {
            this.set_markerScale(0);
        }
        var vertList = [];
        var indexList = [];
        var lastItem = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__.TimeSeriesPointVertex();
        this.positions.length = 0;
        var currentIndex = 0;
        var color = _color_js__WEBPACK_IMPORTED_MODULE_5__.Color.fromArgb(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((opacity * this.get_color().a)), this.get_color().r, this.get_color().g, this.get_color().b);
        this.pointScaleType = 4;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._table$1.rows);
        while ($enum1.moveNext()) {
            var row = $enum1.current;
            try {
                if (this.lngColumn > -1 && this.latColumn > -1) {
                    var ra = parseFloat(row.get_item(this.get_lngColumn()).toString());
                    var dec = parseFloat(row.get_item(this.get_latColumn()).toString());
                    var position = _coordinates_js__WEBPACK_IMPORTED_MODULE_6__.Coordinates.geoTo3dDouble(dec, ra);
                    lastItem.position = position;
                    this.positions.push(lastItem.position);
                    lastItem.set_color(color);
                    if (this.sizeColumn > -1) {
                        try {
                            if (!this.get_markerScale()) {
                                lastItem.pointSize = 20;
                            }
                            else {
                                switch (this.pointScaleType) {
                                    case 0:
                                        lastItem.pointSize = parseFloat(row.get_item(this.sizeColumn).toString());
                                        break;
                                    case 2:
                                        lastItem.pointSize = Math.log(parseFloat(row.get_item(this.sizeColumn).toString()));
                                        break;
                                    case 1:
                                        lastItem.pointSize = Math.pow(2, parseFloat(row.get_item(this.sizeColumn).toString()));
                                        break;
                                    case 4:
                                        var size = parseFloat(row.get_item(this.sizeColumn).toString());
                                        lastItem.pointSize = (40 / Math.pow(1.6, size)) * 10;
                                        break;
                                    case 3:
                                        lastItem.pointSize = 1;
                                        break;
                                    default:
                                        break;
                                }
                            }
                        }
                        catch ($e2) {
                            lastItem.pointSize = 0.01;
                        }
                    }
                    else {
                        if (!this.get_markerScale()) {
                            lastItem.pointSize = 20;
                        }
                        else {
                            lastItem.pointSize = Math.pow(2, 1) * 100;
                        }
                    }
                    if (this.startDateColumn > -1) {
                        var dateTime = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.date(row.get_item(this.startDateColumn).toString());
                        lastItem.tu = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_8__.SpaceTimeController.utcToJulian(dateTime);
                        lastItem.tv = 0;
                    }
                    vertList.push(lastItem);
                    this.pointList.addPoint(lastItem.position, lastItem.color, new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__.Dates(lastItem.tu, lastItem.tv), lastItem.pointSize);
                    currentIndex++;
                }
                if (siapSet && stcsCol != null) {
                    this._addSiapStcRow$1(stcsCol.name, row, row === this._table$1.selectedRow);
                }
            }
            catch ($e3) {
            }
            this.lines = false;
        }
        if (siapSet && stcsCol != null) {
            this._addSiapStcRow$1(stcsCol.name, this._table$1.selectedRow, true);
        }
        return true;
    },
    _addSiapStcRow$1: function (stcsColName, row, selected) {
        var stcs = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(row.getColumnData(stcsColName).toString(), '  ', ' ');
        var col = _color_js__WEBPACK_IMPORTED_MODULE_5__.Color.fromArgb(120, 255, 255, 255);
        if (selected) {
            col = _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_yellow();
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.startsWith(stcs, 'Polygon J2000')) {
            var parts = stcs.split(' ');
            var len = parts.length;
            var index = 0;
            while (index < len) {
                if (parts[index] === 'Polygon') {
                    index += 2;
                    var lastPoint = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
                    var firstPoint = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
                    var start = true;
                    for (var i = index; i < len; i += 2) {
                        if (parts[i] === 'Polygon') {
                            start = true;
                            break;
                        }
                        else {
                            var Xcoord = _coordinates_js__WEBPACK_IMPORTED_MODULE_6__.Coordinates.parseRA(parts[i], true) * 15 + 180;
                            var Ycoord = _coordinates_js__WEBPACK_IMPORTED_MODULE_6__.Coordinates.parseDec(parts[i + 1]);
                            var pnt = _coordinates_js__WEBPACK_IMPORTED_MODULE_6__.Coordinates.geoTo3dDouble(Ycoord, Xcoord);
                            if (!start) {
                                this.lineList2d.addLine(lastPoint, pnt, col, new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__.Dates(0, 0));
                            }
                            else {
                                firstPoint = pnt;
                                start = false;
                            }
                            lastPoint = pnt;
                        }
                        index += 2;
                    }
                    if (len > 4) {
                        this.lineList2d.addLine(firstPoint, lastPoint, col, new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__.Dates(0, 0));
                    }
                }
            }
        }
    },

    isSiapResultSet: function () {
        return this._table$1.getColumnByUcd('vox:image.title') != null && this._table$1.getColumnByUcd('VOX:Image.AccessReference') != null;
    },

    get_header: function () {
        var header = new Array(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyCount(this._table$1.columns));
        var index = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._table$1.column);
        while ($enum1.moveNext()) {
            var col = $enum1.current;
            header[index++] = col.name;
        }
        return header;
    },

    get_table: function () {
        return this._table$1;
    },

    set_table: function (value) {
        this._table$1 = value;
        return value;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("VoTableLayer", [VoTableLayer, VoTableLayer$, _layer_js__WEBPACK_IMPORTED_MODULE_10__.Layer]);


/***/ }),

/***/ "./esm/layers/wcs_image.js":
/*!*********************************!*\
  !*** ./esm/layers/wcs_image.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WcsImage: () => (/* binding */ WcsImage)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Information about an image with a World Coordinate System registration.




// wwtlib.WcsImage

function WcsImage() {
    this.copyright = '';
    this.creditsUrl = '';
    this._validWcs = false;
    this.keywords = [];
    this.description = '';
    this.scaleX = 0;
    this.scaleY = 0;
    this.centerX = 0;
    this.centerY = 0;
    this.rotation = 0;
    this.referenceX = 0;
    this.referenceY = 0;
    this.sizeX = 0;
    this.sizeY = 0;
    this.cd1_1 = 0;
    this.cd1_2 = 0;
    this.cd2_1 = 0;
    this.cd2_2 = 0;
    this.hasRotation = false;
    this.hasSize = false;
    this.hasScale = false;
    this.hasLocation = false;
    this.hasPixel = false;
    this.filename = '';
    this._colorCombine = false;
}

var WcsImage$ = {
    get_copyright: function () {
        return this.copyright;
    },

    set_copyright: function (value) {
        this.copyright = value;
        return value;
    },

    get_creditsUrl: function () {
        return this.creditsUrl;
    },

    set_creditsUrl: function (value) {
        this.creditsUrl = value;
        return value;
    },

    get_validWcs: function () {
        return this._validWcs;
    },

    set_validWcs: function (value) {
        this._validWcs = value;
        return value;
    },

    get_keywords: function () {
        if (!this.keywords.length) {
            this.keywords.push('Image File');
        }
        return this.keywords;
    },

    set_keywords: function (value) {
        this.keywords = value;
        return value;
    },

    get_description: function () {
        return this.description;
    },

    set_description: function (value) {
        this.description = value;
        return value;
    },

    get_scaleX: function () {
        return this.scaleX;
    },

    set_scaleX: function (value) {
        this.scaleX = value;
        return value;
    },

    get_scaleY: function () {
        return this.scaleY;
    },

    set_scaleY: function (value) {
        this.scaleY = value;
        return value;
    },

    get_centerX: function () {
        return this.centerX;
    },

    set_centerX: function (value) {
        this.centerX = value;
        return value;
    },

    get_viewCenterX: function () {
        return this.centerX + (this.get_sizeX() / 2 - this.get_referenceX()) * this.get_scaleX();
    },

    get_centerY: function () {
        return this.centerY;
    },

    set_centerY: function (value) {
        this.centerY = value;
        return value;
    },

    get_viewCenterY: function () {
        return this.centerY + (this.get_sizeY() / 2 - this.get_referenceY()) * this.get_scaleY();
    },

    get_rotation: function () {
        return this.rotation;
    },

    set_rotation: function (value) {
        this.rotation = value;
        return value;
    },

    get_referenceX: function () {
        return this.referenceX;
    },

    set_referenceX: function (value) {
        this.referenceX = value;
        return value;
    },

    get_referenceY: function () {
        return this.referenceY;
    },

    set_referenceY: function (value) {
        this.referenceY = value;
        return value;
    },

    get_sizeX: function () {
        return this.sizeX;
    },

    set_sizeX: function (value) {
        this.sizeX = value;
        return value;
    },

    get_sizeY: function () {
        return this.sizeY;
    },

    set_sizeY: function (value) {
        this.sizeY = value;
        return value;
    },

    get_cd1_1: function () {
        return this.cd1_1;
    },

    set_cd1_1: function (value) {
        this.cd1_1 = value;
        return value;
    },

    get_cd1_2: function () {
        return this.cd1_2;
    },

    set_cd1_2: function (value) {
        this.cd1_2 = value;
        return value;
    },

    get_cd2_1: function () {
        return this.cd2_1;
    },

    set_cd2_1: function (value) {
        this.cd2_1 = value;
        return value;
    },

    get_cd2_2: function () {
        return this.cd2_2;
    },

    set_cd2_2: function (value) {
        this.cd2_2 = value;
        return value;
    },

    adjustScale: function (width, height) {
        //adjusts the actual height vs the reported height.
        if (width !== this.sizeX) {
            this.scaleX *= (this.sizeX / width);
            this.referenceX /= (this.sizeX / width);
            this.sizeX = width;
        }
        if (height !== this.sizeY) {
            this.scaleY *= (this.sizeY / height);
            this.referenceY /= (this.sizeY / height);
            this.sizeY = height;
        }
    },

    calculateScaleFromCD: function () {
        this.scaleX = (Math.sqrt(this.cd1_1 * this.cd1_1 + this.cd2_1 * this.cd2_1) * (this.cd1_1 * this.cd2_2 - this.cd1_2 * this.cd2_1) < 0) ? -1 : 1;
        this.scaleY = Math.sqrt(this.cd1_2 * this.cd1_2 + this.cd2_2 * this.cd2_2);
    },

    calculateRotationFromCD: function () {
        var sign = ((this.cd1_1 * this.cd2_2 - this.cd1_2 * this.cd2_1) < 0) ? -1 : 1;
        var rot2 = Math.atan2((-sign * this.cd1_2), this.cd2_2);
        this.rotation = rot2 / Math.PI * 180;
    },

    get_filename: function () {
        return this.filename;
    },

    set_filename: function (value) {
        this.filename = value;
        return value;
    },

    get_colorCombine: function () {
        return this._colorCombine;
    },

    set_colorCombine: function (value) {
        this._colorCombine = value;
        return value;
    },

    getBitmap: function () {
        return null;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("WcsImage", [WcsImage, WcsImage$, null]);


/***/ }),

/***/ "./esm/mercator_tile.js":
/*!******************************!*\
  !*** ./esm/mercator_tile.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MercatorTile: () => (/* binding */ MercatorTile)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./graphics/webgl_constants.js */ "./esm/graphics/webgl_constants.js");
/* harmony import */ var _render_triangle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./render_triangle.js */ "./esm/render_triangle.js");
/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tile.js */ "./esm/tile.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A tile in a pyramid that uses a Mercator projection.










// wwtlib.MercatorTile

function MercatorTile() {
    this._tileDegrees$1 = 0;
    this._latMin$1 = 0;
    this._latMax$1 = 0;
    this._lngMin$1 = 0;
    this._lngMax$1 = 0;
    this._subDivisionLevel$1 = 32;
    _tile_js__WEBPACK_IMPORTED_MODULE_6__.Tile.call(this);
}

MercatorTile.create = function (level, X, Y, dataset, parent) {
    var temp = new MercatorTile();
    temp.parent = parent;
    temp.level = level;
    temp.tileX = X;
    temp.tileY = Y;
    temp.dataset = dataset;
    temp.computeBoundingSphere();
    return temp;
};

MercatorTile.getCentrePointOffsetAsTileRatio = function (lat, lon, zoom) {
    var metersX = MercatorTile.absoluteLonToMetersAtZoom(lon, zoom);
    var relativeXIntoCell = (metersX / 256) - Math.floor(metersX / 256);
    var metersY = MercatorTile.absoluteLatToMetersAtZoom(lat, zoom);
    var relativeYIntoCell = (metersY / 256) - Math.floor(metersY / 256);
    return _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.create(relativeXIntoCell, relativeYIntoCell);
};

MercatorTile.relativeMetersToLatAtZoom = function (Y, zoom) {
    var metersPerPixel = MercatorTile.metersPerPixel2(zoom);
    var metersY = Y * metersPerPixel;
    return MercatorTile._radToDeg$1(Math.PI / 2 - 2 * Math.atan(Math.exp(0 - metersY / 6378137)));
};

MercatorTile.relativeMetersToLonAtZoom = function (X, zoom) {
    var metersPerPixel = MercatorTile.metersPerPixel2(zoom);
    var metersX = X * metersPerPixel;
    return MercatorTile._radToDeg$1(metersX / 6378137);
};

MercatorTile.absoluteLatToMetersAtZoom = function (latitude, zoom) {
    var sinLat = Math.sin(MercatorTile._degToRad$1(latitude));
    var metersY = 6378137 / 2 * Math.log((1 + sinLat) / (1 - sinLat));
    var metersPerPixel = MercatorTile.metersPerPixel2(zoom);
    return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((Math.round(20037508 - metersY) / metersPerPixel));
};

MercatorTile.absoluteMetersToLatAtZoom = function (Y, zoom) {
    var metersPerPixel = MercatorTile.metersPerPixel2(zoom);
    var metersY = 20037508 - Y * metersPerPixel;
    return MercatorTile._radToDeg$1(Math.PI / 2 - 2 * Math.atan(Math.exp(0 - metersY / 6378137)));
};

MercatorTile.absoluteLonToMetersAtZoom = function (longitude, zoom) {
    var metersX = 6378137 * MercatorTile._degToRad$1(longitude);
    var metersPerPixel = MercatorTile.metersPerPixel2(zoom);
    return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((metersX + 20037508) / metersPerPixel));
};

MercatorTile.absoluteMetersToLonAtZoom = function (X, zoom) {
    var metersPerPixel = MercatorTile.metersPerPixel2(zoom);
    var metersX = X * metersPerPixel - 20037508;
    return MercatorTile._radToDeg$1(metersX / 6378137);
};

MercatorTile.absoluteLonToMetersAtZoomTile = function (longitude, zoom, tileX) {
    var metersX = 6378137 * MercatorTile._degToRad$1(longitude);
    var metersPerPixel = MercatorTile.metersPerPixel2(zoom);
    return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((metersX + 20037508) / metersPerPixel));
};

MercatorTile.absoluteLatToMetersAtZoomTile = function (latitude, zoom, tileX) {
    var sinLat = Math.sin(MercatorTile._degToRad$1(latitude));
    var metersY = 6378137 / 2 * Math.log((1 + sinLat) / (1 - sinLat));
    var metersPerPixel = MercatorTile.metersPerPixel2(zoom);
    return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((Math.round(20037508 - metersY) / metersPerPixel));
};

MercatorTile.absoluteMetersToLonAtZoomByTileY = function (X, zoom, tileY) {
    var metersPerPixel = MercatorTile.metersPerPixel2(zoom);
    var metersX = X * metersPerPixel - 20037508;
    return MercatorTile._radToDeg$1(metersX / 6378137);
};

MercatorTile._degToRad$1 = function (deg) {
    return (deg * Math.PI / 180);
};

MercatorTile.metersPerPixel2 = function (zoom) {
    return (156543 / (1 << zoom));
};

MercatorTile._radToDeg$1 = function (rad) {
    return (rad * 180 / Math.PI);
};

var MercatorTile$ = {
    computeBoundingSphere: function () {
        this._tileDegrees$1 = 360 / Math.pow(2, this.level);
        this._latMin$1 = MercatorTile.absoluteMetersToLatAtZoom(this.tileY * 256, this.level);
        this._latMax$1 = MercatorTile.absoluteMetersToLatAtZoom((this.tileY + 1) * 256, this.level);
        this._lngMin$1 = ((this.tileX * this._tileDegrees$1) - 180);
        this._lngMax$1 = ((((this.tileX + 1)) * this._tileDegrees$1) - 180);
        var latCenter = (this._latMin$1 + this._latMax$1) / 2;
        var lngCenter = (this._lngMin$1 + this._lngMax$1) / 2;
        this.sphereCenter = this.geoTo3d(latCenter, lngCenter, false);
        this.topLeft = this.geoTo3d(this._latMin$1, this._lngMin$1, false);
        this.bottomRight = this.geoTo3d(this._latMax$1, this._lngMax$1, false);
        this.topRight = this.geoTo3d(this._latMin$1, this._lngMax$1, false);
        this.bottomLeft = this.geoTo3d(this._latMax$1, this._lngMin$1, false);
        if (!this.tileY) {
            this.topLeft = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, 1, 0);
            this.topRight = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, 1, 0);
        }
        if (this.tileY === Math.pow(2, this.level) - 1) {
            this.bottomRight = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, -1, 0);
            this.bottomLeft = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, -1, 0);
        }
        var distVect = this.topLeft;
        distVect.subtract(this.sphereCenter);
        this.sphereRadius = distVect.length();
        distVect = this.bottomRight;
        distVect.subtract(this.sphereCenter);
        var len = distVect.length();
        if (this.sphereRadius < len) {
            this.sphereRadius = len;
        }
        this._tileDegrees$1 = Math.abs(this._latMax$1 - this._latMin$1);
    },

    isPointInTile: function (lat, lng) {
        if (!this.demReady || this.demData == null || lat < Math.min(this._latMin$1, this._latMax$1) || lat > Math.max(this._latMax$1, this._latMin$1) || lng < Math.min(this._lngMin$1, this._lngMax$1) || lng > Math.max(this._lngMin$1, this._lngMax$1)) {
            return false;
        }
        return true;
    },

    getSurfacePointAltitude: function (lat, lng, meters) {
        if (this.level < _tile_js__WEBPACK_IMPORTED_MODULE_6__.Tile.lastDeepestLevel) {
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.children);
            while ($enum1.moveNext()) {
                var child = $enum1.current;
                if (child != null) {
                    if (child.isPointInTile(lat, lng)) {
                        var retVal = child.getSurfacePointAltitude(lat, lng, meters);
                        if (!!retVal) {
                            return retVal;
                        }
                        else {
                            break;
                        }
                    }
                }
            }
        }
        var alt = this._getAltitudeAtLatLng$1(lat, lng, (meters) ? 1 : this.get__demScaleFactor());
        return alt;
    },

    _getAltitudeAtLatLng$1: function (lat, lng, scaleFactor) {
        var height = Math.abs(this._latMax$1 - this._latMin$1);
        var width = Math.abs(this._lngMax$1 - this._lngMin$1);
        var yy = ((lat - Math.min(this._latMax$1, this._latMin$1)) / height * 32);
        var xx = ((lng - Math.min(this._lngMax$1, this._lngMin$1)) / width * 32);
        var indexY = Math.min(31, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(yy));
        var indexX = Math.min(31, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(xx));
        var ha = xx - indexX;
        var va = yy - indexY;
        var ul = this.demData[indexY * 33 + indexX];
        var ur = this.demData[indexY * 33 + (indexX + 1)];
        var ll = this.demData[(indexY + 1) * 33 + indexX];
        var lr = this.demData[(indexY + 1) * 33 + (indexX + 1)];
        var top = ul * (1 - ha) + ha * ur;
        var bottom = ll * (1 - ha) + ha * lr;
        var val = top * (1 - va) + va * bottom;
        return val / scaleFactor;
    },

    createGeometry: function (renderContext) {
        _tile_js__WEBPACK_IMPORTED_MODULE_6__.Tile.prototype.createGeometry.call(this, renderContext);
        if (this.geometryCreated) {
            return true;
        }
        this.geometryCreated = true;
        if (_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple == 256) {
            if (!this.dataset.get_dataSetType() || this.dataset.get_dataSetType() === 1) {
                this._subDivisionLevel$1 = Math.max(2, (6 - this.level) * 2);
            }
        }
        for (var i = 0; i < 4; i++) {
            this._renderTriangleLists[i] = [];
        }
        var lat, lng;
        var index = 0;
        var tileDegrees = 360 / Math.pow(2, this.level);
        this._latMin$1 = MercatorTile.absoluteMetersToLatAtZoom(this.tileY * 256, this.level);
        this._latMax$1 = MercatorTile.absoluteMetersToLatAtZoom((this.tileY + 1) * 256, this.level);
        this._lngMin$1 = ((this.tileX * tileDegrees) - 180);
        this._lngMax$1 = ((((this.tileX + 1)) * tileDegrees) - 180);
        var latCenter = MercatorTile.absoluteMetersToLatAtZoom(((this.tileY * 2) + 1) * 256, this.level + 1);
        this.topLeft = this.geoTo3d(this._latMin$1, this._lngMin$1, false);
        this.bottomRight = this.geoTo3d(this._latMax$1, this._lngMax$1, false);
        this.topRight = this.geoTo3d(this._latMin$1, this._lngMax$1, false);
        this.bottomLeft = this.geoTo3d(this._latMax$1, this._lngMin$1, false);
        var verts = new Array((this._subDivisionLevel$1 + 1) * (this._subDivisionLevel$1 + 1));
        tileDegrees = this._lngMax$1 - this._lngMin$1;
        var dGrid = (tileDegrees / this._subDivisionLevel$1);
        var x1, y1;
        var textureStep = 1 / this._subDivisionLevel$1;
        var latDegrees = this._latMax$1 - latCenter;
        for (y1 = 0; y1 < this._subDivisionLevel$1 / 2; y1++) {
            if (y1 !== this._subDivisionLevel$1 / 2) {
                lat = this._latMax$1 - (2 * textureStep * latDegrees * y1);
            }
            else {
                lat = latCenter;
            }
            for (x1 = 0; x1 <= this._subDivisionLevel$1; x1++) {
                if (x1 !== this._subDivisionLevel$1) {
                    lng = this._lngMin$1 + (textureStep * tileDegrees * x1);
                }
                else {
                    lng = this._lngMax$1;
                }
                index = y1 * (this._subDivisionLevel$1 + 1) + x1;
                verts[index] = new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture();
                verts[index].position = this.geoTo3dWithAlt(lat, lng, false, true);
                verts[index].tu = (x1 * textureStep) * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
                verts[index].tv = ((MercatorTile.absoluteLatToMetersAtZoom(lat, this.level) - (this.tileY * 256)) / 256) * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
                this.demIndex++;
            }
        }
        latDegrees = this._latMin$1 - latCenter;
        for (y1 = this._subDivisionLevel$1 / 2; y1 <= this._subDivisionLevel$1; y1++) {
            if (y1 !== this._subDivisionLevel$1) {
                lat = latCenter + (2 * textureStep * latDegrees * (y1 - (this._subDivisionLevel$1 / 2)));
            }
            else {
                lat = this._latMin$1;
            }
            for (x1 = 0; x1 <= this._subDivisionLevel$1; x1++) {
                if (x1 !== this._subDivisionLevel$1) {
                    lng = this._lngMin$1 + (textureStep * tileDegrees * x1);
                }
                else {
                    lng = this._lngMax$1;
                }
                index = y1 * (this._subDivisionLevel$1 + 1) + x1;
                verts[index] = new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture();
                verts[index].position = this.geoTo3dWithAlt(lat, lng, false, true);
                verts[index].tu = (x1 * textureStep) * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
                verts[index].tv = ((MercatorTile.absoluteLatToMetersAtZoom(lat, this.level) - (this.tileY * 256)) / 256) * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
                this.demIndex++;
            }
        }
        if (!this.tileY) {
            // Send the tops to the pole to fill in the Bing Hole
            y1 = this._subDivisionLevel$1;
            for (x1 = 0; x1 <= this._subDivisionLevel$1; x1++) {
                index = y1 * (this._subDivisionLevel$1 + 1) + x1;
                verts[index].position = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, 1, 0);
            }
        }
        if (this.tileY === Math.pow(2, this.level) - 1) {
            // Send the tops to the pole to fill in the Bing Hole
            y1 = 0;
            for (x1 = 0; x1 <= this._subDivisionLevel$1; x1++) {
                index = y1 * (this._subDivisionLevel$1 + 1) + x1;
                verts[index].position = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(0, -1, 0);
            }
        }
        this.triangleCount = this._subDivisionLevel$1 * this._subDivisionLevel$1 * 2;
        var quarterDivisions = this._subDivisionLevel$1 / 2;
        var part = 0;
        if (renderContext.gl == null) {
            for (var y2 = 0; y2 < 2; y2++) {
                for (var x2 = 0; x2 < 2; x2++) {
                    index = 0;
                    for (y1 = (quarterDivisions * y2); y1 < (quarterDivisions * (y2 + 1)); y1++) {
                        for (x1 = (quarterDivisions * x2); x1 < (quarterDivisions * (x2 + 1)); x1++) {
                            var p1;
                            var p2;
                            var p3;

                            // First triangle in quad
                            p1 = verts[(y1 * (this._subDivisionLevel$1 + 1) + x1)];
                            p2 = verts[((y1 + 1) * (this._subDivisionLevel$1 + 1) + x1)];
                            p3 = verts[(y1 * (this._subDivisionLevel$1 + 1) + (x1 + 1))];
                            var tri = _render_triangle_js__WEBPACK_IMPORTED_MODULE_5__.RenderTriangle.create(p1, p2, p3, this.texture, this.level);
                            this._renderTriangleLists[part].push(tri);

                            // Second triangle in quad
                            p1 = verts[(y1 * (this._subDivisionLevel$1 + 1) + (x1 + 1))];
                            p2 = verts[((y1 + 1) * (this._subDivisionLevel$1 + 1) + x1)];
                            p3 = verts[((y1 + 1) * (this._subDivisionLevel$1 + 1) + (x1 + 1))];
                            tri = _render_triangle_js__WEBPACK_IMPORTED_MODULE_5__.RenderTriangle.create(p1, p2, p3, this.texture, this.level);
                            this._renderTriangleLists[part].push(tri);
                        }
                    }
                    part++;
                }
            }
        } else {
            this._vertexBuffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
            _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, this._vertexBuffer);
            var f32array = new Float32Array(verts.length * 5);
            var buffer = f32array;
            index = 0;
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(verts);
            while ($enum1.moveNext()) {
                var pt = $enum1.current;
                index = this.addVertex(buffer, index, pt);
            }
            _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, f32array, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.STATIC_DRAW);
            for (var y2 = 0; y2 < 2; y2++) {
                for (var x2 = 0; x2 < 2; x2++) {
                    var ui16array = new Uint16Array(this.triangleCount * 3);
                    var indexArray = ui16array;
                    index = 0;
                    for (y1 = (quarterDivisions * y2); y1 < (quarterDivisions * (y2 + 1)); y1++) {
                        for (x1 = (quarterDivisions * x2); x1 < (quarterDivisions * (x2 + 1)); x1++) {
                            // First triangle in quad
                            indexArray[index++] = (y1 * (this._subDivisionLevel$1 + 1) + x1);
                            indexArray[index++] = ((y1 + 1) * (this._subDivisionLevel$1 + 1) + x1);
                            indexArray[index++] = (y1 * (this._subDivisionLevel$1 + 1) + (x1 + 1));

                            // Second triangle in quad
                            indexArray[index++] = (y1 * (this._subDivisionLevel$1 + 1) + (x1 + 1));
                            indexArray[index++] = ((y1 + 1) * (this._subDivisionLevel$1 + 1) + x1);
                            indexArray[index++] = ((y1 + 1) * (this._subDivisionLevel$1 + 1) + (x1 + 1));
                        }
                    }
                    this._indexBuffers[part] = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
                    _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, this._indexBuffers[part]);
                    _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, ui16array, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.STATIC_DRAW);
                    part++;
                }
            }
        }
        return true;
    },

    _getDemSample$1: function (x, y) {
        return this.demData[(32 - y) * 33 + x];
    },

    createDemFromParent: function () {
        var parent = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(this.parent, MercatorTile);
        if (parent == null || parent.demData == null) {
            return false;
        }
        var offsetX = (((this.tileX % 2) === 1) ? 16 : 0);
        var offsetY = (((this.tileY % 2) === 1) ? 16 : 0);
        this.demData = new Array(this.demSize);

        // Interpolate across
        for (var y = 0; y < 33; y += 2) {
            var copy = true;
            for (var x = 0; x < 33; x++) {
                if (copy) {
                    this.demData[(32 - y) * 33 + x] = parent._getDemSample$1((x / 2) + offsetX, (y / 2) + offsetY);
                }
                else {
                    this.demData[(32 - y) * 33 + x] = ((parent._getDemSample$1((x / 2) + offsetX, (y / 2) + offsetY) + parent._getDemSample$1(((x / 2) + offsetX) + 1, (y / 2) + offsetY)) / 2);
                }
                copy = !copy;
            }
        }

        // Interpolate down
        for (var y = 1; y < 33; y += 2) {
            for (var x = 0; x < 33; x++) {
                this.demData[(32 - y) * 33 + x] = ((this._getDemSample$1(x, y - 1) + this._getDemSample$1(x, y + 1)) / 2);
            }
        }
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.demData);
        while ($enum1.moveNext()) {
            var sample = $enum1.current;
            this.demAverage += sample;
        }
        this.demAverage /= this.demData.length;
        this.demReady = true;
        return true;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("MercatorTile", [MercatorTile, MercatorTile$, _tile_js__WEBPACK_IMPORTED_MODULE_6__.Tile]);


/***/ }),

/***/ "./esm/minor_planets.js":
/*!******************************!*\
  !*** ./esm/minor_planets.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MinorPlanets: () => (/* binding */ MinorPlanets)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./astrocalc/elliptical.js */ "./esm/astrocalc/elliptical.js");
/* harmony import */ var _graphics_texture_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./graphics/texture.js */ "./esm/graphics/texture.js");
/* harmony import */ var _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./graphics/webgl_constants.js */ "./esm/graphics/webgl_constants.js");
/* harmony import */ var _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./graphics/gl_buffers.js */ "./esm/graphics/gl_buffers.js");
/* harmony import */ var _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./graphics/shaders.js */ "./esm/graphics/shaders.js");
/* harmony import */ var _blend_state_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./blend_state.js */ "./esm/blend_state.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./color.js */ "./esm/color.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _kepler_vertex_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./kepler_vertex.js */ "./esm/kepler_vertex.js");
/* harmony import */ var _space_time_controller_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./space_time_controller.js */ "./esm/space_time_controller.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _utilities_binary_reader_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utilities/binary_reader.js */ "./esm/utilities/binary_reader.js");
/* harmony import */ var _web_file_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./web_file.js */ "./esm/web_file.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Rendering the minor planet database



















// wwtlib.MinorPlanets

function MinorPlanets() { }

MinorPlanets.mpcList = [];
MinorPlanets._initBegun = false;
MinorPlanets._mpcBlendStates = new Array(7);
MinorPlanets.starTexture = null;
MinorPlanets._mpcVertexBuffer = null;
MinorPlanets._mpcCount = 0;

MinorPlanets.getMpcFile = function (url) {
    MinorPlanets._webMpcFile = new _web_file_js__WEBPACK_IMPORTED_MODULE_15__.WebFile(url);
    MinorPlanets._webMpcFile.responseType = 'blob';
    MinorPlanets._webMpcFile.onStateChange = MinorPlanets.starFileStateChange;
    MinorPlanets._webMpcFile.send();
};

MinorPlanets.starFileStateChange = function () {
    if (MinorPlanets._webMpcFile.get_state() === 2) {
        alert(MinorPlanets._webMpcFile.get_message());
    }
    else if (MinorPlanets._webMpcFile.get_state() === 1) {
        var mainBlob = MinorPlanets._webMpcFile.getBlob();
        var chunck = new FileReader();
        chunck.onloadend = function (e) {
            MinorPlanets._readFromBin(new _utilities_binary_reader_js__WEBPACK_IMPORTED_MODULE_14__.BinaryReader(new Uint8Array(chunck.result)));
            MinorPlanets.initMPCVertexBuffer();
        };
        chunck.readAsArrayBuffer(mainBlob);
    }
};

MinorPlanets._readFromBin = function (br) {
    MinorPlanets.mpcList = [];
    var len = br.get_length();
    var ee;
    try {
        while (br.get_position() < len) {
            ee = _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_3__.EOE._create(br);
            MinorPlanets.mpcList.push(ee);
        }
    }
    catch ($e1) { }
    br.close();
};

MinorPlanets.drawMPC3D = function (renderContext, opacity, centerPoint) {
    var zoom = renderContext.viewCamera.zoom;
    var distAlpha = ((Math.log(Math.max(1, zoom)) / Math.log(4)) - 15.5) * 90;
    var alpha = Math.min(255, Math.max(0, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(distAlpha)));
    if (alpha > 254) {
        return;
    }
    if (MinorPlanets._mpcVertexBuffer == null) {
        if (MinorPlanets.starTexture == null) {
            MinorPlanets.starTexture = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_4__.Texture.fromUrl(_url_helpers_js__WEBPACK_IMPORTED_MODULE_13__.URLHelpers.singleton.engineAssetUrl('StarProfileAlpha.png'));
        }
        for (var i = 0; i < 7; i++) {
            MinorPlanets._mpcBlendStates[i] = _blend_state_js__WEBPACK_IMPORTED_MODULE_8__.BlendState.create(false, 1000);
        }
        if (!MinorPlanets._initBegun) {
            MinorPlanets._startInit();
            MinorPlanets._initBegun = true;
        }
        return;
    }
    var offset = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.translation(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.negate(centerPoint));
    var world = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(renderContext.get_world(), offset);
    var matrixWV = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(world, renderContext.get_view());
    var cam = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d._transformCoordinate(renderContext.cameraPosition, _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.invertMatrix(renderContext.get_world()));
    if (MinorPlanets._mpcVertexBuffer != null) {
        for (var i = 0; i < 7; i++) {
            MinorPlanets._mpcBlendStates[i].set_targetState(true);
            if (MinorPlanets._mpcBlendStates[i].get_state()) {
                _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__.KeplerPointSpriteShader.use(renderContext, matrixWV, MinorPlanets._mpcVertexBuffer[i].vertexBuffer, MinorPlanets.starTexture.texture2d, _color_js__WEBPACK_IMPORTED_MODULE_9__.Colors.get_white(), opacity * MinorPlanets._mpcBlendStates[i].get_opacity(), false, (_space_time_controller_js__WEBPACK_IMPORTED_MODULE_12__.SpaceTimeController.get_jNow() - _kepler_vertex_js__WEBPACK_IMPORTED_MODULE_11__.KeplerVertex.baseDate), 0, renderContext.cameraPosition, 200, 0.1);
                renderContext.gl.drawArrays(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.POINTS, 0, MinorPlanets._mpcVertexBuffer[i].count);
            }
        }
    }
};

MinorPlanets._startInit = function () {
    if (!_data_globals_js__WEBPACK_IMPORTED_MODULE_10__.freestandingMode) {
        MinorPlanets.getMpcFile(_url_helpers_js__WEBPACK_IMPORTED_MODULE_13__.URLHelpers.singleton.coreStaticUrl('wwtweb/catalog.aspx?Q=mpcbin'));
    }
};

MinorPlanets.initMPCVertexBuffer = function () {
    try {
        if (MinorPlanets._mpcVertexBuffer == null) {
            var mpcVertexBufferTemp = new Array(7);
            MinorPlanets._mpcCount = MinorPlanets.mpcList.length;
            var lists = new Array(7);
            for (var i = 0; i < 7; i++) {
                lists[i] = [];
            }
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(MinorPlanets.mpcList);
            while ($enum1.moveNext()) {
                var ee = $enum1.current;
                var listID = 0;
                if (ee.a < 2.5) {
                    listID = 0;
                }
                else if (ee.a < 2.83) {
                    listID = 1;
                }
                else if (ee.a < 2.96) {
                    listID = 2;
                }
                else if (ee.a < 3.3) {
                    listID = 3;
                }
                else if (ee.a < 5) {
                    listID = 4;
                }
                else if (ee.a < 10) {
                    listID = 5;
                }
                else {
                    listID = 6;
                }
                var vert = new _kepler_vertex_js__WEBPACK_IMPORTED_MODULE_11__.KeplerVertex();
                vert.fill(ee);
                lists[listID].push(vert);
            }
            for (var i = 0; i < 7; i++) {
                mpcVertexBufferTemp[i] = _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_6__.KeplerVertexBuffer.create(lists[i]);
                mpcVertexBufferTemp[i].unlock();
            }
            MinorPlanets._mpcVertexBuffer = mpcVertexBufferTemp;
        }
    }
    finally { }
};

var MinorPlanets$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("MinorPlanets", [MinorPlanets, MinorPlanets$, null]);


/***/ }),

/***/ "./esm/place.js":
/*!**********************!*\
  !*** ./esm/place.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Classification: () => (/* binding */ Classification),
/* harmony export */   Place: () => (/* binding */ Place)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _camera_parameters_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./camera_parameters.js */ "./esm/camera_parameters.js");
/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./interfaces.js */ "./esm/interfaces.js");
/* harmony import */ var _ui_tools_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ui_tools.js */ "./esm/ui_tools.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./coordinates.js */ "./esm/coordinates.js");
/* harmony import */ var _imageset_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./imageset.js */ "./esm/imageset.js");
/* harmony import */ var _planets_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./planets.js */ "./esm/planets.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A place to look at, potentially with associated imagesets.















// wwtlib.Classification
//
// This was defined in `IPlace.cs`, which we've folded into `interfaces.js`.

var Classification = {
    star: 1,
    supernova: 2,
    blackHole: 4,
    neutronStar: 8,
    doubleStar: 16,
    multipleStars: 32,
    asterism: 64,
    constellation: 128,
    openCluster: 256,
    globularCluster: 512,
    nebulousCluster: 1024,
    nebula: 2048,
    emissionNebula: 4096,
    planetaryNebula: 8192,
    reflectionNebula: 16384,
    darkNebula: 32768,
    giantMolecularCloud: 65536,
    supernovaRemnant: 131072,
    interstellarDust: 262144,
    quasar: 524288,
    galaxy: 1048576,
    spiralGalaxy: 2097152,
    irregularGalaxy: 4194304,
    ellipticalGalaxy: 8388608,
    knot: 16777216,
    plateDefect: 33554432,
    clusterOfGalaxies: 67108864,
    otherNGC: 134217728,
    unidentified: 268435456,
    solarSystem: 536870912,
    unfiltered: 1073741823,
    stellar: 63,
    stellarGroupings: 2032,
    nebulae: 523264,
    galactic: 133693440,
    other: 436207616
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Classification", Classification);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("Classification", Classification);


// wwtlib.Place

function Place() {
    this._camParams = _camera_parameters_js__WEBPACK_IMPORTED_MODULE_5__.CameraParameters.create(0, 0, -1, 0, 0, 100);
    this._location3d = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 0, 0);
    this.htmlDescription = '';
    this._constellation = '';
    this._classification = 1048576;
    this._type = 2;
    this._magnitude = 0;
    this._distnace = 0;
    this.angularSize = 60; // Angular size in arcseconds
    this.annotation = '';
    this._thumbNail = null;
    this._studyImageset = null;
    this._backgroundImageSet = null;
    this._searchDistance = 0;
    this._elevation = 50;
}

Place.create = function (name, lat, lng, classification, constellation, type, zoomFactor) {
    var temp = new Place();
    temp.set_zoomLevel(zoomFactor);
    temp._constellation = constellation;
    temp._name = name;
    if (type === 2 || type === 4) {
        temp._camParams.set_RA(lng);
    }
    else {
        temp.set_lng(lng);
    }
    temp.set_lat(lat);
    temp.set_classification(classification);
    temp.set_type(type);
    return temp;
};

Place.createCameraParams = function (name, camParams, classification, constellation, type, target) {
    var temp = new Place();
    temp._constellation = constellation;
    temp._name = name;
    temp.set_classification(classification);
    temp._camParams = camParams;
    temp.set_type(type);
    temp.set_target(target);
    return temp;
};

Place._fromXml = function (place) {
    var newPlace = new Place();
    newPlace._name = place.attributes.getNamedItem('Name').nodeValue;
    if (place.attributes.getNamedItem('MSRComponentId') != null && place.attributes.getNamedItem('Permission') != null && place.attributes.getNamedItem('Url') != null) {
        //communities item
        newPlace.set_url(place.attributes.getNamedItem('Url').nodeValue);
        newPlace.set_thumbnailUrl(place.attributes.getNamedItem('Thumbnail').nodeValue);
        return newPlace;
    }
    if (place.attributes.getNamedItem('DataSetType') != null) {
        newPlace._type = _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('ImageSetType', place.attributes.getNamedItem('DataSetType').nodeValue);
    }
    if (newPlace.get_type() === 2) {
        newPlace._camParams.set_RA(parseFloat(place.attributes.getNamedItem('RA').nodeValue));
        newPlace._camParams.set_dec(parseFloat(place.attributes.getNamedItem('Dec').nodeValue));
    }
    else {
        newPlace.set_lat(parseFloat(place.attributes.getNamedItem('Lat').nodeValue));
        newPlace.set_lng(parseFloat(place.attributes.getNamedItem('Lng').nodeValue));
    }
    if (place.attributes.getNamedItem('Constellation') != null) {
        newPlace._constellation = place.attributes.getNamedItem('Constellation').nodeValue;
    }
    if (place.attributes.getNamedItem('Classification') != null) {
        newPlace._classification = _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('Classification', place.attributes.getNamedItem('Classification').nodeValue);
    }
    if (place.attributes.getNamedItem('Magnitude') != null) {
        newPlace._magnitude = parseFloat(place.attributes.getNamedItem('Magnitude').nodeValue);
    }
    if (place.attributes.getNamedItem('AngularSize') != null) {
        newPlace.angularSize = parseFloat(place.attributes.getNamedItem('AngularSize').nodeValue);
    }
    if (place.attributes.getNamedItem('ZoomLevel') != null) {
        newPlace.set_zoomLevel(parseFloat(place.attributes.getNamedItem('ZoomLevel').nodeValue));
    }
    if (place.attributes.getNamedItem('Rotation') != null) {
        newPlace._camParams.rotation = parseFloat(place.attributes.getNamedItem('Rotation').nodeValue);
    }
    if (place.attributes.getNamedItem('Annotation') != null) {
        newPlace.annotation = place.attributes.getNamedItem('Annotation').nodeValue;
    }
    if (place.attributes.getNamedItem('Angle') != null) {
        newPlace._camParams.angle = parseFloat(place.attributes.getNamedItem('Angle').nodeValue);
    }
    if (place.attributes.getNamedItem('Opacity') != null) {
        newPlace._camParams.opacity = parseFloat(place.attributes.getNamedItem('Opacity').nodeValue);
    }
    else {
        newPlace._camParams.opacity = 100;
    }
    newPlace.set_target(65536);
    if (place.attributes.getNamedItem('Target') != null) {
        newPlace.set_target(_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('SolarSystemObjects', place.attributes.getNamedItem('Target').nodeValue));
    }
    if (place.attributes.getNamedItem('ViewTarget') != null) {
        newPlace._camParams.viewTarget = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.parse(place.attributes.getNamedItem('ViewTarget').nodeValue);
    }
    if (place.attributes.getNamedItem('TargetReferenceFrame') != null) {
        newPlace._camParams.targetReferenceFrame = place.attributes.getNamedItem('TargetReferenceFrame').nodeValue;
    }
    var descriptionNode = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(place, 'Description');
    if (descriptionNode != null) {
        newPlace.htmlDescription = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.getInnerText(descriptionNode);
    }
    var backgroundImageSet = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(place, 'BackgroundImageSet');
    if (backgroundImageSet != null) {
        var imageSet = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(backgroundImageSet, 'ImageSet');
        newPlace._backgroundImageSet = _imageset_js__WEBPACK_IMPORTED_MODULE_10__.Imageset.fromXMLNode(imageSet);
    }
    var study = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(place, 'ForegroundImageSet');
    if (study != null) {
        var imageSet = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(study, 'ImageSet');
        newPlace._studyImageset = _imageset_js__WEBPACK_IMPORTED_MODULE_10__.Imageset.fromXMLNode(imageSet);
    }
    study = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(place, 'ImageSet');
    if (study != null) {
        newPlace._studyImageset = _imageset_js__WEBPACK_IMPORTED_MODULE_10__.Imageset.fromXMLNode(study);
    }
    return newPlace;
};

Place._properCaps = function (name) {
    var list = name.split(' ');
    var ProperName = '';
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(list);
    while ($enum1.moveNext()) {
        var part = $enum1.current;
        ProperName = ProperName + part.substr(0, 1).toUpperCase() + ((part.length > 1) ? part.substr(1).toLowerCase() : '') + ' ';
    }
    return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(ProperName);
};

var Place$ = {
    get_tag: function () {
        return this._tag;
    },

    set_tag: function (value) {
        this._tag = value;
        return value;
    },

    get_url: function () {
        return this._url;
    },

    set_url: function (value) {
        this._url = value;
        return value;
    },

    get_thumbnail: function () {
        return this._thumbnail;
    },

    set_thumbnail: function (value) {
        this._thumbnail = value;
        return value;
    },

    get_name: function () {
        return this.get_names()[0];
    },

    get_names: function () {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._name)) {
            return ''.split(';');
        }
        return this._name.split(';');
    },

    set_names: function (value) {
        this._name = _ui_tools_js__WEBPACK_IMPORTED_MODULE_7__.UiTools.getNamesStringFromArray(value);
        return value;
    },

    get_camParams: function () {
        if (this.get_classification() === 536870912 && this._camParams.target !== 20) {
            var raDec = _planets_js__WEBPACK_IMPORTED_MODULE_11__.Planets.getPlanetLocation(this.get_name());
            this._camParams.set_RA(raDec.RA);
            this._camParams.set_dec(raDec.dec);
            this._distnace = raDec.distance;
        }
        return this._camParams;
    },

    set_camParams: function (value) {
        this._camParams = value;
        return value;
    },

    updatePlanetLocation: function (jNow) {
        this._camParams.viewTarget = _planets_js__WEBPACK_IMPORTED_MODULE_11__.Planets.getPlanet3dLocationJD(this.get_target(), jNow);
        if (this.get_target() !== 65536 && this.get_target() !== 20) {
            this._camParams.viewTarget = _planets_js__WEBPACK_IMPORTED_MODULE_11__.Planets.getPlanetTargetPoint(this.get_target(), this.get_lat(), this.get_lng(), jNow);
        }
    },

    get_location3d: function () {
        if (this.get_classification() === 536870912 || (!this._location3d.x && !this._location3d.y && !this._location3d.z)) {
            this._location3d = _coordinates_js__WEBPACK_IMPORTED_MODULE_9__.Coordinates.raDecTo3d(this.get_RA(), this.get_dec());
        }
        return this._location3d;
    },

    get_lat: function () {
        return this.get_camParams().lat;
    },

    set_lat: function (value) {
        this._camParams.lat = value;
        return value;
    },

    get_lng: function () {
        return this.get_camParams().lng;
    },

    set_lng: function (value) {
        this._camParams.lng = value;
        return value;
    },

    get_opacity: function () {
        return this.get_camParams().opacity;
    },

    set_opacity: function (value) {
        this._camParams.opacity = value;
        return value;
    },

    get_constellation: function () {
        return this._constellation;
    },

    set_constellation: function (value) {
        this._constellation = value;
        return value;
    },

    get_classification: function () {
        return this._classification;
    },

    set_classification: function (value) {
        this._classification = value;
        return value;
    },

    get_type: function () {
        return this._type;
    },

    set_type: function (value) {
        this._type = value;
        return value;
    },

    get_magnitude: function () {
        return this._magnitude;
    },

    set_magnitude: function (value) {
        this._magnitude = value;
        return value;
    },

    get_distance: function () {
        return this._distnace;
    },

    set_distance: function (value) {
        this._distnace = value;
        return value;
    },

    get_zoomLevel: function () {
        return this.get_camParams().zoom;
    },

    set_zoomLevel: function (value) {
        this._camParams.zoom = value;
        return value;
    },

    get_annotation: function () {
        return this.annotation;
    },

    set_annotation: function (value) {
        this.annotation = value;
        return value;
    },

    get_studyImageset: function () {
        return this._studyImageset;
    },

    set_studyImageset: function (value) {
        this._studyImageset = value;
        return value;
    },

    get_backgroundImageset: function () {
        return this._backgroundImageSet;
    },

    set_backgroundImageset: function (value) {
        if (value != null) {
            this.set_type(value.get_dataSetType());
        }
        this._backgroundImageSet = value;
        return value;
    },

    get_searchDistance: function () {
        return this._searchDistance;
    },

    set_searchDistance: function (value) {
        this._searchDistance = value;
        return value;
    },

    get_elevation: function () {
        return this._elevation;
    },

    set_elevation: function (value) {
        this._elevation = value;
        return value;
    },

    get_thumbnailUrl: function () {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._thumbnailField)) {
            if (this._studyImageset != null && !_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._studyImageset.get_thumbnailUrl())) {
                return this._studyImageset.get_thumbnailUrl();
            }
            if (this._backgroundImageSet != null && !_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._backgroundImageSet.get_thumbnailUrl())) {
                return this._backgroundImageSet.get_thumbnailUrl();
            }
            var name = this.get_name();
            if (name.indexOf(';') > -1) {
                name = name.substr(0, name.indexOf(';'));
            }
            if (this.get_classification() === 1 || _data_globals_js__WEBPACK_IMPORTED_MODULE_3__.freestandingMode) {
                return _url_helpers_js__WEBPACK_IMPORTED_MODULE_8__.URLHelpers.singleton.engineAssetUrl('thumb_star.jpg');
            }
            return _url_helpers_js__WEBPACK_IMPORTED_MODULE_8__.URLHelpers.singleton.coreStaticUrl('wwtweb/thumbnail.aspx?name=' + name.toLowerCase());
        }
        return this._thumbnailField;
    },

    set_thumbnailUrl: function (value) {
        this._thumbnailField = value;
        return value;
    },

    get_RA: function () {
        return this.get_camParams().get_RA();
    },

    set_RA: function (value) {
        this._camParams.set_RA(value);
        return value;
    },

    get_dec: function () {
        return this.get_camParams().get_dec();
    },

    set_dec: function (value) {
        this._camParams.set_dec(value);
        return value;
    },

    toString: function () {
        return this._name;
    },

    _saveToXml: function (xmlWriter, elementName) {
        xmlWriter._writeStartElement(elementName);
        xmlWriter._writeAttributeString('Name', this._name);
        xmlWriter._writeAttributeString('DataSetType', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('ImageSetType', this._type));
        if (this.get_type() === 2) {
            xmlWriter._writeAttributeString('RA', this._camParams.get_RA().toString());
            xmlWriter._writeAttributeString('Dec', this._camParams.get_dec().toString());
        } else {
            xmlWriter._writeAttributeString('Lat', this.get_lat().toString());
            xmlWriter._writeAttributeString('Lng', this.get_lng().toString());
        }
        xmlWriter._writeAttributeString('Constellation', this._constellation);
        xmlWriter._writeAttributeString('Classification', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('Classification', this._classification));
        xmlWriter._writeAttributeString('Magnitude', this._magnitude.toString());
        xmlWriter._writeAttributeString('Distance', this._distnace.toString());
        xmlWriter._writeAttributeString('AngularSize', this.angularSize.toString());
        xmlWriter._writeAttributeString('ZoomLevel', this.get_zoomLevel().toString());
        xmlWriter._writeAttributeString('Rotation', this._camParams.rotation.toString());
        xmlWriter._writeAttributeString('Angle', this._camParams.angle.toString());
        xmlWriter._writeAttributeString('Opacity', this._camParams.opacity.toString());
        xmlWriter._writeAttributeString('Target', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('SolarSystemObjects', this.get_target()));
        xmlWriter._writeAttributeString('ViewTarget', this._camParams.viewTarget.toString());
        xmlWriter._writeAttributeString('TargetReferenceFrame', this._camParams.targetReferenceFrame);
        xmlWriter._writeStartElement('Description');
        xmlWriter._writeCData(this.htmlDescription);
        xmlWriter._writeEndElement();
        if (this._backgroundImageSet != null) {
            xmlWriter._writeStartElement('BackgroundImageSet');
            _imageset_js__WEBPACK_IMPORTED_MODULE_10__.Imageset.saveToXml(xmlWriter, this._backgroundImageSet, '');
            xmlWriter._writeEndElement();
        }
        if (this._studyImageset != null) {
            _imageset_js__WEBPACK_IMPORTED_MODULE_10__.Imageset.saveToXml(xmlWriter, this._studyImageset, '');
        }
        xmlWriter._writeEndElement();
    },

    get_bounds: function () {
        return this._bounds;
    },

    set_bounds: function (value) {
        this._bounds = value;
        return value;
    },

    get_isImage: function () {
        return this._studyImageset != null || this._backgroundImageSet != null;
    },

    get_isTour: function () {
        return false;
    },

    get_isFolder: function () {
        return false;
    },

    get_children: function () {
        return [];
    },

    get_readOnly: function () {
        return true;
    },

    get_target: function () {
        return this._camParams.target;
    },

    set_target: function (value) {
        this._camParams.target = value;
        return value;
    },

    get_isCloudCommunityItem: function () {
        return false;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Place", [Place, Place$, null, _interfaces_js__WEBPACK_IMPORTED_MODULE_6__.IThumbnail, _interfaces_js__WEBPACK_IMPORTED_MODULE_6__.IPlace]);

(0,_data_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_createPlace)(Place.create);


/***/ }),

/***/ "./esm/planets.js":
/*!************************!*\
  !*** ./esm/planets.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BodyAngles: () => (/* binding */ BodyAngles),
/* harmony export */   KeplerianElements: () => (/* binding */ KeplerianElements),
/* harmony export */   Planets: () => (/* binding */ Planets)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _astrocalc_earth_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./astrocalc/earth.js */ "./esm/astrocalc/earth.js");
/* harmony import */ var _astrocalc_mercury_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./astrocalc/mercury.js */ "./esm/astrocalc/mercury.js");
/* harmony import */ var _astrocalc_venus_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./astrocalc/venus.js */ "./esm/astrocalc/venus.js");
/* harmony import */ var _astrocalc_mars_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./astrocalc/mars.js */ "./esm/astrocalc/mars.js");
/* harmony import */ var _astrocalc_jupiter_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./astrocalc/jupiter.js */ "./esm/astrocalc/jupiter.js");
/* harmony import */ var _astrocalc_saturn_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./astrocalc/saturn.js */ "./esm/astrocalc/saturn.js");
/* harmony import */ var _astrocalc_uranus_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./astrocalc/uranus.js */ "./esm/astrocalc/uranus.js");
/* harmony import */ var _astrocalc_neptune_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./astrocalc/neptune.js */ "./esm/astrocalc/neptune.js");
/* harmony import */ var _astrocalc_pluto_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./astrocalc/pluto.js */ "./esm/astrocalc/pluto.js");
/* harmony import */ var _astrocalc_galilean_moons_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./astrocalc/galilean_moons.js */ "./esm/astrocalc/galilean_moons.js");
/* harmony import */ var _astrocalc_moon_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./astrocalc/moon.js */ "./esm/astrocalc/moon.js");
/* harmony import */ var _astrocalc_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./astrocalc.js */ "./esm/astrocalc.js");
/* harmony import */ var _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./graphics/texture.js */ "./esm/graphics/texture.js");
/* harmony import */ var _graphics_sprite2d_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./graphics/sprite2d.js */ "./esm/graphics/sprite2d.js");
/* harmony import */ var _baseplanets_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./baseplanets.js */ "./esm/baseplanets.js");
/* harmony import */ var _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./camera_parameters.js */ "./esm/camera_parameters.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./color.js */ "./esm/color.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./coordinates.js */ "./esm/coordinates.js");
/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./settings.js */ "./esm/settings.js");
/* harmony import */ var _space_time_controller_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./space_time_controller.js */ "./esm/space_time_controller.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./url_helpers.js */ "./esm/url_helpers.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// The main planet-related code.
//
// This does not include the 3D planet-rendering code, which has been separated
// into `planets_3d.js`.



























// wwtlib.KeplerianElements
//
// Keplerian elements defined here use eccentric anomaly instead of mean anomaly
// and have all orbital plane angles converted to a rotation matrix.
function KeplerianElements() {
    this.a = 0;
    this.e = 0;
    this.ea = 0;
}

var KeplerianElements$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("KeplerianElements", [KeplerianElements, KeplerianElements$, null]);


// wwtlib.BodyAngles

function BodyAngles(poleRa, poleDec, primeMeridian, rotationRate) {
    this.poleDec = 0;
    this.poleRa = 0;
    this.primeMeridian = 0;
    this.rotationRate = 0;
    this.poleDec = poleDec;
    this.poleRa = poleRa;
    this.primeMeridian = primeMeridian;
    this.rotationRate = rotationRate;
}

var BodyAngles$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("BodyAngles", [BodyAngles, BodyAngles$, null]);


// wwtlib.Planets

function Planets() { }

Planets.RC = (Math.PI / 180);
Planets._jNow = 0;

// Values taken from version 10 of the SPICE planetary constants file, updated
// October 21, 2011: ftp://naif.jpl.nasa.gov/pub/naif/generic_kernels/pck/pck00010.tpc
//
// Precession rates for rotation angles are currently not stored.
//
// All angles are in degrees.
Planets._planetAngles = [
    new BodyAngles(286.13, 63.87, 84.176, 14.1844),
    new BodyAngles(281.0097, 61.4143, 329.548, 6.1385025),
    new BodyAngles(272.76, 67.16, 160.2, -1.4813688),
    new BodyAngles(317.68143, 52.8865, 176.63, 350.89198226),
    new BodyAngles(268.056595, 64.495303, 284.95, 870.536),
    new BodyAngles(40.589, 83.537, 38.9, 810.7939024),
    new BodyAngles(257.311, -15.175, 203.81, 501.1600928),
    new BodyAngles(299.36, 43.46, 253.18, 536.3128492),
    new BodyAngles(132.993, -6.163, 302.695, 56.3625225),
    new BodyAngles(269.9949, 66.5392, 38.3213, 13.17635815),
    new BodyAngles(268.05, 64.5, 200.39, 203.4889538),
    new BodyAngles(268.08, 64.51, 36.022, 101.3747235),
    new BodyAngles(268.2, 64.57, 44.064, 50.3176081),
    new BodyAngles(268.72, 64.83, 259.51, 21.5710715),
    new BodyAngles(0, 0, 0, 0),
    new BodyAngles(0, 0, 0, 0),
    new BodyAngles(0, 0, 0, 0),
    new BodyAngles(0, 0, 0, 0),
    new BodyAngles(0, 0, 0, 0),
    new BodyAngles(0, 90, 190.147, 360.9856235)
];
Planets._lastPlanetCenterID = -2;
Planets._orbitalSampleRate = 256;
Planets._obliquity = 23.5 * Planets.RC;
Planets._drawOrder = {};
Planets.earthMatrix = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d();
Planets.earthMatrixInv = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d();
Planets._lastUpdate = new Date();
Planets._planetSprite = new _graphics_sprite2d_js__WEBPACK_IMPORTED_MODULE_16__.Sprite2d();
Planets._planetPoints = null;
Planets._planet3dLocations = null;

// This function is equivalent to `Texture.from_url` and not specific to the
// Planets infrastructure at all. It should go away. But at the moment, we
// preserve it so as not to break API.
Planets.loadPlanetTexture = function (url) {
    var texture = new _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture();
    texture.load(url);
    return texture;
};

Planets.getPlanet3dLocation = function (target) {
    try {
        if (target < 21) {
            return Planets._planet3dLocations[target].copy();
        }
    }
    catch ($e1) { }
    return _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 0, 0);
};

Planets.getPlanet3dSufaceAltitude = function (target) {
    try {
        if (target < 21) {
            return Planets.getAdjustedPlanetRadius(target);
        }
    }
    catch ($e1) { }
    return 0;
};

Planets.getPlanetTargetPoint = function (target, lat, lng, jNow) {
    var temp;
    if (!jNow) {
        temp = Planets.getPlanet3dLocation(target);
    }
    else {
        temp = Planets.getPlanet3dLocationJD(target, jNow);
    }
    temp.add(_coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.raDecTo3dAu((lng / 15) + 6, lat, Planets.getPlanet3dSufaceAltitude(target)));
    return temp;
};

Planets.getPlanet3dLocationJD = function (target, jNow) {
    try {
        var result = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
        var centerRaDec = _astrocalc_js__WEBPACK_IMPORTED_MODULE_14__.AstroCalc.getPlanet(jNow, 0, 0, 0, -6378149);
        var center = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.raDecTo3dAu(centerRaDec.RA, centerRaDec.dec, centerRaDec.distance);
        if (target === _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth) {
            result = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(-center.x, -center.y, -center.z);
        } else {
            var planet = _astrocalc_js__WEBPACK_IMPORTED_MODULE_14__.AstroCalc.getPlanet(jNow, target, 0, 0, -6378149);
            result = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.raDecTo3dAu(planet.RA, planet.dec, planet.distance);
            result.subtract(center);
        }
        result.rotateX(_coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.meanObliquityOfEcliptic(jNow) * Planets.RC);
        if (_settings_js__WEBPACK_IMPORTED_MODULE_21__.Settings.get_active().get_solarSystemScale() !== 1) {
            switch (target) {
                case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.moon:
                    var parent = Planets.getPlanet3dLocationJD(_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth, jNow);
                    result.subtract(parent);
                    result.multiply(_settings_js__WEBPACK_IMPORTED_MODULE_21__.Settings.get_active().get_solarSystemScale() / 2);
                    result.add(parent);
                    break;
                case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.io:
                case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.europa:
                case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.ganymede:
                case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.callisto:
                    var parent = Planets.getPlanet3dLocationJD(_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.jupiter, jNow);
                    result.subtract(parent);
                    result.multiply(_settings_js__WEBPACK_IMPORTED_MODULE_21__.Settings.get_active().get_solarSystemScale());
                    result.add(parent);
                    break;
                default:
                    break;
            }
        }
        return result;
    }
    catch ($e1) {
        return _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 0, 0);
    }
};

Planets.getPlanetLocation = function (name) {
    var id = Planets.getPlanetIDFromName(name);
    if (Planets._planetLocations != null) {
        return Planets._planetLocations[id];
    }
    else {
        return _astrocalc_js__WEBPACK_IMPORTED_MODULE_14__.AstroCalc.getPlanet(_space_time_controller_js__WEBPACK_IMPORTED_MODULE_22__.SpaceTimeController.get_jNow(), id, _space_time_controller_js__WEBPACK_IMPORTED_MODULE_22__.SpaceTimeController.get_location().get_lat(), _space_time_controller_js__WEBPACK_IMPORTED_MODULE_22__.SpaceTimeController.get_location().get_lng(), _space_time_controller_js__WEBPACK_IMPORTED_MODULE_22__.SpaceTimeController.get_altitude());
    }
};

Planets.getPlanetLocationJD = function (name, jNow) {
    var id = Planets.getPlanetIDFromName(name);
    return _astrocalc_js__WEBPACK_IMPORTED_MODULE_14__.AstroCalc.getPlanet(jNow, id, _space_time_controller_js__WEBPACK_IMPORTED_MODULE_22__.SpaceTimeController.get_location().get_lat(), _space_time_controller_js__WEBPACK_IMPORTED_MODULE_22__.SpaceTimeController.get_location().get_lng(), _space_time_controller_js__WEBPACK_IMPORTED_MODULE_22__.SpaceTimeController.get_altitude());
};

Planets.getPlanetIDFromName = function (planetName) {
    switch (planetName) {
        case 'Sun':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.sun;
        case 'Mercury':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.mercury;
        case 'Venus':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.venus;
        case 'Mars':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.mars;
        case 'Jupiter':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.jupiter;
        case 'Saturn':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.saturn;
        case 'Uranus':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.uranus;
        case 'Neptune':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.neptune;
        case 'Pluto':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.pluto;
        case 'Moon':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.moon;
        case 'Io':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.io;
        case 'Europa':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.europa;
        case 'Ganymede':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.ganymede;
        case 'Callisto':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.callisto;
        case 'Earth':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth;
        case 'IoShadow':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.ioShadow;
        case 'EuropaShadow':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.europaShadow;
        case 'GanymedeShadow':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.ganymedeShadow;
        case 'CallistoShadow':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.callistoShadow;
        case 'SunEclipsed':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.sunEclipsed;
        case 'Custom':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.custom;
        case 'Undefined':
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.undefined;
        default:
            return -1;
    }
};

Planets.getNameFrom3dId = function (id) {
    switch (id) {
        case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.sun:
            return 'Sun';
        case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.mercury:
            return 'Mercury';
        case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.venus:
            return 'Venus';
        case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.mars:
            return 'Mars';
        case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.jupiter:
            return 'Jupiter';
        case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.saturn:
            return 'Saturn';
        case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.uranus:
            return 'Uranus';
        case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.neptune:
            return 'Neptune';
        case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.pluto:
            return 'Pluto';
        case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.moon:
            return 'Moon';
        case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.io:
            return 'Io';
        case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.europa:
            return 'Europa';
        case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.ganymede:
            return 'Ganymede';
        case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.callisto:
            return 'Callisto';
        case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth:
            return 'Earth';
        default:
            return '';
    }
};

Planets.updatePlanetLocations = function (threeDee) {
    Planets._jNow = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_22__.SpaceTimeController.get_jNow();
    if (threeDee) {
        Planets.updateOrbits(0);
    }
    if (Planets._planetDiameters == null) {
        Planets._planetDiameters = new Array(20);
        Planets._planetDiameters[0] = 0.009291568;
        Planets._planetDiameters[1] = 3.25794793734425E-05;
        Planets._planetDiameters[2] = 8.08669220531394E-05;
        Planets._planetDiameters[3] = 4.53785605596396E-05;
        Planets._planetDiameters[4] = 0.000954501;
        Planets._planetDiameters[5] = 0.000802173;
        Planets._planetDiameters[6] = 0.000339564;
        Planets._planetDiameters[7] = 0.000324825;
        Planets._planetDiameters[8] = 1.52007379777805E-05;
        Planets._planetDiameters[9] = 2.32084653538149E-05;
        Planets._planetDiameters[10] = 2.43519298386342E-05;
        Planets._planetDiameters[11] = 2.08692629580609E-05;
        Planets._planetDiameters[12] = 3.51742670356556E-05;
        Planets._planetDiameters[13] = 3.22263666626559E-05;
        Planets._planetDiameters[14] = 2.43519298386342E-05;
        Planets._planetDiameters[15] = 2.08692629580609E-05;
        Planets._planetDiameters[16] = 3.51742670356556E-05;
        Planets._planetDiameters[17] = 3.22263666626559E-05;
        Planets._planetDiameters[18] = 0.009291568 * 2;
        Planets._planetDiameters[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth] = 8.55626412117809E-05;
    }
    if (Planets.planetColors == null) {
        var lightYellow = _color_js__WEBPACK_IMPORTED_MODULE_19__.Color.fromArgb(255, 255, 255, 221);
        var orangeRed = _color_js__WEBPACK_IMPORTED_MODULE_19__.Color.fromArgb(255, 255, 68, 0);
        Planets.planetColors = new Array(20);
        Planets.planetColors[0] = _color_js__WEBPACK_IMPORTED_MODULE_19__.Colors.get_yellow();
        Planets.planetColors[1] = _color_js__WEBPACK_IMPORTED_MODULE_19__.Colors.get_white();
        Planets.planetColors[2] = lightYellow;
        Planets.planetColors[3] = orangeRed;
        Planets.planetColors[4] = _color_js__WEBPACK_IMPORTED_MODULE_19__.Color.fromArgb(255, 255, 165, 0);
        Planets.planetColors[5] = _color_js__WEBPACK_IMPORTED_MODULE_19__.Color.fromArgb(255, 184, 134, 11);
        Planets.planetColors[6] = _color_js__WEBPACK_IMPORTED_MODULE_19__.Color.fromArgb(255, 173, 216, 230);
        Planets.planetColors[7] = _color_js__WEBPACK_IMPORTED_MODULE_19__.Colors.get_blue();
        Planets.planetColors[8] = _color_js__WEBPACK_IMPORTED_MODULE_19__.Colors.get_white();
        Planets.planetColors[9] = _color_js__WEBPACK_IMPORTED_MODULE_19__.Colors.get_white();
        Planets.planetColors[10] = _color_js__WEBPACK_IMPORTED_MODULE_19__.Colors.get_white();
        Planets.planetColors[11] = _color_js__WEBPACK_IMPORTED_MODULE_19__.Colors.get_white();
        Planets.planetColors[12] = _color_js__WEBPACK_IMPORTED_MODULE_19__.Colors.get_white();
        Planets.planetColors[13] = _color_js__WEBPACK_IMPORTED_MODULE_19__.Colors.get_white();
        Planets.planetColors[14] = _color_js__WEBPACK_IMPORTED_MODULE_19__.Colors.get_black();
        Planets.planetColors[15] = _color_js__WEBPACK_IMPORTED_MODULE_19__.Colors.get_black();
        Planets.planetColors[16] = _color_js__WEBPACK_IMPORTED_MODULE_19__.Colors.get_black();
        Planets.planetColors[17] = _color_js__WEBPACK_IMPORTED_MODULE_19__.Colors.get_black();
        Planets.planetColors[18] = _color_js__WEBPACK_IMPORTED_MODULE_19__.Colors.get_white();
        Planets.planetColors[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth] = _color_js__WEBPACK_IMPORTED_MODULE_19__.Color.fromArgb(255, 173, 216, 230);
    }
    if (Planets._planetTilts == null) {
        Planets._planetTilts = new Array(20);
        Planets._planetTilts[0] = 0;
        Planets._planetTilts[1] = 0.01;
        Planets._planetTilts[2] = 177.4;
        Planets._planetTilts[3] = 25.19;
        Planets._planetTilts[4] = 3.13;
        Planets._planetTilts[5] = 26.73;
        Planets._planetTilts[6] = 97.77;
        Planets._planetTilts[7] = 28.32;
        Planets._planetTilts[8] = 119.61;
        Planets._planetTilts[9] = 23.439;
        Planets._planetTilts[10] = 2.21;
        Planets._planetTilts[11] = 0;
        Planets._planetTilts[12] = -0.33;
        Planets._planetTilts[13] = 0;
        Planets._planetTilts[14] = 0;
        Planets._planetTilts[15] = 0;
        Planets._planetTilts[16] = 0;
        Planets._planetTilts[17] = 0;
        Planets._planetTilts[18] = 0;
        Planets._planetTilts[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth] = 23.5;
    }
    Planets._planetTilts[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth] = Planets._obliquity / Planets.RC;
    if (Planets.planetRotationPeriod == null) {
        Planets.planetRotationPeriod = new Array(20);
        Planets.planetRotationPeriod[0] = 25.37995;
        Planets.planetRotationPeriod[1] = 58.6462;
        Planets.planetRotationPeriod[2] = -243.0187;
        Planets.planetRotationPeriod[3] = 1.02595675;
        Planets.planetRotationPeriod[4] = 0.41007;
        Planets.planetRotationPeriod[5] = 0.426;
        Planets.planetRotationPeriod[6] = -0.71833;
        Planets.planetRotationPeriod[7] = 0.67125;
        Planets.planetRotationPeriod[8] = -6.38718;
        Planets.planetRotationPeriod[9] = 27.3;
        Planets.planetRotationPeriod[10] = 1.769137786;
        Planets.planetRotationPeriod[11] = 3.551;
        Planets.planetRotationPeriod[12] = 7.155;
        Planets.planetRotationPeriod[13] = 16.69;
        Planets.planetRotationPeriod[14] = 0;
        Planets.planetRotationPeriod[15] = 0;
        Planets.planetRotationPeriod[16] = 0;
        Planets.planetRotationPeriod[17] = 0;
        Planets.planetRotationPeriod[18] = 0;
        Planets.planetRotationPeriod[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth] = 0.99726968;
    }
    if (Planets._planetScales == null) {
        Planets._planetScales = new Array(20);
    }
    if (Planets._planet3dLocations == null) {
        Planets._planet3dLocations = new Array(20);
    }
    if (_settings_js__WEBPACK_IMPORTED_MODULE_21__.Settings.get_active().get_actualPlanetScale()) {
        Planets._planetScales[0] = 0.5;
        Planets._planetScales[1] = 0.25;
        Planets._planetScales[2] = 0.25;
        Planets._planetScales[3] = 0.25;
        Planets._planetScales[4] = 0.25;
        Planets._planetScales[5] = 0.5;
        Planets._planetScales[6] = 0.25;
        Planets._planetScales[7] = 0.25;
        Planets._planetScales[8] = 0.25;
        Planets._planetScales[9] = 0.25;
        Planets._planetScales[10] = 0.25;
        Planets._planetScales[11] = 0.25;
        Planets._planetScales[12] = 0.25;
        Planets._planetScales[13] = 0.25;
        Planets._planetScales[14] = 0.25;
        Planets._planetScales[15] = 0.25;
        Planets._planetScales[16] = 0.25;
        Planets._planetScales[17] = 0.25;
        Planets._planetScales[18] = 0.5;
        Planets._planetScales[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth] = 0.25;
    }
    else {
        for (var i = 0; i < 20; i++) {
            if (i < 10) {
                Planets._planetScales[i] = 0.25;
            }
            else {
                Planets._planetScales[i] = 0.1;
            }
        }

        // Make Sun and Saturn bigger
        Planets._planetScales[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.sun] = 0.5;
        Planets._planetScales[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.saturn] = 0.5;
        Planets._planetScales[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.sunEclipsed] = 0.5;
    }
    Planets._planetDrawOrder = {};
    Planets._planetLocations = new Array(20);
    var center = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
    var planetCenter = 0;
    if (planetCenter > -1) {
        var centerRaDec = _astrocalc_js__WEBPACK_IMPORTED_MODULE_14__.AstroCalc.getPlanet(Planets._jNow, planetCenter, (threeDee) ? 0 : _space_time_controller_js__WEBPACK_IMPORTED_MODULE_22__.SpaceTimeController.get_location().get_lat(), (threeDee) ? 0 : _space_time_controller_js__WEBPACK_IMPORTED_MODULE_22__.SpaceTimeController.get_location().get_lng(), (threeDee) ? -6378149 : _space_time_controller_js__WEBPACK_IMPORTED_MODULE_22__.SpaceTimeController.get_altitude());
        center = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.raDecTo3dAu(centerRaDec.RA, centerRaDec.dec, centerRaDec.distance);
    }
    Planets._planet3dLocations[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth] = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(-center.x, -center.y, -center.z);
    Planets._planet3dLocations[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth].rotateX(Planets._obliquity);
    for (var i = 0; i < 18; i++) {
        Planets._planetLocations[i] = _astrocalc_js__WEBPACK_IMPORTED_MODULE_14__.AstroCalc.getPlanet(Planets._jNow, i, (threeDee) ? 0 : _space_time_controller_js__WEBPACK_IMPORTED_MODULE_22__.SpaceTimeController.get_location().get_lat(), (threeDee) ? 0 : _space_time_controller_js__WEBPACK_IMPORTED_MODULE_22__.SpaceTimeController.get_location().get_lng(), (threeDee) ? -6378149 : _space_time_controller_js__WEBPACK_IMPORTED_MODULE_22__.SpaceTimeController.get_altitude());
        Planets._planet3dLocations[i] = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.raDecTo3dAu(Planets._planetLocations[i].RA, Planets._planetLocations[i].dec, Planets._planetLocations[i].distance);
        Planets._planet3dLocations[i].subtract(center);
        Planets._planet3dLocations[i].rotateX(Planets._obliquity);
        if (_settings_js__WEBPACK_IMPORTED_MODULE_21__.Settings.get_active().get_actualPlanetScale()) {
            Planets._planetScales[i] = (2 * Math.atan(0.5 * (Planets._planetDiameters[i] / Planets._planetLocations[i].distance))) / Math.PI * 180;
        }
        if (_settings_js__WEBPACK_IMPORTED_MODULE_21__.Settings.get_active().get_solarSystemScale() !== 1) {
            var id = i;
            switch (id) {
                case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.moon:
                    var parent = Planets._planet3dLocations[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth];
                    Planets._planet3dLocations[i].subtract(parent);
                    Planets._planet3dLocations[i].multiply(_settings_js__WEBPACK_IMPORTED_MODULE_21__.Settings.get_active().get_solarSystemScale() / 2);
                    Planets._planet3dLocations[i].add(parent);
                    break;
                case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.io:
                case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.europa:
                case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.ganymede:
                case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.callisto:
                    var parent = Planets._planet3dLocations[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.jupiter];
                    Planets._planet3dLocations[i].subtract(parent);
                    Planets._planet3dLocations[i].multiply(_settings_js__WEBPACK_IMPORTED_MODULE_21__.Settings.get_active().get_solarSystemScale());
                    Planets._planet3dLocations[i].add(parent);
                    break;
                default:
                    break;
            }
        }
        var finalDistance = -Planets._planetLocations[i].distance;
        while (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(Planets._planetDrawOrder, finalDistance)) {
            finalDistance += 1E-10;
        }
        Planets._planetDrawOrder[finalDistance] = i;
    }
    Planets._planetLocations[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.sunEclipsed] = Planets._planetLocations[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.sun];
    Planets._planetScales[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.sun] *= 2;
    Planets._planetScales[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.sunEclipsed] = Planets._planetScales[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.sun];
    Planets._planetScales[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.saturn] = Planets._planetScales[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.saturn] * 2;
    Planets._lastUpdate = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_22__.SpaceTimeController.get_now();
};

Planets.planetsReady = function () { };

Planets.updateOrbits = function (planetCenter) {
    try {
        Planets._obliquity = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.meanObliquityOfEcliptic(_space_time_controller_js__WEBPACK_IMPORTED_MODULE_22__.SpaceTimeController.get_jNow()) * Planets.RC;
        if (planetCenter !== Planets._lastPlanetCenterID) {
            Planets._orbits = null;
        }
        Planets._lastPlanetCenterID = planetCenter;
        if (Planets._orbits == null) {
            if (planetCenter < 0) {
                Planets._eclipticTilt = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.get_identity();
            }
            else {
                Planets._eclipticTilt = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.get_identity();
                Planets._eclipticTilt = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationX(Planets._obliquity);
            }
            if (Planets.planetOrbitalYears == null) {
                Planets.planetOrbitalYears = new Array(20);
                Planets.planetOrbitalYears[0] = 1;
                Planets.planetOrbitalYears[1] = 0.241;
                Planets.planetOrbitalYears[2] = 0.615;
                Planets.planetOrbitalYears[3] = 1.881;
                Planets.planetOrbitalYears[4] = 11.87;
                Planets.planetOrbitalYears[5] = 29.45;
                Planets.planetOrbitalYears[6] = 84.07;
                Planets.planetOrbitalYears[7] = 164.9;
                Planets.planetOrbitalYears[8] = 248.1;
                Planets.planetOrbitalYears[9] = 27.3 / 365.25;
                Planets.planetOrbitalYears[10] = 16.6890184 / 365.25;
                Planets.planetOrbitalYears[11] = 3.551181 / 365.25;
                Planets.planetOrbitalYears[12] = 7.15455296 / 365.25;
                Planets.planetOrbitalYears[13] = 16.6890184 / 365.25;
                Planets.planetOrbitalYears[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth] = 1;
            }
            if (!Planets.readOrbits()) {
                Planets._orbits = new Array(20);
                for (var i = 1; i < 20; i++) {
                    Planets._orbits[i] = new Array(Planets._orbitalSampleRate);
                    if (i < 9 || i === _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth) {
                        for (var j = 0; j < Planets._orbitalSampleRate; j++) {
                            var centerId = planetCenter;
                            var now = Planets._jNow + ((Planets.planetOrbitalYears[i] * 365.25 / Planets._orbitalSampleRate) * (j - (Planets._orbitalSampleRate / 2)));
                            var center = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
                            if (i === _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.moone) {
                                centerId = -1;
                            }
                            else if (i > 9 && i < 14) {
                                centerId = 4;
                            }
                            if (centerId > -1) {
                                var centerRaDec = _astrocalc_js__WEBPACK_IMPORTED_MODULE_14__.AstroCalc.getPlanet(now, centerId, 0, 0, -6378149);
                                center = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.raDecTo3dAu(centerRaDec.RA, centerRaDec.dec, centerRaDec.distance);
                            }
                            if (i !== _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth) {
                                var planetRaDec = _astrocalc_js__WEBPACK_IMPORTED_MODULE_14__.AstroCalc.getPlanet(now, i, 0, 0, -6378149);
                                Planets._orbits[i][j] = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.raDecTo3dAu(planetRaDec.RA, planetRaDec.dec, planetRaDec.distance);
                                Planets._orbits[i][j].subtract(center);
                            }
                            else {
                                Planets._orbits[i][j] = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(-center.x, -center.y, -center.z);
                            }
                            Planets._orbits[i][j].rotateX(Planets._obliquity);
                        }
                        Planets._orbits[i][Planets._orbitalSampleRate - 1] = Planets._orbits[i][0];
                    }
                }
                Planets.dumpOrbitsFile();
            }
        }
    }
    finally { }
};

Planets.readOrbits = function () {
    // This function ought to fetch wwtweb/catalog.aspx?Q=orbitsbin and set
    // `orbits`, see Windows client code.
    return false;
};

Planets.dumpOrbitsFile = function () { };

Planets.drawPlanets = function (renderContext, opacity) {
    if (Planets._planetTextures == null) {
        Planets._loadPlanetTextures();
    }

    // Get Moon Phase

    var elong = Planets._geocentricElongation(Planets._planetLocations[9].RA, Planets._planetLocations[9].dec, Planets._planetLocations[0].RA, Planets._planetLocations[0].dec);
    var raDif = Planets._planetLocations[9].RA - Planets._planetLocations[0].RA;
    if (Planets._planetLocations[9].RA < Planets._planetLocations[0].RA) {
        raDif += 24;
    }
    var phaseAngle = Planets._phaseAngle(elong, Planets._planetLocations[9].distance, Planets._planetLocations[0].distance);
    var limbAngle = Planets._positionAngle(Planets._planetLocations[9].RA, Planets._planetLocations[9].dec, Planets._planetLocations[0].RA, Planets._planetLocations[0].dec);
    if (raDif < 12) {
        phaseAngle += 180;
    }

    // Check for solar eclipse

    var dista = (Math.abs(Planets._planetLocations[9].RA - Planets._planetLocations[0].RA) * 15) * Math.cos(_coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.degreesToRadians(Planets._planetLocations[0].dec));
    var distb = Math.abs(Planets._planetLocations[9].dec - Planets._planetLocations[0].dec);
    var sunMoonDist = Math.sqrt(dista * dista + distb * distb);
    var eclipse = false;
    var coronaOpacity = 0;
    var moonEffect = (Planets._planetScales[9] / 2 - sunMoonDist);
    var darkLimb = Math.min(32, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((sunMoonDist * 32)));
    if (moonEffect > (Planets._planetScales[0] / 4)) {
        eclipse = true;
        coronaOpacity = Math.min(1, (moonEffect - (Planets._planetScales[0] / 2)) / 0.001);
        Planets._drawPlanet(renderContext, 18, coronaOpacity);
    }
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(Planets._planetDrawOrder));
    while ($enum1.moveNext()) {
        var key = $enum1.current;
        var planetId = Planets._planetDrawOrder[key];
        Planets._drawPlanet(renderContext, planetId, 1);
    }
    return true;
};

Planets._loadPlanetTextures = function () {
    // Note: these PNG files are fairly large and are loaded at
    // startup of the web client, adding nontrivially to the needed
    // network traffic. JPGs are a lot smaller, but unfortunately the
    // transparency support is important here since we don't want
    // black boxes surrounding all of our planets when they're viewed
    // in the sky.

    var baseUrl = _url_helpers_js__WEBPACK_IMPORTED_MODULE_23__.URLHelpers.singleton.engineAssetUrl('');

    Planets._planetTextures = new Array(20);
    Planets._planetTextures[0] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'sun.png');
    Planets._planetTextures[1] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'mercury.png');
    Planets._planetTextures[2] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'venus.png');
    Planets._planetTextures[3] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'mars.png');
    Planets._planetTextures[4] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'jupiter.png');
    Planets._planetTextures[5] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'saturn.png');
    Planets._planetTextures[6] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'uranus.png');
    Planets._planetTextures[7] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'neptune.png');
    Planets._planetTextures[8] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'pluto.png');
    Planets._planetTextures[9] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'moon.png');
    Planets._planetTextures[10] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'io.png');
    Planets._planetTextures[11] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'europa.png');
    Planets._planetTextures[12] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'ganymede.png');
    Planets._planetTextures[13] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'callisto.png');
    Planets._planetTextures[14] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'moonshadow.png');
    Planets._planetTextures[15] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'moonshadow.png');
    Planets._planetTextures[16] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'moonshadow.png');
    Planets._planetTextures[17] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'moonshadow.png');
    Planets._planetTextures[18] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'sunCorona.png');
    Planets._planetTextures[_camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth] = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_15__.Texture.fromUrl(baseUrl + 'earth.png');
};

// Compute the rotation of a planet at the J2000 epoch.
//
// The rotation at some instant in can be computed by multiplying the
// the returned matrix by Y(W * t)
Planets.getPlanetOrientationAtEpoch = function (planetID) {
    var m = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.get_identity();

    // Rotational elements for the planets are in the form used by the
    // IAU Working Group on Cartographic Coordinates and Rotational Elements:
    //
    // a : Right ascension of north pole
    // d : Declination of north pole
    // W0 : Prime meridian angle at epoch J2000.0
    //
    // The canonical Euler angle sequence is: Z(a - 90) * X(90 - d) * Z(W0)
    //
    // The following transformations are required to convert it to a rotation for WWT:
    //    * WWT uses a coordinate system with +Y = ecliptic north, +X = equinox of J2000
    //      This system is rotated 90 degrees about the X axis from the standard ecliptic
    //      system based on the Earth Mean Equinox of J2000 (EMEJ2000)
    //    * WWT uses row vectors instead of column vectors, so the order of transformations
    //      is reversed
    //    * WWT has planet maps with longitude 0 at the edge rather than the middle. This
    //      requires an extra 180 degrees to be added to W0
    var obliquityOfEcliptic = 23.4392794;

    if (planetID === _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth) {
        // Different calculation for Earth, since the meridian offset
        // is already included in the Mean Sidereal Time function.
        //
        // equatorial to ecliptic transformation
        m._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationX(obliquityOfEcliptic * Planets.RC));
    } else {
        // 90 degree rotation from WWT coord sys
        m._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationX(-90 * Planets.RC));

        m._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationZ((180 + Planets._planetAngles[planetID].primeMeridian) * Planets.RC));
        m._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationX((90 - Planets._planetAngles[planetID].poleDec) * Planets.RC));
        m._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationZ((Planets._planetAngles[planetID].poleRa - 90) * Planets.RC));
        m._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationX(obliquityOfEcliptic * Planets.RC)); // equatorial to ecliptic transformation

        // 90 degree rotation back to WWT coord sys
        m._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationX(90 * Planets.RC));
    }
    return m;
};

Planets.setupPlanetMatrix = function (renderContext, planetID, centerPoint, makeFrustum) {
    var matNonRotating = renderContext.get_world().clone();
    Planets._setupMatrixForPlanetGeometry(renderContext, planetID, centerPoint, makeFrustum);

    if (planetID === _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.sun) {
        // Don't apply the Sun's orientation to its non-rotating frame; this means that
        // the Sun's reference frame will be the ecliptic frame.
        var radius = Planets.getAdjustedPlanetRadius(planetID);
        matNonRotating.scale(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(radius, radius, radius));
        var translation = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(Planets._planet3dLocations[planetID], centerPoint);
        matNonRotating._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.translation(translation));
        renderContext.set_worldBaseNonRotating(matNonRotating);
    }
};

Planets._setupMatrixForPlanetGeometry = function (renderContext, planetID, centerPoint, makeFrustum) {
    var radius = Planets.getAdjustedPlanetRadius(planetID);
    var rotationCurrent = 0;
    if (planetID === _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth) {
        rotationCurrent = Math.PI + _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.mstFromUTC2(_space_time_controller_js__WEBPACK_IMPORTED_MODULE_22__.SpaceTimeController.get_now(), 0) / 180 * Math.PI;
    }
    else {
        rotationCurrent = Math.PI + (((Planets._jNow - 2451545) / Planets.planetRotationPeriod[planetID]) * Math.PI * 2) % (Math.PI * 2);
    }
    if (planetID === 9) {
        rotationCurrent -= Math.PI / 2;
    }
    var matLocal = renderContext.get_world().clone();
    var matNonRotating = renderContext.get_world().clone();
    var translation = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(Planets._planet3dLocations[planetID], centerPoint);
    var orientationAtEpoch = Planets.getPlanetOrientationAtEpoch(planetID);
    matLocal.scale(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(radius, radius, radius));
    matLocal._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationY(-rotationCurrent));
    matLocal._multiply(orientationAtEpoch);
    if (planetID === renderContext.viewCamera.target) {
        Planets.earthMatrix = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.get_identity();
        Planets.earthMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationY(-rotationCurrent));
        Planets.earthMatrix._multiply(orientationAtEpoch);
        Planets.earthMatrixInv = Planets.earthMatrix.clone();
        Planets.earthMatrixInv.invert();
    }
    matLocal._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.translation(translation));
    renderContext.set_world(matLocal);
    renderContext.set_worldBase(renderContext.get_world().clone());
    renderContext.set_nominalRadius(Planets.getPlanetRadiusInMeters(planetID));
    if (makeFrustum) {
        renderContext.makeFrustum();
    }
    matNonRotating.scale(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(radius, radius, radius));
    matNonRotating._multiply(orientationAtEpoch);
    matNonRotating._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.translation(translation));
    renderContext.set_worldBaseNonRotating(matNonRotating);
    return rotationCurrent;
};

// Get the position of a Solar System object using a 'direct' calculation that
// avoids including an aberration correction.
//
// The returned position is in ecliptic coordinate system with the origin at the center
// of the parent body (i.e. the Sun for planets, a planet for moons). The position of moons
// is _not_ modified by the SolarSystemScale, making it possible to use function to
// a calculate valid Keplerian elements.
Planets.getPlanetPositionDirect = function (id, jd) {
    var L = 0;
    var B = 0;
    var R = 0;
    switch (id) {
        case 1:
            L = _astrocalc_mercury_js__WEBPACK_IMPORTED_MODULE_4__.CAAMercury.eclipticLongitude(jd);
            B = _astrocalc_mercury_js__WEBPACK_IMPORTED_MODULE_4__.CAAMercury.eclipticLatitude(jd);
            R = _astrocalc_mercury_js__WEBPACK_IMPORTED_MODULE_4__.CAAMercury.radiusVector(jd);
            break;
        case 2:
            L = _astrocalc_venus_js__WEBPACK_IMPORTED_MODULE_5__.CAAVenus.eclipticLongitude(jd);
            B = _astrocalc_venus_js__WEBPACK_IMPORTED_MODULE_5__.CAAVenus.eclipticLatitude(jd);
            R = _astrocalc_venus_js__WEBPACK_IMPORTED_MODULE_5__.CAAVenus.radiusVector(jd);
            break;
        case _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth:
            L = _astrocalc_earth_js__WEBPACK_IMPORTED_MODULE_3__.CAAEarth.eclipticLongitude(jd);
            B = _astrocalc_earth_js__WEBPACK_IMPORTED_MODULE_3__.CAAEarth.eclipticLatitude(jd);
            R = _astrocalc_earth_js__WEBPACK_IMPORTED_MODULE_3__.CAAEarth.radiusVector(jd);
            break;
        case 3:
            L = _astrocalc_mars_js__WEBPACK_IMPORTED_MODULE_6__.CAAMars.eclipticLongitude(jd);
            B = _astrocalc_mars_js__WEBPACK_IMPORTED_MODULE_6__.CAAMars.eclipticLatitude(jd);
            R = _astrocalc_mars_js__WEBPACK_IMPORTED_MODULE_6__.CAAMars.radiusVector(jd);
            break;
        case 4:
            L = _astrocalc_jupiter_js__WEBPACK_IMPORTED_MODULE_7__.CAAJupiter.eclipticLongitude(jd);
            B = _astrocalc_jupiter_js__WEBPACK_IMPORTED_MODULE_7__.CAAJupiter.eclipticLatitude(jd);
            R = _astrocalc_jupiter_js__WEBPACK_IMPORTED_MODULE_7__.CAAJupiter.radiusVector(jd);
            break;
        case 5:
            L = _astrocalc_saturn_js__WEBPACK_IMPORTED_MODULE_8__.CAASaturn.eclipticLongitude(jd);
            B = _astrocalc_saturn_js__WEBPACK_IMPORTED_MODULE_8__.CAASaturn.eclipticLatitude(jd);
            R = _astrocalc_saturn_js__WEBPACK_IMPORTED_MODULE_8__.CAASaturn.radiusVector(jd);
            break;
        case 6:
            L = _astrocalc_uranus_js__WEBPACK_IMPORTED_MODULE_9__.CAAUranus.eclipticLongitude(jd);
            B = _astrocalc_uranus_js__WEBPACK_IMPORTED_MODULE_9__.CAAUranus.eclipticLatitude(jd);
            R = _astrocalc_uranus_js__WEBPACK_IMPORTED_MODULE_9__.CAAUranus.radiusVector(jd);
            break;
        case 7:
            L = _astrocalc_neptune_js__WEBPACK_IMPORTED_MODULE_10__.CAANeptune.eclipticLongitude(jd);
            B = _astrocalc_neptune_js__WEBPACK_IMPORTED_MODULE_10__.CAANeptune.eclipticLatitude(jd);
            R = _astrocalc_neptune_js__WEBPACK_IMPORTED_MODULE_10__.CAANeptune.radiusVector(jd);
            break;
        case 8:
            L = _astrocalc_pluto_js__WEBPACK_IMPORTED_MODULE_11__.CAAPluto.eclipticLongitude(jd);
            B = _astrocalc_pluto_js__WEBPACK_IMPORTED_MODULE_11__.CAAPluto.eclipticLatitude(jd);
            R = _astrocalc_pluto_js__WEBPACK_IMPORTED_MODULE_11__.CAAPluto.radiusVector(jd);
            break;
        case 9:
            L = _astrocalc_moon_js__WEBPACK_IMPORTED_MODULE_13__.CAAMoon.eclipticLongitude(jd);
            B = _astrocalc_moon_js__WEBPACK_IMPORTED_MODULE_13__.CAAMoon.eclipticLatitude(jd);
            R = _astrocalc_moon_js__WEBPACK_IMPORTED_MODULE_13__.CAAMoon.radiusVector(jd) / 149598000;
            break;
        case 10:
            var galileanInfo = _astrocalc_galilean_moons_js__WEBPACK_IMPORTED_MODULE_12__.GM.calculate(jd);
            var position = galileanInfo.satellite1.eclipticRectangularCoordinates;
            return _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(position.x, position.z, position.y);
        case 11:
            var galileanInfo = _astrocalc_galilean_moons_js__WEBPACK_IMPORTED_MODULE_12__.GM.calculate(jd);
            var position = galileanInfo.satellite2.eclipticRectangularCoordinates;
            return _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(position.x, position.z, position.y);
        case 12:
            var galileanInfo = _astrocalc_galilean_moons_js__WEBPACK_IMPORTED_MODULE_12__.GM.calculate(jd);
            var position = galileanInfo.satellite3.eclipticRectangularCoordinates;
            return _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(position.x, position.z, position.y);
        case 13:
            var galileanInfo = _astrocalc_galilean_moons_js__WEBPACK_IMPORTED_MODULE_12__.GM.calculate(jd);
            var position = galileanInfo.satellite4.eclipticRectangularCoordinates;
            return _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(position.x, position.z, position.y);
    }

    // Enabling this code transforms planet positions from the mean ecliptic/equinox of
    // date to the J2000 ecliptic. It is necessary because the VSOP87D series used
    // for planet positions is in the mean-of-date frame. The transformation is currently
    // disabled in order to better match planet positions calculated elsewhere in the code.
    //CAA2DCoordinate prec = CAAPrecession.PrecessEcliptic(L, B, jd, 2451545.0);
    //L = prec.X;
    //B = prec.Y;

    L = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.degreesToRadians(L);
    B = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.degreesToRadians(B);
    var eclPos = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(Math.cos(L) * Math.cos(B) * R, Math.sin(L) * Math.cos(B) * R, Math.sin(B) * R);


    // Transform from the ecliptic of date to the J2000 ecliptic; this transformation should be deleted
    // once the precession is turned on.
    var eclipticOfDateRotation = (_coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.meanObliquityOfEcliptic(jd) - _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.meanObliquityOfEcliptic(2451545)) * Planets.RC;
    eclPos.rotateX(eclipticOfDateRotation);
    return _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(eclPos.x, eclPos.z, eclPos.y);
};

Planets._stateVectorToKeplerian = function (position, velocity, mu) {
    // Work in units of km and seconds
    var r = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.scale(position, 149598000);
    var v = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.scale(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.scale(velocity, 1 / 86400), 149598000);
    var rmag = r.length();
    var vmag = v.length();
    var sma = 1 / (2 / rmag - vmag * vmag / mu);

    // h is the orbital angular momentum vector
    var h = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.cross(r, v);

    // ecc is the eccentricity vector, which points from the
    // planet at periapsis to the center point.
    var ecc = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.scale(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.cross(v, h), 1 / mu), _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.scale(r, 1 / rmag));
    var e = ecc.length();

    h.normalize();
    ecc.normalize();

    // h, s, and ecc are orthogonal vectors that define a coordinate
    // system. h is normal to the orbital plane.
    var s = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.cross(h, ecc);

    // Calculate the sine and cosine of the true anomaly
    r.normalize();
    var cosNu = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.dot(ecc, r);
    var sinNu = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.dot(s, r);

    // Compute the eccentric anomaly
    var E = Math.atan2(Math.sqrt(1 - e * e) * sinNu, e + cosNu);
    var elements = new KeplerianElements();

    // Create a rotation matrix given the three orthogonal vectors:
    //   ecc - eccentricity vector
    //   s   - in the orbital plane, perpendicular to ecc
    //   h   - angular momentum vector, normal to orbital plane
    elements.orientation = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.create(ecc.x, ecc.y, ecc.z, 0, s.x, s.y, s.z, 0, h.x, h.y, h.z, 0, 0, 0, 0, 1);
    elements.a = sma;
    elements.e = e;
    elements.ea = E;
    return elements;
};

Planets.getAdjustedPlanetRadius = function (planetID) {
    if (planetID > Planets._planetDiameters.length - 1) {
        planetID = _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth;
    }
    var diameter = Planets._planetDiameters[planetID];
    var radius = (diameter / 2);
    if (!!planetID) {
        radius = radius * (1 + (3 * (_settings_js__WEBPACK_IMPORTED_MODULE_21__.Settings.get_active().get_solarSystemScale() - 1)));
    }
    else {
        radius = radius * (1 + (0.3 * (_settings_js__WEBPACK_IMPORTED_MODULE_21__.Settings.get_active().get_solarSystemScale() - 1)));
    }
    return radius;
};

Planets.getPlanetRadiusInMeters = function (planetID) {
    if (planetID > Planets._planetDiameters.length - 1) {
        planetID = _camera_parameters_js__WEBPACK_IMPORTED_MODULE_18__.SolarSystemObjects.earth;
    }
    var diameter = Planets._planetDiameters[planetID];
    return (diameter / 2) * 149598000 * 1000;
};

Planets._drawPlanet = function (renderContext, planetID, opacity) {
    var planetPosition = Planets._planetLocations[planetID];
    if (((planetID < 14) && Planets._planetScales[planetID] < (renderContext.viewCamera.zoom / 6) / 400)) {
        if (planetID < 10 || ((planetID < 14) && Planets._planetScales[planetID] > (renderContext.viewCamera.zoom / 6) / 6400)) {
            var point = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.raDecTo3d(planetPosition.RA, planetPosition.dec);
            _baseplanets_js__WEBPACK_IMPORTED_MODULE_17__.BasePlanets.drawPointPlanet(renderContext, point, 3, Planets.planetColors[planetID], false);
        }
        return;
    }
    var brush = null;
    if (planetID < 10 || planetID === 18) {
        brush = Planets._planetTextures[planetID];
    }
    else if (planetID < 14) {
        if (Planets._planetLocations[planetID].eclipsed) {
            brush = Planets._planetTextures[15];
        } else {
            if (_settings_js__WEBPACK_IMPORTED_MODULE_21__.Settings.get_active().get_showMoonsAsPointSource()) {
                brush = Planets._planetTextures[14];
            }
            else {
                brush = Planets._planetTextures[planetID];
            }
        }
    }
    else {
        if (!Planets._planetLocations[planetID].shadow) {
            return;
        }

        //Shadows of moons
        brush = Planets._planetTextures[15];
    }
    if (renderContext.gl != null) {
        if (Planets._planetPoints == null) {
            Planets._planetPoints = new Array(4);
            for (var i = 0; i < 4; i++) {
                Planets._planetPoints[i] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            }
        }
        var radius = (Planets._planetScales[planetID] / 2);
        var raRadius = (radius / Math.cos(planetPosition.dec / 180 * Math.PI));
        Planets._planetPoints[0].position = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.raDecTo3dAu((planetPosition.RA - (raRadius / 15)), planetPosition.dec + radius, 1);
        Planets._planetPoints[0].tu = 0;
        Planets._planetPoints[0].tv = 1;
        Planets._planetPoints[0].color = _color_js__WEBPACK_IMPORTED_MODULE_19__.Colors.get_white();
        Planets._planetPoints[1].position = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.raDecTo3dAu((planetPosition.RA - (raRadius / 15)), planetPosition.dec - radius, 1);
        Planets._planetPoints[1].tu = 0;
        Planets._planetPoints[1].tv = 0;
        Planets._planetPoints[1].color = _color_js__WEBPACK_IMPORTED_MODULE_19__.Colors.get_white();
        Planets._planetPoints[2].position = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.raDecTo3dAu((planetPosition.RA + (raRadius / 15)), planetPosition.dec + radius, 1);
        Planets._planetPoints[2].tu = 1;
        Planets._planetPoints[2].tv = 1;
        Planets._planetPoints[2].color = _color_js__WEBPACK_IMPORTED_MODULE_19__.Colors.get_white();
        Planets._planetPoints[3].position = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.raDecTo3dAu((planetPosition.RA + (raRadius / 15)), planetPosition.dec - radius, 1);
        Planets._planetPoints[3].tu = 1;
        Planets._planetPoints[3].tv = 0;
        Planets._planetPoints[3].color = _color_js__WEBPACK_IMPORTED_MODULE_19__.Colors.get_white();
        Planets._planetSprite.draw(renderContext, Planets._planetPoints, 4, brush, true, 1);
    }
    else {
        var center = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.raDecTo3d(planetPosition.RA, planetPosition.dec);
        var rad = Planets._planetScales[planetID] / (renderContext.get_fovScale() / 3600) / 2;
        var screenSpacePnt = renderContext.WVP.transform(center);
        if (screenSpacePnt.z < 0) {
            return;
        }
        if (_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.dot(renderContext.get_viewPoint(), center) < 0.55) {
            return;
        }
        var ctx = renderContext.device;
        ctx.save();
        ctx.globalAlpha = opacity;
        ctx.beginPath();
        ctx.arc(screenSpacePnt.x, screenSpacePnt.y, rad, 0, Math.PI * 2, true);
        ctx.lineWidth = 0;
        ctx.closePath();
        ctx.clip();
        ctx.drawImage(brush.imageElement, screenSpacePnt.x - rad, screenSpacePnt.y - rad, rad * 2, rad * 2);
        ctx.globalAlpha = 1;
        ctx.restore();
    }
};

Planets._drawPlanetPhase = function (renderContext, planetID, phase, angle, dark) { };

Planets._geocentricElongation = function (ObjectAlpha, ObjectDelta, SunAlpha, SunDelta) {
    //Convert the RA's to radians
    ObjectAlpha = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.degreesToRadians(ObjectAlpha * 15);
    SunAlpha = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.degreesToRadians(SunAlpha * 15);

    //Convert the declinations to radians
    ObjectDelta = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.degreesToRadians(ObjectDelta);
    SunDelta = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.degreesToRadians(SunDelta);
    return _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.radiansToDegrees(Math.acos(Math.sin(SunDelta) * Math.sin(ObjectDelta) + Math.cos(SunDelta) * Math.cos(ObjectDelta) * Math.cos(SunAlpha - ObjectAlpha)));
};

Planets._phaseAngle = function (GeocentricElongation, EarthObjectDistance, EarthSunDistance) {
    //Convert from degrees to radians
    GeocentricElongation = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.degreesToRadians(GeocentricElongation);

    return _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.mapTo0To360Range(_coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.radiansToDegrees(Math.atan2(EarthSunDistance * Math.sin(GeocentricElongation), EarthObjectDistance - EarthSunDistance * Math.cos(GeocentricElongation))));
};

Planets._positionAngle = function (Alpha0, Delta0, Alpha, Delta) {
    Alpha0 = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.hoursToRadians(Alpha0);
    Alpha = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.hoursToRadians(Alpha);
    Delta0 = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.degreesToRadians(Delta0);
    Delta = _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.degreesToRadians(Delta);
    return _coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.mapTo0To360Range(_coordinates_js__WEBPACK_IMPORTED_MODULE_20__.Coordinates.radiansToDegrees(Math.atan2(Math.cos(Delta0) * Math.sin(Alpha0 - Alpha), Math.sin(Delta0) * Math.cos(Delta) - Math.cos(Delta0) * Math.sin(Delta) * Math.cos(Alpha0 - Alpha))));
};

var Planets$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Planets", [Planets, Planets$, null]);


/***/ }),

/***/ "./esm/planets_3d.js":
/*!***************************!*\
  !*** ./esm/planets_3d.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Planets3d: () => (/* binding */ Planets3d)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./graphics/webgl_constants.js */ "./esm/graphics/webgl_constants.js");
/* harmony import */ var _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./graphics/gl_buffers.js */ "./esm/graphics/gl_buffers.js");
/* harmony import */ var _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./graphics/primitives3d.js */ "./esm/graphics/primitives3d.js");
/* harmony import */ var _graphics_texture_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./graphics/texture.js */ "./esm/graphics/texture.js");
/* harmony import */ var _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./graphics/shaders.js */ "./esm/graphics/shaders.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _baseplanets_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./baseplanets.js */ "./esm/baseplanets.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./color.js */ "./esm/color.js");
/* harmony import */ var _planets_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./planets.js */ "./esm/planets.js");
/* harmony import */ var _render_triangle_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./render_triangle.js */ "./esm/render_triangle.js");
/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./settings.js */ "./esm/settings.js");
/* harmony import */ var _triangle_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./triangle.js */ "./esm/triangle.js");
/* harmony import */ var _ui_tools_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./ui_tools.js */ "./esm/ui_tools.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _layers_orbit_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./layers/orbit.js */ "./esm/layers/orbit.js");
/* harmony import */ var _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./layers/layer_manager.js */ "./esm/layers/layer_manager.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// The 3D planet-related code.
//
// This does not include the 3D planet-rendering code, which has been separated
// into `planets_3d.js`.























// 3D planet code. This used to live in `Planets.cs` with the 2D planet.

function Planets3d() { }

Planets3d._ringsTriangleLists = new Array(2);
Planets3d._ringImage = null;
Planets3d._triangleCountRings = 192 + 1 * 2;
Planets3d._ringsVertexBuffer = null;

Planets3d.getImageSetNameNameFrom3dId = function (id) {
    switch (id) {
        case 0:
            return 'Sun';
        case 1:
            return 'Mercury';
        case 2:
            return 'Venus';
        case 3:
            return 'Visible Imagery';
        case 4:
            return 'Jupiter';
        case 5:
            return 'Saturn';
        case 6:
            return 'Uranus';
        case 7:
            return 'Neptune';
        case 8:
            return 'Pluto';
        case 9:
            return 'Moon';
        case 10:
            return 'Io (Jupiter)';
        case 11:
            return 'Europa (Jupiter)';
        case 12:
            return 'Ganymede (Jupiter)';
        case 13:
            return 'Callisto (Jupiter)';
        case 19:
            return 'Bing Maps Aerial';
        default:
            return '';
    }
};

Planets3d.initPlanetResources = function (renderContext) { };

Planets3d.drawPlanets3D = function (renderContext, opacity, centerPoint) {
    Planets3d.initPlanetResources(renderContext);
    var distss = _ui_tools_js__WEBPACK_IMPORTED_MODULE_16__.UiTools.solarSystemToMeters(renderContext.get_solarSystemCameraDistance());
    var moonFade = Math.min(1, Math.max(_baseutil_js__WEBPACK_IMPORTED_MODULE_8__.Util.log10(distss) - 7.3, 0));
    var fade = Math.min(1, Math.max(_baseutil_js__WEBPACK_IMPORTED_MODULE_8__.Util.log10(distss) - 8.6, 0));
    if (_settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_active().get_solarSystemOrbits() && fade > 0) {
        for (var ii = 1; ii < 10; ii++) {
            var id = ii;
            if (ii === 9) {
                id = 19;
            }
            var angle = Math.atan2(_planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._planet3dLocations[id].z, _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._planet3dLocations[id].x);
            Planets3d._drawSingleOrbit(renderContext, _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets.planetColors[id], id, centerPoint, angle, _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._planet3dLocations[id], fade);
        }
        var mid = 9;
        Planets3d._drawSingleOrbit(renderContext, _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets.planetColors[mid], mid, centerPoint, 0, _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._planet3dLocations[mid], fade);
    }
    _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.clearKeys(_planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._drawOrder);
    var camera = renderContext.cameraPosition.copy();
    for (var planetId = 0; planetId < 14; planetId++) {
        // If we're using realistic lighting and this is an eclipsed
        // moon, don't draw it at all. This is slightly suboptimal
        // since, if you're looking at the moon, you'll suddenly be able
        // to see the stars through it. In principle we should do
        // something like keep on drawing it, but as an all-black
        // sphere.
        if (!(_settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_active().get_solarSystemLighting() && _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._planetLocations[planetId].eclipsed)) {
            var distVector = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(camera, _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(_planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._planet3dLocations[planetId], centerPoint));
            if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(_planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._drawOrder, distVector.length())) {
                _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._drawOrder[distVector.length()] = planetId;
            }
        }
    }
    var distVectorEarth = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(camera, _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(_planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._planet3dLocations[19], centerPoint));
    if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(_planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._drawOrder, distVectorEarth.length())) {
        _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._drawOrder[distVectorEarth.length()] = 19;
    }
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(_planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._drawOrder));
    while ($enum1.moveNext()) {
        var key = $enum1.current;
        var planetId = _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._drawOrder[key];
        Planets3d._drawPlanet3d(renderContext, planetId, centerPoint);
    }
    return true;
};

Planets3d._drawSingleOrbit = function (renderContext, eclipticColor, id, centerPoint, startAngle, planetNow, opacity) {
    // mu is the standard gravitational parameter GM, where G
    // is the gravitational constant and M is the mass of the
    // central body.
    const muSun = 1.327124400188e11; // km^3/s^2
    const muEarth = 3.9860044189e5;
    const muMoon = 4.9027779e3;
    const muJupiter = 1.26686534e8;

    if (opacity < 0.01) {
        return;
    }
    if (renderContext.gl == null) {
        var count = _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._orbitalSampleRate;
        var planetDropped = false;
        var viewPoint = renderContext.get_viewPoint();
        var ctx = renderContext.device;
        ctx.save();
        ctx.strokeStyle = eclipticColor.toString();
        ctx.lineWidth = 2;
        ctx.globalAlpha = 1;
        var point = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
        var pointTest = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
        var lastPoint = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
        var firstPoint = true;
        var translate = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.translation(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.negate(centerPoint));
        var mat = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(translate, renderContext.WVP);
        var matWV = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(translate, renderContext.WV);
        for (var i = 0; i < count; i++) {
            var pnt = _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._orbits[id][i];
            var angle = (Math.atan2(_planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._orbits[id][i].z, _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._orbits[id][i].x) + Math.PI * 2 - startAngle) % (Math.PI * 2);
            var alpha = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((angle / (Math.PI * 2) * 255));
            var alphaD = alpha / 255;
            if (alpha < 2 && !planetDropped) {
                pnt = planetNow;
                alphaD = 1;
            }
            pointTest = matWV.transform(pnt);
            point = mat.transform(pnt);
            if (pointTest.z > 0) {
                if (firstPoint) {
                    firstPoint = false;
                }
                else {
                    ctx.beginPath();
                    ctx.globalAlpha = alphaD * opacity;
                    ctx.moveTo(lastPoint.x, lastPoint.y);
                    ctx.lineTo(point.x, point.y);
                    ctx.stroke();
                }
            }
            lastPoint = point;
        }
        ctx.restore();
    }
    else {
        if (id !== 9) {
            var count = _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._orbitalSampleRate;
            var planetDropped = false;
            var viewPoint = renderContext.get_viewPoint();
            var point = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
            var pointTest = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
            var lastPoint = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
            var lastColor = new _color_js__WEBPACK_IMPORTED_MODULE_11__.Color();
            var firstPoint = true;
            var list = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_5__.OrbitLineList();
            for (var i = 0; i < count; i++) {
                var pnt = _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._orbits[id][i].copy();
                var angle = (Math.atan2(pnt.z, pnt.x) + Math.PI * 2 - startAngle) % (Math.PI * 2);
                var alpha = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((angle / (Math.PI * 2) * 255));
                var alphaD = alpha / 255;
                var color = _color_js__WEBPACK_IMPORTED_MODULE_11__.Color.fromArgb(alpha, eclipticColor.r, eclipticColor.g, eclipticColor.b);
                if (alpha < 2 && !planetDropped && !firstPoint) {
                    pnt = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(planetNow, centerPoint);
                    alphaD = 1;
                    alpha = 255;
                    color.a = 255;
                    lastColor.a = 255;
                    list.addLine(lastPoint, pnt.copy(), lastColor._clone(), color._clone());
                    lastColor.a = 0;
                    color.a = 0;
                    pnt = _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._orbits[id][i].copy();
                    planetDropped = true;
                }
                pnt = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(pnt, centerPoint);
                if (firstPoint) {
                    firstPoint = false;
                }
                else {
                    list.addLine(lastPoint, pnt, lastColor, color);
                }
                lastPoint = pnt;
                lastColor = color._clone();
            }
            list.drawLines(renderContext, 1, _color_js__WEBPACK_IMPORTED_MODULE_11__.Colors.get_white());
            list.clear();
        } else {
            var mu = 0;
            switch (id) {
                case 9:
                    mu = muEarth + muMoon;
                    break;
                case 10:
                case 11:
                case 12:
                case 13:
                    mu = muJupiter;
                    break;
                default:
                    mu = muSun;
                    break;
            }
            var deltaT = 1 / 1440 * 0.1;
            var r0 = _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets.getPlanetPositionDirect(id, _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._jNow);
            var r1 = _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets.getPlanetPositionDirect(id, _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._jNow - deltaT);
            var v = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.scale(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(r0, r1), 1 / deltaT);
            var elements = _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._stateVectorToKeplerian(r0, v, mu);
            Planets3d._drawSingleOrbitElements(renderContext, eclipticColor, id, centerPoint, startAngle, planetNow, elements);
        }
    }
};

Planets3d._drawSingleOrbitElements = function (renderContext, eclipticColor, id, centerPoint, xstartAngle, planetNow, el) {
    var scaleFactor;
    switch (id) {
        case 9:
            if (_settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_active().get_solarSystemScale() > 1) {
                scaleFactor = _settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_active().get_solarSystemScale() / 2;
            }
            else {
                scaleFactor = 1;
            }
            break;
        case 10:
        case 11:
        case 12:
        case 13:
            scaleFactor = _settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_active().get_solarSystemScale();
            break;
        default:
            scaleFactor = 1;
            break;
    }
    var translation = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.negate(centerPoint);
    if (id === 9) {
        translation.add(_planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._planet3dLocations[19]);
    }
    else if (id === 10 || id === 11 || id === 12 || id === 13) {
        translation.add(_planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._planet3dLocations[4]);
    }
    var currentPosition = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(planetNow, centerPoint);
    var worldMatrix = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(el.orientation, _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.translation(translation)), renderContext.get_world());
    _layers_orbit_js__WEBPACK_IMPORTED_MODULE_18__.EllipseRenderer.drawEllipseWithPosition(renderContext, el.a / 149598000 * scaleFactor, el.e, el.ea, eclipticColor, worldMatrix, currentPosition);
};

Planets3d.isPlanetInFrustum = function (renderContext, rad) {
    var frustum = renderContext.get_frustum();
    var center = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 0, 0);
    var centerV4 = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector4d(0, 0, 0, 1);
    for (var i = 0; i < 6; i++) {
        if (frustum[i].dot(centerV4) + rad < 0) {
            return false;
        }
    }
    return true;
};

Planets3d._drawPlanet3d = function (renderContext, planetID, centerPoint) {
    if (planetID === 0) {
        _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__.TileShader.minLightingBrightness = 1;
    }
    else {
        _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__.TileShader.minLightingBrightness = 0.025;
        if (planetID === 19) {
            _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__.TileShader.atmosphereColor = _color_js__WEBPACK_IMPORTED_MODULE_11__.Color.fromArgb(255, 65, 157, 217);
        } else {
            _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__.TileShader.atmosphereColor = _color_js__WEBPACK_IMPORTED_MODULE_11__.Color.fromArgb(0, 0, 0, 0);
        }
    }
    var matOld = renderContext.get_world();
    var matOldBase = renderContext.get_worldBase();
    var matOldNonRotating = renderContext.get_worldBaseNonRotating();
    var radius = _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets.getAdjustedPlanetRadius(planetID);
    _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets.setupPlanetMatrix(renderContext, planetID, centerPoint, true);
    var planetWidth = 1;
    if (planetID === 5) {
        planetWidth = 3;
    }
    if (Planets3d.isPlanetInFrustum(renderContext, planetWidth)) {
        // Save all matrices modified by SetupMatrix...
        var matOld2 = renderContext.get_world();
        var matOldBase2 = renderContext.get_worldBase();
        var matOldNonRotating2 = renderContext.get_worldBaseNonRotating();
        var sun = _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._planet3dLocations[0].copy();
        var planet = _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._planet3dLocations[planetID].copy();
        sun = matOld.transform(sun);
        planet = matOld.transform(planet);
        renderContext.set_world(matOld);
        renderContext.set_worldBase(matOldBase);
        renderContext.set_worldBaseNonRotating(matOldNonRotating);
        _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._setupMatrixForPlanetGeometry(renderContext, planetID, centerPoint, true);
        var sunPosition = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(sun, planet);
        sunPosition.normalize();
        renderContext.set_sunPosition(sunPosition);
        _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__.TileShader.sunPosition = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(_planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._planet3dLocations[0], planet);
        var loc = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(_planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._planet3dLocations[planetID], centerPoint);
        loc.subtract(renderContext.cameraPosition);
        var dist = loc.length();
        var sizeIndexParam = (2 * Math.atan(0.5 * (radius / dist))) / Math.PI * 180;
        var sizeIndex = 0;
        if (sizeIndexParam > 10.5) {
            sizeIndex = 0;
        } else if (sizeIndexParam > 3.9) {
            sizeIndex = 1;
        } else if (sizeIndexParam > 0.72) {
            sizeIndex = 2;
        } else if (sizeIndexParam > 0.05) {
            sizeIndex = 3;
        } else {
            sizeIndex = 4;
        }
        if (planetID === 19 && sizeIndex < 2) {
            var width = _settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_active().get_solarSystemScale() * 1E-05;
        }
        if (sizeIndex < 4) {
            var oldLighting = renderContext.lighting;
            if (planetID === 5) {
                if (renderContext.gl == null) {
                    renderContext.lighting = false;
                    // DRAW BACK HALF OF RINGS
                    Planets3d.drawSaturnsRings(renderContext, false, dist);
                    renderContext.lighting = oldLighting;
                }
            }
            if (!planetID) {
                renderContext.lighting = false;
            }
            Planets3d._drawSphere(renderContext, planetID);
            if (planetID === 5) {
                if (renderContext.gl == null) {
                    renderContext.lighting = false;
                    // DRAW FRONT HALF OF RINGS
                    Planets3d.drawSaturnsRings(renderContext, true, dist);
                }
                else {
                    renderContext.lighting = false;
                    Planets3d._drawRings(renderContext);
                    renderContext.lighting = oldLighting;
                }
            }
            renderContext.lighting = oldLighting;
        } else {
            if (!planetID) {
                _baseplanets_js__WEBPACK_IMPORTED_MODULE_9__.BasePlanets.drawPointPlanet(renderContext, new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d(), (10 * _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._planetDiameters[planetID]), _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets.planetColors[planetID], true);
            }
            else if (planetID < 9 || planetID === 19) {
                var size = (800 * _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._planetDiameters[planetID]);
                _baseplanets_js__WEBPACK_IMPORTED_MODULE_9__.BasePlanets.drawPointPlanet(renderContext, new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d(), Math.max(0.05, Math.min(0.1, size)), _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets.planetColors[planetID], true);
            }
            else if (sizeIndexParam > 0.002) {
                var size = (800 * _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._planetDiameters[planetID]);
                _baseplanets_js__WEBPACK_IMPORTED_MODULE_9__.BasePlanets.drawPointPlanet(renderContext, new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d(), Math.max(0.05, Math.min(0.1, size)), _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets.planetColors[planetID], true);
            }
        }
    }
    _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_19__.LayerManager._draw(renderContext, 1, false, _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets.getNameFrom3dId(planetID), true, false);
    renderContext.set_world(matOld);
    renderContext.set_worldBase(matOldBase);
    renderContext.set_worldBaseNonRotating(matOldNonRotating);
};

Planets3d.drawSaturnsRings = function (renderContext, front, distance) {
    if (Planets3d._ringsTriangleLists[0] == null) {
        Planets3d._ringImage = document.createElement('img');
        var xdomimg = Planets3d._ringImage;
        xdomimg.crossOrigin = 'anonymous';
        Planets3d._ringImage.src = _url_helpers_js__WEBPACK_IMPORTED_MODULE_17__.URLHelpers.singleton.engineAssetUrl('saturnringsshadow.png');
        Planets3d._ringsTriangleLists[0] = [];
        Planets3d._ringsTriangleLists[1] = [];
        var ringSize = 2.25;
        var TopLeft = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(-ringSize, 0, -ringSize);
        var TopRight = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(ringSize, 0, -ringSize);
        var BottomLeft = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(-ringSize, 0, ringSize);
        var BottomRight = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(ringSize, 0, ringSize);
        var center = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 0, 0);
        var leftCenter = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(-ringSize, 0, 0);
        var topCenter = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 0, -ringSize);
        var bottomCenter = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 0, ringSize);
        var rightCenter = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(ringSize, 0, 0);
        var level = 6;
        var vertexList;
        vertexList = [];
        var Width = 1024;
        var Height = 1024;
        vertexList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionTexture.createPosSize(TopLeft, 0, 0, Width, Height));
        vertexList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionTexture.createPosSize(TopRight, 1, 0, Width, Height));
        vertexList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionTexture.createPosSize(BottomLeft, 0, 1, Width, Height));
        vertexList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionTexture.createPosSize(BottomRight, 1, 1, Width, Height));
        var childTriangleList = [];
        childTriangleList.push(_triangle_js__WEBPACK_IMPORTED_MODULE_15__.Triangle.create(0, 2, 1));
        childTriangleList.push(_triangle_js__WEBPACK_IMPORTED_MODULE_15__.Triangle.create(2, 3, 1));
        var count = 5;
        while (count-- > 1) {
            var newList = [];
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(childTriangleList);
            while ($enum1.moveNext()) {
                var tri = $enum1.current;
                tri.subDivideNoNormalize(newList, vertexList);
            }
            childTriangleList = newList;
        }
        var miter = 0.6 / (Width / 256);
        var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(childTriangleList);
        while ($enum2.moveNext()) {
            var tri = $enum2.current;
            var p1 = vertexList[tri.a];
            var p2 = vertexList[tri.b];
            var p3 = vertexList[tri.c];
            Planets3d._ringsTriangleLists[0].push(_render_triangle_js__WEBPACK_IMPORTED_MODULE_13__.RenderTriangle.createWithMiter(p1, p2, p3, Planets3d._ringImage, level, miter));
        }
    }
    if (renderContext.gl == null) {
        var cam = renderContext.cameraPosition;
        var test = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
        var worldLocal = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationY(Math.atan2(renderContext.get_sunPosition().x, renderContext.get_sunPosition().z)), renderContext.get_worldBaseNonRotating());
        var wv = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(worldLocal, renderContext.get_view());
        var wvp = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(wv, renderContext.get_projection());
        var Width = renderContext.width;
        var Height = renderContext.height;
        wvp.scale(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(Width / 2, -Height / 2, 1));
        wvp.translate(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(Width / 2, Height / 2, 0));
        var td = 0;
        for (var i = 0; i < 2; i++) {
            var $enum3 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(Planets3d._ringsTriangleLists[0]);
            while ($enum3.moveNext()) {
                var tri = $enum3.current;
                test = wv.transform(tri.a.position);
                td = test.length();
                var draw = td > distance;
                if (front) {
                    draw = !draw;
                }
                if (draw) {
                    tri.opacity = 1;
                    tri.draw(renderContext.device, wvp);
                }
            }
            _render_triangle_js__WEBPACK_IMPORTED_MODULE_13__.RenderTriangle.cullInside = !_render_triangle_js__WEBPACK_IMPORTED_MODULE_13__.RenderTriangle.cullInside;
        }
    }
    else { }
};

// Various input layouts used in 3D solar system mode
// TODO Replace with an input layout cache

Planets3d._drawRings = function (renderContext) {
    Planets3d._initRings();
    _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__.TileShader.use(renderContext, Planets3d._ringsVertexBuffer.vertexBuffer, null, _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._ringsTexture.texture2d, 1, false, _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.zero);
    renderContext.gl.drawArrays(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_3__.WEBGL.TRIANGLE_STRIP, 0, Planets3d._triangleCountRings);
};

Planets3d._initRings = function () {
    if (Planets3d._ringsVertexBuffer != null) {
        return;
    }
    _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets._ringsTexture = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_6__.Texture.fromUrl(_url_helpers_js__WEBPACK_IMPORTED_MODULE_17__.URLHelpers.singleton.engineAssetUrl('saturnringsstrip.png'));
    var inner = 1.113;
    var outer = 2.25;
    Planets3d._ringsVertexBuffer = new _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_4__.PositionTextureVertexBuffer(((192 + 1) * 2));
    Planets3d._triangleCountRings = (192 + 1) * 2;
    var verts = Planets3d._ringsVertexBuffer.lock();
    var radStep = Math.PI * 2 / 192;
    var index = 0;
    for (var x = 0; x <= 192; x += 2) {
        var rads1 = x * radStep;
        var rads2 = (x + 1) * radStep;
        verts[index] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionTexture();
        verts[index].position = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create((Math.cos(rads1) * inner), 0, (Math.sin(rads1) * inner));
        verts[index].tu = 1;
        verts[index].tv = 0;
        index++;
        verts[index] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionTexture();
        verts[index].position = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create((Math.cos(rads1) * outer), 0, (Math.sin(rads1) * outer));
        verts[index].tu = 0;
        verts[index].tv = 0;
        index++;
        verts[index] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionTexture();
        verts[index].position = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create((Math.cos(rads2) * inner), 0, (Math.sin(rads2) * inner));
        verts[index].tu = 1;
        verts[index].tv = 1;
        index++;
        verts[index] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionTexture();
        verts[index].position = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create((Math.cos(rads2) * outer), 0, (Math.sin(rads2) * outer));
        verts[index].tu = 0;
        verts[index].tv = 1;
        index++;
    }
    Planets3d._ringsVertexBuffer.unlock();
};

Planets3d._drawSphere = function (renderContext, planetID) {
    var planetName = Planets3d.getImageSetNameNameFrom3dId(planetID);
    var planet = _data_globals_js__WEBPACK_IMPORTED_MODULE_10__.globalWWTControl.getImagesetByName(planetName);
    if (planet == null) {
        planet = _data_globals_js__WEBPACK_IMPORTED_MODULE_10__.globalWWTControl.getImagesetByName('Bing Maps Aerial');
    }
    if (planet != null) {
        renderContext.drawImageSet(planet, 100);
        if (planetID === 19) {
        }
        return;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Planets3d", [Planets3d, {}, null]);


/***/ }),

/***/ "./esm/plot_tile.js":
/*!**************************!*\
  !*** ./esm/plot_tile.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PlotTile: () => (/* binding */ PlotTile)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _baseplanets_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./baseplanets.js */ "./esm/baseplanets.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./coordinates.js */ "./esm/coordinates.js");
/* harmony import */ var _star_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./star.js */ "./esm/star.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _web_file_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./web_file.js */ "./esm/web_file.js");
/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tile.js */ "./esm/tile.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A tile that plots tabular data.
//
// This tile class is not implemented for the WebGL rendering backend!













// wwtlib.PlotTile

function PlotTile() {
    this._topDown$1 = true;
    this.backslash = false;
    this._vertexList$1 = null;
    this._childTriangleList$1 = null;
    this._stars$1 = [];
    this._subDivisionLevel$1 = 4;
    this._subDivided$1 = false;
    _tile_js__WEBPACK_IMPORTED_MODULE_9__.Tile.call(this);
}

PlotTile.create = function (level, xc, yc, dataset, parent) {
    var temp = new PlotTile();
    temp.parent = parent;
    temp.level = level;
    temp.tileX = xc;
    temp.tileY = yc;
    temp.dataset = dataset;
    temp._topDown$1 = !dataset.get_bottomsUp();
    if (temp.tileX !== xc) {
        alert('bad');
    }
    if (!!dataset.get_meanRadius()) {
        temp.set__demScaleFactor(dataset.get_meanRadius());
    }
    else {
        if (!dataset.get_dataSetType()) {
            temp.set__demScaleFactor(6371000);
        } else {
            temp.set__demScaleFactor(3396010);
        }
    }
    temp.computeBoundingSphere();
    return temp;
};

var PlotTile$ = {
    computeBoundingSphere: function () {
        this._initializeGrids$1();
        this.topLeft = this.bounds[0 + 3 * 0].position.copy();
        this.bottomRight = this.bounds[2 + 3 * 2].position.copy();
        this.topRight = this.bounds[2 + 3 * 0].position.copy();
        this.bottomLeft = this.bounds[0 + 3 * 2].position.copy();
        this.calcSphere();
    },

    renderPart: function (renderContext, part, opacity, combine) {
        if (renderContext.gl != null) {
            //todo draw in WebGL
        } else {
            if (!part) {
                var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._stars$1);
                while ($enum1.moveNext()) {
                    var star = $enum1.current;
                    var radDec = 25 / Math.pow(1.6, star.magnitude);
                    _baseplanets_js__WEBPACK_IMPORTED_MODULE_4__.BasePlanets.drawPointPlanet(renderContext, star.position, radDec, star.col, false);
                }
            }
        }
    },

    requestImage: function () {
        if (!this.downloading && !this.readyToRender) {
            this.downloading = true;
            this._webFile$1 = new _web_file_js__WEBPACK_IMPORTED_MODULE_8__.WebFile(_url_helpers_js__WEBPACK_IMPORTED_MODULE_7__.URLHelpers.singleton.rewrite(this.get_URL(), 0));
            this._webFile$1.onStateChange = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('fileStateChange', this);
            this._webFile$1.send();
        }
    },

    fileStateChange: function () {
        if (this._webFile$1.get_state() === 2) {
            this.downloading = false;
            this.readyToRender = false;
            this.errored = true;
            this.requestPending = false;
            (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileCacheRemoveFromQueue)(this.get_key(), true);
        } else if (this._webFile$1.get_state() === 1) {
            this.texReady = true;
            this.downloading = false;
            this.errored = false;
            this.readyToRender = this.texReady && (this.demReady || !this.demTile);
            this.requestPending = false;
            (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileCacheRemoveFromQueue)(this.get_key(), true);
            this._loadData$1(this._webFile$1.getText());
        }
    },

    _loadData$1: function (data) {
        var rows = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(data, '\r\n', '\n').split('\n');
        var firstRow = true;
        var type = 0;
        var star = null;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(rows);
        while ($enum1.moveNext()) {
            var row = $enum1.current;
            if (firstRow) {
                firstRow = false;
                continue;
            }
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(row).length > 5) {
                star = new _star_js__WEBPACK_IMPORTED_MODULE_6__.Star(row);
                star.position = _coordinates_js__WEBPACK_IMPORTED_MODULE_5__.Coordinates.raDecTo3dAu(star.RA, star.dec, 1);
                this._stars$1.push(star);
            }
        }
    },

    isPointInTile: function (lat, lng) {
        if (!this.level) {
            return true;
        }
        if (this.level === 1) {
            if ((lng >= 0 && lng <= 90) && (!this.tileX && this.tileY === 1)) {
                return true;
            }
            if ((lng > 90 && lng <= 180) && (this.tileX === 1 && this.tileY === 1)) {
                return true;
            }
            if ((lng < 0 && lng >= -90) && (!this.tileX && !this.tileY)) {
                return true;
            }
            if ((lng < -90 && lng >= -180) && (this.tileX === 1 && !this.tileY)) {
                return true;
            }
            return false;
        }
        if (!this.demReady || this.demData == null) {
            return false;
        }
        var testPoint = _coordinates_js__WEBPACK_IMPORTED_MODULE_5__.Coordinates.geoTo3dDouble(-lat, lng);
        var top = this._isLeftOfHalfSpace$1(this.topLeft.copy(), this.topRight.copy(), testPoint);
        var right = this._isLeftOfHalfSpace$1(this.topRight.copy(), this.bottomRight.copy(), testPoint);
        var bottom = this._isLeftOfHalfSpace$1(this.bottomRight.copy(), this.bottomLeft.copy(), testPoint);
        var left = this._isLeftOfHalfSpace$1(this.bottomLeft.copy(), this.topLeft.copy(), testPoint);
        if (top && right && bottom && left) {
            return true;
        }
        return false;
    },

    _isLeftOfHalfSpace$1: function (pntA, pntB, pntTest) {
        pntA.normalize();
        pntB.normalize();
        var cross = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.cross(pntA, pntB);
        var dot = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.dot(cross, pntTest);
        return dot < 0;
    },

    _initializeGrids$1: function () {
        this._vertexList$1 = [];
        this._childTriangleList$1 = new Array(4);
        this._childTriangleList$1[0] = [];
        this._childTriangleList$1[1] = [];
        this._childTriangleList$1[2] = [];
        this._childTriangleList$1[3] = [];
        this.bounds = new Array(9);
        if (this.level > 0) {
            if (this.parent == null) {
                this.parent = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileCacheGetTile)(this.level - 1, this.tileX / 2, this.tileY / 2, this.dataset, null);
            }
            var parent = this.parent;
            var xIndex = this.tileX % 2;
            var yIndex = this.tileY % 2;
            if (this.level > 1) {
                this.backslash = parent.backslash;
            }
            else {
                this.backslash = (xIndex === 1 ^ yIndex === 1) === 1;
            }
            this.bounds[0 + 3 * 0] = parent.bounds[xIndex + 3 * yIndex].copy();
            this.bounds[1 + 3 * 0] = this._midpoint$1(parent.bounds[xIndex + 3 * yIndex], parent.bounds[xIndex + 1 + 3 * yIndex]);
            this.bounds[2 + 3 * 0] = parent.bounds[xIndex + 1 + 3 * yIndex].copy();
            this.bounds[0 + 3 * 1] = this._midpoint$1(parent.bounds[xIndex + 3 * yIndex], parent.bounds[xIndex + 3 * (yIndex + 1)]);
            if (this.backslash) {
                this.bounds[1 + 3 * 1] = this._midpoint$1(parent.bounds[xIndex + 3 * yIndex], parent.bounds[xIndex + 1 + 3 * (yIndex + 1)]);
            }
            else {
                this.bounds[1 + 3 * 1] = this._midpoint$1(parent.bounds[xIndex + 1 + 3 * yIndex], parent.bounds[xIndex + 3 * (yIndex + 1)]);
            }
            this.bounds[2 + 3 * 1] = this._midpoint$1(parent.bounds[xIndex + 1 + 3 * yIndex], parent.bounds[xIndex + 1 + 3 * (yIndex + 1)]);
            this.bounds[0 + 3 * 2] = parent.bounds[xIndex + 3 * (yIndex + 1)].copy();
            this.bounds[1 + 3 * 2] = this._midpoint$1(parent.bounds[xIndex + 3 * (yIndex + 1)], parent.bounds[xIndex + 1 + 3 * (yIndex + 1)]);
            this.bounds[2 + 3 * 2] = parent.bounds[xIndex + 1 + 3 * (yIndex + 1)].copy();
            this.bounds[0 + 3 * 0].tu = 0 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[0 + 3 * 0].tv = 0 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[1 + 3 * 0].tu = 0.5 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[1 + 3 * 0].tv = 0 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[2 + 3 * 0].tu = 1 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[2 + 3 * 0].tv = 0 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[0 + 3 * 1].tu = 0 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[0 + 3 * 1].tv = 0.5 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[1 + 3 * 1].tu = 0.5 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[1 + 3 * 1].tv = 0.5 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[2 + 3 * 1].tu = 1 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[2 + 3 * 1].tv = 0.5 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[0 + 3 * 2].tu = 0 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[0 + 3 * 2].tv = 1 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[1 + 3 * 2].tu = 0.5 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[1 + 3 * 2].tv = 1 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[2 + 3 * 2].tu = 1 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[2 + 3 * 2].tv = 1 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
        } else {
            this.bounds[0 + 3 * 0] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.create(0, -1, 0, 0, 0);
            this.bounds[1 + 3 * 0] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.create(0, 0, 1, 0.5, 0);
            this.bounds[2 + 3 * 0] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.create(0, -1, 0, 1, 0);
            this.bounds[0 + 3 * 1] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.create(-1, 0, 0, 0, 0.5);
            this.bounds[1 + 3 * 1] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.create(0, 1, 0, 0.5, 0.5);
            this.bounds[2 + 3 * 1] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.create(1, 0, 0, 1, 0.5);
            this.bounds[0 + 3 * 2] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.create(0, -1, 0, 0, 1);
            this.bounds[1 + 3 * 2] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.create(0, 0, -1, 0.5, 1);
            this.bounds[2 + 3 * 2] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.create(0, -1, 0, 1, 1);
        }
    },

    _midpoint$1: function (positionNormalTextured, positionNormalTextured_2) {
        var a1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.lerp(positionNormalTextured.position, positionNormalTextured_2.position, 0.5);
        var a1uv = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.lerp(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.create(positionNormalTextured.tu, positionNormalTextured.tv), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.create(positionNormalTextured_2.tu, positionNormalTextured_2.tv), 0.5);
        a1.normalize();
        return _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(a1, a1uv.x, a1uv.y);
    },

    createGeometry: function (renderContext) {
        if (this.geometryCreated) {
            return true;
        }
        this.geometryCreated = true;
        _tile_js__WEBPACK_IMPORTED_MODULE_9__.Tile.prototype.createGeometry.call(this, renderContext);
        return true;
    },

    cleanUp: function (removeFromParent) {
        _tile_js__WEBPACK_IMPORTED_MODULE_9__.Tile.prototype.cleanUp.call(this, removeFromParent);
        if (this._vertexList$1 != null) {
            this._vertexList$1 = null;
        }
        if (this._childTriangleList$1 != null) {
            this._childTriangleList$1 = null;
        }
        this._subDivided$1 = false;
        this.demArray = null;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("PlotTile", [PlotTile, PlotTile$, _tile_js__WEBPACK_IMPORTED_MODULE_9__.Tile]);


/***/ }),

/***/ "./esm/pointing.js":
/*!*************************!*\
  !*** ./esm/pointing.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Pointing: () => (/* binding */ Pointing)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _healpix_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./healpix_utils.js */ "./esm/healpix_utils.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A lat/lon datatype. This is unused in the engine, but preserved for API
// compatibility.






// wwtlib.Pointing

function Pointing() {
    // Colatitude in radians (0 is North Pole; Pi is South Pole)
    this.theta = 0;

    // Longitude in radians
    this.phi = 0;
}

Pointing.create = function (theta, phi) {
    var temp = new Pointing();
    temp.theta = theta;
    temp.phi = phi;
    return temp;
};

var Pointing$ = {
    normalizeTheta: function () {
        this.theta = _healpix_utils_js__WEBPACK_IMPORTED_MODULE_2__.HealpixUtils.fmodulo(this.theta, 2 * Math.PI);
        if (this.theta > Math.PI) {
            this.phi += Math.PI;
            this.theta = 2 * Math.PI - this.theta;
        }
    },

    normalize: function () {
        this.normalizeTheta();
        this.phi = _healpix_utils_js__WEBPACK_IMPORTED_MODULE_2__.HealpixUtils.fmodulo(this.phi, 2 * Math.PI);
    },

    toString: function () {
        var s = new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.StringBuilder();
        s.append('ptg(');
        s.append(this.theta);
        s.append(',');
        s.append(this.phi);
        s.append(')');
        return s.toString();
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Pointing", [Pointing, Pointing$, null]);


/***/ }),

/***/ "./esm/render_context.js":
/*!*******************************!*\
  !*** ./esm/render_context.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InViewReturnMessage: () => (/* binding */ InViewReturnMessage),
/* harmony export */   RenderContext: () => (/* binding */ RenderContext)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./graphics/webgl_constants.js */ "./esm/graphics/webgl_constants.js");
/* harmony import */ var _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./graphics/shaders.js */ "./esm/graphics/shaders.js");
/* harmony import */ var _camera_parameters_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./camera_parameters.js */ "./esm/camera_parameters.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./color.js */ "./esm/color.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./coordinates.js */ "./esm/coordinates.js");
/* harmony import */ var _imageset_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./imageset.js */ "./esm/imageset.js");
/* harmony import */ var _planets_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./planets.js */ "./esm/planets.js");
/* harmony import */ var _render_triangle_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./render_triangle.js */ "./esm/render_triangle.js");
/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./settings.js */ "./esm/settings.js");
/* harmony import */ var _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./space_time_controller.js */ "./esm/space_time_controller.js");
/* harmony import */ var _layers_spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./layers/spreadsheet_layer.js */ "./esm/layers/spreadsheet_layer.js");
/* harmony import */ var _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./layers/layer_manager.js */ "./esm/layers/layer_manager.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// The main engine renderer implementation.





















// wwtlib.InViewReturnMessage

function InViewReturnMessage() {
    this.aborted = false;
}

var InViewReturnMessage$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("InViewReturnMessage", [InViewReturnMessage, InViewReturnMessage$, null]);


// wwtlib.RenderContext

function RenderContext() {
    this.height = 0;
    this.width = 0;
    this.lighting = false;
    this._viewPoint = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
    this.space = false;
    this._fovAngle = 0;
    this._fovScale = 0;
    this._nominalRadius = 6378137;
    this._mainTexture = null;
    this.viewMover = null;
    this.viewCamera = new _camera_parameters_js__WEBPACK_IMPORTED_MODULE_8__.CameraParameters();
    this.targetCamera = new _camera_parameters_js__WEBPACK_IMPORTED_MODULE_8__.CameraParameters();
    this.alt = 0;
    this.az = 0;
    this.targetAlt = 0;
    this.targetAz = 0;
    this._backgroundImageset = null;
    this._foregroundImageset = null;
    this._activeCatalogHipsImagesets = [];
    this._targetHeight = 1;
    this.targetAltitude = 0;
    this._galactic = true;
    this._galacticMatrix = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.create(-0.4838350155, -0.0548755604, -0.8734370902, 0, 0.7469822445, 0.4941094279, -0.44482963, 0, 0.4559837762, -0.867666149, -0.1980763734, 0, 0, 0, 0, 1);
    this._firstTimeInit = false;
    this._useSolarSystemTilt = true;
    this.customTrackingParams = new _camera_parameters_js__WEBPACK_IMPORTED_MODULE_8__.CameraParameters();
    this._cameraOffset = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
    this._fovLocal = (Math.PI / 4);
    this.perspectiveFov = Math.PI / 4;
    this.nearPlane = 0;
    this._frustumDirty = true;
    this._frustum = new Array(6);
    this._ambientLightColor = _color_js__WEBPACK_IMPORTED_MODULE_9__.Colors.get_black();
    this._hemiLightColor = _color_js__WEBPACK_IMPORTED_MODULE_9__.Colors.get_black();
    this._hemiLightUp = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
    this._sunlightColor = _color_js__WEBPACK_IMPORTED_MODULE_9__.Colors.get_white();
    this._sunPosition = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
    this._reflectedLightColor = _color_js__WEBPACK_IMPORTED_MODULE_9__.Colors.get_black();
    this._reflectedLightPosition = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
    this._occludingPlanetRadius = 0;
    this._occludingPlanetPosition = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
    this._lightingStateDirty = true;
    this._twoSidedLighting = false;
    this.cameraPosition = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
    this._skyColor = 'Blue';
    for (var i = 0; i < 6; i++) {
        this._frustum[i] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PlaneD(0, 0, 0, 0);
    }
}

RenderContext.back = 0;

RenderContext.create = function (device) {
    var temp = new RenderContext();
    temp.device = device;
    temp.viewCamera.zoom = 700;
    temp.viewCamera.target = 65536;
    return temp;
};

RenderContext.getTilesYForLevel = function (layer, level) {
    var maxY = 1;
    switch (layer.get_projection()) {
        case _imageset_js__WEBPACK_IMPORTED_MODULE_11__.ProjectionType.mercator:
            maxY = Math.pow(2, level);
            break;
        case _imageset_js__WEBPACK_IMPORTED_MODULE_11__.ProjectionType.equirectangular:
            maxY = (Math.pow(2, level) * (180 / layer.get_baseTileDegrees()));
            break;
        case _imageset_js__WEBPACK_IMPORTED_MODULE_11__.ProjectionType.tangent:
            maxY = Math.pow(2, level);
            break;
        case _imageset_js__WEBPACK_IMPORTED_MODULE_11__.ProjectionType.spherical:
            maxY = 1;
            break;
        case _imageset_js__WEBPACK_IMPORTED_MODULE_11__.ProjectionType.healpix:
            maxY = 4 * Math.pow(2, level);
            break;
        default:
            maxY = Math.pow(2, level);
            break;
    }
    if (maxY === Number.POSITIVE_INFINITY) {
        maxY = 1;
    }
    return maxY;
};

RenderContext.getTilesXForLevel = function (layer, level) {
    var maxX = 1;
    switch (layer.get_projection()) {
        case _imageset_js__WEBPACK_IMPORTED_MODULE_11__.ProjectionType.plotted:
        case _imageset_js__WEBPACK_IMPORTED_MODULE_11__.ProjectionType.toast:
            maxX = Math.pow(2, level);
            break;
        case _imageset_js__WEBPACK_IMPORTED_MODULE_11__.ProjectionType.mercator:
            maxX = Math.pow(2, level) * _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((layer.get_baseTileDegrees() / 360));
            break;
        case _imageset_js__WEBPACK_IMPORTED_MODULE_11__.ProjectionType.equirectangular:
            maxX = Math.pow(2, level) * _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((360 / layer.get_baseTileDegrees()));
            break;
        case _imageset_js__WEBPACK_IMPORTED_MODULE_11__.ProjectionType.tangent:
            if (layer.get_widthFactor() === 1) {
                maxX = Math.pow(2, level) * 2;
            }
            else {
                maxX = Math.pow(2, level);
            }
            break;
        case _imageset_js__WEBPACK_IMPORTED_MODULE_11__.ProjectionType.skyImage:
            maxX = 1;
            break;
        case _imageset_js__WEBPACK_IMPORTED_MODULE_11__.ProjectionType.spherical:
            maxX = 1;
            break;
        case _imageset_js__WEBPACK_IMPORTED_MODULE_11__.ProjectionType.healpix:
            maxX = Math.pow(2, level) * 3;
            break;
        default:
            maxX = Math.pow(2, level) * 2;
            break;
    }
    return maxX;
};

var RenderContext$ = {
    save: function () {
        if (this.gl != null) {
        } else {
            this.device.save();
        }
    },

    restore: function () {
        if (this.gl != null) {
        } else {
            this.device.restore();
        }
    },

    clear: function () {
        if (this.gl != null) {
            this.gl.viewport(0, 0, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(this.width), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(this.height));
            this.gl.clear(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.COLOR_BUFFER_BIT | _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.DEPTH_BUFFER_BIT);
        } else {
            this.device.save();
            this.device.fillStyle = 'black';
            this.device.fillRect(0, 0, this.width, this.height);
            this.device.restore();
        }
    },

    get_viewPoint: function () {
        return this._viewPoint;
    },

    get_RA: function () {
        return ((((180 - (this.viewCamera.lng - 180)) / 15) % 24) + 48) % 24;
    },

    rAtoViewLng: function (ra) {
        return 180 - (ra / 24 * 360) - 180;
    },

    get_dec: function () {
        return this.viewCamera.lat;
    },

    get_fovAngle: function () {
        return this._fovAngle;
    },

    get_fovScale: function () {
        return this._fovScale;
    },

    set_fovScale: function (value) {
        this._fovScale = value;
        return value;
    },

    get_view: function () {
        return this._view;
    },

    set_view: function (value) {
        this._view = value;
        this._frustumDirty = true;
        return value;
    },

    get_viewBase: function () {
        return this._viewBase;
    },

    set_viewBase: function (value) {
        this._viewBase = value;
        return value;
    },

    get_projection: function () {
        return this._projection;
    },

    set_projection: function (value) {
        this._projection = value;
        this._frustumDirty = true;
        return value;
    },

    get_world: function () {
        return this._world;
    },

    set_world: function (value) {
        this._world = value;
        this._frustumDirty = true;
        return value;
    },

    _getScreenTexture: function () {
        //todo add code to capture screen
        var tex = null;
        return tex;
    },

    get_worldBase: function () {
        return this._worldBase;
    },

    set_worldBase: function (value) {
        this._worldBase = value;
        return value;
    },

    get_worldBaseNonRotating: function () {
        return this._worldBaseNonRotating;
    },

    set_worldBaseNonRotating: function (value) {
        this._worldBaseNonRotating = value;
        return value;
    },

    get_nominalRadius: function () {
        return this._nominalRadius;
    },

    set_nominalRadius: function (value) {
        this._nominalRadius = value;
        return value;
    },

    get_mainTexture: function () {
        return this._mainTexture;
    },

    set_mainTexture: function (value) {
        if (value != null) {
            this._mainTexture = value;
            this.gl.bindTexture(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_6__.WEBGL.TEXTURE_2D, this._mainTexture.texture2d);
        }
        return value;
    },

    onTarget: function (place) {
        return ((Math.abs(this.viewCamera.lat - this.targetCamera.lat) < 1E-12 && Math.abs(this.viewCamera.lng - this.targetCamera.lng) < 1E-12 && Math.abs(this.viewCamera.zoom - this.targetCamera.zoom) < 1E-12) && this.viewMover == null);
    },

    setTexture: function (texture) { },

    get_backgroundImageset: function () {
        return this._backgroundImageset;
    },

    set_backgroundImageset: function (value) {
        var viewModeChanged = this._backgroundImageset != null && value != null && (this._backgroundImageset.get_dataSetType() !== value.get_dataSetType());
        this._backgroundImageset = value;

        if (viewModeChanged) {
            //Prevent potential artifacts when going from 3D to Sky/Pan
            _data_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalWWTControl._freezeView();
            _data_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalWWTControl.clampZooms(this);
        }
        return value;
    },

    get_foregroundImageset: function () {
        return this._foregroundImageset;
    },

    set_foregroundImageset: function (value) {
        this._foregroundImageset = value;
        return value;
    },

    get_catalogHipsImagesets: function () {
        return this._activeCatalogHipsImagesets;
    },

    getCatalogHipsDataInView: function (imageset, limit, onComplete) {
        var $this = this;

        var layer = new _layers_spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_16__.CatalogSpreadSheetLayer();
        var onHeaderInfoLoad = function () {
            layer.useHeadersFromVoTable(imageset.get_hipsProperties().get_catalogColumnInfo());
            $this._tryGetAllDataInView(imageset, limit, layer, onComplete, 0);
        };
        if (imageset.get_hipsProperties() == null) {
            imageset.set_hipsProperties((0,_data_globals_js__WEBPACK_IMPORTED_MODULE_3__.makeNewHipsProperties)(imageset));
            imageset.get_hipsProperties().setDownloadCompleteListener(onHeaderInfoLoad);
        } else if (imageset.get_hipsProperties() != null && imageset.get_hipsProperties().get_downloadComplete()) {
            onHeaderInfoLoad();
        } else {
            imageset.get_hipsProperties().setDownloadCompleteListener(onHeaderInfoLoad);
        }
    },

    _tryGetAllDataInView: function (imageset, limit, catalogSpreadSheetLayer, onComplete, i) {
        var $this = this;

        var maxX = RenderContext.getTilesXForLevel(imageset, imageset.get_baseLevel());
        var maxY = RenderContext.getTilesYForLevel(imageset, imageset.get_baseLevel());
        var anyTileStillDownloading = false;
        for (var x = 0; x < maxX; x++) {
            for (var y = 0; y < maxY; y++) {
                var tile = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_4__.tileCacheGetTile)(imageset.get_baseLevel(), x, y, imageset, null);
                if (tile != null) {
                    var tileAndChildrenReady = (tile).getDataInView(this, limit, catalogSpreadSheetLayer);
                    anyTileStillDownloading = anyTileStillDownloading || !tileAndChildrenReady;
                }
                else {
                    anyTileStillDownloading = true;
                }
            }
        }
        if (anyTileStillDownloading) {
            var count = catalogSpreadSheetLayer.get__table().rows.length;
            if ((count > 10000 || i > 100 * 60 * 5) && limit) {
                console.log('Too Many results - Aborting');
                console.log(count);
                var returnMessage = new InViewReturnMessage();
                returnMessage.aborted = true;
                returnMessage.table = catalogSpreadSheetLayer.getTableDataInView();
                onComplete(returnMessage);
                catalogSpreadSheetLayer.cleanUp();
            }
            else {
                setTimeout(function () {
                    $this._tryGetAllDataInView(imageset, limit, catalogSpreadSheetLayer, onComplete, i);
                }, 10);
                if (!(i % 200)) {
                    console.log('Waiting for more tiles to load');
                    console.log(count);
                }
                i++;
            }
        } else {
            var count = catalogSpreadSheetLayer.get__table().rows.length;
            console.log('Done!');
            console.log(count);
            var returnMessage = new InViewReturnMessage();
            returnMessage.aborted = false;
            returnMessage.table = catalogSpreadSheetLayer.getTableDataInView();
            onComplete(returnMessage);
            catalogSpreadSheetLayer.cleanUp();
        }
    },

    addCatalogHips: function (imageset, onLoad) {
        if (!(this._activeCatalogHipsImagesets.indexOf(imageset) >= 0)) {
            this._activeCatalogHipsImagesets.push(imageset);
        }
        if (imageset.get_hipsProperties() == null) {
            imageset.set_hipsProperties((0,_data_globals_js__WEBPACK_IMPORTED_MODULE_3__.makeNewHipsProperties)(imageset));
            imageset.get_hipsProperties().setDownloadCompleteListener(onLoad);
        } else if (imageset.get_hipsProperties() != null && imageset.get_hipsProperties().get_downloadComplete()) {
            _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_17__.LayerManager.addSpreadsheetLayer(imageset.get_hipsProperties().get_catalogSpreadSheetLayer(), 'Sky');
            if (onLoad != null) {
                onLoad();
            }
        }
    },

    removeCatalogHips: function (imageset) {
        _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove(this._activeCatalogHipsImagesets, imageset);
        if (imageset.get_hipsProperties() != null) {
            _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_17__.LayerManager.deleteLayerByID(imageset.get_hipsProperties().get_catalogSpreadSheetLayer().id, true, true);
        }
    },

    getCatalogHipsByName: function (name) {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._activeCatalogHipsImagesets);
        while ($enum1.moveNext()) {
            var imageset = $enum1.current;
            if (imageset.get_name() === name) {
                return imageset;
            }
        }
        return null;
    },

    getAltitudeForLatLongForPlanet: function (planetID, viewLat, viewLong) {
        var layer = _data_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalWWTControl.getImagesetByName(_planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets.getNameFrom3dId(planetID));
        if (layer == null) {
            return 0;
        }
        var maxX = RenderContext.getTilesXForLevel(layer, layer.get_baseLevel());
        var maxY = RenderContext.getTilesYForLevel(layer, layer.get_baseLevel());
        for (var x = 0; x < maxX; x++) {
            for (var y = 0; y < maxY; y++) {
                var tile = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_4__.tileCacheGetTile)(layer.get_baseLevel(), x, y, layer, null);
                if (tile != null) {
                    if (tile.isPointInTile(viewLat, viewLong)) {
                        return tile.getSurfacePointAltitude(viewLat, viewLong, true);
                    }
                }
            }
        }
        return 0;
    },

    getEarthAltitude: function (ViewLat, ViewLong, meters) {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalWWTControl.get_solarSystemMode()) {
            var pnt = _coordinates_js__WEBPACK_IMPORTED_MODULE_10__.Coordinates.geoTo3dDouble(ViewLat, ViewLong + 90);
            var EarthMat = _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets.earthMatrixInv;
            pnt = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d._transformCoordinate(pnt, EarthMat);
            pnt.normalize();
            var point = _coordinates_js__WEBPACK_IMPORTED_MODULE_10__.Coordinates.cartesianToLatLng(pnt);
            return this.getAltitudeForLatLongForPlanet(this.viewCamera.target, point.y, point.x);
        } else if (this.get_backgroundImageset().get_dataSetType() != _imageset_js__WEBPACK_IMPORTED_MODULE_11__.ImageSetType.earth) {
            return (meters) ? this.getMetersAltitudeForLatLong(ViewLat, ViewLong) : this.getScaledAltitudeForLatLong(ViewLat, ViewLong);
        } else {
            return 0;
        }
    },

    drawImageSet: function (imageset, opacity) {
        var maxX = RenderContext.getTilesXForLevel(imageset, imageset.get_baseLevel());
        var maxY = RenderContext.getTilesYForLevel(imageset, imageset.get_baseLevel());
        for (var x = 0; x < maxX; x++) {
            for (var y = 0; y < maxY; y++) {
                var tile = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_4__.tileCacheGetTile)(imageset.get_baseLevel(), x, y, imageset, null);
                if (tile != null) {
                    tile.draw3D(this, opacity);
                }
            }
        }
    },

    _getTileAtLatLong: function (viewLat, viewLong) {
        var layer = this.get_backgroundImageset();
        if (layer == null) {
            return null;
        }
        var maxX = RenderContext.getTilesXForLevel(layer, layer.get_baseLevel());
        var maxY = RenderContext.getTilesYForLevel(layer, layer.get_baseLevel());
        for (var x = 0; x < maxX; x++) {
            for (var y = 0; y < maxY; y++) {
                var tile = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_4__.tileCacheGetTile)(layer.get_baseLevel(), x, y, layer, null);
                if (tile != null) {
                    if (tile.isPointInTile(viewLat, viewLong)) {
                        return tile;
                    }
                }
            }
        }
        return null;
    },

    getScaledAltitudeForLatLong: function (viewLat, viewLong) {
        var tile = this._getTileAtLatLong(viewLat, viewLong);
        if (tile != null) {
            return tile.getSurfacePointAltitude(viewLat, viewLong, false);
        }
        return 0;
    },

    getMetersAltitudeForLatLong: function (viewLat, viewLong) {
        var tile = this._getTileAtLatLong(viewLat, viewLong);
        if (tile != null) {
            return tile.getSurfacePointAltitude(viewLat, viewLong, true);
        }
        return 0;
    },

    _setupMatricesLand3d: function () {
        this.lighting = false;
        this.space = false;
        _render_triangle_js__WEBPACK_IMPORTED_MODULE_13__.RenderTriangle.cullInside = false;

        // For our world matrix, we will just rotate the Earth and Clouds about the y-axis.
        var WorldMatrix = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationY(((this.viewCamera.lng - 90) / 180 * Math.PI));
        WorldMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationX(((-this.viewCamera.lat) / 180 * Math.PI)));
        this.set_world(WorldMatrix);
        this.set_worldBase(WorldMatrix.clone());
        this._viewPoint = _coordinates_js__WEBPACK_IMPORTED_MODULE_10__.Coordinates.geoTo3d(this.viewCamera.lat, this.viewCamera.lng);
        var distance = 0;
        if (this._backgroundImageset.get_isMandelbrot()) {
            distance = (4 * (this.viewCamera.zoom / 180)) + 1E-41;
        } else {
            distance = (4 * (this.viewCamera.zoom / 180)) + 1E-06;
        }
        this._fovAngle = (this.viewCamera.zoom / 343.774) / Math.PI * 180;
        this._fovScale = (this._fovAngle / this.height) * 3600;
        if (this.gl != null) {
            this.targetAltitude = this.getScaledAltitudeForLatLong(this.viewCamera.lat, this.viewCamera.lng);
            var heightNow = 1 + this.targetAltitude;
            this.targetAltitude *= this.get_nominalRadius();
            if (this._targetHeight < heightNow) {
                this._targetHeight = (((this._targetHeight * 2) + heightNow) / 3);
            }
            else {
                this._targetHeight = (((this._targetHeight * 9) + heightNow) / 10);
            }
        } else {
            this.targetAltitude = 0;
            this._targetHeight = 1;
        }
        var rotLocal = this.viewCamera.rotation;
        this.cameraPosition = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create((Math.sin(rotLocal) * Math.sin(this.viewCamera.angle) * distance), (Math.cos(rotLocal) * Math.sin(this.viewCamera.angle) * distance), (-this._targetHeight - (Math.cos(this.viewCamera.angle) * distance)));
        var cameraTarget = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 0, -this._targetHeight);
        var camHeight = this.cameraPosition.length();
        var lookUp = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(Math.sin(rotLocal) * Math.cos(this.viewCamera.angle), Math.cos(rotLocal) * Math.cos(this.viewCamera.angle), Math.sin(this.viewCamera.angle));
        this.set_view(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.lookAtLH(this.cameraPosition, cameraTarget, lookUp));
        this.set_viewBase(this.get_view());
        var back = Math.sqrt((distance + 1) * (distance + 1) - 1);
        back = Math.max(0.5, back);
        var m_nearPlane = distance * 0.05;
        m_nearPlane = distance * 0.05;
        this.set_projection(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.perspectiveFovLH((Math.PI / 4), this.width / this.height, m_nearPlane, back));
        this._setMatrixes();
        this.makeFrustum();
    },

    setupMatricesSpace3d: function (canvasWidth, canvasHeight) {
        this.lighting = false;
        if (!this._firstTimeInit) {
            this._galacticMatrix = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.get_identity();
            this._galacticMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationY(-(270 - (17.7603329867975 * 15)) / 180 * Math.PI));
            this._galacticMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationX(-(-28.9361739586894) / 180 * Math.PI));
            this._galacticMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationZ(((31.422052860102) - 90) / 180 * Math.PI));
            this._firstTimeInit = true;
        }
        this.space = true;
        _render_triangle_js__WEBPACK_IMPORTED_MODULE_13__.RenderTriangle.cullInside = true;
        var WorldMatrix = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.get_identity();
        if (_settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_active().get_galacticMode()) {
            WorldMatrix._multiply(this._galacticMatrix);
            WorldMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationY(this.az / 180 * Math.PI));
            WorldMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationX(-this.alt / 180 * Math.PI));
            var gPoint = _coordinates_js__WEBPACK_IMPORTED_MODULE_10__.Coordinates.galactictoJ2000(this.az, this.alt);
            this._viewPoint = _coordinates_js__WEBPACK_IMPORTED_MODULE_10__.Coordinates.raDecTo3dAu(gPoint[0] / 15, gPoint[1], 1);
            this.targetCamera.lng = this.rAtoViewLng(gPoint[0] / 15);
            this.targetCamera.lat = gPoint[1];
            this.viewCamera.lat = this.targetCamera.lat;
            this.viewCamera.lng = this.targetCamera.lng;
        } else {
            WorldMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationY(-(this.viewCamera.lng - 90) / 180 * Math.PI));
            WorldMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationX(-this.viewCamera.lat / 180 * Math.PI));
            this._viewPoint = _coordinates_js__WEBPACK_IMPORTED_MODULE_10__.Coordinates.raDecTo3dAu(this.get_RA(), this.get_dec(), 1);
        }
        var camLocal = this.viewCamera.rotation;
        this._fovAngle = (this.viewCamera.zoom / 343.774) / Math.PI * 180;
        this._fovScale = (this._fovAngle / canvasHeight) * 3600;

        // altaz
        if (_settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_active().get_localHorizonMode() && this._backgroundImageset.get_dataSetType() == _imageset_js__WEBPACK_IMPORTED_MODULE_11__.ImageSetType.sky) {
            var zenithAltAz = new _coordinates_js__WEBPACK_IMPORTED_MODULE_10__.Coordinates(0, 0);
            zenithAltAz.set_az(0);
            zenithAltAz.set_alt(0);
            var zenith = _coordinates_js__WEBPACK_IMPORTED_MODULE_10__.Coordinates.horizonToEquitorial(zenithAltAz, _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.get_location(), _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.get_now());
            var raPart = -((zenith.get_RA() - 6) / 24 * (Math.PI * 2));
            var decPart = -(zenith.get_dec() / 360 * (Math.PI * 2));
            var raText = _coordinates_js__WEBPACK_IMPORTED_MODULE_10__.Coordinates.formatDMS(zenith.get_RA());
            WorldMatrix = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationY(-raPart - Math.PI);
            WorldMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationX(decPart));
            if (_space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.get_location().get_lat() < 0) {
                WorldMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationY((this.az / 180 * Math.PI)));
                WorldMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationX((this.alt / 180 * Math.PI)));
                camLocal += Math.PI;
            }
            else {
                WorldMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationY(((-this.az) / 180 * Math.PI)));
                WorldMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationX(((-this.alt) / 180 * Math.PI)));
            }
            var currentRaDec = _coordinates_js__WEBPACK_IMPORTED_MODULE_10__.Coordinates.horizonToEquitorial(_coordinates_js__WEBPACK_IMPORTED_MODULE_10__.Coordinates.fromLatLng(this.alt, this.az), _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.get_location(), _space_time_controller_js__WEBPACK_IMPORTED_MODULE_15__.SpaceTimeController.get_now());
            this.viewCamera.lat = this.targetCamera.lat = currentRaDec.get_dec();
            this.viewCamera.lng = this.targetCamera.lng = this.rAtoViewLng(currentRaDec.get_RA());
        }
        this.set_world(WorldMatrix);
        this.set_worldBase(WorldMatrix.clone());
        var localZoomFactor = this.viewCamera.zoom;
        var FovAngle = (localZoomFactor / 343.774) / Math.PI * 180;
        this.cameraPosition = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 0, 0);

        // This is for distance Calculation. For space everything is the same distance, so camera target is key.
        this.set_view(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.lookAtLH(this.cameraPosition, _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 0, -1), _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(Math.sin(camLocal), Math.cos(camLocal), 0)));
        this.set_viewBase(this.get_view().clone());
        var m_nearPlane = 0.1;
        this.nearPlane = 0.1;
        this.set_projection(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.perspectiveFovLH(localZoomFactor / 343.774, canvasWidth / canvasHeight, 0.1, -2));
        this._setMatrixes();
        this.makeFrustum();
    },

    get_solarSystemTrack: function () {
        return this.viewCamera.target;
    },

    set_solarSystemTrack: function (value) {
        this.viewCamera.target = value;
        return value;
    },

    get_solarSystemCameraDistance: function () {
        return (4 * (this.viewCamera.zoom / 9)) + 1E-06;
    },

    get_sandboxMode: function () {
        if (this._backgroundImageset == null) {
            return false;
        }
        return this._backgroundImageset.get_dataSetType() === _imageset_js__WEBPACK_IMPORTED_MODULE_11__.ImageSetType.sandbox;
    },

    get_trackingFrame: function () {
        return this.viewCamera.targetReferenceFrame;
    },

    set_trackingFrame: function (value) {
        this.viewCamera.targetReferenceFrame = value;
        return value;
    },

    get_fovLocal: function () {
        return this._fovLocal;
    },

    set_fovLocal: function (value) {
        this._fovLocal = value;
        return value;
    },

    setupMatricesOverlays: function () {
        this.set_world(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.get_identity());
        var lookAtAdjust = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.get_identity();
        var lookFrom = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 0, 0);
        var lookAt = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 0, 1);
        var lookUp = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 1, 0);
        var view;
        view = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.lookAtLH(lookFrom, lookAt, lookUp);
        view._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._scaling(1, -1, 1));
        this.set_view(view);
        var back = 10000;
        this.nearPlane = 0.1;
        this.set_projection(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.perspectiveFovLH(this._fovLocal, this.width / this.height, this.nearPlane, back));
    },

    setupMatricesSolarSystem: function (forStars) {
        this.lighting = _settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_active().get_solarSystemLighting();
        this.space = false;
        if (this.get_solarSystemTrack() !== 20 && this.get_solarSystemTrack() !== 65536) {
            this.viewCamera.viewTarget = _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets.getPlanetTargetPoint(this.get_solarSystemTrack(), this.viewCamera.lat, this.viewCamera.lng, 0);
        }
        _render_triangle_js__WEBPACK_IMPORTED_MODULE_13__.RenderTriangle.cullInside = false;
        var cameraDistance = this.get_solarSystemCameraDistance();
        var trackingMatrix = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.get_identity();
        cameraDistance -= 1E-06;
        var activeTrackingFrame = false;
        if (this.get_solarSystemTrack() === 20 && !_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this.get_trackingFrame())) {
            activeTrackingFrame = true;
            var target = _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_17__.LayerManager._getFrameTarget(this, this.get_trackingFrame());
            this.viewCamera.viewTarget = target.target;
            trackingMatrix = target.matrix;
        } else if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this.get_trackingFrame())) {
            this.set_trackingFrame('');
        }
        var center = this.viewCamera.viewTarget;
        var localZoom = this.viewCamera.zoom * 20;
        var lookAt = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
        var viewAdjust = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.get_identity();
        viewAdjust._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationX(((-this.viewCamera.lat) / 180 * Math.PI)));
        viewAdjust._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationY(((-this.viewCamera.lng) / 180 * Math.PI)));
        var lookAtAdjust = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.get_identity();
        var dome = false;
        var lookUp;
        if (this._useSolarSystemTilt && !this.get_sandboxMode()) {
            var angle = this.viewCamera.angle;
            if (cameraDistance > 0.0008) {
                angle = 0;
            }
            else if (cameraDistance > 1E-05) {
                var val = Math.min(1.903089987, _baseutil_js__WEBPACK_IMPORTED_MODULE_5__.Util.log10(cameraDistance) + 5) / 1.903089987;
                angle = angle * Math.max(0, 1 - val);
            }
            this.cameraPosition = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create((Math.sin(-this.viewCamera.rotation) * Math.sin(angle) * cameraDistance), (Math.cos(-this.viewCamera.rotation) * Math.sin(angle) * cameraDistance), (Math.cos(angle) * cameraDistance));
            lookUp = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(Math.sin(-this.viewCamera.rotation), Math.cos(-this.viewCamera.rotation), 1E-05);
        } else {
            this.cameraPosition = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 0, cameraDistance);
            lookUp = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(Math.sin(-this.viewCamera.rotation), Math.cos(-this.viewCamera.rotation), 0.0001);
        }
        this.cameraPosition = viewAdjust.transform(this.cameraPosition);
        this._cameraOffset = this.cameraPosition.copy();
        var tmp = trackingMatrix.clone();
        tmp.invert();
        this._cameraOffset = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d._transformCoordinate(this._cameraOffset, tmp);
        lookUp = viewAdjust.transform(lookUp);
        this.set_world(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.get_identity());
        this.set_worldBase(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.get_identity());
        this.set_worldBaseNonRotating(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.get_identity());
        this.set_view(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(trackingMatrix, _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.lookAtLH(this.cameraPosition, lookAt, lookUp)), lookAtAdjust));
        this.set_viewBase(this.get_view().clone());
        var temp = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(lookAt, this.cameraPosition);
        temp.normalize();
        temp = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d._transformCoordinate(temp, trackingMatrix);
        temp.normalize();
        this._viewPoint = temp;
        var radius = _planets_js__WEBPACK_IMPORTED_MODULE_12__.Planets.getAdjustedPlanetRadius(this.get_solarSystemTrack());
        if (cameraDistance < radius * 2 && !forStars) {
            this.nearPlane = cameraDistance * 0.03;
            this.nearPlane = Math.max(this.nearPlane, 1E-11);
            RenderContext.back = 1900;
        } else {
            if (forStars) {
                RenderContext.back = 900056;
                RenderContext.back = (cameraDistance > 900056) ? cameraDistance * 3 : 900056;
                this.nearPlane = 3E-05;
            }
            else {
                RenderContext.back = (cameraDistance > 1900) ? cameraDistance + 200 : 1900;
                if (_settings_js__WEBPACK_IMPORTED_MODULE_14__.Settings.get_active().get_solarSystemScale() < 13) {
                    this.nearPlane = Math.min(cameraDistance * 0.03, 0.01);
                }
                else {
                    this.nearPlane = 0.001;
                }
            }
        }
        this.set_projection(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.perspectiveFovLH(this._fovLocal, this.width / this.height, this.nearPlane, RenderContext.back));
        this.perspectiveFov = this._fovLocal;
        this._fovAngle = (this.viewCamera.zoom / 343.774) / Math.PI * 180;
        this._fovScale = (this._fovAngle / this.height) * 3600;
        this._setMatrixes();
        this.makeFrustum();
    },

    _setMatrixes: function () { },

    get_frustum: function () {
        return this._frustum;
    },

    get_ambientLightColor: function () {
        return this._ambientLightColor;
    },

    set_ambientLightColor: function (value) {
        this._ambientLightColor = value;
        this._lightingStateDirty = true;
        return value;
    },

    get_hemisphereLightColor: function () {
        return this._hemiLightColor;
    },

    set_hemisphereLightColor: function (value) {
        this._hemiLightColor = value;
        this._lightingStateDirty = true;
        return value;
    },

    get_hemisphereLightUp: function () {
        return this._hemiLightUp;
    },

    set_hemisphereLightUp: function (value) {
        this._hemiLightUp = value;
        this._lightingStateDirty = true;
        return value;
    },

    get_sunlightColor: function () {
        return this._sunlightColor;
    },

    set_sunlightColor: function (value) {
        this._sunlightColor = value;
        this._lightingStateDirty = true;
        return value;
    },

    get_sunPosition: function () {
        return this._sunPosition;
    },

    set_sunPosition: function (value) {
        this._sunPosition = value;
        this._lightingStateDirty = true;
        return value;
    },

    get_reflectedLightColor: function () {
        return this._reflectedLightColor;
    },

    set_reflectedLightColor: function (value) {
        if (this._reflectedLightColor !== value) {
            this._reflectedLightColor = value;
            this._lightingStateDirty = true;
        }
        return value;
    },

    get_reflectedLightPosition: function () {
        return this._reflectedLightPosition;
    },

    set_reflectedLightPosition: function (value) {
        this._reflectedLightPosition = value;
        this._lightingStateDirty = true;
        return value;
    },

    // Radius of a planet casting a shadow; zero when there's no shadow
    get_occludingPlanetRadius: function () {
        return this._occludingPlanetRadius;
    },

    set_occludingPlanetRadius: function (value) {
        this._occludingPlanetRadius = value;
        return value;
    },

    get_occludingPlanetPosition: function () {
        return this._occludingPlanetPosition;
    },

    set_occludingPlanetPosition: function (value) {
        this._occludingPlanetPosition = value;
        return value;
    },

    get_twoSidedLighting: function () {
        return this._twoSidedLighting;
    },

    set_twoSidedLighting: function (value) {
        if (value !== this._twoSidedLighting) {
            this._twoSidedLighting = value;
            this._lightingStateDirty = true;
        }
        return value;
    },

    makeFrustum: function () {
        this.WV = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(this.get_world(), this.get_view());
        var viewProjection = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(this.WV, this.get_projection());
        this.WVP = viewProjection.clone();
        var inverseWorld = this.get_world().clone();
        inverseWorld.invert();

        // Left plane
        this._frustum[0].a = viewProjection.get_m14() + viewProjection.get_m11();
        this._frustum[0].b = viewProjection.get_m24() + viewProjection.get_m21();
        this._frustum[0].c = viewProjection.get_m34() + viewProjection.get_m31();
        this._frustum[0].d = viewProjection.get_m44() + viewProjection.get_m41();

        // Right plane
        this._frustum[1].a = viewProjection.get_m14() - viewProjection.get_m11();
        this._frustum[1].b = viewProjection.get_m24() - viewProjection.get_m21();
        this._frustum[1].c = viewProjection.get_m34() - viewProjection.get_m31();
        this._frustum[1].d = viewProjection.get_m44() - viewProjection.get_m41();

        // Top plane
        this._frustum[2].a = viewProjection.get_m14() - viewProjection.get_m12();
        this._frustum[2].b = viewProjection.get_m24() - viewProjection.get_m22();
        this._frustum[2].c = viewProjection.get_m34() - viewProjection.get_m32();
        this._frustum[2].d = viewProjection.get_m44() - viewProjection.get_m42();

        // Bottom plane
        this._frustum[3].a = viewProjection.get_m14() + viewProjection.get_m12();
        this._frustum[3].b = viewProjection.get_m24() + viewProjection.get_m22();
        this._frustum[3].c = viewProjection.get_m34() + viewProjection.get_m32();
        this._frustum[3].d = viewProjection.get_m44() + viewProjection.get_m42();

        // Near plane
        this._frustum[4].a = viewProjection.get_m13();
        this._frustum[4].b = viewProjection.get_m23();
        this._frustum[4].c = viewProjection.get_m33();
        this._frustum[4].d = viewProjection.get_m43();

        // Far plane
        this._frustum[5].a = viewProjection.get_m14() - viewProjection.get_m13();
        this._frustum[5].b = viewProjection.get_m24() - viewProjection.get_m23();
        this._frustum[5].c = viewProjection.get_m34() - viewProjection.get_m33();
        this._frustum[5].d = viewProjection.get_m44() - viewProjection.get_m43();

        // Normalize planes
        for (var i = 0; i < 6; i++) {
            this._frustum[i].normalize();
        }
        this._frustumDirty = false;
        this.WVP.scale(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(this.width / 2, -this.height / 2, 1));
        this.WVP.translate(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(this.width / 2, this.height / 2, 0));
        this._setMatrixes();
    },

    _initGL: function () {
        if (this.gl == null) {
            return;
        }
        var uints_for_indices = this.gl.getExtension('OES_element_index_uint');
        (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_4__.set_tileUvMultiple)(1);
        (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_4__.set_tileDemEnabled)(true);
        _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__.TileShader.init(this);
    },

    freezeView: function () {
        this.targetAlt = this.alt;
        this.targetAz = this.az;
        this.targetCamera = this.viewCamera.copy();
    },

    _setVertexBuffer: function (vertexBuffer) { },

    _setIndexBuffer: function (indexBuffer) { },

    // Set up a shader for the specified material properties and the
    // current lighting environment.
    setMaterial: function (material, diffuseTex, specularTex, normalMap, opacity) {
        this.set_mainTexture(diffuseTex);
    },

    preDraw: function () { }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("RenderContext", [RenderContext, RenderContext$, null]);


/***/ }),

/***/ "./esm/render_globals.js":
/*!*******************************!*\
  !*** ./esm/render_globals.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   globalRenderContext: () => (/* binding */ globalRenderContext),
/* harmony export */   inc_tileCacheAccessID: () => (/* binding */ inc_tileCacheAccessID),
/* harmony export */   set_globalRenderContext: () => (/* binding */ set_globalRenderContext),
/* harmony export */   set_tileCacheAddTileToQueue: () => (/* binding */ set_tileCacheAddTileToQueue),
/* harmony export */   set_tileCacheGetCachedTile: () => (/* binding */ set_tileCacheGetCachedTile),
/* harmony export */   set_tileCacheGetTile: () => (/* binding */ set_tileCacheGetTile),
/* harmony export */   set_tileCacheRemoveFromQueue: () => (/* binding */ set_tileCacheRemoveFromQueue),
/* harmony export */   set_tileDemEnabled: () => (/* binding */ set_tileDemEnabled),
/* harmony export */   set_tilePrepDevice: () => (/* binding */ set_tilePrepDevice),
/* harmony export */   set_tileUvMultiple: () => (/* binding */ set_tileUvMultiple),
/* harmony export */   set_useGl: () => (/* binding */ set_useGl),
/* harmony export */   set_useGlVersion2: () => (/* binding */ set_useGlVersion2),
/* harmony export */   tileCacheAddTileToQueue: () => (/* binding */ tileCacheAddTileToQueue),
/* harmony export */   tileCacheGetCachedTile: () => (/* binding */ tileCacheGetCachedTile),
/* harmony export */   tileCacheGetTile: () => (/* binding */ tileCacheGetTile),
/* harmony export */   tileCacheRemoveFromQueue: () => (/* binding */ tileCacheRemoveFromQueue),
/* harmony export */   tileDemEnabled: () => (/* binding */ tileDemEnabled),
/* harmony export */   tilePrepDevice: () => (/* binding */ tilePrepDevice),
/* harmony export */   tileUvMultiple: () => (/* binding */ tileUvMultiple),
/* harmony export */   useGl: () => (/* binding */ useGl),
/* harmony export */   useGlVersion2: () => (/* binding */ useGlVersion2)
/* harmony export */ });
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Various global variables associated with the rendering engine.
//
// In the original C# code these were generally static values associated with
// various classes, but since we want to avoid circular dependencies in our
// module structure, we gather some of those values in modules that contain
// minimal amounts of code (like this one) so that they can go early in the
// dependency graph.

// This used to be Tile.prepDevice. It's the global WebGL rendering context.
var tilePrepDevice = null;

function set_tilePrepDevice(value) {
    tilePrepDevice = value;
}

// This used to be Tile.uvMultiple. It's some GL rendering state variable.
var tileUvMultiple = 256;

function set_tileUvMultiple(value) {
    tileUvMultiple = value;
}

// This used to be Tile.demEnabled. It controls whether DEM rendering is
// enabled, hopefully?
var tileDemEnabled = false;

function set_tileDemEnabled(value) {
    tileDemEnabled = !!value;
}

// This used to be `RenderContext.useGl`. It sets whether we're using WebGL.
//
// Older versions of the engine used to support HTML Canvas rendering, but that
// mode is now deprecated. Uses where `useGl` is false may break at any time.
var useGl = false;

function set_useGl(value) {
    useGl = !!value;
}

// This used to be `RenderContext.useGlVersion2`. It sets whether we're
// using WebGL >= 2.
var useGlVersion2 = false;

function set_useGlVersion2(value) {
    useGlVersion2 = !!value;
}

// This used to be `TileCache.addTileToQueue()`. It's a function that
// adds a tile to the fetch queue.
var tileCacheAddTileToQueue = null;

function set_tileCacheAddTileToQueue(value) {
    tileCacheAddTileToQueue = value;
}

// This used to be `TileCache.removeFromQueue()`. It's a function that
// removes a tile from the fetch queue.
var tileCacheRemoveFromQueue = null;

function set_tileCacheRemoveFromQueue(value) {
    tileCacheRemoveFromQueue = value;
}

// This used to be `TileCache.accessID`.
var tileCacheAccessID = 0;

function inc_tileCacheAccessID() {
    return tileCacheAccessID++;
}

// This used to be `TileCache.getTile()`. It gets a tile from the cache, unconditionally.
var tileCacheGetTile = null;

function set_tileCacheGetTile(value) {
    tileCacheGetTile = value;
}

// This used to be `TileCache.getCachedTile()`. It gets a tile from the cache.
var tileCacheGetCachedTile = null;

function set_tileCacheGetCachedTile(value) {
    tileCacheGetCachedTile = value;
}

// This is another way to access `WWTControl.singleton.renderContext`. It's the
// global singleton RenderContext instance.
var globalRenderContext = null;

function set_globalRenderContext(value) {
    globalRenderContext = value;
}


/***/ }),

/***/ "./esm/render_triangle.js":
/*!********************************!*\
  !*** ./esm/render_triangle.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RenderTriangle: () => (/* binding */ RenderTriangle)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A triangle that is part of a tile pyramid render.





// wwtlib.RenderTriangle

function RenderTriangle() {
    this.a = new _double3d_js__WEBPACK_IMPORTED_MODULE_1__.PositionTexture();
    this.b = new _double3d_js__WEBPACK_IMPORTED_MODULE_1__.PositionTexture();
    this.c = new _double3d_js__WEBPACK_IMPORTED_MODULE_1__.PositionTexture();
    this.normal = new _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d();
    this.opacity = 1;
    this.expansionInPixels = 0.6;
    this.tileLevel = 0;
    this._ta = new _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d();
    this._tb = new _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d();
    this._tc = new _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d();
    this._expandedS0 = new _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d();
    this._expandedS1 = new _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d();
    this._expandedS2 = new _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d();
    this.lighting = 1;
}

RenderTriangle.width = 1024;
RenderTriangle.height = 768;
RenderTriangle._contractionInPixels = -0.5;
RenderTriangle.trianglesRendered = 0;
RenderTriangle.trianglesCulled = 0;
RenderTriangle.renderingOn = true;
RenderTriangle._factor = 1;
RenderTriangle.cullInside = true;
RenderTriangle._hw = 0;
RenderTriangle._qw = 0;
RenderTriangle._hh = 0;
RenderTriangle._qh = 0;

RenderTriangle.create = function (a, b, c, img, level) {
    var temp = new RenderTriangle();
    temp.a = a.copy();
    temp.b = b.copy();
    temp.c = c.copy();
    temp._texture = img;
    temp.tileLevel = level;
    temp.makeNormal();
    return temp;
};

RenderTriangle.createWithMiter = function (a, b, c, img, level, expansion) {
    var temp = new RenderTriangle();
    temp.expansionInPixels = expansion;
    temp.a = a.copy();
    temp.b = b.copy();
    temp.c = c.copy();
    temp._texture = img;
    temp.tileLevel = level;
    temp.makeNormal();
    return temp;
};

RenderTriangle._getMiterPoint = function (p1, p2, p3, edgeOffset) {
    var edge1 = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.subtract(p2, p1);
    var edge2 = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.subtract(p3, p1);
    edge1.normalize();
    edge2.normalize();
    var dir = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.create(edge1.x + edge2.x, edge1.y + edge2.y);
    dir.normalize();
    var delta = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.create(edge1.x - edge2.x, edge1.y - edge2.y);
    var sineHalfAngle = delta.get_length() / 2;
    var net = Math.min(2, edgeOffset / sineHalfAngle);
    dir.extend(net);
    return _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.create(p1.x - dir.x, p1.y - dir.y);
};

RenderTriangle._miterPoint = function (p1x, p1y, p2x, p2y, p3x, p3y, ExpansionInPixels) {
    var e1x = p2x - p1x;
    var e1y = p2y - p1y;
    var e2x = p3x - p1x;
    var e2y = p3y - p1y;
    var length = Math.sqrt(e1x * e1x + e1y * e1y);
    if (!!length) {
        e1x /= length;
        e1y /= length;
    }
    length = Math.sqrt(e2x * e2x + e2y * e2y);
    if (!!length) {
        e2x /= length;
        e2y /= length;
    }
    var dx = e1x + e2x;
    var dy = e1y + e2y;
    length = Math.sqrt(dx * dx + dy * dy);
    if (!!length) {
        dx /= length;
        dy /= length;
    }
    var deltax = e1x - e2x;
    var deltay = e1y - e2y;
    length = Math.sqrt(deltax * deltax + deltay * deltay);
    var sineHalfAngle = length / 2;
    var net = Math.min(2, ExpansionInPixels / sineHalfAngle);
    dx *= net;
    dy *= net;
    return _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.create(p1x - dx, p1y - dy);
};

RenderTriangle._miterPointOut = function (pntOut, p1x, p1y, p2x, p2y, p3x, p3y, ExpansionInPixels) {
    var e1x = p2x - p1x;
    var e1y = p2y - p1y;
    var e2x = p3x - p1x;
    var e2y = p3y - p1y;
    var length = Math.sqrt(e1x * e1x + e1y * e1y);
    if (!!length) {
        e1x /= length;
        e1y /= length;
    }
    length = Math.sqrt(e2x * e2x + e2y * e2y);
    if (!!length) {
        e2x /= length;
        e2y /= length;
    }
    var dx = e1x + e2x;
    var dy = e1y + e2y;
    length = Math.sqrt(dx * dx + dy * dy);
    if (!!length) {
        dx /= length;
        dy /= length;
    }
    var deltax = e1x - e2x;
    var deltay = e1y - e2y;
    length = Math.sqrt(deltax * deltax + deltay * deltay);
    var sineHalfAngle = length / 2;
    var net = Math.min(2, ExpansionInPixels / sineHalfAngle);
    dx *= net;
    dy *= net;
    pntOut.x = p1x - dx;
    pntOut.y = p1y - dy;
};

var RenderTriangle$ = {
    makeNormal: function () {
        var a = this.a.position.copy();
        var b = this.b.position.copy();
        var c = this.c.position.copy();
        a.normalize();
        b.normalize();
        c.normalize();
        var x = a.x + b.x + c.x;
        var y = a.y + b.y + c.y;
        var z = a.z + b.z + c.z;
        this.normal = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.create(x / 3, y / 3, z / 3);
        this.normal.normalize();
    },

    _checkBackface: function () {
        var ab = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.subtractVectors(this._ta, this._tb);
        var ac = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.subtractVectors(this._ta, this._tc);
        var cp = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.cross(ab, ac);
        cp.normalize();
        return cp.z >= 0;
    },

    draw: function (ctx, wvp) {
        if (ctx == null) {
            return;
        }
        wvp._transformTo(this.a.position, this._ta);
        wvp._transformTo(this.b.position, this._tb);
        wvp._transformTo(this.c.position, this._tc);
        if (this._checkBackface() === RenderTriangle.cullInside) {
            RenderTriangle.trianglesCulled++;
            return;
        }
        this._drawTriangle(ctx, this._texture, this._ta.x, this._ta.y, this._tb.x, this._tb.y, this._tc.x, this._tc.y, this.a.tu, this.a.tv, this.b.tu, this.b.tv, this.c.tu, this.c.tv);
    },

    _drawTriangle: function (ctx, im, x0, y0, x1, y1, x2, y2, sx0, sy0, sx1, sy1, sx2, sy2) {
        if (!this.intersects(0, RenderTriangle.width, 0, RenderTriangle.height, x0, y0, x1, y1, x2, y2)) {
            return false;
        }
        RenderTriangle._miterPointOut(this._expandedS0, x0, y0, x1, y1, x2, y2, this.expansionInPixels);
        RenderTriangle._miterPointOut(this._expandedS1, x1, y1, x0, y0, x2, y2, this.expansionInPixels);
        RenderTriangle._miterPointOut(this._expandedS2, x2, y2, x1, y1, x0, y0, this.expansionInPixels);
        x0 = this._expandedS0.x;
        y0 = this._expandedS0.y;
        x1 = this._expandedS1.x;
        y1 = this._expandedS1.y;
        x2 = this._expandedS2.x;
        y2 = this._expandedS2.y;
        ctx.save();
        if (RenderTriangle.renderingOn) {
            ctx.beginPath();
            ctx.moveTo(x0, y0);
            ctx.lineTo(x1, y1);
            ctx.lineTo(x2, y2);
            ctx.closePath();
            ctx.clip();
        }
        var denom = sx0 * (sy2 - sy1) - sx1 * sy2 + sx2 * sy1 + (sx1 - sx2) * sy0;
        //if (denom == 0)
        //{
        //    ctx.Restore();
        //    return false;
        //}

        var m11 = -(sy0 * (x2 - x1) - sy1 * x2 + sy2 * x1 + (sy1 - sy2) * x0) / denom;
        var m12 = (sy1 * y2 + sy0 * (y1 - y2) - sy2 * y1 + (sy2 - sy1) * y0) / denom;
        var m21 = (sx0 * (x2 - x1) - sx1 * x2 + sx2 * x1 + (sx1 - sx2) * x0) / denom;
        var m22 = -(sx1 * y2 + sx0 * (y1 - y2) - sx2 * y1 + (sx2 - sx1) * y0) / denom;
        var dx = (sx0 * (sy2 * x1 - sy1 * x2) + sy0 * (sx1 * x2 - sx2 * x1) + (sx2 * sy1 - sx1 * sy2) * x0) / denom;
        var dy = (sx0 * (sy2 * y1 - sy1 * y2) + sy0 * (sx1 * y2 - sx2 * y1) + (sx2 * sy1 - sx1 * sy2) * y0) / denom;
        ctx.transform(m11, m12, m21, m22, dx, dy);
        if (RenderTriangle.renderingOn) {
            ctx.globalAlpha = this.opacity;
            if (this.lighting < 1) {
                ctx.globalAlpha = 1;
                ctx.fillStyle = 'Black';
                ctx.fillRect(0, 0, RenderTriangle.width, RenderTriangle.height);
                ctx.globalAlpha = this.lighting * this.opacity;
            }
            ctx.drawImage(im, 0, 0);
        }
        ctx.restore();
        return true;
    },

    intersects: function (l, r, t, b, x0, y0, x1, y1, x2, y2) {
        if (x0 > l && x0 < r && y0 > t && y0 < b) {
            return true;
        }
        if (x1 > l && x1 < r && y1 > t && y1 < b) {
            return true;
        }
        if (x2 > l && x2 < r && y2 > t && y2 < b) {
            return true;
        }
        var h4 = RenderTriangle.height * 4;
        if (this.tileLevel < 4 && ((Math.abs(x0 - x1) > h4) || (Math.abs(y0 - y1) > h4) || (Math.abs(x2 - x1) > h4) || (Math.abs(y2 - y1) > h4) || (Math.abs(x0 - x2) > h4) || (Math.abs(y0 - y2) > h4))) {
            return false;
        }
        return this.lineRectangleIntersect(l, r, t, b, x0, y0, x1, y1) || this.lineRectangleIntersect(l, r, t, b, x1, y1, x2, y2) || this.lineRectangleIntersect(l, r, t, b, x2, y2, x0, y0);
    },

    lineRectangleIntersect: function (l, r, t, b, x0, y0, x1, y1) {
        var top_intersection;
        var bottom_intersection;
        var toptrianglepoint;
        var bottomtrianglepoint;
        var m;
        var c;

        // Calculate m and c for the equation for the line (y = mx+c)
        m = (y1 - y0) / (x1 - x0);
        c = y0 - (m * x0);

        // if the line is going up from right to left then the top intersect point is on the left
        if (m > 0) {
            top_intersection = (m * l + c);
            bottom_intersection = (m * r + c);
        } else {
            // otherwise it's on the right
            top_intersection = (m * r + c);
            bottom_intersection = (m * l + c);
        }

        // work out the top and bottom extents for the triangle
        if (y0 < y1) {
            toptrianglepoint = y0;
            bottomtrianglepoint = y1;
        } else {
            toptrianglepoint = y1;
            bottomtrianglepoint = y0;
        }

        // and calculate the overlap between those two bounds
        var topoverlap;
        var botoverlap;
        topoverlap = (top_intersection > toptrianglepoint) ? top_intersection : toptrianglepoint;
        botoverlap = (bottom_intersection < bottomtrianglepoint) ? bottom_intersection : bottomtrianglepoint;

        // (topoverlap<botoverlap) :
        // if the intersection isn't the right way up then we have no overlap

        // (!((botoverlap<t) || (topoverlap>b)) :
        // If the bottom overlap is higher than the top of the rectangle or the top overlap is
        // lower than the bottom of the rectangle we don't have intersection. So return the negative
        // of that. Much faster than checking each of the points is within the bounds of the rectangle.
        return (topoverlap < botoverlap) && (!((botoverlap < t) || (topoverlap > b)));
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("RenderTriangle", [RenderTriangle, RenderTriangle$, null]);


/***/ }),

/***/ "./esm/script_interface.js":
/*!*********************************!*\
  !*** ./esm/script_interface.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AnnotationClickEventArgs: () => (/* binding */ AnnotationClickEventArgs),
/* harmony export */   ArrivedEventArgs: () => (/* binding */ ArrivedEventArgs),
/* harmony export */   CollectionLoadedEventArgs: () => (/* binding */ CollectionLoadedEventArgs),
/* harmony export */   ScriptInterface: () => (/* binding */ ScriptInterface),
/* harmony export */   SlideChangedEventArgs: () => (/* binding */ SlideChangedEventArgs)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util.js */ "./esm/util.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _annotation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./annotation.js */ "./esm/annotation.js");
/* harmony import */ var _layers_fits_image_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./layers/fits_image.js */ "./esm/layers/fits_image.js");
/* harmony import */ var _layers_fits_image_js_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./layers/fits_image_js.js */ "./esm/layers/fits_image_js.js");
/* harmony import */ var _imageset_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./imageset.js */ "./esm/imageset.js");
/* harmony import */ var _layers_imageset_layer_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./layers/imageset_layer.js */ "./esm/layers/imageset_layer.js");
/* harmony import */ var _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./layers/layer_manager.js */ "./esm/layers/layer_manager.js");
/* harmony import */ var _folder_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./folder.js */ "./esm/folder.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// The quasi-legacy ScriptInterface control interface.
//
// I believe that this new class was created in the very early days of the WWT
// web control and was used as the interface point with the browser. In the
// modern WebGL engine, there's not need to put all this functionality in this
// separate module. But, as always, to preserve API compatibility, we maintain
// all of the interfaces that were added here.















// wwtlib.SlideChangedEventArgs

function SlideChangedEventArgs(caption) {
    _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs.call(this);
    this.set_caption(caption);
}

var SlideChangedEventArgs$ = {
    get_caption: function () {
        return this._caption$2;
    },

    set_caption: function (value) {
        this._caption$2 = value;
        return value;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("SlideChangedEventArgs", [SlideChangedEventArgs, SlideChangedEventArgs$, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs]);


// wwtlib.ArrivedEventArgs

function ArrivedEventArgs(ra, dec, zoom) {
    this._ra$2 = 0;
    this._dec$2 = 0;
    this._zoom$2 = 0;
    _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs.call(this);
    this.set_RA(ra * 15);
    this.set_dec(dec);
    this.set_zoom(zoom / 6);
}

var ArrivedEventArgs$ = {
    get_RA: function () {
        return this._ra$2;
    },

    set_RA: function (value) {
        this._ra$2 = value;
        return value;
    },

    get_dec: function () {
        return this._dec$2;
    },

    set_dec: function (value) {
        this._dec$2 = value;
        return value;
    },

    get_zoom: function () {
        return this._zoom$2;
    },

    set_zoom: function (value) {
        this._zoom$2 = value;
        return value;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ArrivedEventArgs", [ArrivedEventArgs, ArrivedEventArgs$, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs]);


// wwtlib.AnnotationClickEventArgs

function AnnotationClickEventArgs(ra, dec, id) {
    this._ra$2 = 0;
    this._dec$2 = 0;
    _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs.call(this);
    this.set_RA(ra * 15);
    this.set_dec(dec);
    this.set_id(id);
}

var AnnotationClickEventArgs$ = {
    get_RA: function () {
        return this._ra$2;
    },

    set_RA: function (value) {
        this._ra$2 = value;
        return value;
    },

    get_dec: function () {
        return this._dec$2;
    },

    set_dec: function (value) {
        this._dec$2 = value;
        return value;
    },

    get_id: function () {
        return this._id$2;
    },

    set_id: function (value) {
        this._id$2 = value;
        return value;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("AnnotationClickEventArgs", [AnnotationClickEventArgs, AnnotationClickEventArgs$, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs]);


// wwtlib.CollectionLoadedEventArgs

function CollectionLoadedEventArgs(url) {
    _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs.call(this);
    this._url$2 = url;
}

var CollectionLoadedEventArgs$ = {
    get_url: function () {
        return this._url$2;
    },

    set_url: function (value) {
        this._url$2 = value;
        return value;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("CollectionLoadedEventArgs", [CollectionLoadedEventArgs, CollectionLoadedEventArgs$, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs]);


// wwtlib.ScriptInterface

function ScriptInterface() {
    this._missedReady = false;
    this.hideTourFeedback = false;
    this._smoothAnimation = false;
    this._showCaptions = true;
}

ScriptInterface._containsFitsLikeExtentsion = function (url) {
    var lowerCaseUrl = url.toLowerCase();
    return (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.endsWith(lowerCaseUrl, 'fits') || _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.endsWith(lowerCaseUrl, 'ftz') || _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.endsWith(lowerCaseUrl, 'fit') || _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.endsWith(lowerCaseUrl, 'fts'));
};

ScriptInterface._addImageSet = function (name, gotoTarget, loaded, imageset) {
    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.whitespace(name)) {
        name = _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_10__.LayerManager.getNextImageSetName();
    }
    var imagesetLayer = _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_10__.LayerManager.addImageSetLayerCallback(imageset, name, loaded);
    if (gotoTarget) {
        var zoom = imageset._guessZoomSetting(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera.zoom);
        _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl.gotoRADecZoom(imageset.get_viewCenterX() / 15, imageset.get_viewCenterY(), zoom, false, null);
    }
    return imagesetLayer;
};

ScriptInterface._addFitsLayer = function (url, name, gotoTarget, loaded) {
    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.whitespace(name)) {
        name = _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_10__.LayerManager.getNextFitsName();
    }
    var imagesetLayer = new _layers_imageset_layer_js__WEBPACK_IMPORTED_MODULE_9__.ImageSetLayer();
    var imageset = new _imageset_js__WEBPACK_IMPORTED_MODULE_8__.Imageset();
    var wcsLoaded = function (wcsImage) {
        if ((wcsImage).errored) {
            return;
        }
        var width = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(wcsImage.get_sizeX());
        var height = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(wcsImage.get_sizeY());
        imageset.setInitialParameters(wcsImage.get_description(), wcsImage.get_filename(), 2, 3, 5, _util_js__WEBPACK_IMPORTED_MODULE_2__.Util.getHashCode(wcsImage.get_filename()), 0, 0, wcsImage.get_scaleY(), '.fits', wcsImage.get_scaleX() > 0, '', wcsImage.get_centerX(), wcsImage.get_centerY(), wcsImage.get_rotation(), false, '', false, false, 1, wcsImage.get_referenceX(), wcsImage.get_referenceY(), wcsImage.get_copyright(), wcsImage.get_creditsUrl(), '', '', 0, '');
        imageset.set_wcsImage(wcsImage);
        imagesetLayer.set_imageSet(imageset);
        _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_10__.LayerManager.addFitsImageSetLayer(imagesetLayer, name);
        if (gotoTarget) {
            var zoom = imageset._guessZoomSetting(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera.zoom);
            _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl.gotoRADecZoom(wcsImage.get_viewCenterX() / 15, wcsImage.get_viewCenterY(), zoom, false, null);
        }
        if (loaded != null) {
            loaded(imagesetLayer);
        }
    };
    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.whitespace(name)) {
        name = _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_10__.LayerManager.getNextFitsName();
    }
    if (_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.useGlVersion2) {
        new _layers_fits_image_js__WEBPACK_IMPORTED_MODULE_6__.FitsImage(imageset, url, null, wcsLoaded);
    }
    else {
        new _layers_fits_image_js_js__WEBPACK_IMPORTED_MODULE_7__.FitsImageJs(imageset, url, null, wcsLoaded);
    }
    return imagesetLayer;
};

var ScriptInterface$ = {
    add_ready: function (value) {
        this.__ready = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__ready, value);
    },

    remove_ready: function (value) {
        this.__ready = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__ready, value);
    },

    _fireReady: function () {
        if (this.__ready != null) {
            this.__ready(this, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
        } else {
            this._missedReady = true;
        }
    },

    add_collectionLoaded: function (value) {
        this.__collectionLoaded = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__collectionLoaded, value);
    },

    remove_collectionLoaded: function (value) {
        this.__collectionLoaded = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__collectionLoaded, value);
    },

    _fireCollectionLoaded: function (url) {
        if (this.__collectionLoaded != null) {
            this.__collectionLoaded(this, new CollectionLoadedEventArgs(url));
        }
    },

    add_colorPickerDisplay: function (value) {
        this.__colorPickerDisplay = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__colorPickerDisplay, value);
    },

    remove_colorPickerDisplay: function (value) {
        this.__colorPickerDisplay = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__colorPickerDisplay, value);
    },

    add_voTableDisplay: function (value) {
        this.__voTableDisplay = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__voTableDisplay, value);
    },

    remove_voTableDisplay: function (value) {
        this.__voTableDisplay = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__voTableDisplay, value);
    },

    add_refreshLayerManager: function (value) {
        this.__refreshLayerManager = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__refreshLayerManager, value);
    },

    remove_refreshLayerManager: function (value) {
        this.__refreshLayerManager = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__refreshLayerManager, value);
    },

    add_arrived: function (value) {
        this.__arrived = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__arrived, value);
    },

    remove_arrived: function (value) {
        this.__arrived = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__arrived, value);
    },

    add_clicked: function (value) {
        this.__clicked = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__clicked, value);
    },

    remove_clicked: function (value) {
        this.__clicked = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__clicked, value);
    },

    add_annotationClicked: function (value) {
        this.__annotationClicked = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__annotationClicked, value);
    },

    remove_annotationClicked: function (value) {
        this.__annotationClicked = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__annotationClicked, value);
    },

    add_imageryLoaded: function (value) {
        this.__imageryLoaded = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__imageryLoaded, value);
    },

    remove_imageryLoaded: function (value) {
        this.__imageryLoaded = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__imageryLoaded, value);
    },

    add_tourReady: function (value) {
        this.__tourReady = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__tourReady, value);
    },

    remove_tourReady: function (value) {
        this.__tourReady = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__tourReady, value);
    },

    add_tourError: function (value) {
        this.__tourError = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__tourError, value);
    },

    remove_tourError: function (value) {
        this.__tourError = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__tourError, value);
    },

    add_tourPaused: function (value) {
        this.__tourPaused = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__tourPaused, value);
    },

    remove_tourPaused: function (value) {
        this.__tourPaused = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__tourPaused, value);
    },

    add_tourResumed: function (value) {
        this.__tourResumed = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__tourResumed, value);
    },

    remove_tourResumed: function (value) {
        this.__tourResumed = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__tourResumed, value);
    },

    add_tourEnded: function (value) {
        this.__tourEnded = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__tourEnded, value);
    },

    remove_tourEnded: function (value) {
        this.__tourEnded = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__tourEnded, value);
    },

    add_slideChanged: function (value) {
        this.__slideChanged = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__slideChanged, value);
    },

    remove_slideChanged: function (value) {
        this.__slideChanged = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__slideChanged, value);
    },

    //UI will set this to a function that takes 2 string properties (prop,val)
    //("title", "left", or "right" for the labels, "pos" for the slider pos)
    //Pass a 0-1 float to set the slider position (stringify it if you need to for strong typing)

    add_timeScrubberHook: function (value) {
        this.__timeScrubberHook = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__timeScrubberHook, value);
    },

    remove_timeScrubberHook: function (value) {
        this.__timeScrubberHook = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__timeScrubberHook, value);
    },

    setTimeScrubberPosition: function (posLeft) {
        _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_10__.LayerManager.setTimeSliderValue(posLeft);
    },

    setTimeSlider: function (name, value) {
        this.__timeScrubberHook(name, value);
    },

    showColorPicker: function (pickerInstance, e) {
        if (this.__colorPickerDisplay != null) {
            this.__colorPickerDisplay(pickerInstance, e);
        }
    },

    displayVoTableLayer: function (layer) {
        if (this.__voTableDisplay != null) {
            this.__voTableDisplay(layer, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
        }
    },

    refreshLayerManagerNow: function () {
        if (this.__refreshLayerManager != null) {
            this.__refreshLayerManager(null, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
        }
    },

    _fireTourReady: function () {
        if (this.__tourReady != null) {
            this.__tourReady(this, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
        }
    },

    _fireTourError: function (ex) {
        if (this.__tourError != null) {
            this.__tourError(ex, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
        }
    },

    _fireTourPaused: function () {
        if (this.__tourPaused != null) {
            this.__tourPaused(this, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
        }
    },

    _fireTourResume: function () {
        if (this.__tourResumed != null) {
            this.__tourResumed(this, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
        }
    },

    _fireTourEnded: function () {
        if (this.__tourEnded != null) {
            this.__tourEnded(this, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
        }
    },

    _fireImageryLoaded: function () {
        if (this.__imageryLoaded != null) {
            this.__imageryLoaded(this, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
        }
    },

    _fireClick: function (ra, dec) {
        if (this.__clicked != null) {
            this.__clicked(this, new ArrivedEventArgs(ra, dec, _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera.zoom));
        }
    },

    _fireArrived: function (ra, dec, zoom) {
        if (this.__arrived != null) {
            this.__arrived(this, new ArrivedEventArgs(ra, dec, zoom));
        }
    },

    _fireAnnotationclicked: function (RA, Dec, id) {
        try {
            if (this.__annotationClicked != null) {
                this.__annotationClicked(this, new AnnotationClickEventArgs(RA, Dec, id));
            }
        }
        catch ($e1) {
        }
    },

    _fireSlideChanged: function (caption) {
        try {
            if (this.__slideChanged != null) {
                this.__slideChanged(this, new SlideChangedEventArgs(caption));
            }
        }
        catch ($e1) {
        }
    },

    endInit: function () {
        if (this._missedReady) {
            this._fireReady();
        }
    },

    gotoRaDecZoom: function (ra, dec, zoom, instant, roll) {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl.gotoRADecZoom(ra / 15, dec, zoom * 6, instant, roll);
        }
    },

    setBackgroundImageByName: function (name) {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl.setBackgroundImageByName(name);
        }
    },

    // Call this to add a VOTable to layers
    addVoTableLayer: function (table) {
        return _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_10__.LayerManager.addVoTableLayer(table, 'Vo Table');
    },

    getLayers: function () {
        return _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_10__.LayerManager.get_layerList();
    },

    setForegroundImageByName: function (name) {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl.setForegroundImageByName(name);
            _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera.opacity = 100;
        }
    },

    setForegroundOpacity: function (opacity) {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera.opacity = opacity;
        }
    },

    addCatalogHipsByName: function (name) {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl.addCatalogHipsByName(name);
        }
    },

    addCatalogHipsByNameWithCallback: function (name, onLoad) {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl.addCatalogHipsByNameWithCallback(name, onLoad);
        }
    },

    removeCatalogHipsByName: function (name) {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl.removeCatalogHipsByName(name);
        }
    },

    getCatalogHipsDataInView: function (name, limit, onComplete) {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl.getCatalogHipsDataInView(name, limit, onComplete);
        }
    },

    setCutsForFits: function (imagesetName, min, max) {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl.setCutsForFits(imagesetName, min, max);
        }
    },

    setColorMapForFits: function (imagesetName, colorMapName) {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl.setColorMapForFits(imagesetName, colorMapName);
        }
    },

    setScaleTypeForFits: function (imagesetName, scaleType) {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl.setScaleTypeForFits(imagesetName, scaleType);
        }
    },

    hideUI: function (hide) { },

    loadTour: function (url) {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl.playTour(url);
        }
    },

    loadFits: function (url) {
        return this.loadFitsLayer(url, '', true, null);
    },

    loadFitsLayer: function (url, name, gotoTarget, loaded) {
        return this.addImageSetLayer(url, 'fits', name, gotoTarget, loaded);
    },

    addImageSetLayer: function (url, mode, name, gotoTarget, loaded) {
        if (mode != null && mode.toLowerCase() === 'fits') {
            return ScriptInterface._addFitsLayer(url, name, gotoTarget, loaded);
        } else if (mode != null && mode.toLowerCase() === 'preloaded') {
            var imageset = _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl.getImageSetByUrl(url);
            if (imageset != null) {
                return ScriptInterface._addImageSet(name, gotoTarget, loaded, imageset);
            }
        } else {
            var imageset = _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl.getImageSetByUrl(url);
            if (imageset != null) {
                return ScriptInterface._addImageSet(name, gotoTarget, loaded, imageset);
            }
            else if (ScriptInterface._containsFitsLikeExtentsion(url)) {
                return ScriptInterface._addFitsLayer(url, name, gotoTarget, loaded);
            }
        }
        return null;
    },

    setImageSetLayerOrder: function (id, order) {
        var layer = _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_10__.LayerManager.get_layerList()[id];
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(layer, _layers_imageset_layer_js__WEBPACK_IMPORTED_MODULE_9__.ImageSetLayer) && order >= 0) {
            _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove((0,_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.layerManagerGetAllMaps)()[layer.get_referenceFrame()].layers, layer);

            //In case of order > Layers.length, the layer is properly put at the end of the list
            (0,_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.layerManagerGetAllMaps)()[layer.get_referenceFrame()].layers.splice(order, 0, layer);
        }
    },

    isUsingWebGl2: function () {
        return _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.useGlVersion2;
    },

    get_hideTourFeedback: function () {
        return this.hideTourFeedback;
    },

    set_hideTourFeedback: function (value) {
        this.hideTourFeedback = value;
        return value;
    },

    playTour: function () {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl.playCurrentTour();
        }
    },

    stopTour: function () {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl.stopCurrentTour();
        }
    },

    loadImageCollection: function (url, loadChildFolders) {
        var $this = this;

        this._imageUrl = url;
        (0,_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.loadWtmlFile)(url, function () {
            $this._fireCollectionLoaded(url);
        }, loadChildFolders);
    },

    _imageFileLoaded: function () {
        this._fireCollectionLoaded(this._imageUrl);
    },

    zoom: function (factor) {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl.zoom(factor);
        }
        return;
    },

    getRA: function () {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            return _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.get_RA();
        }
        return 0;
    },

    getDec: function () {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            return _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.get_dec();
        }
        return 0;
    },

    createFolder: function () {
        var folder = new _folder_js__WEBPACK_IMPORTED_MODULE_11__.Folder();
        return folder;
    },

    createPolygon: function (fill) {
        var p = new _annotation_js__WEBPACK_IMPORTED_MODULE_5__.Poly();
        p.set_fill(fill);
        return p;
    },

    createPolyLine: function (fill) {
        return new _annotation_js__WEBPACK_IMPORTED_MODULE_5__.PolyLine();
    },

    createCircle: function (fill) {
        var c = new _annotation_js__WEBPACK_IMPORTED_MODULE_5__.Circle();
        c.set_fill(fill);
        return c;
    },

    addAnnotation: function (annotation) {
        if (annotation != null && _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(annotation, _annotation_js__WEBPACK_IMPORTED_MODULE_5__.Annotation)) {
            if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
                _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl._addAnnotation(annotation);
            }
        }
    },

    removeAnnotation: function (annotation) {
        if (annotation != null) {
            if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
                _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl._removeAnnotation(annotation);
            }
        }
    },

    clearAnnotations: function () {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl._clearAnnotations();
        }
    },

    get_smoothAnimation: function () {
        return this._smoothAnimation;
    },

    set_smoothAnimation: function (value) {
        this._smoothAnimation = value;
        return value;
    },

    get_showCaptions: function () {
        return this._showCaptions;
    },

    set_showCaptions: function (value) {
        this._showCaptions = value;
        return value;
    },

    loadVOTable: function (url, useCurrentView) { },

    get_fov: function () {
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalWWTControl != null) {
            return _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera.zoom / 6;
        }
        return 60;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ScriptInterface", [ScriptInterface, ScriptInterface$, null]);


/***/ }),

/***/ "./esm/settings.js":
/*!*************************!*\
  !*** ./esm/settings.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SettingParameter: () => (/* binding */ SettingParameter),
/* harmony export */   Settings: () => (/* binding */ Settings),
/* harmony export */   StockSkyOverlayTypes: () => (/* binding */ StockSkyOverlayTypes)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color.js */ "./esm/color.js");
/* harmony import */ var _constellation_filter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constellation_filter.js */ "./esm/constellation_filter.js");
/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interfaces.js */ "./esm/interfaces.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Planet-related code that can come lower in the dependency graph.







// wwtlib.StockSkyOverlayTypes
//
// This was defined in `Tours/ISettings.cs`, which we've folded into `interfaces.js`.

var StockSkyOverlayTypes = {
    empty: 0,
    equatorialGrid: 1,
    equatorialGridText: 2,
    galacticGrid: 3,
    galacticGridText: 4,
    eclipticGrid: 5,
    eclipticGridText: 6,
    eclipticOverview: 7,
    eclipticOverviewText: 8,
    precessionChart: 9,
    altAzGrid: 10,
    altAzGridText: 11,
    constellationFigures: 12,
    constellationBoundaries: 13,
    constellationFocusedOnly: 14,
    constellationNames: 15,
    constellationPictures: 16,
    fadeToBlack: 17,
    fadeToLogo: 18,
    fadeToGradient: 19,
    screenBroadcast: 20,
    fadeRemoteOnly: 21,
    skyGrids: 22,
    constellations: 23,
    solarSystemStars: 24,
    solarSystemMilkyWay: 25,
    solarSystemCosmos: 26,
    solarSystemOrbits: 27,
    solarSystemPlanets: 28,
    solarSystemAsteroids: 29,
    solarSystemLighting: 30,
    solarSystemMinorOrbits: 31,
    showEarthCloudLayer: 32,
    showElevationModel: 33,
    showAtmosphere: 34,
    multiResSolarSystemBodies: 35,
    auroraBorialis: 36,
    earthCutAway: 37,
    showSolarSystem: 38,
    clouds8k: 39,
    filedOfView: 40,
    showISSModel: 41,
    solarSystemCMB: 42,
    mpcZone1: 43,
    mpcZone2: 44,
    mpcZone3: 45,
    mpcZone4: 46,
    mpcZone5: 47,
    mpcZone6: 48,
    mpcZone7: 49,
    orbitFilters: 50
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("StockSkyOverlayTypes", StockSkyOverlayTypes);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerEnum)("StockSkyOverlayTypes", StockSkyOverlayTypes);


// wwtlib.SettingParameter
//
// This was defined in `Tours/ISettings.cs`, which we've folded into `interfaces.js`.

function SettingParameter(edgeTrigger, opacity, targetState, filter) {
    this.targetState = false;
    this.edgeTrigger = false;
    this.opacity = 0;
    this.edgeTrigger = edgeTrigger;
    this.opacity = opacity;
    this.targetState = targetState;
    this.filter = filter;
}

var SettingParameter$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("SettingParameter", [SettingParameter, SettingParameter$, null]);


// wwtlib.Settings

function Settings() {
    this.autoRepeatTour = false;
    this._localHorizonMode = false;
    this._galacticMode = false;
    this._constellationBoundryColor = 'blue';
    this._constellationSelectionColor = 'yellow';
    this._constellationFigureColor = 'red';
    this._showConstellationFigures = true;
    this._showConstellationBoundries = true;
    this._showConstellationSelection = true;
    this._showCrosshairs = true;
    this._crosshairsColor = 'white';
    this._showEcliptic = false;
    this._locationLat = 47.717;
    this._locationLng = -122.0858;
    this._locationAltitude = 100;
    this._showFiledOfView = false;
    this._actualPlanetScale = true;
    this._fovCamera = 0;
    this._fovEyepiece = 0;
    this._fovTelescope = 0;
    this._showClouds = false;
    this._showGrid = false;
    this._showHorizon = true;
    this._showHorizonPanorama = false;
    this._showMoonsAsPointSource = true;
    this._showSolarSystem = true;
    this._solarSystemStars = true;
    this._solarSystemMilkyWay = true;
    this._solarSystemCosmos = true;
    this._solarSystemOrbits = true;
    this._solarSystemOverlays = true;
    this._solarSystemLighting = true;
    this._solarSystemMultiRes = true;
    this._solarSystemScale = 1;
    this._smoothPan = true;
    this._showElevationModel = true;
    this._showEquatorialGridText = false;
    this._showGalacticGrid = false;
    this._showGalacticGridText = false;
    this._showEclipticGrid = false;
    this._showEclipticGridText = false;
    this._showEclipticOverviewText = false;
    this._showAltAzGrid = false;
    this._eclipticGridColor = _color_js__WEBPACK_IMPORTED_MODULE_1__.Colors.get_green();
    this._galacticGridColor = _color_js__WEBPACK_IMPORTED_MODULE_1__.Colors.get_cyan();
    this._altAzGridColor = _color_js__WEBPACK_IMPORTED_MODULE_1__.Colors.get_magenta();
    this._precessionChartColor = _color_js__WEBPACK_IMPORTED_MODULE_1__.Colors.get_orange();
    this._eclipticColor = _color_js__WEBPACK_IMPORTED_MODULE_1__.Colors.get_blue();
    this._equatorialGridColor = _color_js__WEBPACK_IMPORTED_MODULE_1__.Colors.get_white();
    this._showAltAzGridText = false;
    this._showPrecessionChart = false;
    this._showConstellationPictures = false;
    this._showConstellationLabels = false;
    this._constellationLabelsHeight = 80;
    this._solarSystemCMB = true;
    this._solarSystemMinorPlanets = false;
    this._solarSystemPlanets = true;
    this._showEarthSky = true;
    this._solarSystemMinorOrbits = false;
    this._constellationsEnabled = '';
    this._constellationFiguresFilter = new _constellation_filter_js__WEBPACK_IMPORTED_MODULE_2__.ConstellationFilter();
    this._constellationBoundariesFilter = new _constellation_filter_js__WEBPACK_IMPORTED_MODULE_2__.ConstellationFilter();
    this._constellationNamesFilter = new _constellation_filter_js__WEBPACK_IMPORTED_MODULE_2__.ConstellationFilter();
    this._constellationArtFilter = new _constellation_filter_js__WEBPACK_IMPORTED_MODULE_2__.ConstellationFilter();
    this._showSkyOverlays = true;
    this._showConstellations = true;
    this._showSkyNode = true;
    this._showSkyGrids = true;
    this._showSkyOverlaysIn3d = true;
    this._earthCutawayView = false;
    this._showISSModel = false;
    this._milkyWayModel = false;
    this._minorPlanetsFilter = 255;
    this._planetOrbitsFilter = 2147483647;
    this._constellations = true;
}

Settings._active = null;
Settings.tourSettings = null;

Settings.get_current = function () {
    if (Settings._active == null) {
        Settings._active = new Settings();
    }
    return Settings._active;
};

Settings.get_globalSettings = function () {
    if (Settings._active == null) {
        Settings._active = new Settings();
    }
    return Settings._active;
};

Settings.get_active = function () {
    if (Settings._active == null) {
        Settings._active = new Settings();
    }
    if (Settings.tourSettings != null) {
        return Settings.tourSettings;
    }
    return Settings._active;
};

var Settings$ = {
    get_constellationFigureColor: function () {
        return this._constellationFigureColor;
    },

    set_constellationFigureColor: function (value) {
        this._constellationFigureColor = value;
        return value;
    },

    get_constellationBoundryColor: function () {
        return this._constellationBoundryColor;
    },

    set_constellationBoundryColor: function (value) {
        this._constellationBoundryColor = value;
        return value;
    },

    get_constellationSelectionColor: function () {
        return this._constellationSelectionColor;
    },

    set_constellationSelectionColor: function (value) {
        this._constellationSelectionColor = value;
        return value;
    },

    get_showCrosshairs: function () {
        return this._showCrosshairs;
    },

    set_showCrosshairs: function (value) {
        this._showCrosshairs = value;
        return value;
    },

    get_smoothPan: function () {
        return this._smoothPan;
    },

    set_smoothPan: function (value) {
        this._smoothPan = value;
        return value;
    },

    get_crosshairsColor: function () {
        return this._crosshairsColor;
    },

    set_crosshairsColor: function (value) {
        this._crosshairsColor = value;
        return value;
    },

    get_actualPlanetScale: function () {
        return this._actualPlanetScale;
    },

    set_actualPlanetScale: function (value) {
        this._actualPlanetScale = value;
        return value;
    },

    get_fovCamera: function () {
        return this._fovCamera;
    },

    get_fovEyepiece: function () {
        return this._fovEyepiece;
    },

    get_fovTelescope: function () {
        return this._fovTelescope;
    },

    get_locationAltitude: function () {
        return this._locationAltitude;
    },

    set_locationAltitude: function (value) {
        this._locationAltitude = value;
        return value;
    },

    get_locationLat: function () {
        return this._locationLat;
    },

    set_locationLat: function (value) {
        this._locationLat = value;
        return value;
    },

    get_locationLng: function () {
        return this._locationLng;
    },

    set_locationLng: function (value) {
        this._locationLng = value;
        return value;
    },

    get_showClouds: function () {
        return this._showClouds;
    },

    get_showConstellationBoundries: function () {
        return this._showConstellationBoundries;
    },

    set_showConstellationBoundries: function (value) {
        this._showConstellationBoundries = value;
        return value;
    },

    get_showConstellationFigures: function () {
        return this._showConstellationFigures;
    },

    set_showConstellationFigures: function (value) {
        this._showConstellationFigures = value;
        return value;
    },

    get_showConstellationSelection: function () {
        return this._showConstellationSelection;
    },

    set_showConstellationSelection: function (value) {
        this._showConstellationSelection = value;
        return value;
    },

    get_showEcliptic: function () {
        return this._showEcliptic;
    },

    set_showEcliptic: function (value) {
        this._showEcliptic = value;
        return value;
    },

    get_showElevationModel: function () {
        return this._showElevationModel;
    },

    set_showElevationModel: function (value) {
        this._showElevationModel = value;
        return value;
    },

    get_showFieldOfView: function () {
        return this._showFiledOfView;
    },

    get_showGrid: function () {
        return this._showGrid;
    },

    set_showGrid: function (value) {
        this._showGrid = value;
        return value;
    },

    get_showHorizon: function () {
        return this._showHorizon;
    },

    set_showHorizon: function (value) {
        this._showHorizon = value;
        return value;
    },

    get_showHorizonPanorama: function () {
        return this._showHorizonPanorama;
    },

    get_showMoonsAsPointSource: function () {
        return this._showMoonsAsPointSource;
    },

    get_showSolarSystem: function () {
        return this._showSolarSystem;
    },

    set_showSolarSystem: function (value) {
        this._showSolarSystem = value;
        return value;
    },

    get_localHorizonMode: function () {
        return this._localHorizonMode;
    },

    set_localHorizonMode: function (value) {
        this._localHorizonMode = value;
        return value;
    },

    get_galacticMode: function () {
        return this._galacticMode;
    },

    set_galacticMode: function (value) {
        this._galacticMode = value;
        return value;
    },

    get_solarSystemStars: function () {
        return this._solarSystemStars;
    },

    set_solarSystemStars: function (value) {
        this._solarSystemStars = value;
        return value;
    },

    get_solarSystemMilkyWay: function () {
        return this._solarSystemMilkyWay;
    },

    set_solarSystemMilkyWay: function (value) {
        this._solarSystemMilkyWay = value;
        return value;
    },

    get_solarSystemCosmos: function () {
        return this._solarSystemCosmos;
    },

    set_solarSystemCosmos: function (value) {
        this._solarSystemCosmos = value;
        return value;
    },

    get_solarSystemOrbits: function () {
        return this._solarSystemOrbits;
    },

    set_solarSystemOrbits: function (value) {
        this._solarSystemOrbits = value;
        return value;
    },

    get_solarSystemOverlays: function () {
        return this._solarSystemOverlays;
    },

    set_solarSystemOverlays: function (value) {
        this._solarSystemOverlays = value;
        return value;
    },

    get_solarSystemLighting: function () {
        return this._solarSystemLighting;
    },

    set_solarSystemLighting: function (value) {
        this._solarSystemLighting = value;
        return value;
    },

    get_solarSystemMultiRes: function () {
        return true;
    },

    set_solarSystemMultiRes: function (value) {
        this._solarSystemMultiRes = value;
        return value;
    },

    get_solarSystemScale: function () {
        return this._solarSystemScale;
    },

    set_solarSystemScale: function (value) {
        this._solarSystemScale = value;
        return value;
    },

    get_showEquatorialGridText: function () {
        return this._showEquatorialGridText;
    },

    set_showEquatorialGridText: function (value) {
        this._showEquatorialGridText = value;
        return value;
    },

    get_showGalacticGrid: function () {
        return this._showGalacticGrid;
    },

    set_showGalacticGrid: function (value) {
        this._showGalacticGrid = value;
        return value;
    },

    get_showGalacticGridText: function () {
        return this._showGalacticGridText;
    },

    set_showGalacticGridText: function (value) {
        this._showGalacticGridText = value;
        return value;
    },

    get_showEclipticGrid: function () {
        return this._showEclipticGrid;
    },

    set_showEclipticGrid: function (value) {
        this._showEclipticGrid = value;
        return value;
    },

    get_showEclipticGridText: function () {
        return this._showEclipticGridText;
    },

    set_showEclipticGridText: function (value) {
        this._showEclipticGridText = value;
        return value;
    },

    get_showEclipticOverviewText: function () {
        return this._showEclipticOverviewText;
    },

    set_showEclipticOverviewText: function (value) {
        this._showEclipticOverviewText = value;
        return value;
    },

    get_showAltAzGrid: function () {
        return this._showAltAzGrid;
    },

    set_showAltAzGrid: function (value) {
        this._showAltAzGrid = value;
        return value;
    },

    get_eclipticGridColor: function () {
        return this._eclipticGridColor;
    },

    set_eclipticGridColor: function (value) {
        this._eclipticGridColor = value;
        return value;
    },

    get_galacticGridColor: function () {
        return this._galacticGridColor;
    },

    set_galacticGridColor: function (value) {
        this._galacticGridColor = value;
        return value;
    },

    get_altAzGridColor: function () {
        return this._altAzGridColor;
    },

    set_altAzGridColor: function (value) {
        this._altAzGridColor = value;
        return value;
    },

    get_precessionChartColor: function () {
        return this._precessionChartColor;
    },

    set_precessionChartColor: function (value) {
        this._precessionChartColor = value;
        return value;
    },

    get_eclipticColor: function () {
        return this._eclipticColor;
    },

    set_eclipticColor: function (value) {
        this._eclipticColor = value;
        return value;
    },

    get_equatorialGridColor: function () {
        return this._equatorialGridColor;
    },

    set_equatorialGridColor: function (value) {
        this._equatorialGridColor = value;
        return value;
    },

    get_showAltAzGridText: function () {
        return this._showAltAzGridText;
    },

    set_showAltAzGridText: function (value) {
        this._showAltAzGridText = value;
        return value;
    },

    get_showPrecessionChart: function () {
        return this._showPrecessionChart;
    },

    set_showPrecessionChart: function (value) {
        this._showPrecessionChart = value;
        return value;
    },

    get_showConstellationPictures: function () {
        return this._showConstellationPictures;
    },

    set_showConstellationPictures: function (value) {
        this._showConstellationPictures = value;
        return value;
    },

    get_showConstellationLabels: function () {
        return this._showConstellationLabels;
    },

    set_showConstellationLabels: function (value) {
        this._showConstellationLabels = value;
        return value;
    },

    get_constellationLabelsHeight: function () {
        return this._constellationLabelsHeight;
    },

    set_constellationLabelsHeight: function (value) {
        this._constellationLabelsHeight = value;
        return value;
    },

    get_solarSystemCMB: function () {
        return this._solarSystemCMB;
    },

    set_solarSystemCMB: function (value) {
        this._solarSystemCMB = value;
        return value;
    },

    get_solarSystemMinorPlanets: function () {
        return this._solarSystemMinorPlanets;
    },

    set_solarSystemMinorPlanets: function (value) {
        this._solarSystemMinorPlanets = value;
        return value;
    },

    get_solarSystemPlanets: function () {
        return this._solarSystemPlanets;
    },

    set_solarSystemPlanets: function (value) {
        this._solarSystemPlanets = value;
        return value;
    },

    get_showEarthSky: function () {
        return this._showEarthSky;
    },

    set_showEarthSky: function (value) {
        this._showEarthSky = value;
        return value;
    },

    get_solarSystemMinorOrbits: function () {
        return this._solarSystemMinorOrbits;
    },

    set_solarSystemMinorOrbits: function (value) {
        this._solarSystemMinorOrbits = value;
        return value;
    },

    get_constellationsEnabled: function () {
        return this._constellationsEnabled;
    },

    set_constellationsEnabled: function (value) {
        this._constellationsEnabled = value;
        return value;
    },

    get_constellationFiguresFilter: function () {
        return this._constellationFiguresFilter;
    },

    set_constellationFiguresFilter: function (value) {
        this._constellationFiguresFilter = value;
        return value;
    },

    get_constellationBoundariesFilter: function () {
        return this._constellationBoundariesFilter;
    },

    set_constellationBoundariesFilter: function (value) {
        this._constellationBoundariesFilter = value;
        return value;
    },

    get_constellationNamesFilter: function () {
        return this._constellationNamesFilter;
    },

    set_constellationNamesFilter: function (value) {
        this._constellationNamesFilter = value;
        return value;
    },

    get_constellationArtFilter: function () {
        return this._constellationArtFilter;
    },

    set_constellationArtFilter: function (value) {
        this._constellationArtFilter = value;
        return value;
    },

    get_showSkyOverlays: function () {
        return this._showSkyOverlays;
    },

    set_showSkyOverlays: function (value) {
        this._showSkyOverlays = value;
        return value;
    },

    get_showConstellations: function () {
        return this._showConstellations;
    },

    set_showConstellations: function (value) {
        this._showConstellations = value;
        return value;
    },

    get_showSkyNode: function () {
        return this._showSkyNode;
    },

    set_showSkyNode: function (value) {
        this._showSkyNode = value;
        return value;
    },

    get_showSkyGrids: function () {
        return this._showSkyGrids;
    },

    set_showSkyGrids: function (value) {
        this._showSkyGrids = value;
        return value;
    },

    get_showSkyOverlaysIn3d: function () {
        return this._showSkyOverlaysIn3d;
    },

    set_showSkyOverlaysIn3d: function (value) {
        this._showSkyOverlaysIn3d = value;
        return value;
    },

    get_earthCutawayView: function () {
        return this._earthCutawayView;
    },

    set_earthCutawayView: function (value) {
        this._earthCutawayView = value;
        return value;
    },

    get_showISSModel: function () {
        return this._showISSModel;
    },

    set_showISSModel: function (value) {
        this._showISSModel = value;
        return value;
    },

    get_milkyWayModel: function () {
        return this._milkyWayModel;
    },

    set_milkyWayModel: function (value) {
        this._milkyWayModel = value;
        return value;
    },

    get_minorPlanetsFilter: function () {
        return this._minorPlanetsFilter;
    },

    set_minorPlanetsFilter: function (value) {
        this._minorPlanetsFilter = value;
        return value;
    },

    get_planetOrbitsFilter: function () {
        return this._planetOrbitsFilter;
    },

    set_planetOrbitsFilter: function (value) {
        this._planetOrbitsFilter = value;
        return value;
    },

    get_constellations: function () {
        return this._constellations;
    },

    set_constellations: function (value) {
        this._constellations = value;
        return value;
    },

    getSetting: function (type) {
        if (type === 17) {
            return new SettingParameter(true, 0, !!0, null);
        }
        return new SettingParameter(false, 1, false, null);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Settings", [Settings, Settings$, null, _interfaces_js__WEBPACK_IMPORTED_MODULE_3__.ISettings]);


/***/ }),

/***/ "./esm/sky_image_tile.js":
/*!*******************************!*\
  !*** ./esm/sky_image_tile.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SkyImageTile: () => (/* binding */ SkyImageTile)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _layers_wcs_image_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./layers/wcs_image.js */ "./esm/layers/wcs_image.js");
/* harmony import */ var _tangent_tile_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tangent_tile.js */ "./esm/tangent_tile.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A "tile" that is really a single image displayed using a tangential
// projection.








// wwtlib.SkyImageTile

function SkyImageTile(level, x, y, dataset, parent) {
    this.pixelCenterX = 0;
    this.pixelCenterY = 0;
    this.scaleX = 0.01;
    this.scaleY = 0.01;
    this.height = 0;
    this.width = 0;
    _tangent_tile_js__WEBPACK_IMPORTED_MODULE_4__.TangentTile.call(this, level, x, y, dataset, parent);
    this.pixelCenterX = dataset.get_offsetX();
    this.pixelCenterY = dataset.get_offsetY();
    this.scaleX = -(this.scaleY = dataset.get_baseTileDegrees());
    if (dataset.get_bottomsUp()) {
        this.scaleX = -this.scaleX;
    }
    this.sphereCenter = this.geoTo3dTan(0, 0);
    this.radius = 1.25;
    this.computeBoundingSphere();
}

var SkyImageTile$ = {
    getLatLngEdges: function () {
        var edges = new _tangent_tile_js__WEBPACK_IMPORTED_MODULE_4__.LatLngEdges();
        var wcsImage = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(this.dataset.get_wcsImage(), _layers_wcs_image_js__WEBPACK_IMPORTED_MODULE_3__.WcsImage);
        if (wcsImage != null && _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.useGl) {
            if (_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.useGlVersion2) {
                this.width = wcsImage.get_sizeX();
                this.height = wcsImage.get_sizeY();
            }
            else {
                this.height = this.bmp.height;
                this.width = this.bmp.width;
                if (this.bmp.height !== wcsImage.get_sizeY()) {
                    this.pixelCenterY += this.bmp.height - wcsImage.get_sizeY();
                }
            }
        } else if (this.texture != null) {
            this.height = this.texture.naturalHeight;
            this.width = this.texture.naturalWidth;
        } else {
            this.height = 256;
            this.width = 256;
        }
        edges.latMin = 0 + (this.scaleY * (this.height - this.pixelCenterY));
        edges.latMax = 0 - (this.scaleY * this.pixelCenterY);
        edges.lngMin = 0 + (this.scaleX * this.pixelCenterX);
        edges.lngMax = 0 - (this.scaleX * (this.width - this.pixelCenterX));
        return edges;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("SkyImageTile", [SkyImageTile, SkyImageTile$, _tangent_tile_js__WEBPACK_IMPORTED_MODULE_4__.TangentTile]);


/***/ }),

/***/ "./esm/sky_text.js":
/*!*************************!*\
  !*** ./esm/sky_text.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Alignment: () => (/* binding */ Alignment),
/* harmony export */   GlyphCache: () => (/* binding */ GlyphCache),
/* harmony export */   GlyphItem: () => (/* binding */ GlyphItem),
/* harmony export */   Text3d: () => (/* binding */ Text3d),
/* harmony export */   Text3dBatch: () => (/* binding */ Text3dBatch)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./color.js */ "./esm/color.js");
/* harmony import */ var _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./graphics/webgl_constants.js */ "./esm/graphics/webgl_constants.js");
/* harmony import */ var _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./graphics/gl_buffers.js */ "./esm/graphics/gl_buffers.js");
/* harmony import */ var _graphics_texture_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./graphics/texture.js */ "./esm/graphics/texture.js");
/* harmony import */ var _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./graphics/shaders.js */ "./esm/graphics/shaders.js");
/* harmony import */ var _tours_text_object_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tours/text_object.js */ "./esm/tours/text_object.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./util.js */ "./esm/util.js");
/* harmony import */ var _web_file_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./web_file.js */ "./esm/web_file.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Text rendered on the sky.
















// wwtlib.Alignment

var Alignment = {
    center: 0,
    left: 1
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Alignment", Alignment);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("Alignment", Alignment);


// wwtlib.Text3dBatch

function Text3dBatch(height) {
    this.height = 128;
    this.items = [];
    this._glyphVersion = -1;
    this.viewTransform = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.get_identity();
    this._textObject = new _tours_text_object_js__WEBPACK_IMPORTED_MODULE_9__.TextObject();
    this._vertCount = 0;
    this.height = (height * 3);
}

var Text3dBatch$ = {
    add: function (newItem) {
        this.items.push(newItem);
    },

    draw: function (renderContext, opacity, color) {
        if (renderContext.gl == null) {
            var viewPoint = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d._transformCoordinate(renderContext.get_viewPoint(), this.viewTransform);
            var drawHeight = (this.height / renderContext.get_fovAngle()) * renderContext.height / 180;
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.items);
            while ($enum1.moveNext()) {
                var t3d = $enum1.current;
                var screenSpacePnt = renderContext.WVP.transform(t3d.center);
                if (screenSpacePnt.z < 0) {
                    continue;
                }
                if (_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.dot(viewPoint, t3d.center) < 0.55) {
                    continue;
                }
                var screenSpaceTop = renderContext.WVP.transform(t3d.top);
                var rotation = Math.atan2(screenSpacePnt.x - screenSpaceTop.x, screenSpacePnt.y - screenSpaceTop.y);
                var ctx = renderContext.device;
                ctx.save();
                ctx.translate(screenSpacePnt.x, screenSpacePnt.y);
                ctx.rotate(-rotation); // todo update with up vector
                ctx.globalAlpha = opacity;
                ctx.fillStyle = color.toString();
                ctx.font = 'normal' + ' ' + (( false) ? 0 : 'normal') + ' ' + Math.round(drawHeight * 1.2).toString() + 'px ' + 'Arial';
                ctx.textBaseline = 'top';
                var tm = ctx.measureText(t3d.text);
                ctx.fillText(t3d.text, -tm.width / 2, -drawHeight / 2);
                ctx.restore();
            }
        } else {
            if (this._glyphCache == null || this._glyphCache.get_version() > this._glyphVersion) {
                this.prepareBatch();
            }
            if (!this._glyphCache.ready) {
                return;
            }
            _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_8__.TextShader.use(renderContext, this._vertexBuffer.vertexBuffer, this._glyphCache.get_texture().texture2d);
            renderContext.gl.drawArrays(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TRIANGLES, 0, this._vertexBuffer.count);
        }
    },

    prepareBatch: function () {
        if (this._glyphCache == null) {
            this._glyphCache = GlyphCache.getCache(this.height);
        }
        if (!this._glyphCache.ready) {
            return;
        }
        this._textObject.text = '';
        this._textObject.fontSize = this.height * 0.5;
        var verts = [];
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.items);
        while ($enum1.moveNext()) {
            var t3d = $enum1.current;
            var text = t3d.text;
            var left = 0;
            var top = 0;
            var fntAdjust = this._textObject.fontSize / 128;
            var factor = 0.6666;
            var width = 0;
            var height = 0;
            for (var i = 0; i < text.length; i++) {
                var item = this._glyphCache.getGlyphItem(text.substr(i, 1));
                if (item != null) {
                    width += item.extents.x;
                    height = Math.max(item.extents.y, height);
                }
            }
            var size = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(width, height);
            t3d.width = size.x * t3d.scale * factor * fntAdjust;
            t3d.height = size.y * t3d.scale * factor * fntAdjust;
            var charsLeft = text.length;
            for (var i = 0; i < charsLeft; i++) {
                var item = this._glyphCache.getGlyphItem(text.substr(i, 1));
                if (item != null) {
                    var position = _util_js__WEBPACK_IMPORTED_MODULE_11__.Rectangle.create(left * t3d.scale * factor, 0 * t3d.scale * factor, item.extents.x * fntAdjust * t3d.scale * factor, item.extents.y * fntAdjust * t3d.scale * factor);
                    left += (item.extents.x * fntAdjust);
                    t3d.addGlyphPoints(verts, item.size, position, item.uvRect);
                }
            }
        }
        this._vertCount = verts.length;
        this._vertexBuffer = new _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_6__.PositionTextureVertexBuffer(this._vertCount);
        var vertBuf = this._vertexBuffer.lock();
        for (var i = 0; i < this._vertCount; i++) {
            vertBuf[i] = verts[i];
        }
        this._vertexBuffer.unlock();
        this._glyphVersion = this._glyphCache.get_version();
    },

    cleanUp: function () {
        if (this._vertexBuffer != null) {
            this._vertexBuffer = null;
        }
        this.items.length = 0;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Text3dBatch", [Text3dBatch, Text3dBatch$, null]);

// wwtlib.GlyphItem

function GlyphItem(glyph) {
    this.referenceCount = 0;
    this.glyph = glyph;
    this.uvRect = new _util_js__WEBPACK_IMPORTED_MODULE_11__.Rectangle();
    this.size = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d();
    this.referenceCount = 1;
}

GlyphItem.create = function (glyph, uv, size, extents) {
    var temp = new GlyphItem(glyph);
    temp.glyph = glyph;
    temp.uvRect = uv;
    temp.size = size;
    temp.extents = extents;
    temp.referenceCount = 1;
    return temp;
};

GlyphItem._fromXML = function (node) {
    var glyph = node.attributes.getNamedItem('Glyph').nodeValue;
    var item = new GlyphItem(glyph);
    item.uvRect = _util_js__WEBPACK_IMPORTED_MODULE_11__.Rectangle.create(parseFloat(node.attributes.getNamedItem('UVLeft').nodeValue), parseFloat(node.attributes.getNamedItem('UVTop').nodeValue), parseFloat(node.attributes.getNamedItem('UVWidth').nodeValue), parseFloat(node.attributes.getNamedItem('UVHeight').nodeValue));
    item.size = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(parseFloat(node.attributes.getNamedItem('SizeWidth').nodeValue), parseFloat(node.attributes.getNamedItem('SizeHeight').nodeValue));
    item.extents = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(parseFloat(node.attributes.getNamedItem('ExtentsWidth').nodeValue), parseFloat(node.attributes.getNamedItem('ExtentsHeight').nodeValue));
    return item;
};

var GlyphItem$ = {
    addRef: function () {
        this.referenceCount++;
    },

    release: function () {
        this.referenceCount--;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("GlyphItem", [GlyphItem, GlyphItem$, null]);

// wwtlib.GlyphCache

function GlyphCache(height) {
    this._cellHeight = 128;
    this._gridSize = 8;
    this.ready = false;
    this._glyphItems = {};
    this.textObject = new _tours_text_object_js__WEBPACK_IMPORTED_MODULE_9__.TextObject();
    this._dirty = true;
    this._textureDirty = true;
    this._version = 0;
    this._cellHeight = height;
    this._texture = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_7__.Texture.fromUrl(_url_helpers_js__WEBPACK_IMPORTED_MODULE_10__.URLHelpers.singleton.engineAssetUrl('glyphs1.png'));
    this._webFile = new _web_file_js__WEBPACK_IMPORTED_MODULE_12__.WebFile(_url_helpers_js__WEBPACK_IMPORTED_MODULE_10__.URLHelpers.singleton.engineAssetUrl('glyphs1.xml'));
    this._webFile.onStateChange = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_glyphXmlReady', this);
    this._webFile.send();
}

GlyphCache._caches = {};
GlyphCache._allGlyphs = '';

GlyphCache.getCache = function (height) {
    if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(GlyphCache._caches, height)) {
        GlyphCache._caches[height] = new GlyphCache(height);
    }
    return GlyphCache._caches[height];
};

GlyphCache.cleanUpAll = function () {
    _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.clearKeys(GlyphCache._caches);
};

var GlyphCache$ = {
    get_height: function () {
        return this._cellHeight;
    },

    _glyphXmlReady: function () {
        if (this._webFile.get_state() === 2) {
            alert(this._webFile.get_message());
        } else if (this._webFile.get_state() === 1) {
            this._loadXmlGlyph(this._webFile.getXml());
        }
    },

    _loadXmlGlyph: function (xml) {
        var nodes = _baseutil_js__WEBPACK_IMPORTED_MODULE_3__.Util.selectSingleNode(xml, 'GlyphItems');
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(nodes.childNodes);
        while ($enum1.moveNext()) {
            var glyphItem = $enum1.current;
            if (glyphItem.nodeName === 'GlyphItem') {
                var item = GlyphItem._fromXML(glyphItem);
                this._glyphItems[item.glyph] = item;
                GlyphCache._allGlyphs = GlyphCache._allGlyphs + item.glyph;
            }
        }
        this.ready = true;
    },

    get_texture: function () {
        return this._texture;
    },

    _makeTexture: function () {
        this._calcOrMake(true);
    },

    getGlyphItem: function (glyph) {
        if (this._dirty) {
            this._calculateGlyphDetails();
        }
        return this._glyphItems[glyph];
    },

    _calculateGlyphDetails: function () {
        this._calcOrMake(false);
    },

    _calcOrMake: function (makeTexture) { },

    get_version: function () {
        return this._version;
    },

    set_version: function (value) {
        this._version = value;
        return value;
    },

    addGlyph: function (glyph) {
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this._glyphItems, glyph)) {
            var item = new GlyphItem(glyph);
            this._glyphItems[glyph] = item;
            this._dirty = true;
            this._textureDirty = true;
            this._version++;
            GlyphCache._allGlyphs = GlyphCache._allGlyphs + glyph;
        } else {
            this._glyphItems[glyph].addRef();
        }
    },

    cleanUp: function () {
        this._dirty = true;
        this._texture = null;
    },

    dispose: function () {
        this.cleanUp();
    },

    get_dirty: function () {
        return this._dirty;
    },

    set_dirty: function (value) {
        this._dirty = value;
        return value;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("GlyphCache", [GlyphCache, GlyphCache$, null, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.IDisposable]);

// wwtlib.Text3d

function Text3d(center, up, text, fontsize, scale) {
    this.rotation = 0;
    this.tilt = 0;
    this.bank = 0;
    this._matInit = false;
    this.color = _color_js__WEBPACK_IMPORTED_MODULE_4__.Colors.get_white();
    this.sky = true;
    this.scale = 0;
    this.opacity = 1;
    this.text = '';
    this.width = 1;
    this.height = 1;
    this.alignment = 0;
    this.text = text;
    this.up = up;
    this.center = center;
    this.scale = scale;
    this.top = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.addVectors(center, _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.scale(up, scale));
    if (fontsize < 0) {
        this.sky = false;
    }
}

var Text3d$ = {
    addGlyphPoints: function (pointList, size, position, uv) {
        var points = new Array(6);
        for (var i = 0; i < 6; i++) {
            points[i] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionTexture();
        }
        var left = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.cross(this.center, this.up);
        var right = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.cross(this.up, this.center);
        left.normalize();
        right.normalize();
        this.up.normalize();
        var upTan = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.cross(this.center, right);
        upTan.normalize();
        if (!this.alignment) {
            left.multiply(this.width - position.get_left() * 2);
            right.multiply(this.width - ((this.width * 2) - position.get_right() * 2));
        } else if (this.alignment === 1) {
            left.multiply(-position.get_left() * 2);
            right.multiply(position.get_right() * 2);
        }
        var top = upTan.copy();
        var bottom = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.subtractVectors(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.get_empty(), upTan);
        top.multiply(this.height - position.get_top() * 2);
        bottom.multiply(this.height - ((this.height * 2) - position.get_bottom() * 2));
        var ul = this.center.copy();
        ul.add(top);
        if (this.sky) {
            ul.add(left);
        } else {
            ul.subtract(left);
        }
        var ur = this.center.copy();
        ur.add(top);
        if (this.sky) {
            ur.add(right);
        } else {
            ur.subtract(right);
        }
        var ll = this.center.copy();
        if (this.sky) {
            ll.add(left);
        } else {
            ll.subtract(left);
        }
        ll.add(bottom);
        var lr = this.center.copy();
        if (this.sky) {
            lr.add(right);
        } else {
            lr.subtract(right);
        }
        lr.add(bottom);
        points[0].position = ul.copy();
        points[0].tu = uv.get_left();
        points[0].tv = uv.get_top();
        points[2].tu = uv.get_left();
        points[2].tv = uv.get_bottom();
        points[2].position = ll.copy();
        points[1].tu = uv.get_right();
        points[1].tv = uv.get_top();
        points[1].position = ur.copy();
        points[3].tu = uv.get_right();
        points[3].tv = uv.get_bottom();
        points[3].position = lr.copy();
        points[5].tu = uv.get_right();
        points[5].tv = uv.get_top();
        points[5].position = ur.copy();
        points[4].tu = uv.get_left();
        points[4].tv = uv.get_bottom();
        points[4].position = ll.copy();
        if (!!this.rotation || !!this.tilt || !!this.bank) {
            if (!this._matInit) {
                var lookAt = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.lookAtLH(this.center, new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d(), this.up);
                var lookAtInv = lookAt.clone();
                lookAtInv.invert();
                this._rtbMat = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.multiplyMatrix(lookAt, _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationZ(-this.rotation / 180 * Math.PI)), _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationX(-this.tilt / 180 * Math.PI)), _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationY(-this.bank / 180 * Math.PI)), lookAtInv);
                // "todo make this true after debug"
                this._matInit = true;
            }
            for (var i = 0; i < 6; i++) {
                points[i].position = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d._transformCoordinate(points[i].position, this._rtbMat);
            }
        }
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(points);
        while ($enum1.moveNext()) {
            var pnt = $enum1.current;
            pointList.push(pnt);
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Text3d", [Text3d, Text3d$, null]);


/***/ }),

/***/ "./esm/space_time_controller.js":
/*!**************************************!*\
  !*** ./esm/space_time_controller.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SpaceTimeController: () => (/* binding */ SpaceTimeController)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _astrocalc_date_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./astrocalc/date.js */ "./esm/astrocalc/date.js");
/* harmony import */ var _astrocalc_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./astrocalc.js */ "./esm/astrocalc.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./coordinates.js */ "./esm/coordinates.js");
/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./settings.js */ "./esm/settings.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// The WWT clock and related calculations.









// wwtlib.SpaceTimeController

function SpaceTimeController() { }

SpaceTimeController.framesPerSecond = 30;
SpaceTimeController.frameDumping = false;
SpaceTimeController.cancelFrameDump = false;
SpaceTimeController.currentFrameNumber = 0;
SpaceTimeController.totalFrames = 0;
SpaceTimeController._offset = 0;
SpaceTimeController._syncToClock = true;
SpaceTimeController._timeRate = 1;
SpaceTimeController._altitude = 0;

SpaceTimeController.updateClock = function () {
    if (SpaceTimeController._syncToClock) {
        var justNow = SpaceTimeController.get_metaNow();
        if (SpaceTimeController._timeRate !== 1) {
            var ts = justNow.getTime() - SpaceTimeController.last.getTime();
            var ticks = (ts * SpaceTimeController._timeRate);
            SpaceTimeController._offset += ticks;
        }
        SpaceTimeController.last = justNow;
        try {
            SpaceTimeController._now = new Date(justNow.getTime() + SpaceTimeController._offset);
        }
        catch ($e1) {
            SpaceTimeController._now = new Date(1, 12, 25, 23, 59, 59);
            SpaceTimeController._offset = SpaceTimeController._now - SpaceTimeController.get_metaNow();
        }
        if (SpaceTimeController._now.getFullYear() > 4000) {
            SpaceTimeController._now = new Date(4000, 12, 31, 23, 59, 59);
            SpaceTimeController._offset = SpaceTimeController._now - SpaceTimeController.get_metaNow();
        }
        if (SpaceTimeController._now.getFullYear() < 1) {
            SpaceTimeController._now = new Date(0, 12, 25, 23, 59, 59);
            SpaceTimeController._offset = SpaceTimeController._now - SpaceTimeController.get_metaNow();
        }
    }
};

SpaceTimeController.getTimeForFutureTime = function (delta) {
    try {
        if (SpaceTimeController._syncToClock) {
            var future = new Date((SpaceTimeController.get_now().getTime() + (delta * 1000) * SpaceTimeController._timeRate));
            return future;
        } else {
            return SpaceTimeController.get_now();
        }
    }
    catch ($e1) {
        return SpaceTimeController.get_now();
    }
};

SpaceTimeController.getJNowForFutureTime = function (delta) {
    try {
        if (SpaceTimeController._syncToClock) {
            var future = new Date(SpaceTimeController.get_now().getTime() + _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate((delta * 1000 * SpaceTimeController._timeRate)));
            return SpaceTimeController.utcToJulian(future);
        } else {
            return SpaceTimeController.utcToJulian(SpaceTimeController.get_now());
        }
    }
    catch ($e1) {
        return SpaceTimeController.utcToJulian(SpaceTimeController.get_now());
    }
};

SpaceTimeController.get_now = function () {
    return SpaceTimeController._now;
};

SpaceTimeController.set_now = function (value) {
    SpaceTimeController._now = value;
    SpaceTimeController._offset = SpaceTimeController._now - SpaceTimeController.get_metaNow();
    SpaceTimeController.last = SpaceTimeController.get_metaNow();
    return value;
};

SpaceTimeController.get_metaNow = function () {
    return SpaceTimeController._metaNow;
};

SpaceTimeController.set_metaNow = function (value) {
    if (!SpaceTimeController.frameDumping) {
        SpaceTimeController._metaNow = value;
    }
    return value;
};

SpaceTimeController.nextFrame = function () {
    SpaceTimeController._metaNow.setMilliseconds(SpaceTimeController._metaNow.getMilliseconds() + Math.round(1000 / SpaceTimeController.framesPerSecond));
    SpaceTimeController.currentFrameNumber += 1;
};

SpaceTimeController.get_doneDumping = function () {
    return !SpaceTimeController.frameDumping || SpaceTimeController.cancelFrameDump || (SpaceTimeController.currentFrameNumber >= SpaceTimeController.totalFrames);
};

SpaceTimeController.syncTime = function () {
    SpaceTimeController._offset = 0;
    SpaceTimeController._now = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.now();
    SpaceTimeController._syncToClock = true;
};

SpaceTimeController.get_jNow = function () {
    return SpaceTimeController.utcToJulian(SpaceTimeController.get_now());
};

SpaceTimeController.get_syncToClock = function () {
    return SpaceTimeController._syncToClock;
};

SpaceTimeController.set_syncToClock = function (value) {
    if (SpaceTimeController._syncToClock !== value) {
        SpaceTimeController._syncToClock = value;
        if (value) {
            SpaceTimeController.last = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.now();
            SpaceTimeController._offset = SpaceTimeController._now - _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.now();
        } else {
            SpaceTimeController._now = new Date(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.now().getTime() + SpaceTimeController._offset);
        }
    }
    return value;
};

SpaceTimeController.get_timeRate = function () {
    return SpaceTimeController._timeRate;
};

SpaceTimeController.set_timeRate = function (value) {
    SpaceTimeController._timeRate = value;
    return value;
};

SpaceTimeController.get_altitude = function () {
    return SpaceTimeController._altitude;
};

SpaceTimeController.set_altitude = function (value) {
    SpaceTimeController._altitude = value;
    return value;
};

SpaceTimeController.get_location = function () {
    SpaceTimeController._location = _coordinates_js__WEBPACK_IMPORTED_MODULE_4__.Coordinates.fromLatLng(_settings_js__WEBPACK_IMPORTED_MODULE_5__.Settings.get_active().get_locationLat(), _settings_js__WEBPACK_IMPORTED_MODULE_5__.Settings.get_active().get_locationLng());
    SpaceTimeController._altitude = _settings_js__WEBPACK_IMPORTED_MODULE_5__.Settings.get_active().get_locationAltitude();
    return SpaceTimeController._location;
};

SpaceTimeController.set_location = function (value) {
    if (_settings_js__WEBPACK_IMPORTED_MODULE_5__.Settings.get_globalSettings().get_locationLat() !== value.get_lat()) {
        _settings_js__WEBPACK_IMPORTED_MODULE_5__.Settings.get_globalSettings().set_locationLat(value.get_lat());
    }
    if (_settings_js__WEBPACK_IMPORTED_MODULE_5__.Settings.get_globalSettings().get_locationLng() !== value.get_lng()) {
        _settings_js__WEBPACK_IMPORTED_MODULE_5__.Settings.get_globalSettings().set_locationLng(value.get_lng());
    }
    SpaceTimeController._location = value;
    return value;
};

SpaceTimeController.julianToUtc = function (jDate) {
    var date = new _astrocalc_date_js__WEBPACK_IMPORTED_MODULE_2__.DT();
    date.setJD(jDate, true);
    var ms = (date.second() - _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(date.second())) * 1000;
    return new Date(date.year(), date.month() - 1, date.day(), date.hour(), date.minute(), _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(date.second()), _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate(ms));
};

SpaceTimeController._twoLineDateToJulian = function (p) {
    var pre1950 = parseInt(p.substring(0, 1)) < 6;
    var year = parseInt(((pre1950) ? ' 20' : '19') + p.substring(0, 2));
    var days = parseFloat(p.substring(2, 3));
    var fraction = parseFloat(p.substr(5));
    var date = new Date(year, 0, 1, 0, 0);
    return SpaceTimeController.utcToJulian(date) + (days - 1 + fraction);
};

SpaceTimeController.julianToTwoLineDate = function (jDate) {
    return SpaceTimeController.dateToTwoLineDate(SpaceTimeController.julianToUtc(jDate));
};

SpaceTimeController.dateToTwoLineDate = function (date) {
    var sb = new _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.StringBuilder();
    sb.append(date.getFullYear() % 100);
    var fullYear = new Date(date.getFullYear(), 0, 1, 0, 0);
    var dayofyear = Math.floor((date - fullYear) / (60 * 60 * 24 * 1000)) + 2;
    var day = dayofyear + date.getHours() / 24 + date.getMinutes() / 60 / 24 + date.getSeconds() / 60 / 60 / 24 + date.getMilliseconds() / 1000 / 60 / 60 / 24;
    var sDay = SpaceTimeController.tleDayString(day);
    sb.append(sDay);
    return sb.toString();
};

SpaceTimeController.tleDayString = function (day) {
    var formated = day.toString();
    var point = formated.indexOf('.');
    if (point === -1) {
        point = formated.length;
        formated += '.0';
    }
    var len = formated.length - point - 1;
    var fill = '00000000';
    formated = fill.substr(0, 3 - point) + formated + fill.substr(0, 8 - len);
    return formated;
};

SpaceTimeController.utcToJulian = function (utc) {
    var year = utc.getUTCFullYear();
    var month = utc.getUTCMonth() + 1;
    var day = utc.getUTCDate();
    var hour = utc.getUTCHours();
    var minute = utc.getUTCMinutes();
    var second = utc.getUTCSeconds() + utc.getUTCMilliseconds() / 1000;
    var dblDay = day + (hour / 24) + (minute / 1440) + (second / 86400);
    return _astrocalc_js__WEBPACK_IMPORTED_MODULE_3__.AstroCalc.getJulianDay(year, month, dblDay);
};

SpaceTimeController.dateToJD = function (Year, Month, Day, bGregorianCalendar) {
    var Y = Year;
    var M = Month;
    if (M < 3) {
        Y = Y - 1;
        M = M + 12;
    }
    var A = 0;
    var B = 0;
    if (bGregorianCalendar) {
        A = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate((Y / 100));
        B = 2 - A + _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate((A / 4));
    }
    return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate((365.25 * (Y + 4716))) + _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.truncate((30.6001 * (M + 1))) + Day + B - 1524.5;
};

var SpaceTimeController$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("SpaceTimeController", [SpaceTimeController, SpaceTimeController$, null]);


/***/ }),

/***/ "./esm/ss.js":
/*!*******************!*\
  !*** ./esm/ss.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ss: () => (/* binding */ ss)
/* harmony export */ });
// This file is part of WorldWide Telescope and derived from:

/*! Script# Runtime
 * Designed and licensed for use and distribution with Script#-generated scripts.
 * Copyright (c) 2012, Nikhil Kothari, and the Script# Project.
 * More information at http://scriptsharp.com
 */

// It has been customized to adapt to the particulars of the WWT JavaScript
// build system.

function _ss() {
  "use strict";

  // Various Helpers/Utilities

  function _nop() {
  }

  function isValue(o) {
    return (o !== null) && (o !== undefined);
  }

  function _value(args) {
    for (var i = 2, l = args.length; i < l; i++) {
      if (isValue(args[i])) {
        return args[i];
      }
    }
    return null;
  }

  function value(a, b) {
    return isValue(a) ? a : isValue(b) ? b : _value(arguments);
  }

  function extend(o, items) {
    for (var n in items) {
      o[n] = items[n];
    }
    return o;
  }

  function parseBoolean(s) {
    return (s.toLowerCase() == 'true');
  }

  function parseRegExp(s) {
    if (s[0] == '/') {
      var endSlashIndex = s.lastIndexOf('/');
      if (endSlashIndex > 1) {
        var expression = s.substring(1, endSlashIndex);
        var flags = s.substr(endSlashIndex + 1);
        return new RegExp(expression, flags);
      }
    }

    return null;
  }

  function parseNumber(s) {
    if (!s || !s.length) {
      return 0;
    }
    if ((s.indexOf('.') >= 0) || (s.indexOf('e') >= 0) ||
      endsWith(s, 'f') || endsWith(s, 'F')) {
      return parseFloat(s);
    }
    return parseInt(s, 10);
  }

  function parseDate(s) {
    var t = Date.parse(s);
    return isNaN(t) ? undefined : new Date(t);
  }

  function truncate(n) {
    return (n >= 0) ? Math.floor(n) : Math.ceil(n);
  }

  function now() {
    return new Date();
  }

  function today() {
    var d = new Date();
    return new Date(d.getFullYear(), d.getMonth(), d.getDate());
  }

  function compareDates(d1, d2) {
    return (d1 === d2) ? true : ((isValue(d1) && isValue(d2)) ? (d1.getTime() == d2.getTime()) : false);
  }

  function _popStackFrame(e) {
    if (!isValue(e.stack) ||
      !isValue(e.fileName) ||
      !isValue(e.lineNumber)) {
      return;
    }

    var stackFrames = e.stack.split('\n');
    var currentFrame = stackFrames[0];
    var pattern = e.fileName + ':' + e.lineNumber;
    while (isValue(currentFrame) && currentFrame.indexOf(pattern) === -1) {
      stackFrames.shift();
      currentFrame = stackFrames[0];
    }

    var nextFrame = stackFrames[1];
    if (!isValue(nextFrame)) {
      return;
    }

    var nextFrameParts = nextFrame.match(/@(.*):(\d+)$/);
    if (!isValue(nextFrameParts)) {
      return;
    }

    stackFrames.shift();
    e.stack = stackFrames.join('\n');
    e.fileName = nextFrameParts[1];
    e.lineNumber = parseInt(nextFrameParts[2], 10);
  }

  function error(message, errorInfo, innerException) {
    var e = new Error(message);
    if (errorInfo) {
      for (var v in errorInfo) {
        e[v] = errorInfo[v];
      }
    }
    if (innerException) {
      e.innerException = innerException;
    }

    _popStackFrame(e);
    return e;
  }

  function fail(message) {
    console.assert(false, message);
    if (globalThis.navigator) {
      eval('debugger;');
    }
  }

  // Collections

  function toArray(obj) {
    return obj ? (typeof obj == 'string' ? JSON.parse('(' + obj + ')') : Array.prototype.slice.call(obj)) : null;
  }

  function removeItem(a, item) {
    var index = a.indexOf(item);
    return index >= 0 ? (a.splice(index, 1), true) : false;
  }

  function clearKeys(obj) {
    for (var key in obj) {
      delete obj[key];
    }
  }

  function keyExists(obj, key) {
    return obj[key] !== undefined;
  }

  function keys(obj) {
    if (Object.keys) {
      return Object.keys(obj);
    }
    var keys = [];
    for (var key in obj) {
      keys.push(key);
    }
    return keys;
  }

  function keyCount(obj) {
    return keys(obj).length;
  }

  function Enumerator(obj, keys) {
    var index = -1;
    var length = keys ? keys.length : obj.length;
    var lookup = keys ? function () { return { key: keys[index], value: obj[keys[index]] }; } :
      function () { return obj[index]; };

    this.current = null;
    this.moveNext = function () {
      index++;
      this.current = lookup();
      return index < length;
    };
    this.reset = function () {
      index = -1;
      this.current = null;
    };
  }

  var _nopEnumerator = {
    current: null,
    moveNext: function () { return false; },
    reset: _nop
  };

  function enumerate(o) {
    if (!isValue(o)) {
      return _nopEnumerator;
    }
    if (o.getEnumerator) {
      return o.getEnumerator();
    }
    if (o.length !== undefined) {
      return new Enumerator(o);
    }
    return new Enumerator(o, keys(o));
  }

  function Stack() {
    this.count = 0;
    this._items = [];
  }

  var Stack$ = {
    clear: function () {
      this._items.length = 0;
      this.count = 0;
    },
    contains: function (item) {
      for (var i = this.count - 1; i >= 0; i--) {
        if (this._items[i] === item) {
          return true;
        }
      }
      return false;
    },
    getEnumerator: function () {
      return new Enumerator(this._items.reverse());
    },
    peek: function () {
      return this._items[this.count - 1];
    },
    push: function (item) {
      this._items.push(item);
      this.count++;
    },
    pop: function () {
      if (this.count) {
        this.count--;
        return this._items.pop();
      }
      return undefined;
    }
  }

  function Queue() {
    this.count = 0;
    this._items = [];
    this._offset = 0;
  }

  function _cleanQueue(q) {
    q._items = q._items.slice(q._offset);
    q._offset = 0;
  }

  var Queue$ = {
    clear: function () {
      this._items.length = 0;
      this._offset = 0;
      this.count = 0;
    },
    contains: function (item) {
      for (var i = this._offset, length = this._items.length; i <= length; i++) {
        if (this._items[i] === item) {
          return true;
        }
      }
      return false;
    },
    dequeue: function () {
      if (this.count) {
        var item = this._items[this._offset];
        if (++this._offset * 2 >= this._items.length) {
          _cleanQueue(this);
        }
        this.count--;
        return item;
      }
      return undefined;
    },
    enqueue: function (item) {
      this._items.push(item);
      this.count++;
    },
    getEnumerator: function () {
      if (this._offset != 0) {
        _cleanQueue(this);
      }
      return new Enumerator(this._items);
    },
    peek: function () {
      return this._items.length ? this._items[this._offset] : undefined;
    }
  }

  // String

  function string(arg1, arg2) {
    if (typeof arg2 == 'number') {
      return arg2 > 1 ? new Array(arg2 + 1).join(arg1) : arg1;
    }
    return Array.prototype.join.call(arguments, '');
  }

  function emptyString(s) {
    return !s || !s.length;
  }

  function whitespace(s) {
    return emptyString(s) || !s.replace(/^\s*/, '').length;
  }

  function compareStrings(s1, s2, ignoreCase) {
    s1 = s1 || '', s2 = s2 || '';
    ignoreCase ? (s1 = s1.toUpperCase(), s2 = s2.toUpperCase()) : 0;
    return (s1 === s2) ? 0 : (s1 < s2) ? -1 : 1;
  }

  var _formatPlaceHolderRE = /(\{[^}^{]+\})/g;
  var _formatters = {};

  function format(cultureOrFormat) {
    var culture = neutralCulture;
    var format = cultureOrFormat;
    var values = Array.prototype.slice.call(arguments, 1);

    if (cultureOrFormat.constructor != String) {
      culture = cultureOrFormat;
      format = values[0];
      values = values.slice(1);
    }

    return format.replace(_formatPlaceHolderRE,
      function (str, match) {
        var index = parseInt(match.substr(1), 10);
        var value = values[index];
        if (!isValue(value)) {
          return '';
        }

        var formatter = _formatters[typeName(value)];
        if (formatter) {
          var formatSpec = '';
          var formatIndex = match.indexOf(':');
          if (formatIndex > 0) {
            formatSpec = match.substring(formatIndex + 1, match.length - 1);
          }
          if (formatSpec && (formatSpec != 'i')) {
            return formatter(value, formatSpec, culture);
          }
        }
        return culture == neutralCulture ? value.toString() : value.toLocaleString();
      });
  }

  function trim(s, tc) {
    if (tc || !String.prototype.trim) {
      tc = tc ? tc.join('') : null;
      var r = tc ? new RegExp('^[' + tc + ']+|[' + tc + ']+$', 'g') : /^\s+|\s+$/g;
      return s.replace(r, '');
    }
    return s.trim();
  }

  function trimStart(s, tc) {
    var r = tc ? new RegExp('^[' + tc.join('') + ']+') : /^\s+/;
    return s.replace(r, '');
  }

  function trimEnd(s, tc) {
    var r = tc ? new RegExp('[' + tc.join('') + ']+$') : /\s+$/;
    return s.replace(r, '');
  }

  function startsWith(s, prefix) {
    if (emptyString(prefix)) {
      return true;
    }
    if (emptyString(s) || (prefix.length > s.length)) {
      return false;
    }
    return s.substr(0, prefix.length) == prefix;
  }

  function endsWith(s, suffix) {
    if (emptyString(suffix)) {
      return true;
    }
    if (emptyString(s) || (suffix.length > s.length)) {
      return false;
    }
    return s.substr(-suffix.length) == suffix;
  }

  function padLeft(s, totalWidth, ch) {
    return (s.length < totalWidth) ? string(ch || ' ', totalWidth - s.length) + s : s;
  }

  function padRight(s, totalWidth, ch) {
    return (s.length < totalWidth) ? s + string(ch || ' ', totalWidth - s.length) : s;
  }

  function removeString(s, index, count) {
    if (!count || ((index + count) > s.length)) {
      return s.substr(0, index);
    }
    return s.substr(0, index) + s.substr(index + count);
  }

  function insertString(s, index, value) {
    if (!value) {
      return s;
    }
    if (!index) {
      return value + s;
    }
    return s.substr(0, index) + value + s.substr(index);
  }

  function replaceString(s, oldValue, newValue) {
    return s.split(oldValue).join(newValue || '');
  }

  // Delegate Functionality

  function _bindList(fnList) {
    var d = function () {
      var args = arguments;
      var result = null;
      for (var i = 0, l = fnList.length; i < l; i++) {
        result = args.length ? fnList[i].apply(null, args) : fnList[i].call(null);
      }
      return result;
    };
    d._fnList = fnList;
    return d;
  }

  function bind(fn, o) {
    if (!o) {
      return fn;
    }

    var name = null;
    fn = typeof fn == 'string' ? o[name = fn] : fn;

    var cache = name ? o.$$b || (o.$$b = {}) : null;
    var binding = cache ? cache[name] : null;

    if (!binding) {
      // Create a function that invokes the specified function, in the
      // context of the specified object.
      binding = function () {
        return fn.apply(o, arguments);
      };

      if (cache) {
        cache[name] = binding;
      }
    }
    return binding;
  }

  function bindAdd(binding, value) {
    if (!binding) {
      return value;
    }
    if (!value) {
      return binding;
    }

    var fnList = [].concat(binding._fnList || binding, value);
    return _bindList(fnList);
  }

  function bindSub(binding, value) {
    if (!binding) {
      return null;
    }
    if (!value) {
      return binding;
    }

    var fnList = binding._fnList || [binding];
    var index = fnList.indexOf(value);
    if (index >= 0) {
      if (fnList.length == 1) {
        return null;
      }

      fnList = index ? fnList.slice(0, index).concat(fnList.slice(index + 1)) : fnList.slice(1);
      return _bindList(fnList);
    }
    return binding;
  }

  function bindExport(fn, multiUse, name, root) {
    // Generate a unique name if one is not specified
    name = name || '__' + (new Date()).valueOf();

    // If unspecified, exported bindings go on the global object
    // (so they are callable using a simple identifier).
    root = root || globalThis;

    var exp = {
      name: name,
      detach: function () {
        root[name] = _nop;
      },
      dispose: function () {
        try { delete root[name]; } catch (e) { root[name] = undefined; }
      }
    };

    // Multi-use bindings are exported directly; for the rest a stub is exported, and the stub
    // first auto-disposes, and then invokes the actual binding.
    root[name] = multiUse ? fn : function () {
      exp.dispose();
      return fn.apply(null, arguments);
    };

    return exp;
  }

  // EventArgs

  function EventArgs() {
  }

  EventArgs.Empty = new EventArgs();

  function CancelEventArgs() {
    this.cancel = false;
  }

  // Contracts

  function IDisposable() { }
  function IEnumerable() { }
  function IEnumerator() { }
  function IObserver() { }
  function IApplication() { }
  function IContainer() { }
  function IObjectFactory() { }
  function IEventManager() { }
  function IInitializable() { }

  // StringBuilder

  function StringBuilder(s) {
    this._parts = isValue(s) && s !== '' ? [s] : [];
    this.isEmpty = this._parts.length == 0;
  }

  var StringBuilder$ = {
    append: function (s) {
      if (isValue(s) && s !== '') {
        this._parts.push(s);
        this.isEmpty = false;
      }
      return this;
    },

    appendLine: function (s) {
      this.append(s);
      this.append('\r\n');
      this.isEmpty = false;
      return this;
    },

    clear: function () {
      this._parts = [];
      this.isEmpty = true;
    },

    toString: function (s) {
      return this._parts.join(s || '');
    }
  };

  // Observable

  var _observerStack = [];
  var _observerRegistration = {
    dispose: function () {
      _observerStack.pop();
    }
  }

  function _captureObservers(observers) {
    var registeredObservers = _observerStack;
    var observerCount = registeredObservers.length;

    if (observerCount) {
      observers = observers || [];
      for (var i = 0; i < observerCount; i++) {
        var observer = registeredObservers[i];
        if (observers.indexOf(observer) < 0) {
          observers.push(observer);
        }
      }
      return observers;
    }
    return null;
  }

  function _invalidateObservers(observers) {
    for (var i = 0, len = observers.length; i < len; i++) {
      observers[i].invalidateObserver();
    }
  }

  function Observable(v) {
    this._v = v;
    this._observers = null;
  }

  var Observable$ = {
    getValue: function () {
      this._observers = _captureObservers(this._observers);
      return this._v;
    },
    setValue: function (v) {
      if (this._v !== v) {
        this._v = v;

        var observers = this._observers;
        if (observers) {
          this._observers = null;
          _invalidateObservers(observers);
        }
      }
    }
  };

  Observable.registerObserver = function (o) {
    _observerStack.push(o);
    return _observerRegistration;
  }

  function ObservableCollection(items) {
    this._items = items || [];
    this._observers = null;
  }

  var ObservableCollection$ = {
    get_item: function (index) {
      this._observers = _captureObservers(this._observers);
      return this._items[index];
    },
    set_item: function (index, item) {
      this._items[index] = item;
      this._updated();
    },
    get_length: function () {
      this._observers = _captureObservers(this._observers);
      return this._items.length;
    },
    add: function (item) {
      this._items.push(item);
      this._updated();
    },
    clear: function () {
      this._items.clear();
      this._updated();
    },
    contains: function (item) {
      return this._items.indexOf(item) >= 0;
    },
    getEnumerator: function () {
      this._observers = _captureObservers(this._observers);
      // TODO: Change this
      return this._items.getEnumerator();
    },
    indexOf: function (item) {
      return this._items.indexOf(item);
    },
    insert: function (index, item) {
      this._items.insert(index, item);
      this._updated();
    },
    remove: function (item) {
      if (this._items.remove(item)) {
        this._updated();
        return true;
      }
      return false;
    },
    removeAt: function (index) {
      this._items.splice(index, 1);
      this._updated();
    },
    toArray: function () {
      return this._items;
    },
    _updated: function () {
      var observers = this._observers;
      if (observers) {
        this._observers = null;
        _invalidateObservers(observers);
      }
    }
  }

  // Task

  function Task(result) {
    this._continuations = result !== undefined ?
      (this.status = 'done', null) :
      (this.status = 'pending', []);
    this.result = result;
    this.error = null;
  }

  var Task$ = {
    get_completed: function () {
      return this.status != 'pending';
    },
    changeWith: function (continuation) {
      var task = new Task();
      this.continueWith(function (t) {
        var error = t.error;
        var result;
        if (!error) {
          try {
            result = continuation(t);
          }
          catch (e) {
            error = e;
          }
        }
        _updateTask(task, result, error);
      });
      return task;
    },
    continueWith: function (continuation) {
      if (this._continuations) {
        this._continuations.push(continuation);
      }
      else {
        var self = this;
        setTimeout(function () { continuation(self); }, 0);
      }
      return this;
    },
    done: function (callback) {
      return this.continueWith(function (t) {
        if (t.status == 'done') {
          callback(t.result);
        }
      });
    },
    fail: function (callback) {
      return this.continueWith(function (t) {
        if (t.status == 'failed') {
          callback(t.error);
        }
      });
    },
    then: function (doneCallback, failCallback) {
      return this.continueWith(function (t) {
        t.status == 'done' ? doneCallback(t.result) : failCallback(t.error);
      });
    }
  };

  function _updateTask(task, result, error) {
    if (task.status == 'pending') {
      if (error) {
        task.error = error;
        task.status = 'failed';
      }
      else {
        task.result = result;
        task.status = 'done';
      }

      var continuations = task._continuations;
      task._continuations = null;

      for (var i = 0, c = continuations.length; i < c; i++) {
        continuations[i](task);
      }
    }
  }

  function _joinTasks(tasks, any) {
    tasks = toArray(tasks);

    var count = tasks.length;

    var interval = 0;
    if ((count > 1) && (typeof tasks[0] == 'number')) {
      interval = tasks[0];
      tasks = tasks.slice(1);
      count--;
    }
    if (Array.isArray(tasks[0])) {
      tasks = tasks[0];
      count = tasks.length;
    }

    var joinTask = new Task();
    var seen = 0;

    function continuation(t) {
      if (joinTask.status == 'pending') {
        seen++;
        if (any) {
          _updateTask(joinTask, t);
        }
        else if (seen == count) {
          _updateTask(joinTask, true);
        }
      }
    }

    function timeout() {
      if (joinTask.status == 'pending') {
        if (any) {
          _updateTask(joinTask, null);
        }
        else {
          _updateTask(joinTask, false);
        }
      }
    }

    if (interval != 0) {
      setTimeout(timeout, interval);
    }

    for (var i = 0; i < count; i++) {
      tasks[i].continueWith(continuation);
    }

    return joinTask;
  }
  Task.all = function () {
    return _joinTasks(arguments, false);
  }
  Task.any = function () {
    return _joinTasks(arguments, true);
  }
  Task.delay = function (timeout) {
    var timerTask = new Task();

    setTimeout(function () {
      _updateTask(timerTask, true);
    }, timeout);

    return timerTask;
  }

  function deferred(result) {
    var task = new Task(result);

    return {
      task: task,
      resolve: function (result) {
        _updateTask(task, result);
      },
      reject: function (error) {
        _updateTask(task, null, (error || new Error()));
      }
    };
  }

  // Culture

  var neutralCulture = {
    name: '',
    // numberFormat
    nf: {
      nan: 'NaN',           // naNSymbol
      neg: '-',             // negativeSign
      pos: '+',             // positiveSign
      negInf: '-Infinity',  // negativeInfinityText
      posInf: 'Infinity',   // positiveInfinityText
      gw: [3],              // numberGroupSizes
      dd: 2,                // numberDecimalDigits
      ds: '.',              // numberDecimalSeparator
      gs: ',',             // numberGroupSeparator

      per: '%',             // percentSymbol
      perGW: [3],           // percentGroupSizes
      perDD: 2,             // percentDecimalDigits
      perDS: '.',           // percentDecimalSeparator
      perGS: ',',           // percentGroupSeparator
      perPP: '{0} %',       // percentPositivePattern
      perNP: '-{0} %',      // percentNegativePattern

      cur: '$',             // currencySymbol
      curGW: [3],           // currencyGroupSizes
      curDD: 2,             // currencyDecimalDigits
      curDS: '.',           // currencyDecimalSeparator
      curGS: ',',           // currencyGroupSeparator
      curNP: '(${0})',      // currencyNegativePattern
      curPP: '${0}'         // currencyPositivePattern
    },
    // dateFormat
    dtf: {
      am: 'AM',             // amDesignator
      pm: 'PM',             // pmDesignator

      ds: '/',              // dateSeparator
      ts: ':',              // timeSeparator

      gmt: 'ddd, dd MMM yyyy HH:mm:ss \'GMT\'',   // gmtDateTimePattern
      uni: 'yyyy-MM-dd HH:mm:ssZ',                // universalDateTimePattern
      sort: 'yyyy-MM-ddTHH:mm:ss',                // sortableDateTimePattern
      dt: 'dddd, MMMM dd, yyyy h:mm:ss tt',       // dateTimePattern

      ld: 'dddd, MMMM dd, yyyy',                  // longDatePattern
      sd: 'M/d/yyyy',                             // shortDatePattern

      lt: 'h:mm:ss tt',                           // longTimePattern
      st: 'h:mm tt',                              // shortTimePattern

      day0: 0,                                    // firstDayOfWeek
      day: ['Sunday', 'Monday', 'Tuesday',
        'Wednesday', 'Thursday',
        'Friday', 'Saturday'],                // dayNames
      sday: ['Sun', 'Mon', 'Tue', 'Wed',
        'Thu', 'Fri', 'Sat'],                // shortDayNames
      mday: ['Su', 'Mo', 'Tu', 'We',
        'Th', 'Fr', 'Sa'],                   // minimizedDayNames

      mon: ['January', 'February', 'March',
        'April', 'May', 'June', 'July',
        'August', 'September', 'October',
        'November', 'December', ''],          // monthNames
      smon: ['Jan', 'Feb', 'Mar', 'Apr',
        'May', 'Jun', 'Jul', 'Aug',
        'Sep', 'Oct', 'Nov', 'Dec', '']      // shortMonthNames
    }
  };

  var currentCulture = { name: 'en-us', dtf: neutralCulture.dtf, nf: neutralCulture.nf };

  // Formatting Helpers

  function _commaFormatNumber(number, groups, decimal, comma) {
    var decimalPart = null;
    var decimalIndex = number.indexOf(decimal);
    if (decimalIndex > 0) {
      decimalPart = number.substr(decimalIndex);
      number = number.substr(0, decimalIndex);
    }

    var negative = number.startsWith('-');
    if (negative) {
      number = number.substr(1);
    }

    var groupIndex = 0;
    var groupSize = groups[groupIndex];
    if (number.length < groupSize) {
      return decimalPart ? number + decimalPart : number;
    }

    var index = number.length;
    var s = '';
    var done = false;
    while (!done) {
      var length = groupSize;
      var startIndex = index - length;
      if (startIndex < 0) {
        groupSize += startIndex;
        length += startIndex;
        startIndex = 0;
        done = true;
      }
      if (!length) {
        break;
      }

      var part = number.substr(startIndex, length);
      if (s.length) {
        s = part + comma + s;
      }
      else {
        s = part;
      }
      index -= length;

      if (groupIndex < groups.length - 1) {
        groupIndex++;
        groupSize = groups[groupIndex];
      }
    }

    if (negative) {
      s = '-' + s;
    }
    return decimalPart ? s + decimalPart : s;
  }

  _formatters['Number'] = function (number, format, culture) {
    var nf = culture.nf;
    var s = '';
    var precision = -1;

    if (format.length > 1) {
      precision = parseInt(format.substr(1));
    }

    var fs = format.charAt(0);
    switch (fs) {
      case 'd': case 'D':
        s = parseInt(Math.abs(number)).toString();
        if (precision != -1) {
          s = padLeft(s, precision, '0');
        }
        if (number < 0) {
          s = '-' + s;
        }
        break;
      case 'x': case 'X':
        s = parseInt(Math.abs(number)).toString(16);
        if (fs == 'X') {
          s = s.toUpperCase();
        }
        if (precision != -1) {
          s = padLeft(s, precision, '0');
        }
        break;
      case 'e': case 'E':
        if (precision == -1) {
          s = number.toExponential();
        }
        else {
          s = number.toExponential(precision);
        }
        if (fs == 'E') {
          s = s.toUpperCase();
        }
        break;
      case 'f': case 'F':
      case 'n': case 'N':
        if (precision == -1) {
          precision = nf.dd;
        }
        s = number.toFixed(precision).toString();
        if (precision && (nf.ds != '.')) {
          var index = s.indexOf('.');
          s = s.substr(0, index) + nf.ds + s.substr(index + 1);
        }
        if ((fs == 'n') || (fs == 'N')) {
          s = _commaFormatNumber(s, nf.gw, nf.ds, nf.gs);
        }
        break;
      case 'c': case 'C':
        if (precision == -1) {
          precision = nf.curDD;
        }
        s = Math.abs(number).toFixed(precision).toString();
        if (precision && (nf.curDS != '.')) {
          var index = s.indexOf('.');
          s = s.substr(0, index) + nf.curDS + s.substr(index + 1);
        }
        s = _commaFormatNumber(s, nf.curGW, nf.curDS, nf.curGS);
        if (number < 0) {
          s = String.format(culture, nf.curNP, s);
        }
        else {
          s = String.format(culture, nf.curPP, s);
        }
        break;
      case 'p': case 'P':
        if (precision == -1) {
          precision = nf.perDD;
        }
        s = (Math.abs(number) * 100.0).toFixed(precision).toString();
        if (precision && (nf.perDS != '.')) {
          var index = s.indexOf('.');
          s = s.substr(0, index) + nf.perDS + s.substr(index + 1);
        }
        s = _commaFormatNumber(s, nf.perGW, nf.perDS, nf.perGS);
        if (number < 0) {
          s = String.format(culture, nf.perNP, s);
        }
        else {
          s = String.format(culture, nf.perPP, s);
        }
        break;
    }

    return s;
  }

  var _dateFormatRE = /'.*?[^\\]'|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z/g;

  _formatters['Date'] = function (dt, format, culture) {
    if (format == 'iso') {
      return dt.toISOString();
    }
    else if (format.charAt(0) == 'i') {
      var fnName = 'String';
      switch (format) {
        case 'id': fnName = 'DateString'; break;
        case 'it': fnName = 'TimeString'; break;
      }
      return culture == neutralCulture ? dt['to' + fnName]() : dt['toLocale' + fnName]();
    }

    var dtf = culture.dtf;

    if (format.length == 1) {
      switch (format) {
        case 'f': format = dtf.ld + ' ' + dtf.st; break;
        case 'F': format = dtf.dt; break;

        case 'd': format = dtf.sd; break;
        case 'D': format = dtf.ld; break;

        case 't': format = dtf.st; break;
        case 'T': format = dtf.lt; break;

        case 'g': format = dtf.sd + ' ' + dtf.st; break;
        case 'G': format = dtf.sd + ' ' + dtf.lt; break;

        case 'R': case 'r':
          dtf = neutralCulture.dtf;
          format = dtf.gmt;
          break;
        case 'u': format = dtf.uni; break;
        case 'U':
          format = dtf.dt;
          dt = new Date(dt.getUTCFullYear(), dt.getUTCMonth(), dt.getUTCDate(),
            dt.getUTCHours(), dt.getUTCMinutes(), dt.getUTCSeconds(), dt.getUTCMilliseconds());
          break;

        case 's': format = dtf.sort; break;
      }
    }

    if (format.charAt(0) == '%') {
      format = format.substr(1);
    }

    var sb = new StringBuilder();

    _dateFormatRE.lastIndex = 0;
    while (true) {
      var index = _dateFormatRE.lastIndex;
      var match = _dateFormatRE.exec(format);

      sb.append(format.slice(index, match ? match.index : format.length));
      if (!match) {
        break;
      }

      var fs = match[0];
      var part = fs;
      switch (fs) {
        case 'dddd':
          part = dtf.day[dt.getDay()];
          break;
        case 'ddd':
          part = dtf.sday[dt.getDay()];
          break;
        case 'dd':
          part = padLeft(dt.getDate().toString(), 2, '0');
          break;
        case 'd':
          part = dt.getDate();
          break;
        case 'MMMM':
          part = dtf.mon[dt.getMonth()];
          break;
        case 'MMM':
          part = dtf.smon[dt.getMonth()];
          break;
        case 'MM':
          part = padLeft((dt.getMonth() + 1).toString(), 2, '0');
          break;
        case 'M':
          part = (dt.getMonth() + 1);
          break;
        case 'yyyy':
          part = dt.getFullYear();
          break;
        case 'yy':
          part = padLeft((dt.getFullYear() % 100).toString(), 2, '0');
          break;
        case 'y':
          part = (dt.getFullYear() % 100);
          break;
        case 'h': case 'hh':
          part = dt.getHours() % 12;
          if (!part) {
            part = '12';
          }
          else if (fs == 'hh') {
            part = padLeft(part.toString(), 2, '0');
          }
          break;
        case 'HH':
          part = padLeft(dt.getHours().toString(), 2, '0');
          break;
        case 'H':
          part = dt.getHours();
          break;
        case 'mm':
          part = padLeft(dt.getMinutes().toString(), 2, '0');
          break;
        case 'm':
          part = dt.getMinutes();
          break;
        case 'ss':
          part = padLeft(dt.getSeconds().toString(), 2, '0');
          break;
        case 's':
          part = dt.getSeconds();
          break;
        case 't': case 'tt':
          part = (dt.getHours() < 12) ? dtf.am : dtf.pm;
          if (fs == 't') {
            part = part.charAt(0);
          }
          break;
        case 'fff':
          part = padLeft(dt.getMilliseconds().toString(), 3, '0');
          break;
        case 'ff':
          part = padLeft(dt.getMilliseconds().toString(), 3).substr(0, 2);
          break;
        case 'f':
          part = padLeft(dt.getMilliseconds().toString(), 3).charAt(0);
          break;
        case 'z':
          part = dt.getTimezoneOffset() / 60;
          part = ((part >= 0) ? '-' : '+') + Math.floor(Math.abs(part));
          break;
        case 'zz': case 'zzz':
          part = dt.getTimezoneOffset() / 60;
          part = ((part >= 0) ? '-' : '+') + padLeft(Math.floor(Math.abs(part)).toString(), 2, '0');
          if (fs == 'zzz') {
            part += dtf.ts + padLeft(Math.abs(dt.getTimezoneOffset() % 60).toString(), 2, '0');
          }
          break;
        default:
          if (part.charAt(0) == '\'') {
            part = part.substr(1, part.length - 2).replace(/\\'/g, '\'');
          }
          break;
      }
      sb.append(part);
    }

    return sb.toString();
  }

  // Type System

  var _modules = {};

  var _classMarker = 'class';
  var _interfaceMarker = 'interface';

  function createType(typeName, typeInfo, typeRegistry) {
    // The typeInfo is either an array of information representing
    // classes and interfaces, or an object representing enums and resources
    // or a function, representing a record factory.

    if (Array.isArray(typeInfo)) {
      var type = typeInfo[0];

      // A class is minimally the class type and an object representing
      // its prototype members, and optionally the base type, and references
      // to interfaces implemented by the class.
      if (typeInfo.length >= 2) {
        var baseType = typeInfo[2];
        if (baseType) {
          // Chain the prototype of the base type (using an anonymous type
          // in case the base class is not creatable, or has side-effects).
          var anonymous = function () { };
          anonymous.prototype = baseType.prototype;
          type.prototype = new anonymous();
          type.prototype.constructor = type;
        }

        // Add the type's prototype members if there are any
        typeInfo[1] && extend(type.prototype, typeInfo[1]);

        type.$base = baseType || Object;
        type.$interfaces = typeInfo.slice(3);
        type.$type = _classMarker;
      }
      else {
        type.$type = _interfaceMarker;
      }

      type.$name = typeName;
      return typeRegistry[typeName] = type;
    }

    return typeInfo;
  }

  function isClass(fn) {
    return fn.$type == _classMarker;
  }

  function isInterface(fn) {
    return fn.$type == _interfaceMarker;
  }

  function typeOf(instance) {
    var ctor;

    // NOTE: We have to catch exceptions because the constructor
    //       cannot be looked up on native COM objects
    try {
      ctor = instance.constructor;
    }
    catch (ex) {
    }
    return ctor || Object;
  }

  function type(s) {
    var nsIndex = s.indexOf('.');
    var ns = nsIndex > 0 ? _modules[s.substr(0, nsIndex)] : globalThis;
    var name = nsIndex > 0 ? s.substr(nsIndex + 1) : s;

    return ns ? ns[name] : null;
  }

  var _typeNames = [
    Number, 'Number',
    String, 'String',
    Boolean, 'Boolean',
    Array, 'Array',
    Date, 'Date',
    RegExp, 'RegExp',
    Function, 'Function'
  ];

  function typeName(type) {
    if (!(type instanceof Function)) {
      type = type.constructor;
    }
    if (type.$name) {
      return type.$name;
    }
    if (type.name) {
      return type.name;
    }
    for (var i = 0, len = _typeNames.length; i < len; i += 2) {
      if (type == _typeNames[i]) {
        return _typeNames[i + 1];
      }
    }
    return 'Object';
  }

  function canAssign(type, otherType) {
    // Checks if the specified type is equal to otherType,
    // or is a parent of otherType

    if ((type == Object) || (type == otherType)) {
      return true;
    }
    if (type.$type == _classMarker) {
      var baseType = otherType.$base;
      while (baseType) {
        if (type == baseType) {
          return true;
        }
        baseType = baseType.$base;
      }
    }
    else if (type.$type == _interfaceMarker) {
      var baseType = otherType;
      while (baseType) {
        var interfaces = baseType.$interfaces;
        if (interfaces && (interfaces.indexOf(type) >= 0)) {
          return true;
        }
        baseType = baseType.$base;
      }
    }
    return false;
  }

  function instanceOf(type, instance) {
    // Checks if the specified instance is of the specified type

    if (!isValue(instance)) {
      return false;
    }

    if ((type == Object) || (instance instanceof type)) {
      return true;
    }

    var instanceType = typeOf(instance);
    return canAssign(type, instanceType);
  }

  function canCast(instance, type) {
    return instanceOf(type, instance);
  }

  function safeCast(instance, type) {
    return instanceOf(type, instance) ? instance : null;
  }

  function ss_module(name, implementation, exports) {
    var registry = _modules[name] = { $name: name };

    if (implementation) {
      for (var typeName in implementation) {
        createType(typeName, implementation[typeName], registry);
      }
    }

    var api = {};
    if (exports) {
      for (var typeName in exports) {
        api[typeName] = createType(typeName, exports[typeName], registry);
      }
    }

    return api;
  }

  function createRegistry(name) {
    var registry = _modules[name] = { $name: name };
    return registry;
  }

  return extend(ss_module('ss', null, {
    IDisposable: [IDisposable],
    IEnumerable: [IEnumerable],
    IEnumerator: [IEnumerator],
    IObserver: [IObserver],
    IApplication: [IApplication],
    IContainer: [IContainer],
    IObjectFactory: [IObjectFactory],
    IEventManager: [IEventManager],
    IInitializable: [IInitializable],
    EventArgs: [EventArgs, {}],
    CancelEventArgs: [CancelEventArgs, {}, EventArgs],
    StringBuilder: [StringBuilder, StringBuilder$],
    Stack: [Stack, Stack$],
    Queue: [Queue, Queue$],
    Observable: [Observable, Observable$],
    ObservableCollection: [ObservableCollection, ObservableCollection$, null, IEnumerable],
    Task: [Task, Task$]
  }), {
    version: '0.8',

    isValue: isValue,
    value: value,
    extend: extend,
    keys: keys,
    keyCount: keyCount,
    keyExists: keyExists,
    clearKeys: clearKeys,
    enumerate: enumerate,
    array: toArray,
    remove: removeItem,
    boolean: parseBoolean,
    regexp: parseRegExp,
    number: parseNumber,
    date: parseDate,
    truncate: truncate,
    now: now,
    today: today,
    compareDates: compareDates,
    error: error,
    string: string,
    emptyString: emptyString,
    whitespace: whitespace,
    format: format,
    compareStrings: compareStrings,
    startsWith: startsWith,
    endsWith: endsWith,
    padLeft: padLeft,
    padRight: padRight,
    trim: trim,
    trimStart: trimStart,
    trimEnd: trimEnd,
    insertString: insertString,
    removeString: removeString,
    replaceString: replaceString,
    bind: bind,
    bindAdd: bindAdd,
    bindSub: bindSub,
    bindExport: bindExport,
    deferred: deferred,

    module: ss_module,
    modules: _modules,
    createRegistry: createRegistry,
    createType: createType,

    isClass: isClass,
    isInterface: isInterface,
    typeOf: typeOf,
    type: type,
    typeName: typeName,
    canCast: canCast,
    safeCast: safeCast,
    canAssign: canAssign,
    instanceOf: instanceOf,

    culture: {
      neutral: neutralCulture,
      current: currentCulture
    },

    fail: fail
  });
}

var ss = _ss();

/***/ }),

/***/ "./esm/star.js":
/*!*********************!*\
  !*** ./esm/star.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Galaxy: () => (/* binding */ Galaxy),
/* harmony export */   Star: () => (/* binding */ Star)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./color.js */ "./esm/color.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./coordinates.js */ "./esm/coordinates.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Information about catalogued objects.








// wwtlib.Star

function Star(input) {
    this.magnitude = 0;
    this.RA = 0;
    this.dec = 0;
    this.BMV = 0;
    this.id = 0;
    this.absoluteMagnitude = 0;
    this.par = 0;
    this.distance = 0;
    var sa = input.split('\t');
    this.id = parseInt(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(sa[0], 'HIP', ''));
    this.dec = parseFloat(sa[3]);
    this.RA = parseFloat(sa[2]) / 15;
    if (sa.length > 4) {
        try {
            if (sa[4].toUpperCase() !== 'NULL' && !!sa[4]) {
                this.magnitude = parseFloat(sa[4]);
            }
        }
        catch ($e1) {
        }
    }
    if (sa.length > 5) {
        try {
            this.BMV = parseFloat(sa[5]);
            this._makeColor(this.BMV);
        }
        catch ($e2) {
        }
    }
    if (sa.length > 6) {
        this.par = parseFloat(sa[6]);
        this._makeDistanceAndMagnitude();
    }
}

var Star$ = {
    get_name: function () {
        return 'HIP' + this.id.toString();
    },

    get_coordinates: function () {
        return _coordinates_js__WEBPACK_IMPORTED_MODULE_4__.Coordinates.fromRaDec(this.RA, this.dec);
    },

    stars: function (input, newish) {
        var sa = input.split('\t');
        this.id = parseInt(sa[0]);
        this.RA = parseFloat(sa[1]) / 15;
        this.dec = parseFloat(sa[2]);
        if (sa.length > 3) {
            try {
                this.magnitude = parseFloat(sa[3]);
            }
            catch ($e1) {
            }
        }
        if (sa.length > 4) {
            try {
                this.col = _color_js__WEBPACK_IMPORTED_MODULE_3__.Color.load(sa[4]);
            }
            catch ($e2) {
            }
        }
    },

    _makeDistanceAndMagnitude: function () {
        this.distance = 1 / (this.par / 1000);
        this.absoluteMagnitude = this.magnitude - 5 * (_baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.logN(this.distance, 10) - 1);
        //Convert to AU
        this.distance *= 206264.806;
    },

    _makeColor: function (bmv) {
        var c = 0xFFFFFFFF;

        if (bmv <= -0.32) {
            c = 0xFFA2B8FF;
        } else if (bmv <= -0.31) {
            c = 0xFFA3B8FF;
        } else if (bmv <= -0.3) {
            c = 0xFFA4BAFF;
        }
        // mistake in original source. Should this be "<= -0.29" or something?
        // else if (bmv <= -0.3) {
        //   c = 0xFFA5BAFF;
        // }
        else if (bmv <= -0.28) {
            c = 0xFFA7BCFF;
        } else if (bmv <= -0.26) {
            c = 0xFFA9BDFF;
        } else if (bmv <= -0.24) {
            c = 0xFFABBFFF;
        } else if (bmv <= -0.2) {
            c = 0xFFAFC2FF;
        } else if (bmv <= -0.16) {
            c = 0xFFB4C6FF;
        } else if (bmv <= -0.14) {
            c = 0xFFB6C8FF;
        } else if (bmv <= -0.12) {
            c = 0xFFB9CAFF;
        } else if (bmv <= -0.09) {
            c = 0xFFBCCDFF;
        } else if (bmv <= -0.06) {
            c = 0xFFC1D0FF;
        } else if (bmv <= 0) {
            c = 0xFFCAD6FF;
        } else if (bmv <= 0.06) {
            c = 0xFFD2DCFF;
        } else if (bmv <= 0.14) {
            c = 0xFFDDE4FF;
        } else if (bmv <= 0.19) {
            c = 0xFFE3E8FF;
        } else if (bmv <= 0.31) {
            c = 0xFFF2F2FF;
        } else if (bmv <= 0.36) {
            c = 0xFFF9F6FF;
        } else if (bmv <= 0.43) {
            c = 0xFFFFF9FC;
        } else if (bmv <= 0.54) {
            c = 0xFFFFF6F3;
        } else if (bmv <= 0.59) {
            c = 0xFFFFF3EB;
        } else if (bmv <= 0.63) {
            c = 0xFFFFF1E7;
        } else if (bmv <= 0.66) {
            c = 0xFFFFEFE1;
        } else if (bmv <= 0.74) {
            c = 0xFFFFEEDD;
        } else if (bmv <= 0.82) {
            c = 0xFFFFEAD5;
        } else if (bmv <= 0.92) {
            c = 0xFFFFE4C4;
        } else if (bmv <= 1.15) {
            c = 0xFFFFFDFB8;
        } else if (bmv <= 1.3) {
            c = 0xFFFFDDB4;
        } else if (bmv <= 1.41) {
            c = 0xFFFFD39D;
        } else if (bmv <= 1.48) {
            c = 0xFFFFCD91;
        } else if (bmv <= 1.52) {
            c = 0xFFFFC987;
        } else if (bmv <= 1.55) {
            c = 0xFFFFC57F;
        } else if (bmv <= 1.56) {
            c = 0xFFFFC177;
        } else if (bmv <= 1.61) {
            c = 0xFFFFBD71;
        } else if (bmv <= 1.72) {
            c = 0xFFFFB866;
        } else if (bmv <= 1.84) {
            c = 0xFFFFB25B;
        } else if (bmv <= 2) {
            c = 0xFFFFAD51;
        }

        this.col = _color_js__WEBPACK_IMPORTED_MODULE_3__.Color.fromInt(c);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Star", [Star, Star$, null]);


// wwtlib.Galaxy

function Galaxy(br) {
    this.RA = 0;
    this.dec = 0;
    this.distance = 0;
    this.type = 0;
    this.eTypeBucket = 0;
    this.size = 5;
    this.sdssID = 0;
    this.sdssID = br.readInt64();
    this.RA = br.readSingle();
    this.dec = br.readSingle();
    this.distance = br.readSingle();
    this.eTypeBucket = br.readByte();
    this.size = br.readSingle();
}

Galaxy._eTypeBuckets = [-3, -0.186, -0.168, -0.158, -0.15, -0.143, -0.137, -0.13, -0.123, -0.115, -0.104, -0.089, -0.068, -0.042, -0.011, 0.024, 0.064, 0.111, 0.169, 0.252, 3];

Galaxy.getEType = function (value) {
    var a = 0;
    var b = Galaxy._eTypeBuckets.length - 1;
    while (b - a > 1) {
        var m = (a + b) / 2;
        if (value > Galaxy._eTypeBuckets[m]) {
            a = m;
        } else {
            b = m;
        }
    }
    return a;
};

var Galaxy$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Galaxy", [Galaxy, Galaxy$, null]);


/***/ }),

/***/ "./esm/tangent_tile.js":
/*!*****************************!*\
  !*** ./esm/tangent_tile.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LatLngEdges: () => (/* binding */ LatLngEdges),
/* harmony export */   TangentTile: () => (/* binding */ TangentTile)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./graphics/webgl_constants.js */ "./esm/graphics/webgl_constants.js");
/* harmony import */ var _render_triangle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./render_triangle.js */ "./esm/render_triangle.js");
/* harmony import */ var _layers_fits_image_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./layers/fits_image.js */ "./esm/layers/fits_image.js");
/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tile.js */ "./esm/tile.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A tile in a pyramid that uses a tangential (gnomonic) projection.











// wwtlib.LatLngEdges

function LatLngEdges() {
    this.latMin = 0;
    this.latMax = 0;
    this.lngMin = 0;
    this.lngMax = 0;
}

var LatLngEdges$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("LatLngEdges", [LatLngEdges, LatLngEdges$, null]);


// wwtlib.TangentTile

function TangentTile(level, x, y, dataset, parent) {
    this._topDown$1 = true;
    _tile_js__WEBPACK_IMPORTED_MODULE_7__.Tile.call(this);
    this.parent = parent;
    this.level = level;
    this.tileX = x;
    this.tileY = y;
    this.dataset = dataset;
    this._topDown$1 = !dataset.get_bottomsUp();
    this.computeBoundingSphere();
}

var TangentTile$ = {
    computeBoundingSphere: function () {
        if (!this._topDown$1) {
            this.computeBoundingSphereBottomsUp();
            return;
        }
        var tileDegrees = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level);
        var latMin = (this.dataset.get_baseTileDegrees() / 2 - (this.tileY) * tileDegrees) + this.dataset.get_offsetY();
        var latMax = (this.dataset.get_baseTileDegrees() / 2 - ((this.tileY + 1)) * tileDegrees) + this.dataset.get_offsetY();
        var lngMin = ((this.tileX) * tileDegrees - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor()) + this.dataset.get_offsetX();
        var lngMax = (((this.tileX + 1)) * tileDegrees - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor()) + this.dataset.get_offsetX();
        var latCenter = (latMin + latMax) / 2;
        var lngCenter = (lngMin + lngMax) / 2;
        this.sphereCenter = this.geoTo3dTan(latCenter, lngCenter);
        this.topLeft = this.geoTo3dTan(latMin, lngMin);
        this.bottomRight = this.geoTo3dTan(latMax, lngMax);
        this.topRight = this.geoTo3dTan(latMin, lngMax);
        this.bottomLeft = this.geoTo3dTan(latMax, lngMin);
        var distVect = this.geoTo3dTan(latMin, lngMin);
        distVect.subtract(this.sphereCenter);
        this.sphereRadius = distVect.length();
    },

    computeBoundingSphereBottomsUp: function () {
        var tileDegrees = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level);
        var latMin = (this.dataset.get_baseTileDegrees() / 2 + ((this.tileY + 1)) * tileDegrees) + this.dataset.get_offsetY();
        var latMax = (this.dataset.get_baseTileDegrees() / 2 + (this.tileY) * tileDegrees) + this.dataset.get_offsetY();
        var lngMin = ((this.tileX) * tileDegrees - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor()) + this.dataset.get_offsetX();
        var lngMax = (((this.tileX + 1)) * tileDegrees - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor()) + this.dataset.get_offsetX();
        this.topLeft = this.geoTo3dTan(latMin, lngMin);
        this.bottomRight = this.geoTo3dTan(latMax, lngMax);
        this.topRight = this.geoTo3dTan(latMin, lngMax);
        this.bottomLeft = this.geoTo3dTan(latMax, lngMin);
    },

    getLatLngEdges: function () {
        var tileDegrees = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level);
        var edges = new LatLngEdges();
        edges.latMin = (this.dataset.get_baseTileDegrees() / 2 - (this.tileY) * tileDegrees) + this.dataset.get_offsetY();
        edges.latMax = (this.dataset.get_baseTileDegrees() / 2 - ((this.tileY + 1)) * tileDegrees) + this.dataset.get_offsetY();
        edges.lngMin = ((this.tileX) * tileDegrees - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor()) + this.dataset.get_offsetX();
        edges.lngMax = (((this.tileX + 1)) * tileDegrees - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor()) + this.dataset.get_offsetX();
        return edges;
    },

    geoTo3dTan: function (lat, lng) {
        lng = -lng;
        var fac1 = this.dataset.get_baseTileDegrees() / 2;
        var factor = Math.tan(fac1 * _tile_js__WEBPACK_IMPORTED_MODULE_7__.Tile.RC);
        return this.dataset.get_matrix().transform(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.create(1, (lat / fac1 * factor), (lng / fac1 * factor)));
    },

    requestImage: function () {
        this.fitsImage = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(this.dataset.get_wcsImage(), _layers_fits_image_js__WEBPACK_IMPORTED_MODULE_6__.FitsImage);
        if (this.fitsImage != null) {
            this.texReady = true;
            this.downloading = false;
            this.errored = this.fitsImage.errored;
            this.requestPending = false;
            (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileCacheRemoveFromQueue)(this.get_key(), true);
            if (_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.useGlVersion2) {
                this.makeTexture();
                this.readyToRender = true;
            }
            else {
                //Cached bitmap for performance reasons
                //Only used in legacy rendering of FITS (WebGL 1.0) inside SkyImageTile
                this.bmp = this.fitsImage.getBitmap();
                this.texture2d = this.bmp.getTexture();
                this.readyToRender = true;
            }
        } else {
            _tile_js__WEBPACK_IMPORTED_MODULE_7__.Tile.prototype.requestImage.call(this);
        }
    },

    createGeometry: function (renderContext) {
        if (this.geometryCreated) {
            return true;
        }
        this.geometryCreated = true;
        for (var i = 0; i < 4; i++) {
            this._renderTriangleLists[i] = [];
        }
        this.globalCenter = this.geoTo3dTan(0, 0);
        var edges = this.getLatLngEdges();
        this.topLeft = this.geoTo3dTan(edges.latMin, edges.lngMin).subtract(this.globalCenter);
        this.bottomRight = this.geoTo3dTan(edges.latMax, edges.lngMax).subtract(this.globalCenter);
        this.topRight = this.geoTo3dTan(edges.latMin, edges.lngMax).subtract(this.globalCenter);
        this.bottomLeft = this.geoTo3dTan(edges.latMax, edges.lngMin).subtract(this.globalCenter);
        var center = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.midPoint(this.topLeft, this.bottomRight);
        var leftCenter = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.midPoint(this.topLeft, this.bottomLeft);
        var rightCenter = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.midPoint(this.topRight, this.bottomRight);
        var topCenter = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.midPoint(this.topLeft, this.topRight);
        var bottomCenter = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.midPoint(this.bottomLeft, this.bottomRight);
        if (renderContext.gl == null) {
            this._renderTriangleLists[0].push(_render_triangle_js__WEBPACK_IMPORTED_MODULE_5__.RenderTriangle.create(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(this.topLeft, 0, 0), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(leftCenter, 0, 0.5), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(topCenter, 0.5, 0), this.texture, this.level));
            this._renderTriangleLists[0].push(_render_triangle_js__WEBPACK_IMPORTED_MODULE_5__.RenderTriangle.create(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(leftCenter, 0, 0.5), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(center, 0.5, 0.5), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(topCenter, 0.5, 0), this.texture, this.level));
            this._renderTriangleLists[1].push(_render_triangle_js__WEBPACK_IMPORTED_MODULE_5__.RenderTriangle.create(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(topCenter, 0.5, 0), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(rightCenter, 1, 0.5), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(this.topRight, 1, 0), this.texture, this.level));
            this._renderTriangleLists[1].push(_render_triangle_js__WEBPACK_IMPORTED_MODULE_5__.RenderTriangle.create(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(topCenter, 0.5, 0), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(center, 0.5, 0.5), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(rightCenter, 1, 0.5), this.texture, this.level));
            this._renderTriangleLists[2].push(_render_triangle_js__WEBPACK_IMPORTED_MODULE_5__.RenderTriangle.create(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(leftCenter, 0, 0.5), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(bottomCenter, 0.5, 1), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(center, 0.5, 0.5), this.texture, this.level));
            this._renderTriangleLists[2].push(_render_triangle_js__WEBPACK_IMPORTED_MODULE_5__.RenderTriangle.create(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(leftCenter, 0, 0.5), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(this.bottomLeft, 0, 1), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(bottomCenter, 0.5, 1), this.texture, this.level));
            this._renderTriangleLists[3].push(_render_triangle_js__WEBPACK_IMPORTED_MODULE_5__.RenderTriangle.create(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(center, 0.5, 0.5), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(this.bottomRight, 1, 1), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(rightCenter, 1, 0.5), this.texture, this.level));
            this._renderTriangleLists[3].push(_render_triangle_js__WEBPACK_IMPORTED_MODULE_5__.RenderTriangle.create(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(center, 0.5, 0.5), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(bottomCenter, 0.5, 1), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(this.bottomRight, 1, 1), this.texture, this.level));
            this.readyToRender = true;
        } else {
            //process vertex list
            this._vertexBuffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
            _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, this._vertexBuffer);
            var f32array = new Float32Array(9 * 5);
            var buffer = f32array;
            var index = 0;
            index = this.addVertex(buffer, index, _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(bottomCenter, 0.5, 1));
            index = this.addVertex(buffer, index, _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(this.bottomLeft, 0, 1));
            index = this.addVertex(buffer, index, _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(this.bottomRight, 1, 1));
            index = this.addVertex(buffer, index, _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(center, 0.5, 0.5));
            index = this.addVertex(buffer, index, _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(leftCenter, 0, 0.5));
            index = this.addVertex(buffer, index, _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(rightCenter, 1, 0.5));
            index = this.addVertex(buffer, index, _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(topCenter, 0.5, 0));
            index = this.addVertex(buffer, index, _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(this.topLeft, 0, 0));
            index = this.addVertex(buffer, index, _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(this.topRight, 1, 0));
            _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, f32array, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.STATIC_DRAW);

            // process index buffers
            for (var i = 0; i < 4; i++) {
                index = 0;
                this.triangleCount = 2;
                var ui16array = new Uint16Array(this.triangleCount * 3);
                var indexArray = ui16array;
                switch (i) {
                    case 0:
                        indexArray[index++] = 7;
                        indexArray[index++] = 4;
                        indexArray[index++] = 6;
                        indexArray[index++] = 4;
                        indexArray[index++] = 3;
                        indexArray[index++] = 6;
                        break;
                    case 1:
                        indexArray[index++] = 6;
                        indexArray[index++] = 5;
                        indexArray[index++] = 8;
                        indexArray[index++] = 6;
                        indexArray[index++] = 3;
                        indexArray[index++] = 5;
                        break;
                    case 2:
                        indexArray[index++] = 4;
                        indexArray[index++] = 0;
                        indexArray[index++] = 3;
                        indexArray[index++] = 4;
                        indexArray[index++] = 1;
                        indexArray[index++] = 0;
                        break;
                    case 3:
                        indexArray[index++] = 3;
                        indexArray[index++] = 2;
                        indexArray[index++] = 5;
                        indexArray[index++] = 3;
                        indexArray[index++] = 0;
                        indexArray[index++] = 2;
                        break;
                }
                this._indexBuffers[i] = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, this._indexBuffers[i]);
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, ui16array, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.STATIC_DRAW);
            }
        }
        return true;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("TangentTile", [TangentTile, TangentTile$, _tile_js__WEBPACK_IMPORTED_MODULE_7__.Tile]);


/***/ }),

/***/ "./esm/tile.js":
/*!*********************!*\
  !*** ./esm/tile.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Tile: () => (/* binding */ Tile)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./graphics/webgl_constants.js */ "./esm/graphics/webgl_constants.js");
/* harmony import */ var _graphics_texture_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./graphics/texture.js */ "./esm/graphics/texture.js");
/* harmony import */ var _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./graphics/shaders.js */ "./esm/graphics/shaders.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./util.js */ "./esm/util.js");
/* harmony import */ var _blend_state_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./blend_state.js */ "./esm/blend_state.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _layers_color_map_container_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./layers/color_map_container.js */ "./esm/layers/color_map_container.js");
/* harmony import */ var _layers_fits_image_js_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./layers/fits_image_js.js */ "./esm/layers/fits_image_js.js");
/* harmony import */ var _layers_fits_image_tile_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./layers/fits_image_tile.js */ "./esm/layers/fits_image_tile.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// The base class for tiles in image tile pyramids.

















// wwtlib.Tile

function Tile() {
    this._renderTriangleLists = new Array(4);
    this._indexBuffers = new Array(4);
    this.level = 0;
    this.tileX = 0;
    this.tileY = 0;
    this.texture = null;
    this.texture2d = null;
    this.isCatalogTile = false;
    this.readyToRender = false;
    this.inViewFrustum = true;
    this.globalCenter = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.zero;
    this.children = [null, null, null, null];
    this.parent = null;
    this.localCenter = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
    this.renderedAtOrBelowGeneration = 0;
    this._demScaleFactor = 6371000;
    this.demIndex = 0;
    this.demAverage = 0;
    this.demReady = false;
    this.texReady = false;
    this.demTile = false;
    this.demDownloading = false;
    this.renderedGeneration = 0;
    this.accomidation = 0;
    this.accessCount = 0;
    this.downloading = false;
    this.geometryCreated = false;
    this._isHdTile = false;
    this.demSize = 33 * 33;
    this._topLeftScreen = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
    this._bottomRightScreen = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
    this._topRightScreen = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
    this._bottomLeftScreen = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
    this.sphereRadius = 0;
    this.sphereCenter = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
    this.radius = 1;
    this.triangleCount = 0;
    this.requestHits = 0;
    this.requestPending = false;
    this.errored = false;
    this._key = null;
    this._tileId = null;
    this._vertexCount = 0;
    this.renderChildPart = null;
    this.renderChildPart = new Array(4);
    for (var i = 0; i < 4; i++) {
        this.renderChildPart[i] = _blend_state_js__WEBPACK_IMPORTED_MODULE_9__.BlendState.create(false, 500);
    }
}

Tile.currentRenderGeneration = 0;
Tile.tileTargetX = -1;
Tile.tileTargetY = -1;
Tile.tileTargetLevel = -1;
Tile.tilesInView = 0;
Tile.trianglesRendered = 0;
Tile.tilesTouched = 0;
Tile.frustumList = null;
(0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileUvMultiple)(1);
Tile.callCount = 0;
Tile.useAccomidation = true;
(0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileDemEnabled)(true);
Tile.maxLevel = 20;
Tile.meshComplexity = 50;
Tile.imageQuality = 50;
Tile.lastDeepestLevel = 0;
Tile.deepestLevel = 0;
Tile.RC = (3.1415927 / 180);

Tile.getFrustumList = function () {
    try {
        return Tile.frustumList;
    }
    catch ($e1) {
        return null;
    }
};

Tile.get_subDivisions = function () {
    return 32;
};

var Tile$ = {
    getIndexBuffer: function (index, accomidation) {
        return this._indexBuffers[index];
    },

    isPointInTile: function (lat, lng) {
        return false;
    },

    getSurfacePointAltitude: function (lat, lng, meters) {
        return 0;
    },

    makeTexture: function () {
        if (_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tilePrepDevice != null) {
            try {
                this.texture2d = _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tilePrepDevice.createTexture();
                _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tilePrepDevice.bindTexture(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TEXTURE_2D, this.texture2d);
                _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tilePrepDevice.texParameteri(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TEXTURE_2D, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TEXTURE_WRAP_S, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.CLAMP_TO_EDGE);
                _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tilePrepDevice.texParameteri(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TEXTURE_2D, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TEXTURE_WRAP_T, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.CLAMP_TO_EDGE);
                if (this.dataset.get_extension().toLowerCase().indexOf('fits') > -1 && _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.useGlVersion2) {
                    _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tilePrepDevice.texImage2D(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TEXTURE_2D, 0, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.R32F, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(this.fitsImage.get_sizeX()), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(this.fitsImage.get_sizeY()), 0, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.RED, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.FLOAT, this.fitsImage.dataUnit);
                    _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tilePrepDevice.texParameteri(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TEXTURE_2D, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TEXTURE_MIN_FILTER, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.NEAREST);
                    _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tilePrepDevice.texParameteri(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TEXTURE_2D, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TEXTURE_MAG_FILTER, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.NEAREST);
                }
                else {
                    var image = this.texture;
                    // Before we bind resize to a power of two if nessesary so we can MIPMAP
                    if ((!_graphics_texture_js__WEBPACK_IMPORTED_MODULE_6__.Texture.isPowerOfTwo(this.texture.height) | !_graphics_texture_js__WEBPACK_IMPORTED_MODULE_6__.Texture.isPowerOfTwo(this.texture.width)) === 1) {
                        var temp = document.createElement('canvas');
                        temp.height = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_6__.Texture.fitPowerOfTwo(image.height);
                        temp.width = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_6__.Texture.fitPowerOfTwo(image.width);
                        var ctx = temp.getContext('2d');
                        ctx.drawImage(image, 0, 0, temp.width, temp.height);
                        //Substitute the resized image
                        image = temp;
                    }
                    _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tilePrepDevice.texImage2D(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TEXTURE_2D, 0, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.RGBA, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.RGBA, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.UNSIGNED_BYTE, image);
                    _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tilePrepDevice.texParameteri(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TEXTURE_2D, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TEXTURE_MIN_FILTER, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.LINEAR_MIPMAP_NEAREST);
                    _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tilePrepDevice.generateMipmap(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TEXTURE_2D);
                }
                _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tilePrepDevice.bindTexture(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TEXTURE_2D, null);
            }
            catch ($e1) {
                this.errored = true;
            }
        }
    },

    addVertex: function (buffer, index, p) {
        buffer[index++] = p.position.x;
        buffer[index++] = p.position.y;
        buffer[index++] = p.position.z;
        buffer[index++] = p.tu;
        buffer[index++] = p.tv;
        return index;
    },

    geoTo3dWithAlt: function (lat, lng, useLocalCenter, rev) {
        lat = Math.max(Math.min(90, lat), -90);
        lng = Math.max(Math.min(180, lng), -180);
        if (!_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileDemEnabled || this.demData == null) {
            return this.geoTo3d(lat, lng, useLocalCenter);
        }
        if (rev) {
            lng -= 180;
        }
        var altitude = this.demData[this.demIndex];
        var retVal = this.geoTo3dWithAltitude(lat, lng, altitude, useLocalCenter);
        return retVal;
    },

    geoTo3dWithAltitude: function (lat, lng, altitude, useLocalCenter) {
        var radius = 1 + (altitude / this.get__demScaleFactor());
        var retVal = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create((Math.cos(lng * Tile.RC) * Math.cos(lat * Tile.RC) * radius), (Math.sin(lat * Tile.RC) * radius), (Math.sin(lng * Tile.RC) * Math.cos(lat * Tile.RC) * radius));
        if (useLocalCenter) {
            retVal.subtract(this.localCenter);
        }
        return retVal;
    },

    get__demScaleFactor: function () {
        return this._demScaleFactor; // / Properties.Settings.Default.TerrainScaling;
    },

    set__demScaleFactor: function (value) {
        this._demScaleFactor = value;
        return value;
    },

    requestImage: function () {
        var $this = this;

        if (this.dataset.get_extension().toLowerCase().indexOf('fits') > -1) {
            if (!this.downloading && !this.readyToRender) {
                this.downloading = true;
                if (_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.useGlVersion2) {
                    this.fitsImage = new _layers_fits_image_tile_js__WEBPACK_IMPORTED_MODULE_13__.FitsImageTile(this.dataset, this.get_URL(), function (wcsImage) {
                        $this.downloading = false;
                        $this.errored = $this.fitsImage.errored;
                        (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileCacheRemoveFromQueue)($this.get_key(), true);
                        if (!$this.fitsImage.errored) {
                            if (!$this.level) {
                                // For a non-HiPS tiled FITS, this is our
                                // mechanism for notifying the layer creator
                                // that the initial FITS data have loaded and
                                // the FitsProperties can be trusted.
                                $this.dataset.get_fitsProperties()._fireMainImageLoaded($this.fitsImage);
                                $this.fitsImage.applyDisplaySettings();
                            }
                            $this.texReady = true;
                            $this.readyToRender = $this.texReady && ($this.demReady || !$this.demTile);
                            $this.requestPending = false;
                            $this.makeTexture();
                        }
                    });
                }
                else {
                    this.fitsImage = _layers_fits_image_js_js__WEBPACK_IMPORTED_MODULE_12__.FitsImageJs.createTiledFits(this.dataset, this.get_URL(), function (wcsImage) {
                        if (!$this.level) {
                            $this.dataset.get_fitsProperties()._fireMainImageLoaded($this.fitsImage);
                        }
                        $this.texReady = true;
                        $this.downloading = false;
                        $this.errored = $this.fitsImage.errored;
                        $this.readyToRender = $this.texReady && ($this.demReady || !$this.demTile);
                        $this.requestPending = false;
                        (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileCacheRemoveFromQueue)($this.get_key(), true);
                        $this.texture2d = wcsImage.getBitmap().getTexture();
                    });
                }
            }
        } else {
            if (this.get_dataset().get_wcsImage() != null) {
                this.texReady = true;
                this.downloading = false;
                this.errored = false;
                this.readyToRender = true;
                this.requestPending = false;
                (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileCacheRemoveFromQueue)(this.get_key(), true);
                return;
            }
            if (!this.downloading && !this.readyToRender) {
                this.downloading = true;
                this.texture = document.createElement('img');
                var xdomimg = this.texture;
                this.texture.addEventListener('load', function (e) {
                    $this.texReady = true;
                    $this.downloading = false;
                    $this.errored = false;
                    $this.readyToRender = $this.texReady && ($this.demReady || !$this.demTile);
                    $this.requestPending = false;
                    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileCacheRemoveFromQueue)($this.get_key(), true);
                    $this.makeTexture();
                }, false);
                this.texture.addEventListener('error', function (e) {
                    if (!$this.texture.hasAttribute('proxyattempt')) {
                        $this.texture.setAttribute('proxyattempt', true);
                        // NOTE: `this.URL` is dynamically generated using
                        // URLHelpers.rewrite(). Say that we request tiles from
                        // example.com, which requires CORS proxying. Say also
                        // that this callback is called for a request to a tile
                        // that should in fact be available. If a different
                        // request fails before this callback is called,
                        // activateProxy() will be called on the example.com
                        // domain, making it so that `this.URL` in the following
                        // call goes through the proxy, making it so that
                        // `new_url` is null, making it so that this tile is
                        // erroneously marked as failed when it should not be.
                        // The solution: make sure to check proxy activation
                        // with the *original* request URL, `texture.Src`, not
                        // the one that may have been updated, `this.URL`.
                        var new_url = _url_helpers_js__WEBPACK_IMPORTED_MODULE_10__.URLHelpers.singleton.activateProxy($this.texture.src);
                        if (new_url != null) {
                            // null => don't bother: we know that the proxy won't help
                            $this.texture.src = new_url;
                            return;
                        }
                    }
                    $this.downloading = false;
                    $this.readyToRender = false;
                    $this.errored = true;
                    $this.requestPending = false;
                    (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileCacheRemoveFromQueue)($this.get_key(), true);
                }, false);
                xdomimg.crossOrigin = 'anonymous';
                this.texture.src = this.get_URL();
            }
        }
    },

    createDemFromParent: function () {
        return false;
    },

    _loadDemData: function () {
        if (this.demFile == null) {
            return this.createDemFromParent();
        }
        this.demData = this.demFile;
        if (this.demFile.length !== 1089 && this.demFile.length !== 513) {
            return this.createDemFromParent();
        }
        var total = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.demData);
        while ($enum1.moveNext()) {
            var fv = $enum1.current;
            total += fv;
        }
        this.demAverage /= this.demData.length;
        return true;
    },

    requestDem: function () {
        var $this = this;

        if (!this.readyToRender && !this.demDownloading) {
            this.demTile = true;
            this.demDownloading = true;
            Tile.callCount++;
            var xhr = new XMLHttpRequest();
            xhr.addEventListener('load', function (e) {
                $this.demReady = true;
                $this.demDownloading = false;
                $this.readyToRender = $this.texReady && ($this.demReady || !$this.demTile);
                $this.requestPending = false;
                try {
                    $this.demFile = new Float32Array(xhr.response);
                }
                catch ($e1) {
                }
                (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileCacheRemoveFromQueue)($this.get_key(), true);
            }, false);
            xhr.addEventListener('error', function (e) {
                $this.demDownloading = false;
                $this.demReady = false;
                $this.readyToRender = false;
                $this.errored = true;
                $this.requestPending = false;
                (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileCacheRemoveFromQueue)($this.get_key(), true);
            }, false);
            xhr.open('GET', this.get_demURL(), true);
            xhr.responseType = 'arraybuffer';
            xhr.send();
        }
    },

    draw3D: function (renderContext, opacity) {
        this.renderedGeneration = Tile.currentRenderGeneration;
        Tile.tilesTouched++;
        this.accessCount = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.inc_tileCacheAccessID)();
        if (this.errored) {
            return false;
        }
        var xMax = 2;
        this.inViewFrustum = true;
        if (!this.readyToRender) {
            (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileCacheAddTileToQueue)(this);
            return false;
        }
        var transitioning = false;
        var childIndex = 0;
        var yOffset = 0;
        if (this.dataset.get_mercator() || this.dataset.get_bottomsUp()) {
            yOffset = 1;
        }
        var xOffset = 0;
        var anythingToRender = false;
        var childRendered = false;
        for (var y1 = 0; y1 < 2; y1++) {
            for (var x1 = 0; x1 < xMax; x1++) {
                if (this.level < this.dataset.get_levels()) {
                    // make children
                    if (this.children[childIndex] == null) {
                        this.children[childIndex] = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileCacheGetTile)(this.level + 1, this.tileX * 2 + ((x1 + xOffset) % 2), this.tileY * 2 + ((y1 + yOffset) % 2), this.dataset, this);
                    }
                    if (this.children[childIndex].isTileInFrustum(renderContext.get_frustum())) {
                        this.inViewFrustum = true;
                        if (this.children[childIndex].isTileBigEnough(renderContext)) {
                            this.renderChildPart[childIndex].set_targetState(!this.children[childIndex].draw3D(renderContext, opacity));
                            if (this.renderChildPart[childIndex].get_targetState()) {
                                childRendered = true;
                            }
                        }
                        else {
                            this.renderChildPart[childIndex].set_targetState(true);
                        }
                    }
                    else {
                        this.renderChildPart[childIndex].set_targetState(this.renderChildPart[childIndex].set_state(false));
                    }
                    if (this.renderChildPart[childIndex].get_targetState() !== this.renderChildPart[childIndex].get_state()) {
                        transitioning = true;
                    }
                }
                else {
                    this.renderChildPart[childIndex].set_state(true);
                }
                if (!!this.renderChildPart[childIndex].get_state()) {
                    anythingToRender = true;
                }
                childIndex++;
            }
        }
        if (childRendered || anythingToRender) {
            this.renderedAtOrBelowGeneration = Tile.currentRenderGeneration;
            if (this.parent != null) {
                this.parent.renderedAtOrBelowGeneration = this.renderedAtOrBelowGeneration;
            }
        }
        if (!anythingToRender) {
            return true;
        }
        if (!this.createGeometry(renderContext)) {
            return false;
        }
        Tile.tilesInView++;
        this.accomidation = this._computeAccomidation();
        for (var i = 0; i < 4; i++) {
            if (this.renderChildPart[i].get_targetState()) {
                this.renderPart(renderContext, i, (opacity / 100), false);
            }
        }
        return true;
    },

    _computeAccomidation: function () {
        var accVal = 0;
        if (!Tile.useAccomidation) {
            return 0;
        }
        var top = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileCacheGetCachedTile)(this.level, this.tileX, this.tileY + 1, this.dataset, this);
        if (top == null || top.renderedAtOrBelowGeneration < Tile.currentRenderGeneration - 2) {
            accVal += 1;
        }
        var right = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileCacheGetCachedTile)(this.level, this.tileX + 1, this.tileY, this.dataset, this);
        if (right == null || right.renderedAtOrBelowGeneration < Tile.currentRenderGeneration - 2) {
            accVal += 2;
        }
        var bottom = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileCacheGetCachedTile)(this.level, this.tileX, this.tileY - 1, this.dataset, this);
        if (bottom == null || bottom.renderedAtOrBelowGeneration < Tile.currentRenderGeneration - 2) {
            accVal += 4;
        }
        var left = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileCacheGetCachedTile)(this.level, this.tileX - 1, this.tileY, this.dataset, this);
        if (left == null || left.renderedAtOrBelowGeneration < Tile.currentRenderGeneration - 2) {
            accVal += 8;
        }
        return accVal;
    },

    renderPart: function (renderContext, part, opacity, combine) {
        if (_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tilePrepDevice == null) {
            var lighting = renderContext.lighting && renderContext.get_sunPosition() != null;
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._renderTriangleLists[part]);
            while ($enum1.moveNext()) {
                var tri = $enum1.current;
                tri.opacity = opacity;
                if (lighting) {
                    // transform normal by WV
                    var norm = tri.normal.copy();
                    renderContext.get_world().multiplyVector(norm);
                    norm.normalize();

                    // Dot product from sun angle
                    var light = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.dot(norm, renderContext.get_sunPosition());
                    if (light < 0) {
                        light = 0;
                    }
                    else {
                        light = Math.min(1, (light * 1));
                    }

                    // set lighting
                    tri.lighting = light;
                }
                else {
                    tri.lighting = 1;
                }
                tri.draw(renderContext.device, renderContext.WVP);
            }
        } else {
            if (_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.useGlVersion2 && this.fitsImage != null) {
                _layers_color_map_container_js__WEBPACK_IMPORTED_MODULE_11__.ColorMapContainer.bindColorMapTexture(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tilePrepDevice, this.dataset.get_fitsProperties().colorMapName);
                _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__.FitsShader.min = this.dataset.get_fitsProperties().lowerCut;
                _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__.FitsShader.max = this.dataset.get_fitsProperties().upperCut;
                _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__.FitsShader.containsBlanks = this.dataset.get_fitsProperties().containsBlanks;
                _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__.FitsShader.blankValue = this.dataset.get_fitsProperties().blankValue;
                _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__.FitsShader.bZero = this.dataset.get_fitsProperties().bZero;
                _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__.FitsShader.bScale = this.dataset.get_fitsProperties().bScale;
                _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__.FitsShader.scaleType = this.dataset.get_fitsProperties().scaleType;
                _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__.FitsShader.transparentBlack = this.dataset.get_fitsProperties().transparentBlack;
                _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__.FitsShader.use(renderContext, this._vertexBuffer, this.getIndexBuffer(part, this.accomidation), this.texture2d, opacity, false, this.globalCenter);
            }
            else {
                _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_7__.TileShader.use(renderContext, this._vertexBuffer, this.getIndexBuffer(part, this.accomidation), this.texture2d, opacity, false, this.globalCenter);
            }
            renderContext.gl.drawElements(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.TRIANGLES, this.triangleCount * 3, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_5__.WEBGL.UNSIGNED_SHORT, 0);
        }
    },

    cleanUp: function (removeFromParent) {
        this.readyToRender = false;
        this.demData = null;
        this.demFile = null;
        this.demDownloading = false;
        this.texReady = false;
        this.demReady = false;
        this.errored = false;
        if (this.texture != null) {
            this.texture = null;
        }
        this._renderTriangleLists = new Array(4);
        this.geometryCreated = false;
        if (removeFromParent && this.parent != null) {
            this.parent.removeChild(this);
            this.parent = null;
        }
        if (_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tilePrepDevice != null) {
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._indexBuffers);
            while ($enum1.moveNext()) {
                var buf = $enum1.current;
                _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tilePrepDevice.deleteBuffer(buf);
            }
            this._indexBuffers = new Array(4);
            if (this._vertexBuffer != null) {
                _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tilePrepDevice.deleteBuffer(this._vertexBuffer);
                this._vertexBuffer = null;
            }
            if (this.texture2d != null) {
                _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tilePrepDevice.deleteTexture(this.texture2d);
                this.texture2d = null;
            }
        }
    },

    removeChild: function (child) {
        for (var i = 0; i < 4; i++) {
            if (this.children[i] === child) {
                this.children[i] = null;
                return;
            }
        }
    },

    createGeometry: function (renderContext) {
        if (_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileDemEnabled && this.demReady && this.demData == null) {
            if (!this._loadDemData()) {
                return false;
            }
        }
        if (_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileDemEnabled && this.demData == null) {
            return false;
        }
        this.readyToRender = true;
        return true;
    },

    calcSphere: function () {
        var corners = new Array(4);
        corners[0] = this.topLeft;
        corners[1] = this.bottomRight;
        corners[2] = this.topRight;
        corners[3] = this.bottomLeft;
        var result = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.ConvexHull.findEnclosingSphere(corners);
        this.sphereCenter = result.center;
        this.sphereRadius = result.radius;
    },

    isTileBigEnough: function (renderContext) {
        if (this.level > 1) {
            // Test for tile scale in view.
            var wvp = renderContext.WVP;
            wvp._transformTo(this.topLeft, this._topLeftScreen);
            wvp._transformTo(this.bottomRight, this._bottomRightScreen);
            wvp._transformTo(this.topRight, this._topRightScreen);
            wvp._transformTo(this.bottomLeft, this._bottomLeftScreen);
            var top = this._topLeftScreen;
            top.subtract(this._topRightScreen);
            var topLength = top.length();
            var bottom = this._bottomLeftScreen;
            bottom.subtract(this._bottomRightScreen);
            var bottomLength = bottom.length();
            var left = this._bottomLeftScreen;
            left.subtract(this._topLeftScreen);
            var leftLength = left.length();
            var right = this._bottomRightScreen;
            right.subtract(this._topRightScreen);
            var rightLength = right.length();
            var lengthMax = Math.max(Math.max(rightLength, leftLength), Math.max(bottomLength, topLength));
            if (lengthMax < 300) {  // was 220
                return false;
            }
            else {
                Tile.deepestLevel = (this.level > Tile.deepestLevel) ? this.level : Tile.deepestLevel;
            }
        }
        return true;
    },

    isTileInFrustum: function (frustum) {
        if (this.level < 2 && (!this.dataset.get_projection() || this.dataset.get_projection() === 3)) {
            // return true;
        }
        this.inViewFrustum = false;
        var centerV4 = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector4d(this.sphereCenter.x, this.sphereCenter.y, this.sphereCenter.z, 1);
        for (var i = 0; i < 6; i++) {
            if (frustum[i].dot(centerV4) < -this.sphereRadius) {
                return false;
            }
        }
        this.inViewFrustum = true;
        return true;
    },

    get_sphereRadius: function () {
        return this.sphereRadius;
    },

    get_sphereCenter: function () {
        return this.sphereCenter;
    },

    geoTo3d: function (lat, lng, useLocalCenter) {
        if (this.dataset.get_dataSetType() === 3) {
            var retVal = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(-(Math.cos(lng * Tile.RC) * Math.cos(lat * Tile.RC) * this.radius), (Math.sin(lat * Tile.RC) * this.radius), (Math.sin(lng * Tile.RC) * Math.cos(lat * Tile.RC) * this.radius));
            return retVal;
        } else {
            lng -= 180;
            var retVal = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create((Math.cos(lng * Tile.RC) * Math.cos(lat * Tile.RC) * this.radius), (Math.sin(lat * Tile.RC) * this.radius), (Math.sin(lng * Tile.RC) * Math.cos(lat * Tile.RC) * this.radius));
            return retVal;
        }
    },

    onCreateVertexBuffer: function (sender, e) { },

    get_dataset: function () {
        return this.dataset;
    },

    set_dataset: function (value) {
        this.dataset = value;
        return value;
    },

    get_key: function () {
        if (this._key == null) {
            this._key = (0,_util_js__WEBPACK_IMPORTED_MODULE_8__.getTileKey)(this.dataset, this.level, this.tileX, this.tileY, this.parent);
        }
        return this._key;
    },

    // URL parameters
    //
    //{0} ImageSetID
    //{1} level
    //{2} x tile id
    //{3} y tile id
    //{4} quadtree address (VE style)
    //{5} quadtree address (Google maps style)
    //{6} top left corner RA
    //{7} top left corner Dec
    //{8} bottom right corner RA
    //{9} bottom right corner dec
    //{10} bottom left corner RA
    //{11} bottom left corner dec
    //{12} top right corner RA
    //{13} top right corner dec
    //{X} - Tile X value
    //{Y} - Tile Y value
    //{L} - Tile Level
    //{Q} - Quad Key ID
    //{S} - Last Digit of Quadkey
    get_URL: function () {
        var rewritten_url = _url_helpers_js__WEBPACK_IMPORTED_MODULE_10__.URLHelpers.singleton.rewrite(this.dataset.get_url(), 0);
        var returnUrl = rewritten_url;
        if (rewritten_url.indexOf('{1}') > -1) {
            // Old style URL
            if (!this.dataset.get_projection() && !_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this.dataset.get_quadTreeTileMap())) {
                returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format(rewritten_url, this.getServerID(), this.getTileID());
                if (returnUrl.indexOf('virtualearth.net') > -1) {
                    returnUrl += '&n=z';
                }
                return returnUrl;
            }
            else {
                return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format(rewritten_url, this.dataset.get_imageSetID(), this.level, this.tileX, this.tileY);
            }
        }
        returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '{X}', this.tileX.toString());
        returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '{Y}', this.tileY.toString());
        returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '{L}', this.level.toString());
        var hash = 0;
        if (returnUrl.indexOf('{S:0}') > -1) {
            hash = 0;
            returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '{S:0}', '{S}');
        }
        if (returnUrl.indexOf('{S:1}') > -1) {
            hash = 1;
            returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '{S:1}', '{S}');
        }
        if (returnUrl.indexOf('{S:2}') > -1) {
            hash = 2;
            returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '{S:2}', '{S}');
        }
        if (returnUrl.indexOf('{S:3}') > -1) {
            hash = 3;
            returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '{S:3}', '{S}');
        }
        if (returnUrl.indexOf('a{S}') > -1) {
            returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, 'a{S}', 'r{S}');
        }
        if (returnUrl.indexOf('h{S}') > -1) {
            returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, 'h{S}', 'r{S}');
        }
        if (returnUrl.indexOf('//r{S}.ortho.tiles.virtualearth.net') > -1) {
            returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '//r{S}.ortho.tiles.virtualearth.net', '//ecn.t{S}.tiles.virtualearth.net');
        }
        var id = this.getTileID();
        var server = '';
        if (!id.length) {
            server = hash.toString();
        } else {
            server = id.substr(id.length - 1, 1);
        }
        returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '{Q}', id);
        returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '{S}', server);
        if (returnUrl.indexOf('virtualearth.net') > -1) {
            returnUrl += '&n=z';
        }
        return returnUrl;
    },

    get_demURL: function () {
        var rewritten_url = _url_helpers_js__WEBPACK_IMPORTED_MODULE_10__.URLHelpers.singleton.rewrite(this.dataset.get_demUrl(), 0);
        if (!this.dataset.get_projection() && !_data_globals_js__WEBPACK_IMPORTED_MODULE_4__.freestandingMode) {
            var baseUrl = _url_helpers_js__WEBPACK_IMPORTED_MODULE_10__.URLHelpers.singleton.coreStaticUrl('wwtweb/demtile.aspx?q={0},{1},{2},M');
            if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(rewritten_url)) {
                baseUrl = rewritten_url;
            }
        }
        if (rewritten_url.indexOf('{1}') > -1) {
            return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format(rewritten_url + '&new', this.level, this.tileX, this.tileY);
        }
        var returnUrl = rewritten_url;
        returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '{X}', this.tileX.toString());
        returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '{Y}', this.tileY.toString());
        returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '{L}', this.level.toString());
        var hash = 0;
        if (returnUrl.indexOf('{S:0}') > -1) {
            hash = 0;
            returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '{S:0}', '{S}');
        }
        if (returnUrl.indexOf('{S:1}') > -1) {
            hash = 1;
            returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '{S:1}', '{S}');
        }
        if (returnUrl.indexOf('{S:2}') > -1) {
            hash = 2;
            returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '{S:2}', '{S}');
        }
        if (returnUrl.indexOf('{S:3}') > -1) {
            hash = 3;
            returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '{S:3}', '{S}');
        }
        var id = this.getTileID();
        var server = '';
        if (!id.length) {
            server = hash.toString();
        } else {
            server = id.substr(id.length - 1, 1);
        }
        returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '{Q}', id);
        returnUrl = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(returnUrl, '{S}', server);
        return returnUrl;
    },

    getServerID: function () {
        var server = (this.tileX & 1) + ((this.tileY & 1) << 1);
        return server;
    },

    getTileID: function () {
        if (this._tileId != null) {
            return this._tileId;
        }
        var netLevel = this.level;
        var netX = this.tileX;
        var netY = this.tileY;
        if (this.dataset.get_projection() === 1) {
            netLevel++;
        }
        var tileMap = this.dataset.get_quadTreeTileMap();
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(tileMap)) {
            var sb = new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.StringBuilder();
            for (var i = netLevel; i > 0; --i) {
                var mask = 1 << (i - 1);
                var val = 0;
                if (!!(netX & mask)) {
                    val = 1;
                }
                if (!!(netY & mask)) {
                    val += 2;
                }
                sb.append(tileMap.substr(val, 1));
            }
            this._tileId = sb.toString();
            return this._tileId;
        } else {
            this._tileId = '0';
            return this._tileId;
        }
    },

    get_vertexCount: function () {
        return this._vertexCount;
    },

    set_vertexCount: function (value) {
        this._vertexCount = value;
        return value;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Tile", [Tile, Tile$, null]);


/***/ }),

/***/ "./esm/tile_cache.js":
/*!***************************!*\
  !*** ./esm/tile_cache.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TileCache: () => (/* binding */ TileCache)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util.js */ "./esm/util.js");
/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tile.js */ "./esm/tile.js");
/* harmony import */ var _imageset_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./imageset.js */ "./esm/imageset.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// The cache of tiles and associated download queue.










// wwtlib.TileCache

function TileCache() { }

TileCache._queue = {};
TileCache._tiles = {};
TileCache.openThreads = 8;
TileCache.readyToRenderCount = 0;
TileCache.maxTileCacheSize = 800;
TileCache.maxReadyToRenderSize = 200;
TileCache._maxTotalToPurge = 0;

TileCache.get_queueCount = function () {
    return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyCount(TileCache._queue);
};

// This name is no longer used internally, but preserve it
// for API compatibility.
TileCache.getTile = function (level, x, y, dataset, parent) {
    var retTile = null;
    var tileKey = (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.getTileKey)(dataset, level, x, y, parent);
    if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(TileCache._tiles, tileKey)) {
        retTile = _imageset_js__WEBPACK_IMPORTED_MODULE_6__.Imageset.getNewTile(dataset, level, x, y, parent);
        if (retTile != null) {
            TileCache._tiles[tileKey] = retTile;
        }
    }
    else {
        retTile = TileCache._tiles[tileKey];
    }
    var p = 0;
    return retTile;
};

(0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileCacheGetTile)(TileCache.getTile);

// This name is no longer used internally, but preserve it
// for API compatibility.
TileCache.getCachedTile = function (level, x, y, dataset, parent) {
    if (level < dataset.get_baseLevel()) {
        return null;
    }
    var retTile = null;
    var tileKey = (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.getTileKey)(dataset, level, x, y, parent);
    try {
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(TileCache._tiles, tileKey)) {
            return null;
        } else {
            retTile = TileCache._tiles[tileKey];
        }
    }
    catch ($e1) { }
    return retTile;
};

(0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileCacheGetCachedTile)(TileCache.getCachedTile);

TileCache.getReadyToRenderTileCount = function () {
    var notReadyCullList = [];
    var readyCullList = [];
    try {
        try {
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(TileCache._tiles));
            while ($enum1.moveNext()) {
                var key = $enum1.current;
                var tile = TileCache._tiles[key];
                if (tile.renderedGeneration < (_tile_js__WEBPACK_IMPORTED_MODULE_5__.Tile.currentRenderGeneration - 10) && !(tile.requestPending || tile.downloading)) {
                    if (tile.readyToRender) {
                        readyCullList.push(tile);
                    }
                    else {
                        notReadyCullList.push(tile);
                    }
                }
            }
        }
        catch ($e2) {
        }
        return readyCullList.length;
    }
    catch ($e3) {
        return -1;
    }
};

TileCache.processQueue = function (renderContext) {
    while (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyCount(TileCache._queue) > 0 && TileCache.openThreads > 0) {
        var minDistance = 100000;
        var overlayTile = false;
        var maxKey = null;
        var level = 1000;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(TileCache._queue));
        while ($enum1.moveNext()) {
            var key = $enum1.current;
            var t = TileCache._queue[key];
            if (!t.requestPending && t.inViewFrustum) {
                var vectTemp = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.makeCopy(t.get_sphereCenter());
                vectTemp._transformByMatrics(renderContext.get_world());
                if (renderContext.space) {
                    vectTemp.subtract(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(0, 0, -1));
                }
                else {
                    vectTemp.subtract(renderContext.cameraPosition);
                }
                var distTemp = Math.max(0, vectTemp.length() - t.get_sphereRadius());
                var thisIsOverlay = (t.get_dataset().get_projection() === _imageset_js__WEBPACK_IMPORTED_MODULE_6__.ProjectionType.tangent) || (t.get_dataset().get_projection() === _imageset_js__WEBPACK_IMPORTED_MODULE_6__.ProjectionType.skyImage);
                if (distTemp < minDistance && (!overlayTile || thisIsOverlay)) {
                    minDistance = distTemp;
                    maxKey = t.get_key();
                    level = t.level;
                    overlayTile = thisIsOverlay;
                }
            }
        }
        if (maxKey != null) {
            var workTile = TileCache._queue[maxKey];
            workTile.requestPending = true;
            TileCache.openThreads--;
            if (TileCache.openThreads < 0) {
                TileCache.openThreads = 0;
            }
            workTile.requestImage();
            if (workTile.get_dataset().get_elevationModel()) {
                workTile.requestDem();
            }
        } else {
            return;
        }
    }
};

// This name is no longer used internally, but preserve it
// for API compatibility.
TileCache.addTileToQueue = function (tile) {
    var hitValue;
    hitValue = 256;
    if (!tile.downloading && !tile.readyToRender) {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(TileCache._queue, tile.get_key())) {
            TileCache._queue[tile.get_key()].requestHits += hitValue;
        } else {
            tile.requestHits = hitValue;
            TileCache._queue[tile.get_key()] = tile;
        }
    }
    return true;
};

(0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileCacheAddTileToQueue)(TileCache.addTileToQueue);

// This name is no longer used internally, but preserve it
// for API compatibility.
TileCache.removeFromQueue = function (key, complete) {
    if (complete) {
        var workTile = TileCache._queue[key];
        if (workTile != null) {
            workTile.requestPending = false;
            delete TileCache._queue[workTile.get_key()];
        }
        TileCache.openThreads++;
    }
    delete TileCache._queue[key];
};

(0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_tileCacheRemoveFromQueue)(TileCache.removeFromQueue);

TileCache.clearCache = function () {
    _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.clearKeys(TileCache._tiles);
};

TileCache.purgeQueue = function () {
    _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.clearKeys(TileCache._queue);
};

TileCache.purgeLRU = function () {
    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyCount(TileCache._tiles) < TileCache.maxReadyToRenderSize) {
        return;
    }
    var notReadyCullList = [];
    var readyCullList = [];
    try {
        try {
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(TileCache._tiles));
            while ($enum1.moveNext()) {
                var key = $enum1.current;
                var tile = TileCache._tiles[key];
                if (tile.renderedGeneration < (_tile_js__WEBPACK_IMPORTED_MODULE_5__.Tile.currentRenderGeneration - 10) && !(tile.requestPending || tile.downloading)) {
                    if (tile.readyToRender) {
                        readyCullList.push(tile);
                    }
                    else {
                        notReadyCullList.push(tile);
                    }
                }
            }
        }
        catch ($e2) {
        }
        TileCache.readyToRenderCount = readyCullList.length;
        if (readyCullList.length > TileCache.maxReadyToRenderSize) {
            readyCullList.sort(function (t1, t2) {
                return (t2.accessCount < t1.accessCount) ? 1 : ((t2.accessCount === t1.accessCount) ? 0 : -1);
            });
            var totalToPurge = readyCullList.length - TileCache.maxReadyToRenderSize;
            var $enum3 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(readyCullList);
            while ($enum3.moveNext()) {
                var tile = $enum3.current;
                if (totalToPurge < 1) {
                    break;
                }
                tile.cleanUp(false);
                totalToPurge--;
            }
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyCount(TileCache._tiles) < TileCache.maxTileCacheSize) {
            return;
        }
        if (notReadyCullList.length > TileCache.maxTileCacheSize) {
            notReadyCullList.sort(function (t1, t2) {
                return (t2.accessCount < t1.accessCount) ? 1 : ((t2.accessCount === t1.accessCount) ? 0 : -1);
            });
            var totalToPurge = notReadyCullList.length - TileCache.maxTileCacheSize;
            if (totalToPurge > 20) {
                totalToPurge = 20;
            }
            var $enum4 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(notReadyCullList);
            while ($enum4.moveNext()) {
                var tile = $enum4.current;
                if (totalToPurge < 1) {
                    break;
                }
                tile.cleanUp(true);
                delete TileCache._tiles[tile.get_key()];
                totalToPurge--;
            }
        }
    }
    catch ($e5) { }
    finally { }
    return;
};

// Age things in queue. If they are not visible they will go away in time
TileCache.decimateQueue = function () {
    var list = [];
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(TileCache._queue));
    while ($enum1.moveNext()) {
        var key = $enum1.current;
        var t = TileCache._queue[key];
        if (!t.requestPending) {
            t.requestHits = t.requestHits / 2;
            try {
                if (t.requestHits < 2) {
                    list.push(t);
                }
                else if (!t.inViewFrustum) {
                    list.push(t);
                }
            }
            catch ($e2) {
            }
        }
    }
    var $enum3 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(list);
    while ($enum3.moveNext()) {
        var t = $enum3.current;
        delete TileCache._queue[t.get_key()];
    }
};

var TileCache$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("TileCache", [TileCache, TileCache$, null]);



/***/ }),

/***/ "./esm/toast_tile.js":
/*!***************************!*\
  !*** ./esm/toast_tile.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ToastTile: () => (/* binding */ ToastTile)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./graphics/webgl_constants.js */ "./esm/graphics/webgl_constants.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./coordinates.js */ "./esm/coordinates.js");
/* harmony import */ var _render_triangle_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./render_triangle.js */ "./esm/render_triangle.js");
/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tile.js */ "./esm/tile.js");
/* harmony import */ var _triangle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./triangle.js */ "./esm/triangle.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./util.js */ "./esm/util.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A tile in a pyramid that uses a TOAST projection.













// wwtlib.ToastTile

function ToastTile() {
    this._topDown$1 = true;
    this.backslash = false;
    this._vertexList$1 = null;
    this._childTriangleList$1 = null;
    this._subDivisionLevel$1 = 4;
    this._subDivided$1 = false;
    _tile_js__WEBPACK_IMPORTED_MODULE_7__.Tile.call(this);
}

ToastTile.slashIndexBuffer = new Array(64);
ToastTile.backSlashIndexBuffer = new Array(64);
ToastTile.rootIndexBuffer = new Array(4);

ToastTile._cloneArray$1 = function (indexArray) {
    var count = indexArray.length;
    var ui16array = new Uint16Array(count);
    var indexArrayNew = ui16array;
    for (var i = 0; i < count; i++) {
        indexArrayNew[i] = indexArray[i];
    }
    return indexArrayNew;
};

ToastTile.create = function (level, xc, yc, dataset, parent) {
    var temp = new ToastTile();
    temp.parent = parent;
    temp.level = level;
    temp.tileX = xc;
    temp.tileY = yc;
    temp.dataset = dataset;
    temp._topDown$1 = !dataset.get_bottomsUp();
    if (temp.tileX !== xc) {
        alert('bad');
    }
    if (!!dataset.get_meanRadius()) {
        temp.set__demScaleFactor(dataset.get_meanRadius());
    }
    else {
        if (!dataset.get_dataSetType()) {
            temp.set__demScaleFactor(6371000);
        } else {
            temp.set__demScaleFactor(3396010);
        }
    }
    temp.computeBoundingSphere();
    return temp;
};

var ToastTile$ = {
    computeBoundingSphere: function () {
        this._initializeGrids$1();
        this.topLeft = this.bounds[0 + 3 * 0].position.copy();
        this.bottomRight = this.bounds[2 + 3 * 2].position.copy();
        this.topRight = this.bounds[2 + 3 * 0].position.copy();
        this.bottomLeft = this.bounds[0 + 3 * 2].position.copy();
        this.calcSphere();
    },

    getIndexBuffer: function (index, accomidation) {
        if (!this.level) {
            return ToastTile.rootIndexBuffer[index];
        }
        if (this.backslash) {
            return ToastTile.backSlashIndexBuffer[index * 16 + accomidation];
        } else {
            return ToastTile.slashIndexBuffer[index * 16 + accomidation];
        }
    },
    _processIndexBuffer$1: function (indexArray, part) {
        if (!this.level) {
            ToastTile.rootIndexBuffer[part] = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
            _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, ToastTile.rootIndexBuffer[part]);
            _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, indexArray, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.STATIC_DRAW);
            return;
        }
        for (var a = 0; a < 16; a++) {
            var partArray = ToastTile._cloneArray$1(indexArray);
            this._processAccomindations$1(partArray, a);
            if (this.backslash) {
                ToastTile.backSlashIndexBuffer[part * 16 + a] = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, ToastTile.backSlashIndexBuffer[part * 16 + a]);
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, partArray, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.STATIC_DRAW);
            }
            else {
                ToastTile.slashIndexBuffer[part * 16 + a] = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, ToastTile.slashIndexBuffer[part * 16 + a]);
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ELEMENT_ARRAY_BUFFER, partArray, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.STATIC_DRAW);
            }
        }
    },
    _processAccomindations$1: function (indexArray, a) {
        var map = {};
        var gridMap = {};
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(indexArray);
        while ($enum1.moveNext()) {
            var index = $enum1.current;
            var vert = this._vertexList$1[index];
            var arrayX = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((vert.tu * 16 + 0.5));
            var arrayY = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((vert.tv * 16 + 0.5));
            var ii = (arrayY << 8) + arrayX;
            if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(gridMap, ii)) {
                gridMap[ii] = index;
            }
        }
        var sections = 16;
        if ((a & 1) === 1) {
            for (var x = 1; x < sections; x += 2) {
                var y = sections;
                var key = (y << 8) + x;
                var val = (y << 8) + x + 1;
                if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(gridMap, key)) {
                    map[gridMap[key]] = gridMap[val];
                }
            }
        }
        if ((a & 2) === 2) {
            for (var y = 1; y < sections; y += 2) {
                var x = sections;
                var key = (y << 8) + x;
                var val = ((y + 1) << 8) + x;
                if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(gridMap, key)) {
                    map[gridMap[key]] = gridMap[val];
                }
            }
        }
        if ((a & 4) === 4) {
            for (var x = 1; x < sections; x += 2) {
                var y = 0;
                var key = (y << 8) + x;
                var val = (y << 8) + x + 1;
                if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(gridMap, key)) {
                    map[gridMap[key]] = gridMap[val];
                }
            }
        }
        if ((a & 8) === 8) {
            for (var y = 1; y < sections; y += 2) {
                var x = 0;
                var key = (y << 8) + x;
                var val = ((y + 1) << 8) + x;
                if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(gridMap, key)) {
                    map[gridMap[key]] = gridMap[val];
                }
            }
        }
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyCount(map)) {
            //nothing to process
            return;
        }
        for (var i = 0; i < indexArray.length; i++) {
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(map, indexArray[i])) {
                indexArray[i] = map[indexArray[i]];
            }
        }
    },

    calculateFullSphere: function (list) {
        var result = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.ConvexHull.findEnclosingSphere(list);
        this.sphereCenter = result.center;
        this.sphereRadius = result.radius;
    },

    isPointInTile: function (lat, lng) {
        if (!this.level) {
            return true;
        }
        if (this.level === 1) {
            if ((lng >= 0 && lng <= 90) && (!this.tileX && this.tileY === 1)) {
                return true;
            }
            if ((lng > 90 && lng <= 180) && (this.tileX === 1 && this.tileY === 1)) {
                return true;
            }
            if ((lng < 0 && lng >= -90) && (!this.tileX && !this.tileY)) {
                return true;
            }
            if ((lng < -90 && lng >= -180) && (this.tileX === 1 && !this.tileY)) {
                return true;
            }
            return false;
        }
        if (!this.demReady || this.demData == null) {
            return false;
        }
        var testPoint = _coordinates_js__WEBPACK_IMPORTED_MODULE_5__.Coordinates.geoTo3dDouble(-lat, lng);
        var top = this._isLeftOfHalfSpace$1(this.topLeft.copy(), this.topRight.copy(), testPoint);
        var right = this._isLeftOfHalfSpace$1(this.topRight.copy(), this.bottomRight.copy(), testPoint);
        var bottom = this._isLeftOfHalfSpace$1(this.bottomRight.copy(), this.bottomLeft.copy(), testPoint);
        var left = this._isLeftOfHalfSpace$1(this.bottomLeft.copy(), this.topLeft.copy(), testPoint);
        if (top && right && bottom && left) {
            return true;
        }
        return false;
    },
    _isLeftOfHalfSpace$1: function (pntA, pntB, pntTest) {
        pntA.normalize();
        pntB.normalize();
        var cross = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.cross(pntA, pntB);
        var dot = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.dot(cross, pntTest);
        return dot < 0;
    },

    getSurfacePointAltitude: function (lat, lng, meters) {
        if (this.level < _tile_js__WEBPACK_IMPORTED_MODULE_7__.Tile.lastDeepestLevel) {
            for (var ii = 0; ii < 4; ii++) {
                var child = this.children[ii];
                if (child != null) {
                    if (child.isPointInTile(lat, lng)) {
                        var retVal = child.getSurfacePointAltitude(lat, lng, meters);
                        if (!!retVal) {
                            return retVal;
                        }
                        else {
                            break;
                        }
                    }
                }
            }
        }
        _tile_js__WEBPACK_IMPORTED_MODULE_7__.Tile.tileTargetLevel = this.level;
        _tile_js__WEBPACK_IMPORTED_MODULE_7__.Tile.tileTargetX = this.tileX;
        _tile_js__WEBPACK_IMPORTED_MODULE_7__.Tile.tileTargetY = this.tileY;
        var testPoint = _coordinates_js__WEBPACK_IMPORTED_MODULE_5__.Coordinates.geoTo3dDouble(-lat, lng);
        testPoint = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.subtractVectors(new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d(), testPoint);
        var uv = _util_js__WEBPACK_IMPORTED_MODULE_9__.DistanceCalc.getUVFromInnerPoint(this.topLeft.copy(), this.topRight.copy(), this.bottomLeft.copy(), this.bottomRight.copy(), testPoint.copy());

        // Get 4 samples and interpolate
        var uud = Math.max(0, Math.min(16, (uv.x * 16)));
        var vvd = Math.max(0, Math.min(16, (uv.y * 16)));
        var uu = Math.max(0, Math.min(15, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((uv.x * 16))));
        var vv = Math.max(0, Math.min(15, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((uv.y * 16))));
        var ha = uud - uu;
        var va = vvd - vv;

        if (this.demArray != null) {
            // 4 nearest neighbors
            var ul = this.demArray[uu + 17 * vv];
            var ur = this.demArray[(uu + 1) + 17 * vv];
            var ll = this.demArray[uu + 17 * (vv + 1)];
            var lr = this.demArray[(uu + 1) + 17 * (vv + 1)];
            var top = ul * (1 - ha) + ha * ur;
            var bottom = ll * (1 - ha) + ha * lr;
            var val = top * (1 - va) + va * bottom;
            return val / this.get__demScaleFactor();
        }
        return this.demAverage / this.get__demScaleFactor();
    },
    _initializeGrids$1: function () {
        this._vertexList$1 = [];
        this._childTriangleList$1 = new Array(4);
        this._childTriangleList$1[0] = [];
        this._childTriangleList$1[1] = [];
        this._childTriangleList$1[2] = [];
        this._childTriangleList$1[3] = [];
        this.bounds = new Array(9);
        if (this.level > 0) {
            if (this.parent == null) {
                this.parent = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileCacheGetTile)(this.level - 1, this.tileX / 2, this.tileY / 2, this.dataset, null);
            }
            var parent = this.parent;
            var xIndex = this.tileX % 2;
            var yIndex = this.tileY % 2;
            if (this.level > 1) {
                this.backslash = parent.backslash;
            }
            else {
                this.backslash = (xIndex === 1 ^ yIndex === 1) === 1;
            }
            this.bounds[0 + 3 * 0] = parent.bounds[xIndex + 3 * yIndex].copy();
            this.bounds[1 + 3 * 0] = this._midpoint$1(parent.bounds[xIndex + 3 * yIndex], parent.bounds[xIndex + 1 + 3 * yIndex]);
            this.bounds[2 + 3 * 0] = parent.bounds[xIndex + 1 + 3 * yIndex].copy();
            this.bounds[0 + 3 * 1] = this._midpoint$1(parent.bounds[xIndex + 3 * yIndex], parent.bounds[xIndex + 3 * (yIndex + 1)]);
            if (this.backslash) {
                this.bounds[1 + 3 * 1] = this._midpoint$1(parent.bounds[xIndex + 3 * yIndex], parent.bounds[xIndex + 1 + 3 * (yIndex + 1)]);
            }
            else {
                this.bounds[1 + 3 * 1] = this._midpoint$1(parent.bounds[xIndex + 1 + 3 * yIndex], parent.bounds[xIndex + 3 * (yIndex + 1)]);
            }
            this.bounds[2 + 3 * 1] = this._midpoint$1(parent.bounds[xIndex + 1 + 3 * yIndex], parent.bounds[xIndex + 1 + 3 * (yIndex + 1)]);
            this.bounds[0 + 3 * 2] = parent.bounds[xIndex + 3 * (yIndex + 1)].copy();
            this.bounds[1 + 3 * 2] = this._midpoint$1(parent.bounds[xIndex + 3 * (yIndex + 1)], parent.bounds[xIndex + 1 + 3 * (yIndex + 1)]);
            this.bounds[2 + 3 * 2] = parent.bounds[xIndex + 1 + 3 * (yIndex + 1)].copy();
            this.bounds[0 + 3 * 0].tu = 0 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[0 + 3 * 0].tv = 0 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[1 + 3 * 0].tu = 0.5 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[1 + 3 * 0].tv = 0 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[2 + 3 * 0].tu = 1 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[2 + 3 * 0].tv = 0 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[0 + 3 * 1].tu = 0 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[0 + 3 * 1].tv = 0.5 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[1 + 3 * 1].tu = 0.5 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[1 + 3 * 1].tv = 0.5 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[2 + 3 * 1].tu = 1 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[2 + 3 * 1].tv = 0.5 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[0 + 3 * 2].tu = 0 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[0 + 3 * 2].tv = 1 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[1 + 3 * 2].tu = 0.5 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[1 + 3 * 2].tv = 1 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[2 + 3 * 2].tu = 1 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this.bounds[2 + 3 * 2].tv = 1 * _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple;
            this._vertexList$1.push(this.bounds[0 + 3 * 0]);
            this._vertexList$1.push(this.bounds[1 + 3 * 0]);
            this._vertexList$1.push(this.bounds[2 + 3 * 0]);
            this._vertexList$1.push(this.bounds[0 + 3 * 1]);
            this._vertexList$1.push(this.bounds[1 + 3 * 1]);
            this._vertexList$1.push(this.bounds[2 + 3 * 1]);
            this._vertexList$1.push(this.bounds[0 + 3 * 2]);
            this._vertexList$1.push(this.bounds[1 + 3 * 2]);
            this._vertexList$1.push(this.bounds[2 + 3 * 2]);
            if (this.backslash) {
                this._childTriangleList$1[0].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(4, 1, 0));
                this._childTriangleList$1[0].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(3, 4, 0));
                this._childTriangleList$1[1].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(5, 2, 1));
                this._childTriangleList$1[1].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(4, 5, 1));
                this._childTriangleList$1[2].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(7, 4, 3));
                this._childTriangleList$1[2].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(6, 7, 3));
                this._childTriangleList$1[3].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(8, 5, 4));
                this._childTriangleList$1[3].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(7, 8, 4));
            }
            else {
                this._childTriangleList$1[0].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(3, 1, 0));
                this._childTriangleList$1[0].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(4, 1, 3));
                this._childTriangleList$1[1].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(4, 2, 1));
                this._childTriangleList$1[1].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(5, 2, 4));
                this._childTriangleList$1[2].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(6, 4, 3));
                this._childTriangleList$1[2].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(7, 4, 6));
                this._childTriangleList$1[3].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(7, 5, 4));
                this._childTriangleList$1[3].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(8, 5, 7));
            }
        } else {
            this.bounds[0 + 3 * 0] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.create(0, -1, 0, 0, 0);
            this.bounds[1 + 3 * 0] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.create(0, 0, 1, 0.5, 0);
            this.bounds[2 + 3 * 0] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.create(0, -1, 0, 1, 0);
            this.bounds[0 + 3 * 1] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.create(-1, 0, 0, 0, 0.5);
            this.bounds[1 + 3 * 1] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.create(0, 1, 0, 0.5, 0.5);
            this.bounds[2 + 3 * 1] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.create(1, 0, 0, 1, 0.5);
            this.bounds[0 + 3 * 2] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.create(0, -1, 0, 0, 1);
            this.bounds[1 + 3 * 2] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.create(0, 0, -1, 0.5, 1);
            this.bounds[2 + 3 * 2] = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.create(0, -1, 0, 1, 1);
            this._vertexList$1.push(this.bounds[0 + 3 * 0]);
            this._vertexList$1.push(this.bounds[1 + 3 * 0]);
            this._vertexList$1.push(this.bounds[2 + 3 * 0]);
            this._vertexList$1.push(this.bounds[0 + 3 * 1]);
            this._vertexList$1.push(this.bounds[1 + 3 * 1]);
            this._vertexList$1.push(this.bounds[2 + 3 * 1]);
            this._vertexList$1.push(this.bounds[0 + 3 * 2]);
            this._vertexList$1.push(this.bounds[1 + 3 * 2]);
            this._vertexList$1.push(this.bounds[2 + 3 * 2]);
            this._childTriangleList$1[0].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(3, 1, 0));
            this._childTriangleList$1[0].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(4, 1, 3));
            this._childTriangleList$1[1].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(5, 2, 1));
            this._childTriangleList$1[1].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(4, 5, 1));
            this._childTriangleList$1[2].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(7, 4, 3));
            this._childTriangleList$1[2].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(6, 7, 3));
            this._childTriangleList$1[3].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(7, 5, 4));
            this._childTriangleList$1[3].push(_triangle_js__WEBPACK_IMPORTED_MODULE_8__.Triangle.create(8, 5, 7));
        }
    },
    _midpoint$1: function (positionNormalTextured, positionNormalTextured_2) {
        var a1 = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector3d.lerp(positionNormalTextured.position, positionNormalTextured_2.position, 0.5);
        var a1uv = _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.lerp(_double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.create(positionNormalTextured.tu, positionNormalTextured.tv), _double3d_js__WEBPACK_IMPORTED_MODULE_3__.Vector2d.create(positionNormalTextured_2.tu, positionNormalTextured_2.tv), 0.5);
        a1.normalize();
        return _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture.createPos(a1, a1uv.x, a1uv.y);
    },

    createGeometry: function (renderContext) {
        if (this.geometryCreated) {
            return true;
        }
        this.geometryCreated = true;
        _tile_js__WEBPACK_IMPORTED_MODULE_7__.Tile.prototype.createGeometry.call(this, renderContext);
        if (!this._subDivided$1) {
            if (this._vertexList$1 == null) {
                this._initializeGrids$1();
            }
            if (_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tileUvMultiple == 256) {
                if (!this.dataset.get_dataSetType() || this.dataset.get_dataSetType() === 1) {
                    this._subDivisionLevel$1 = Math.min(5, Math.max(0, 5 - this.level));
                }
                else {
                    this._subDivisionLevel$1 = Math.min(5, Math.max(0, 5 - this.level));
                }
            }
            else {
                if (this.demTile && this.level > 1) {
                    this.demArray = new Array(17 * 17);
                    this.demSize = 17 * 17;
                    if (this.backslash) {
                        if (ToastTile._backslashYIndex$1 == null) {
                            this._tempBackslashYIndex$1 = new Array(this.demSize);
                            this._tempBackslashXIndex$1 = new Array(this.demSize);
                        }
                    }
                    else {
                        if (ToastTile._slashYIndex$1 == null) {
                            this._tempSlashYIndex$1 = new Array(this.demSize);
                            this._tempSlashXIndex$1 = new Array(this.demSize);
                        }
                    }
                }
            }
            for (var i = 0; i < 4; i++) {
                var count = this._subDivisionLevel$1;
                while (count-- > 1) {
                    var newList = [];
                    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._childTriangleList$1[i]);
                    while ($enum1.moveNext()) {
                        var tri = $enum1.current;
                        tri.subDivide(newList, this._vertexList$1);
                    }
                    this._childTriangleList$1[i] = newList;
                }
            }
            if (renderContext.gl == null) {
                for (var i = 0; i < 4; i++) {
                    this._renderTriangleLists[i] = [];
                    var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._childTriangleList$1[i]);
                    while ($enum2.moveNext()) {
                        var tri = $enum2.current;
                        var p1 = this._vertexList$1[tri.c];
                        var p2 = this._vertexList$1[tri.b];
                        var p3 = this._vertexList$1[tri.a];
                        this._renderTriangleLists[i].push(_render_triangle_js__WEBPACK_IMPORTED_MODULE_6__.RenderTriangle.create(p1, p2, p3, this.texture, this.level));
                    }
                }
            }
            else {
                this._vertexBuffer = _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.createBuffer();
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bindBuffer(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, this._vertexBuffer);
                var f32array = new Float32Array(this._vertexList$1.length * 5);
                var buffer = f32array;
                var index = 0;
                var $enum3 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._vertexList$1);
                while ($enum3.moveNext()) {
                    var pt = $enum3.current;
                    if (this.demTile) {
                        index = this.addVertex(buffer, index, this._getMappedVertex(pt));
                        this.demIndex++;
                    }
                    else {
                        index = this.addVertex(buffer, index, pt);
                    }
                }
                if (this.demTile) {
                    if (this.backslash) {
                        if (this._tempBackslashXIndex$1 != null) {
                            ToastTile._backslashXIndex$1 = this._tempBackslashXIndex$1;
                            ToastTile._backslashYIndex$1 = this._tempBackslashYIndex$1;
                            this._tempBackslashXIndex$1 = null;
                            this._tempBackslashYIndex$1 = null;
                        }
                    }
                    else {
                        if (this._tempSlashYIndex$1 != null) {
                            ToastTile._slashXIndex$1 = this._tempSlashXIndex$1;
                            ToastTile._slashYIndex$1 = this._tempSlashYIndex$1;
                            this._tempSlashYIndex$1 = null;
                            this._tempSlashXIndex$1 = null;
                        }
                    }
                }
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.tilePrepDevice.bufferData(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.ARRAY_BUFFER, f32array, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_4__.WEBGL.STATIC_DRAW);
                for (var i = 0; i < 4; i++) {
                    this.triangleCount = this._childTriangleList$1[i].length;
                    if (this.getIndexBuffer(i, 0) == null) {
                        var ui16array = new Uint16Array(this.triangleCount * 3);
                        var indexArray = ui16array;
                        index = 0;
                        var $enum4 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._childTriangleList$1[i]);
                        while ($enum4.moveNext()) {
                            var tri = $enum4.current;
                            indexArray[index++] = tri.c;
                            indexArray[index++] = tri.b;
                            indexArray[index++] = tri.a;
                        }
                        this._processIndexBuffer$1(indexArray, i);
                    }
                }
            }
            this._subDivided$1 = true;
        }
        return true;
    },

    _getMappedVertex: function (vert) {
        var vertOut = new _double3d_js__WEBPACK_IMPORTED_MODULE_3__.PositionTexture();
        var latLng = _coordinates_js__WEBPACK_IMPORTED_MODULE_5__.Coordinates.cartesianToSpherical2(vert.position);
        if (latLng.get_lng() < -180) {
            latLng.set_lng(latLng.get_lng() + 360);
        }
        if (latLng.get_lng() > 180) {
            latLng.set_lng(latLng.get_lng() - 360);
        }
        if (this.level > 1) {
            var arrayX = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((vert.tu * 16 + 0.5));
            var arrayY = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((vert.tv * 16 + 0.5));
            this.demArray[arrayX + arrayY * 17] = this.demData[this.demIndex];
            if (this.backslash) {
                if (this._tempBackslashYIndex$1 != null) {
                    this._tempBackslashXIndex$1[this.demIndex] = arrayX;
                    this._tempBackslashYIndex$1[this.demIndex] = arrayY;
                }
            }
            else {
                if (this._tempSlashYIndex$1 != null) {
                    this._tempSlashXIndex$1[this.demIndex] = arrayX;
                    this._tempSlashYIndex$1[this.demIndex] = arrayY;
                }
            }
        }
        var pos = this.geoTo3dWithAlt(latLng.get_lat(), latLng.get_lng(), false, false);
        vertOut.tu = vert.tu;
        vertOut.tv = vert.tv;
        pos.subtract(this.localCenter);
        vertOut.position = pos;
        return vertOut;
    },

    cleanUp: function (removeFromParent) {
        _tile_js__WEBPACK_IMPORTED_MODULE_7__.Tile.prototype.cleanUp.call(this, removeFromParent);
        if (this._vertexList$1 != null) {
            this._vertexList$1 = null;
        }
        if (this._childTriangleList$1 != null) {
            this._childTriangleList$1 = null;
        }
        this._subDivided$1 = false;
        this.demArray = null;
    },
    _getDemSample$1: function (xc, yc) {
        return this.demArray[(16 - yc) * 17 + xc];
    },

    createDemFromParent: function () {
        var parent = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(this.parent, ToastTile);
        if (parent == null) {
            return false;
        }
        var offsetX = (((this.tileX % 2) === 1) ? 8 : 0);
        var offsetY = ((!(this.tileY % 2)) ? 8 : 0);
        this.demArray = new Array(17 * 17);

        // Interpolate across
        for (var yy1 = 0; yy1 < 17; yy1 += 2) {
            var copy = true;
            for (var xx1 = 0; xx1 < 17; xx1++) {
                if (copy) {
                    this.demArray[(16 - yy1) * 17 + xx1] = parent._getDemSample$1((xx1 / 2) + offsetX, (yy1 / 2) + offsetY);
                }
                else {
                    this.demArray[(16 - yy1) * 17 + xx1] = ((parent._getDemSample$1((xx1 / 2) + offsetX, (yy1 / 2) + offsetY) + parent._getDemSample$1(((xx1 / 2) + offsetX) + 1, (yy1 / 2) + offsetY)) / 2);
                }
                copy = !copy;
            }
        }

        // Interpolate down
        for (var yy2 = 1; yy2 < 17; yy2 += 2) {
            for (var xx2 = 0; xx2 < 17; xx2++) {
                this.demArray[(16 - yy2) * 17 + xx2] = ((this._getDemSample$1(xx2, yy2 - 1) + this._getDemSample$1(xx2, yy2 + 1)) / 2);
            }
        }

        // Convert the dem array back to the arranged DEM list thu slash/backslash mapping tables
        this.demData = new Array(this.demSize);
        for (var i = 0; i < this.demSize; i++) {
            if (this.backslash) {
                this.demData[i] = this.demArray[ToastTile._backslashXIndex$1[i] + ToastTile._backslashYIndex$1[i] * 17];
            }
            else {
                this.demData[i] = this.demArray[ToastTile._slashXIndex$1[i] + ToastTile._slashYIndex$1[i] * 17];
            }
            this.demAverage += this.demData[i];
        }

        // Get Average value for new DemData table
        this.demAverage /= this.demData.length;
        this.demReady = true;
        return true;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ToastTile", [ToastTile, ToastTile$, _tile_js__WEBPACK_IMPORTED_MODULE_7__.Tile]);


/***/ }),

/***/ "./esm/tour.js":
/*!*********************!*\
  !*** ./esm/tour.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Tour: () => (/* binding */ Tour)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interfaces.js */ "./esm/interfaces.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./url_helpers.js */ "./esm/url_helpers.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Top-level information about a tour.








// wwtlib.Tour

function Tour() {
    this.userLevel = 0;
    this.classification = 0;
    this.averageRating = 0;
    this.lengthInSecs = 0;
    this._thumbnailUrlField = '';
}

Tour._fromXml = function (child) {
    var temp = new Tour();
    if (child.attributes.getNamedItem('ID') != null) {
        temp.id = child.attributes.getNamedItem('ID').nodeValue;
    }
    if (child.attributes.getNamedItem('TourUrl') != null) {
        temp._tourUrl = child.attributes.getNamedItem('TourUrl').nodeValue;
    }
    if (child.attributes.getNamedItem('Title') != null) {
        temp.title = child.attributes.getNamedItem('Title').nodeValue;
    }
    if (child.attributes.getNamedItem('Description') != null) {
        temp.description = child.attributes.getNamedItem('Description').nodeValue;
    }
    if (child.attributes.getNamedItem('Classification') != null) {
        temp.classification = _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('Classification', child.attributes.getNamedItem('Classification').nodeValue);
    }
    if (child.attributes.getNamedItem('AuthorEmail') != null) {
        temp.authorEmail = child.attributes.getNamedItem('AuthorEmail').nodeValue;
    }
    if (child.attributes.getNamedItem('Author') != null) {
        temp.author = child.attributes.getNamedItem('Author').nodeValue;
    }
    if (child.attributes.getNamedItem('AuthorURL') != null) {
        temp.authorURL = child.attributes.getNamedItem('AuthorURL').nodeValue;
    }
    if (child.attributes.getNamedItem('AuthorImageUrl') != null) {
        temp.authorImageUrl = child.attributes.getNamedItem('AuthorImageUrl').nodeValue;
    }
    if (child.attributes.getNamedItem('AverageRating') != null) {
        temp.averageRating = parseFloat(child.attributes.getNamedItem('AverageRating').nodeValue);
    }
    if (child.attributes.getNamedItem('LengthInSecs') != null) {
        temp.lengthInSecs = parseFloat(child.attributes.getNamedItem('LengthInSecs').nodeValue);
    }
    if (child.attributes.getNamedItem('OrganizationUrl') != null) {
        temp.organizationUrl = child.attributes.getNamedItem('OrganizationUrl').nodeValue;
    }
    if (child.attributes.getNamedItem('OrganizationName') != null) {
        temp.organizationName = child.attributes.getNamedItem('OrganizationName').nodeValue;
    }
    if (child.attributes.getNamedItem('RelatedTours') != null) {
        temp.relatedTours = child.attributes.getNamedItem('RelatedTours').nodeValue;
    }
    if (child.attributes.getNamedItem('Keywords') != null) {
        temp.keywords = child.attributes.getNamedItem('Keywords').nodeValue;
    }
    if (child.attributes.getNamedItem('ThumbnailUrl') != null) {
        temp.set_thumbnailUrl(child.attributes.getNamedItem('ThumbnailUrl').nodeValue);
    }
    return temp;
};

var Tour$ = {
    get_name: function () {
        return this.title;
    },

    get_thumbnail: function () {
        return this._thumbnail;
    },

    set_thumbnail: function (value) {
        this._thumbnail = value;
        return value;
    },

    get_thumbnailUrl: function () {
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._thumbnailUrlField)) {
            return this._thumbnailUrlField;
        } else if (_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.freestandingMode) {
            return _url_helpers_js__WEBPACK_IMPORTED_MODULE_4__.URLHelpers.singleton.engineAssetUrl('thumb_star.jpg');
        }
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format(_url_helpers_js__WEBPACK_IMPORTED_MODULE_4__.URLHelpers.singleton.coreStaticUrl('wwtweb/GetTourThumbnail.aspx?GUID={0}'), this.id);
    },

    set_thumbnailUrl: function (value) {
        this._thumbnailUrlField = value;
        return value;
    },

    get_tourUrl: function () {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._tourUrl) && !_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.freestandingMode) {
            return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format(_url_helpers_js__WEBPACK_IMPORTED_MODULE_4__.URLHelpers.singleton.coreStaticUrl('wwtweb/GetTour.aspx?GUID={0}'), this.id);
        } else {
            return this._tourUrl;
        }
    },

    set_tourUrl: function (value) {
        this._tourUrl = value;
        return value;
    },

    get_bounds: function () {
        return this._bounds;
    },

    set_bounds: function (value) {
        this._bounds = value;
        return value;
    },

    get_isImage: function () {
        return false;
    },

    get_isTour: function () {
        return true;
    },

    get_isFolder: function () {
        return false;
    },

    get_isCloudCommunityItem: function () {
        return false;
    },

    get_readOnly: function () {
        return false;
    },

    get_children: function () {
        return [];
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Tour", [Tour, Tour$, null, _interfaces_js__WEBPACK_IMPORTED_MODULE_3__.IThumbnail]);


/***/ }),

/***/ "./esm/tours/file_cabinet.js":
/*!***********************************!*\
  !*** ./esm/tours/file_cabinet.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FileCabinet: () => (/* binding */ FileCabinet),
/* harmony export */   FileEntry: () => (/* binding */ FileEntry)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _utilities_xml_text_writer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utilities/xml_text_writer.js */ "./esm/utilities/xml_text_writer.js");
/* harmony import */ var _web_file_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../web_file.js */ "./esm/web_file.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A simple XML-based file archive format.








// wwtlib.FileEntry

function FileEntry(filename, size) {
    this.size = 0;
    this.offset = 0;
    this.filename = filename;
    this.size = size;
}

var FileEntry$ = {
    toString: function () {
        return this.filename;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("FileEntry", [FileEntry, FileEntry$, null]);


// wwtlib.FileCabinet

function FileCabinet() {
    this.tempDirectory = '';
    this._currentOffset = 0;
    this._packageID = '';
    this.url = '';
    this.clearFileList();
}

FileCabinet.fromUrl = function (url, callMe) {
    var temp = new FileCabinet();
    temp.url = url;
    temp._callMe = callMe;
    temp._webFile = new _web_file_js__WEBPACK_IMPORTED_MODULE_4__.WebFile(url);
    temp._webFile.responseType = 'blob';
    temp._webFile.onStateChange = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_loadCabinet', temp);
    temp._webFile.send();
    return temp;
};

var FileCabinet$ = {
    get_packageID: function () {
        return this._packageID;
    },

    set_packageID: function (value) {
        this._packageID = value;
        return value;
    },

    addFile: function (filename, data) {
        if (data == null) {
            return;
        }
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this._fileDirectory, filename)) {
            var fe = new FileEntry(filename, data.size);
            fe.offset = this._currentOffset;
            fe.blob = data;
            this.fileList.push(fe);
            this._fileDirectory[filename] = fe;
            this._currentOffset += fe.size;
        }
    },

    clearFileList: function () {
        if (this.fileList == null) {
            this.fileList = [];
        }
        if (this._fileDirectory == null) {
            this._fileDirectory = {};
        }
        this.fileList.length = 0;
        _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.clearKeys(this._fileDirectory);
        this._currentOffset = 0;
    },

    packageFiles: function () {
        var xmlWriter = new _utilities_xml_text_writer_js__WEBPACK_IMPORTED_MODULE_3__.XmlTextWriter();
        xmlWriter.formatting = 1;
        xmlWriter._writeProcessingInstruction('xml', "version='1.0' encoding='UTF-8'");
        xmlWriter._writeStartElement('FileCabinet');
        xmlWriter._writeAttributeString('HeaderSize', '0x0BADFOOD');
        xmlWriter._writeStartElement('Files');
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.fileList);
        while ($enum1.moveNext()) {
            var entry = $enum1.current;
            xmlWriter._writeStartElement('File');
            xmlWriter._writeAttributeString('Name', entry.filename);
            xmlWriter._writeAttributeString('Size', entry.size.toString());
            xmlWriter._writeAttributeString('Offset', entry.offset.toString());
            xmlWriter._writeEndElement();
        }
        xmlWriter._writeEndElement();
        xmlWriter._writeFullEndElement();
        xmlWriter._close();
        var data = xmlWriter.body;
        var blob = new Blob([data]);
        var sizeText = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('0x{0:x8}', blob.size);
        data = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(data, '0x0BADFOOD', sizeText);
        blob = new Blob([data]);
        var blobs = [];
        blobs.push(blob);
        var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.fileList);

        // add the blobs to array to append in order
        while ($enum2.moveNext()) {
            var entry = $enum2.current;
            blobs.push(entry.blob);
        }
        var cabBlob = new Blob(blobs, { type: 'application/x-wtt' });
        return cabBlob;
    },

    _loadCabinet: function () {
        var $this = this;

        if (this._webFile.get_state() === 2) {
            alert(this._webFile.get_message());
        } else if (this._webFile.get_state() === 1) {
            this._mainBlob = this._webFile.getBlob();
            var chunck = new FileReader();
            chunck.onloadend = function (e) {
                var offset = $this._getSize(chunck.result);
                var header = new FileReader();
                header.onloadend = function (ee) {
                    var data = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(header.result, String);
                    var xParser = new DOMParser();
                    $this.extract(xParser.parseFromString(data, 'text/xml'), offset);
                    $this._callMe();
                };
                header.readAsText($this._mainBlob.slice(0, offset));
            };
            chunck.readAsText(this._mainBlob.slice(0, 255));
        }
    },

    _getSize: function (data) {
        var start = data.indexOf('0x');
        if (start === -1) {
            return 0;
        }
        return parseInt(data.substring(start, start + 10), 16);
    },

    extract: function (doc, offset) {
        try {
            var cab = _baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.selectSingleNode(doc, 'FileCabinet');
            var files = _baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.selectSingleNode(cab, 'Files');
            this.fileList.length = 0;
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(files.childNodes);
            while ($enum1.moveNext()) {
                var child = $enum1.current;
                if (child.nodeName === 'File') {
                    var fe = new FileEntry(child.attributes.getNamedItem('Name').nodeValue, parseInt(child.attributes.getNamedItem('Size').nodeValue));
                    fe.offset = offset;
                    offset += fe.size;
                    this.fileList.push(fe);
                }
            }
        }
        catch ($e2) {
        }
    },

    getFileBlob: function (filename) {
        var fe = this.getFileEntry(filename);
        if (fe != null) {
            var ext = filename.substr(filename.lastIndexOf('.')).toLowerCase();
            var type = null;
            switch (ext) {
                case '.png':
                    type = 'image/png';
                    break;
                case '.jpg':
                case '.jpeg':
                    type = 'image/jpeg';
                    break;
                case '.mp3':
                    type = 'audio/mpeg3';
                    break;
                case '.txt':
                    type = 'text/plain';
                    break;
                case '.fit':
                case '.fits':
                    type = 'application/octet-stream';
                    break;
            }
            return this._mainBlob.slice(fe.offset, fe.offset + fe.size, type);
        }
        return null;
    },

    getFileEntry: function (filename) {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.fileList);
        while ($enum1.moveNext()) {
            var entry = $enum1.current;
            if (entry.filename === filename) {
                return entry;
            }
        }
        return null;
    },

    get_masterFile: function () {
        if (this.fileList.length > 0) {
            return this.fileList[0].filename;
        } else {
            return null;
        }
    },

    clearTempFiles: function () {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.fileList);
        while ($enum1.moveNext()) {
            var entry = $enum1.current;
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("FileCabinet", [FileCabinet, FileCabinet$, null]);


/***/ }),

/***/ "./esm/tours/overlay.js":
/*!******************************!*\
  !*** ./esm/tours/overlay.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AudioOverlay: () => (/* binding */ AudioOverlay),
/* harmony export */   AudioType: () => (/* binding */ AudioType),
/* harmony export */   BitmapOverlay: () => (/* binding */ BitmapOverlay),
/* harmony export */   FlipbookOverlay: () => (/* binding */ FlipbookOverlay),
/* harmony export */   LoopTypes: () => (/* binding */ LoopTypes),
/* harmony export */   Overlay: () => (/* binding */ Overlay),
/* harmony export */   OverlayAnchor: () => (/* binding */ OverlayAnchor),
/* harmony export */   ShapeOverlay: () => (/* binding */ ShapeOverlay),
/* harmony export */   ShapeType: () => (/* binding */ ShapeType),
/* harmony export */   TextOverlay: () => (/* binding */ TextOverlay)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _graphics_texture_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../graphics/texture.js */ "./esm/graphics/texture.js");
/* harmony import */ var _graphics_sprite2d_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../graphics/sprite2d.js */ "./esm/graphics/sprite2d.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../coordinates.js */ "./esm/coordinates.js");
/* harmony import */ var _space_time_controller_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../space_time_controller.js */ "./esm/space_time_controller.js");
/* harmony import */ var _ui_tools_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../ui_tools.js */ "./esm/ui_tools.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../util.js */ "./esm/util.js");
/* harmony import */ var _text_object_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./text_object.js */ "./esm/tours/text_object.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A graphical overlay shown inside a tour.
















// wwtlib.OverlayAnchor

var OverlayAnchor = {
    sky: 0,
    screen: 1
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("OverlayAnchor", OverlayAnchor);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("OverlayAnchor", OverlayAnchor);


// wwtlib.AudioType

var AudioType = {
    music: 0,
    voice: 1
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("AudioType", AudioType);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("AudioType", AudioType);


// wwtlib.ShapeType

var ShapeType = {
    circle: 0,
    rectagle: 1,
    star: 2,
    donut: 3,
    arrow: 4,
    line: 5,
    openRectagle: 6
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ShapeType", ShapeType);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("ShapeType", ShapeType);


// wwtlib.LoopTypes

var LoopTypes = {
    loop: 0,
    upDown: 1,
    down: 2,
    upDownOnce: 3,
    once: 4,
    begin: 5,
    end: 6
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("LoopTypes", LoopTypes);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("LoopTypes", LoopTypes);


// wwtlib.Overlay

function Overlay() {
    this.isDynamic = false;
    this.isDesignTimeOnly = false;
    this._name = '';

    // this used to be a GUID and should become that again now that we have
    // proper support for them in the web engine.
    this.id = (Overlay.nextId++).toString();
    this._owner = null;
    this._url = '';
    this._linkID = '';
    this._domeMatrix = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.get_identity();
    this._domeMatX = 0;
    this._domeMatY = 0;
    this._domeAngle = 0;
    this.points = null;
    this._animate = false;
    this._tweenFactor = 0;
    this._endX = 0;
    this._endY = 0;
    this._endOpacity = 0;
    this._endColor = new _color_js__WEBPACK_IMPORTED_MODULE_7__.Color();
    this._endWidth = 0;
    this._endHeight = 0;
    this._endRotationAngle = 0;
    this._anchor = 1;
    this._x = 0;
    this._y = 0;
    this._width = 0;
    this._height = 0;
    this._color = _color_js__WEBPACK_IMPORTED_MODULE_7__.Colors.get_white();
    this._opacity = 0.5;
    this._rotationAngle = 0;
    this.currentRotation = 0;
    this.texture = null;
    this.texture2d = null;
    this._interpolationType = 5;
}

Overlay.defaultAnchor = 1;
Overlay.clipboardFormat = 'WorldWideTelescope.Overlay';
Overlay.nextId = 11231;
Overlay.RC = 3.1415927 / 180;

Overlay._fromXml = function (owner, overlay) {
    if (overlay.attributes == null) {
        return null;
    }
    if (overlay.attributes.getNamedItem('Type') == null) {
        return null;
    }
    var overlayClassName = overlay.attributes.getNamedItem('Type').nodeValue;
    var overLayType = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(overlayClassName, 'TerraViewer.', '');
    var newOverlay = null;
    switch (overLayType) {
        case 'AudioOverlay':
            newOverlay = new AudioOverlay();
            break;
        case 'BitmapOverlay':
            newOverlay = new BitmapOverlay();
            break;
        case 'FlipBookOverlay':
            newOverlay = new FlipbookOverlay();
            break;
        case 'ShapeOverlay':
            newOverlay = new ShapeOverlay();
            break;
        case 'TextOverlay':
            newOverlay = new TextOverlay();
            break;
        default:
            return null;
    }
    newOverlay._owner = owner;
    newOverlay._initOverlayFromXml(overlay);
    return newOverlay;
};

var Overlay$ = {
    get_name: function () {
        return this._name;
    },

    set_name: function (value) {
        this._name = value;
        return value;
    },

    get_owner: function () {
        return this._owner;
    },

    set_owner: function (value) {
        this._owner = value;
        return value;
    },

    get_zOrder: function () {
        var index = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._owner.get_overlays());
        while ($enum1.moveNext()) {
            var item = $enum1.current;
            if (item === this) {
                break;
            }
            index++;
        }
        return index;
    },

    get_url: function () {
        return this._url;
    },

    set_url: function (value) {
        this._url = value;
        return value;
    },

    get_linkID: function () {
        return this._linkID;
    },

    set_linkID: function (value) {
        this._linkID = value;
        return value;
    },

    play: function () { },

    pause: function () { },

    stop: function () { },

    seek: function (time) { },

    makePosition: function (centerX, centerY, offsetX, offsetY, angle) {
        centerX -= 960;
        centerY -= 558;
        var point = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(centerX + offsetX, centerY + offsetY, 1347);
        if (!!this._domeMatX || !!this._domeMatY || this._domeAngle !== angle) {
            this._domeMatX = centerX;
            this._domeMatY = centerY;
            this._domeMatrix = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.translation(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(-centerX, -centerY, 0));
            this._domeMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d._rotationZ((angle / 180 * Math.PI)));
            this._domeMatrix._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix3d.translation(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.create(centerX, centerY, 0)));
        }
        point = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d._transformCoordinate(point, this._domeMatrix);
        return point;
    },

    draw3D: function (renderContext, designTime) {
        if (_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.useGl) {
            if (this.texture == null || this.isDynamic) {
                this.initializeTexture();
            }
            if (!this.isDesignTimeOnly || designTime) {
                this.initializeGeometry();
                this.updateRotation();
            }
        } else {
        }
    },

    cleanUp: function () {
        if (this.texture != null) {
            this.texture = null;
        }
        this.texture2d = null;
    },

    initializeTexture: function () { },

    // This hook exists to deal with web browser autoplay restrictions. In the
    // strictest case, we can't just start playing media files at will -- we
    // need to start playing them in response to a user-initiated event. But
    // there is a generally a scheme in which files are "unlocked" once they've
    // started to be played, and after that point we can control their playback
    // more precisely. So, this function should do any multimedia playback
    // initialization needed. It will be called when the user initiates tour
    // playback.
    //
    // Repeated calls should be idempotent.
    prepMultimedia: function () { },

    cleanUpGeometry: function () {
        this.currentRotation = 0;
        this.points = null;
    },

    initializeGeometry: function () {
        if (this.points == null) {
            this.currentRotation = 0;
            this.points = new Array(4);
            this.points[0] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this.points[0].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, -this.get_height() / 2, this.get_rotationAngle());
            this.points[0].tu = 0;
            this.points[0].tv = 0;
            this.points[0].color = this.get_color();
            this.points[1] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this.points[1].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 2, -this.get_height() / 2, this.get_rotationAngle());
            this.points[1].tu = 1;
            this.points[1].tv = 0;
            this.points[1].color = this.get_color();
            this.points[2] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this.points[2].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, this.get_height() / 2, this.get_rotationAngle());
            this.points[2].tu = 0;
            this.points[2].tv = 1;
            this.points[2].color = this.get_color();
            this.points[3] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this.points[3].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 2, this.get_height() / 2, this.get_rotationAngle());
            this.points[3].tu = 1;
            this.points[3].tv = 1;
            this.points[3].color = this.get_color();
        }
    },

    updateRotation: function () { },

    // Animation Support

    get_animate: function () {
        return this._animate;
    },

    set_animate: function (value) {
        if (this._animate !== value) {
            this._animate = value;
            if (this._animate) {
                this._endX = this._x;
                this._endY = this._y;
                this._endRotationAngle = this._rotationAngle;
                this._endColor = this._color;
                this._endWidth = this._width;
                this._endHeight = this._height;
                this.cleanUpGeometry();
            }
            else {
                this._endX = this._x = this.get_x();
                this._endY = this._y = this.get_y();
                this._endRotationAngle = this._rotationAngle = this.get_rotationAngle();
                this._endColor = this._color = this.get_color();
                this._endWidth = this._width = this.get_width();
                this._endHeight = this._height = this.get_height();
                this.cleanUpGeometry();
                this._tweenFactor = 0;
            }
        }
        return value;
    },

    get_tweenFactor: function () {
        return this._tweenFactor;
    },

    set_tweenFactor: function (value) {
        if (!this._animate) {
            this._tweenFactor = 0;
        } else {
            if (this._tweenFactor !== value) {
                this._tweenFactor = value;
                this.cleanUpGeometry();
            }
        }
        return value;
    },

    get_anchor: function () {
        return this._anchor;
    },

    set_anchor: function (value) {
        this._anchor = value;
        return value;
    },

    get_position: function () {
        return _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(this.get_x(), this.get_y());
    },

    set_position: function (value) {
        this.set_x(value.x);
        this.set_y(value.y);
        return value;
    },

    get_x: function () {
        return (this._x * (1 - this._tweenFactor)) + (this._endX * this._tweenFactor);
    },

    set_x: function (value) {
        if (this._tweenFactor < 0.5) {
            if (this._x !== value) {
                this._x = value;
                this.cleanUpGeometry();
            }
        } else {
            if (this._endX !== value) {
                this._endX = value;
                this.cleanUpGeometry();
            }
        }
        return value;
    },

    get_y: function () {
        return (this._y * (1 - this._tweenFactor)) + (this._endY * this._tweenFactor);
    },

    set_y: function (value) {
        if (this._tweenFactor < 0.5) {
            if (this._y !== value) {
                this._y = value;
                this.cleanUpGeometry();
            }
        } else {
            if (this._endY !== value) {
                this._endY = value;
                this.cleanUpGeometry();
            }
        }
        return value;
    },

    get_width: function () {
        return (this._width * (1 - this._tweenFactor)) + (this._endWidth * this._tweenFactor);
    },

    set_width: function (value) {
        if (value < 5 && !!value) {
            value = 5;
        }
        if (this._tweenFactor < 0.5) {
            if (this._width !== value) {
                this._width = value;
                this.cleanUpGeometry();
            }
        } else {
            if (this._endWidth !== value) {
                this._endWidth = value;
                this.cleanUpGeometry();
            }
        }
        return value;
    },

    get_height: function () {
        return (this._height * (1 - this._tweenFactor)) + (this._endHeight * this._tweenFactor);
    },

    set_height: function (value) {
        if (value < 5 && !!value) {
            value = 5;
        }
        if (this._tweenFactor < 0.5) {
            if (this._height !== value) {
                this._height = value;
                this.cleanUpGeometry();
            }
        } else {
            if (this._endHeight !== value) {
                this._endHeight = value;
                this.cleanUpGeometry();
            }
        }
        return value;
    },

    get_color: function () {
        var red = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((this._color.r * (1 - this._tweenFactor)) + (this._endColor.r * this._tweenFactor)));
        var green = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((this._color.g * (1 - this._tweenFactor)) + (this._endColor.g * this._tweenFactor)));
        var blue = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((this._color.b * (1 - this._tweenFactor)) + (this._endColor.b * this._tweenFactor)));
        var alpha = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((this._color.a * (1 - this._tweenFactor)) + (this._endColor.a * this._tweenFactor)));
        return _color_js__WEBPACK_IMPORTED_MODULE_7__.Color.fromArgb(Math.max(0, Math.min(255, alpha)), Math.max(0, Math.min(255, red)), Math.max(0, Math.min(255, green)), Math.max(0, Math.min(255, blue)));
    },

    set_color: function (value) {
        if (this._tweenFactor < 0.5) {
            if (this._color !== value) {
                this._color = value;
                this.cleanUpGeometry();
            }
        } else {
            if (this._endColor !== value) {
                this._endColor = value;
                this.cleanUpGeometry();
            }
        }
        return value;
    },

    get_opacity: function () {
        return this.get_color().a / 255;
    },

    set_opacity: function (value) {
        var col = this.get_color();
        this.set_color(_color_js__WEBPACK_IMPORTED_MODULE_7__.Color.fromArgb(Math.min(255, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((value * 255))), col.r, col.g, col.b));
        this._opacity = value;
        return value;
    },

    get_rotationAngle: function () {
        return (this._rotationAngle * (1 - this._tweenFactor)) + (this._endRotationAngle * this._tweenFactor);
    },

    set_rotationAngle: function (value) {
        if (this._tweenFactor < 0.5) {
            if (this._rotationAngle !== value) {
                this._rotationAngle = value;
                this.cleanUpGeometry();
            }
        } else {
            if (this._endRotationAngle !== value) {
                this._endRotationAngle = value;
                this.cleanUpGeometry();
            }
        }
        return value;
    },

    hitTest: function (pntTest) {
        var tempPoints = new Array(1);
        tempPoints[0] = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(pntTest.x, pntTest.y);
        var mat = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix2d.rotateAt(-this.get_rotationAngle() / 180 * Math.PI, _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(this.get_x(), this.get_y()));
        mat._transformPoints(tempPoints);
        var rect = _util_js__WEBPACK_IMPORTED_MODULE_11__.Rectangle.create((this.get_x() - (this.get_width() / 2)), (this.get_y() - (this.get_height() / 2)), this.get_width(), this.get_height());
        return rect.contains(tempPoints[0]);
    },

    get_bounds: function () {
        return this._bounds;
    },

    set_bounds: function (value) {
        this._bounds = value;
        return value;
    },

    get_interpolationType: function () {
        return this._interpolationType;
    },

    set_interpolationType: function (value) {
        this._interpolationType = value;
        return value;
    },

    saveToXml: function (xmlWriter, saveKeys) {
        xmlWriter._writeStartElement('Overlay');
        xmlWriter._writeAttributeString('Id', this.id);
        xmlWriter._writeAttributeString('Type', this.getTypeName());
        xmlWriter._writeAttributeString('Name', this.get_name());
        xmlWriter._writeAttributeString('X', this._x.toString());
        xmlWriter._writeAttributeString('Y', this._y.toString());
        xmlWriter._writeAttributeString('Width', this._width.toString());
        xmlWriter._writeAttributeString('Height', this._height.toString());
        xmlWriter._writeAttributeString('Rotation', this._rotationAngle.toString());
        xmlWriter._writeAttributeString('Color', this._color.save());
        xmlWriter._writeAttributeString('Url', this._url);
        xmlWriter._writeAttributeString('LinkID', this._linkID);
        xmlWriter._writeAttributeString('Animate', this._animate.toString());
        if (this._animate) {
            xmlWriter._writeAttributeString('EndX', this._endX.toString());
            xmlWriter._writeAttributeString('EndY', this._endY.toString());
            xmlWriter._writeAttributeString('EndWidth', this._endWidth.toString());
            xmlWriter._writeAttributeString('EndHeight', this._endHeight.toString());
            xmlWriter._writeAttributeString('EndRotation', this._endRotationAngle.toString());
            xmlWriter._writeAttributeString('EndColor', this._endColor.save());
            xmlWriter._writeAttributeString('InterpolationType', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('InterpolationType', this._interpolationType));
        }
        xmlWriter._writeAttributeString('Anchor', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('OverlayAnchor', this._anchor));
        this.writeOverlayProperties(xmlWriter);
        xmlWriter._writeEndElement();
    },

    getTypeName: function () {
        return 'TerraViewer.Overlay';
    },

    addFilesToCabinet: function (fc) { },

    writeOverlayProperties: function (xmlWriter) { },

    _initOverlayFromXml: function (node) {
        this.id = node.attributes.getNamedItem('Id').nodeValue;
        this.set_name(node.attributes.getNamedItem('Name').nodeValue);
        this._x = parseFloat(node.attributes.getNamedItem('X').nodeValue);
        this._y = parseFloat(node.attributes.getNamedItem('Y').nodeValue);
        this._width = parseFloat(node.attributes.getNamedItem('Width').nodeValue);
        this._height = parseFloat(node.attributes.getNamedItem('Height').nodeValue);
        this._rotationAngle = parseFloat(node.attributes.getNamedItem('Rotation').nodeValue);
        this._color = _color_js__WEBPACK_IMPORTED_MODULE_7__.Color.load(node.attributes.getNamedItem('Color').nodeValue);
        if (node.attributes.getNamedItem('Url') != null) {
            this.set_url(node.attributes.getNamedItem('Url').nodeValue);
        }
        if (node.attributes.getNamedItem('LinkID') != null) {
            this.set_linkID(node.attributes.getNamedItem('LinkID').nodeValue);
        }
        if (node.attributes.getNamedItem('Animate') != null) {
            this._animate = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(node.attributes.getNamedItem('Animate').nodeValue);
            if (this._animate) {
                this._endX = parseFloat(node.attributes.getNamedItem('EndX').nodeValue);
                this._endY = parseFloat(node.attributes.getNamedItem('EndY').nodeValue);
                this._endColor = _color_js__WEBPACK_IMPORTED_MODULE_7__.Color.load(node.attributes.getNamedItem('EndColor').nodeValue);
                this._endWidth = parseFloat(node.attributes.getNamedItem('EndWidth').nodeValue);
                this._endHeight = parseFloat(node.attributes.getNamedItem('EndHeight').nodeValue);
                this._endRotationAngle = parseFloat(node.attributes.getNamedItem('EndRotation').nodeValue);
                if (node.attributes.getNamedItem('InterpolationType') != null) {
                    this.set_interpolationType(_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('InterpolationType', node.attributes.getNamedItem('InterpolationType').nodeValue));
                }
            }
        }
        this.initializeFromXml(node);
    },

    initializeFromXml: function (node) { },

    toString: function () {
        return this.get_name();
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Overlay", [Overlay, Overlay$, null]);

// wwtlib.BitmapOverlay

function BitmapOverlay() {
    this._textureReady$1 = false;
    this._sprite$1 = new _graphics_sprite2d_js__WEBPACK_IMPORTED_MODULE_5__.Sprite2d();
    Overlay.call(this);
}

//todo figure out how to load local files into cloud and to cabinet
BitmapOverlay.create = function (owner, file) {
    var temp = new BitmapOverlay();
    temp.set_owner(owner);
    // to make directory and guid filename in tour temp dir.
    temp._filename$1 = file.name;
    temp.set_name(owner.getNextDefaultName('Image'));
    temp.set_x(0);
    temp.set_y(0);
    owner.get_owner().addCachedFile(file.name, file);
    return temp;
};

var BitmapOverlay$ = {
    getTypeName: function () {
        return 'TerraViewer.BitmapOverlay';
    },

    copy: function (owner) {
        var newBmpOverlay = new BitmapOverlay();
        newBmpOverlay.set_owner(owner);
        newBmpOverlay._filename$1 = this._filename$1;
        newBmpOverlay.set_x(this.get_x());
        newBmpOverlay.set_y(this.get_y());
        newBmpOverlay.set_width(this.get_width());
        newBmpOverlay.set_height(this.get_height());
        newBmpOverlay.set_color(this.get_color());
        newBmpOverlay.set_opacity(this.get_opacity());
        newBmpOverlay.set_rotationAngle(this.get_rotationAngle());
        newBmpOverlay.set_name(this.get_name() + ' - Copy');
        return newBmpOverlay;
    },

    cleanUp: function () {
        this.texture = null;
        if (this.texture2d != null) {
            this.texture2d.cleanUp();
            this.texture2d = null;
        }
    },

    initializeTexture: function () {
        var $this = this;

        try {
            if (_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.useGl) {
                this.texture2d = this.get_owner().get_owner().getCachedTexture2d(this._filename$1);
                this._textureReady$1 = true;
            }
            else {
                this.texture = this.get_owner().get_owner().getCachedTexture(this._filename$1, function () {
                    $this._textureReady$1 = true;
                });
            }
        }
        catch ($e1) {
        }
    },

    draw3D: function (renderContext, designTime) {
        if (_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.useGl) {
            if (this.texture2d == null) {
                this.initializeTexture();
            }
            if (!this.get_width() && !this.get_height()) {
                this.set_width(this.texture2d.imageElement.width);
                this.set_height(this.texture2d.imageElement.height);
            }
            this.initializeGeometry();
            this.updateRotation();
            this._sprite$1.draw(renderContext, this.points, this.points.length, this.texture2d, true, 1);
        } else {
            if (this.texture == null) {
                this.initializeTexture();
            }
            if (!this._textureReady$1) {
                return;
            }
            if (!this.get_width() && !this.get_height()) {
                this.set_width(this.texture.width);
                this.set_height(this.texture.height);
            }
            var ctx = renderContext.device;
            ctx.save();
            ctx.translate(this.get_x(), this.get_y());
            ctx.rotate(this.get_rotationAngle() * Overlay.RC);
            ctx.globalAlpha = this.get_opacity();
            ctx.drawImage(this.texture, -this.get_width() / 2, -this.get_height() / 2, this.get_width(), this.get_height());
            ctx.restore();
        }
    },

    addFilesToCabinet: function (fc) {
        fc.addFile(this.get_owner().get_owner().get_workingDirectory() + this._filename$1, this.get_owner().get_owner().getFileBlob(this._filename$1));
    },

    writeOverlayProperties: function (xmlWriter) {
        xmlWriter._writeStartElement('Bitmap');
        xmlWriter._writeAttributeString('Filename', this._filename$1);
        xmlWriter._writeEndElement();
    },

    initializeFromXml: function (node) {
        var bitmap = _baseutil_js__WEBPACK_IMPORTED_MODULE_6__.Util.selectSingleNode(node, 'Bitmap');
        this._filename$1 = bitmap.attributes.getNamedItem('Filename').nodeValue;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("BitmapOverlay", [BitmapOverlay, BitmapOverlay$, Overlay]);

// wwtlib.TextOverlay

function TextOverlay() {
    this._sprite$1 = new _graphics_sprite2d_js__WEBPACK_IMPORTED_MODULE_5__.Sprite2d();
    this._ctx$1 = null;
    this._ce$1 = null;
    Overlay.call(this);
}

TextOverlay.create = function (textObject) {
    var to = new TextOverlay();
    to.textObject = textObject;
    to._calculateTextSize$1();
    return to;
};

var TextOverlay$ = {
    getTypeName: function () {
        return 'TerraViewer.TextOverlay';
    },

    get_color: function () {
        return Overlay.prototype.get_color.call(this);
    },

    set_color: function (value) {
        if (this.textObject.foregroundColor !== value) {
            this.textObject.foregroundColor = value;
            Overlay.prototype.set_color.call(this, value);
            this.cleanUp();
        }
        return value;
    },

    draw3D: function (renderContext, designTime) {
        if (_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.useGl) {
            this.initializeTexture();
            this.initializeGeometry();
            this.updateRotation();
            this._sprite$1.draw(renderContext, this.points, this.points.length, this.texture2d, true, 1);
        } else {
            var ctx = renderContext.device;
            ctx.save();
            ctx.translate(this.get_x(), this.get_y());
            ctx.rotate(this.get_rotationAngle() * Overlay.RC);
            ctx.globalAlpha = this.get_opacity();
            this._drawCanvasText$1(ctx);
            ctx.restore();
        }
    },
    _drawCanvasText$1: function (ctx) {
        ctx.fillStyle = this.textObject.foregroundColor.toString();
        ctx.font = ((this.textObject.italic) ? 'italic' : 'normal') + ' ' + ((this.textObject.bold) ? 'bold' : 'normal') + ' ' + Math.round(this.textObject.fontSize * 1.2).toString() + 'px ' + this.textObject.fontName;
        ctx.textBaseline = 'top';
        var text = this.textObject.text;
        if (text.indexOf('{$') > -1) {
            if (text.indexOf('{$DATE}') > -1) {
                var date = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0:yyyy/MM/dd}', _space_time_controller_js__WEBPACK_IMPORTED_MODULE_9__.SpaceTimeController.get_now());
                text = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(text, '{$DATE}', date);
            }
            if (text.indexOf('{$TIME}') > -1) {
                var time = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0:HH:mm:ss}', _space_time_controller_js__WEBPACK_IMPORTED_MODULE_9__.SpaceTimeController.get_now());
                text = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(text, '{$TIME}', time);
            }
            text = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(text, '{$DIST}', _ui_tools_js__WEBPACK_IMPORTED_MODULE_10__.UiTools.formatDistance(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.get_solarSystemCameraDistance()));
            text = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(text, '{$LAT}', _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.formatDMS(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera.lat));
            text = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(text, '{$LNG}', _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.formatDMS(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera.lat));
            text = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(text, '{$RA}', _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.formatDMS(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera.get_RA()));
            text = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(text, '{$DEC}', _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.formatDMS(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera.get_dec()));
            text = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(text, '{$FOV}', _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.formatDMS(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.get_fovAngle()));
        }
        var lines = text.split('\n');
        var baseline = -(this.get_height() / 2);
        var lineSpace = this.textObject.fontSize * 1.7;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(lines);
        while ($enum1.moveNext()) {
            var line = $enum1.current;
            var parts = _baseutil_js__WEBPACK_IMPORTED_MODULE_6__.Util.getWrappedText(ctx, line, this.get_width());
            var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(parts);
            while ($enum2.moveNext()) {
                var part = $enum2.current;
                ctx.fillText(part, -this.get_width() / 2, baseline);
                baseline += lineSpace;
            }
        }
    },
    _calculateTextSize$1: function () {
        if (this._ctx$1 == null || this._ce$1 == null) {
            this._ce$1 = document.createElement('canvas');
            this._ce$1.height = 100;
            this._ce$1.width = 100;
            this._ctx$1 = this._ce$1.getContext('2d');
        }
        this._ctx$1.fillStyle = this.textObject.foregroundColor.toString();
        this._ctx$1.font = ((this.textObject.italic) ? 'italic' : 'normal') + ' ' + ((this.textObject.bold) ? 'bold' : 'normal') + ' ' + Math.round(this.textObject.fontSize * 1.2).toString() + 'px ' + this.textObject.fontName;
        this._ctx$1.textBaseline = 'top';
        var text = this.textObject.text;
        if (text.indexOf('{$') > -1) {
            if (text.indexOf('{$DATE}') > -1) {
                var date = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0:yyyy/MM/dd}', _space_time_controller_js__WEBPACK_IMPORTED_MODULE_9__.SpaceTimeController.get_now());
                text = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(text, '{$DATE}', date);
            }
            if (text.indexOf('{$TIME}') > -1) {
                var time = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0:HH:mm:ss}', _space_time_controller_js__WEBPACK_IMPORTED_MODULE_9__.SpaceTimeController.get_now());
                text = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(text, '{$TIME}', time);
            }
            text = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(text, '{$DIST}', _ui_tools_js__WEBPACK_IMPORTED_MODULE_10__.UiTools.formatDistance(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.get_solarSystemCameraDistance()));
            text = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(text, '{$LAT}', _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.formatDMS(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera.lat));
            text = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(text, '{$LNG}', _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.formatDMS(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera.lat));
            text = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(text, '{$RA}', _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.formatDMS(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera.get_RA()));
            text = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(text, '{$DEC}', _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.formatDMS(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera.get_dec()));
            text = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.replaceString(text, '{$FOV}', _coordinates_js__WEBPACK_IMPORTED_MODULE_8__.Coordinates.formatDMS(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.get_fovAngle()));
        }
        var lines = text.split('\n');
        var baseline = 0;
        var lineSpace = this.textObject.fontSize * 1.7;
        var maxWidth = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(lines);
        while ($enum1.moveNext()) {
            var line = $enum1.current;
            var width = this._ctx$1.measureText(line).width;
            maxWidth = Math.max(width, maxWidth);
            baseline += lineSpace;
        }

        //Width + fudge factor
        this.set_width(maxWidth * 1.01);
        this.set_height(baseline);
        this._ce$1 = null;
        this._ctx$1 = null;
    },

    initializeTexture: function () {
        if (this.texture2d == null || (this.textObject.text.indexOf('{$') > -1)) {
            if (!this.get_height() || !this.get_width()) {
                this._calculateTextSize$1();
            }
            if (this._ctx$1 == null || this._ce$1 == null) {
                this._ce$1 = document.createElement('canvas');
                this._ce$1.height = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(this.get_height());
                this._ce$1.width = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(this.get_width());
                this._ctx$1 = this._ce$1.getContext('2d');
            }
            this._ctx$1.translate(this.get_width() / 2, this.get_height() / 2);
            this._ctx$1.clearRect(0, 0, this.get_width(), this.get_height());
            this._drawCanvasText$1(this._ctx$1);
            this.texture2d = new _graphics_texture_js__WEBPACK_IMPORTED_MODULE_4__.Texture();
            this.texture2d.imageElement = this._ce$1;
            this.texture2d.makeTexture();
            this._ce$1 = null;
            this._ctx$1 = null;
        }
    },

    writeOverlayProperties: function (xmlWriter) {
        xmlWriter._writeStartElement('Text');
        this.textObject._saveToXml(xmlWriter);
        xmlWriter._writeEndElement();
    },

    initializeFromXml: function (node) {
        var text = _baseutil_js__WEBPACK_IMPORTED_MODULE_6__.Util.selectSingleNode(node, 'Text');
        this.textObject = _text_object_js__WEBPACK_IMPORTED_MODULE_12__.TextObject._fromXml(_baseutil_js__WEBPACK_IMPORTED_MODULE_6__.Util.selectSingleNode(text, 'TextObject'));
    },

    initializeGeometry: function () {
        if (_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.useGl) {
            Overlay.prototype.initializeGeometry.call(this);
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("TextOverlay", [TextOverlay, TextOverlay$, Overlay]);

// wwtlib.ShapeOverlay

function ShapeOverlay() {
    this._shapeType$1 = 1;
    this._sprite$1 = new _graphics_sprite2d_js__WEBPACK_IMPORTED_MODULE_5__.Sprite2d();
    this._triangleStrip$1 = true;
    Overlay.call(this);
}

ShapeOverlay._create = function (currentTourStop, shapeType) {
    var overlay = new ShapeOverlay();
    overlay._shapeType$1 = shapeType;
    overlay.set_owner(currentTourStop);
    return overlay;
};

var ShapeOverlay$ = {
    getTypeName: function () {
        return 'TerraViewer.ShapeOverlay';
    },

    get_shapeType: function () {
        return this._shapeType$1;
    },

    set_shapeType: function (value) {
        this._shapeType$1 = value;
        this.cleanUpGeometry();
        return value;
    },

    draw3D: function (renderContext, designTime) {
        if (_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.useGl) {
            this.initializeGeometry();
            this._sprite$1.draw(renderContext, this.points, this.points.length, null, this._triangleStrip$1, this.get_opacity());
        } else {
            switch (this._shapeType$1) {
                case 0:
                    this._drawCircleGeometry$1(renderContext);
                    break;
                case 1:
                    this._drawRectGeometry$1(renderContext);
                    break;
                case 6:
                    this._drawOpenRectGeometry$1(renderContext);
                    break;
                case 2:
                    this._drawStarGeometry$1(renderContext);
                    break;
                case 3:
                    this._drawDonutGeometry$1(renderContext);
                    break;
                case 4:
                    this._drawArrowGeometry$1(renderContext);
                    break;
                case 5:
                    this._drawLineGeometry$1(renderContext);
                    break;
                default:
                    break;
            }
        }
    },

    initializeGeometry: function () {
        if (this.points == null) {
            switch (this._shapeType$1) {
                case 0:
                    this._createCircleGeometry$1();
                    break;
                case 1:
                    Overlay.prototype.initializeGeometry.call(this);
                    break;
                case 6:
                    this._createOpenRectGeometry$1();
                    break;
                case 2:
                    this._createStarGeometry$1();
                    break;
                case 3:
                    this._createDonutGeometry$1();
                    break;
                case 4:
                    this._createArrowGeometry$1();
                    break;
                case 5:
                    this._createLineGeometry$1();
                    break;
                default:
                    break;
            }
        }
    },
    _createLineGeometry$1: function () {
        var centerX = this.get_x();
        var centerY = this.get_y();
        var radius = this.get_width() / 2;
        var length = this.get_width();
        var segments = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((length / 12)) + 1;
        var radiansPerSegment = (Math.PI * 2) / segments;
        if (this.points == null) {
            this.points = new Array(segments * 2 + 2);
        }
        for (var j = 0; j <= segments; j++) {
            var i = j * 2;
            this.points[i] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this.points[i].position = this.makePosition(this.get_x(), this.get_y(), ((j / segments) * this.get_width() - (this.get_width() / 2)), 6, this.get_rotationAngle());
            this.points[i].tu = (j % 2);
            this.points[i].tv = 0;
            this.points[i].color = this.get_color();
            this.points[i + 1] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this.points[i + 1].position = this.makePosition(this.get_x(), this.get_y(), ((j / segments) * this.get_width() - (this.get_width() / 2)), -6, this.get_rotationAngle());
            this.points[i + 1].tu = (j % 2);
            this.points[i + 1].tv = 1;
            this.points[i + 1].color = this.get_color();
        }
    },
    _createOpenRectGeometry$1: function () {
        var centerX = this.get_x();
        var centerY = this.get_y();
        var radius = this.get_width() / 2;
        var length = this.get_width();
        var segments = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((length / 12)) + 1;
        var segmentsHigh = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((this.get_height() / 12)) + 1;
        var totalPoints = (((segments + 1) * 2) + ((segmentsHigh + 1) * 2)) * 2;
        if (this.points == null) {
            this.points = new Array(totalPoints);
        }
        for (var j = 0; j <= segments; j++) {
            var i = j * 2;
            this.points[i] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this.points[i].position = this.makePosition(centerX, centerY, (j / segments) * this.get_width() - (this.get_width() / 2), (this.get_height() / 2), this.get_rotationAngle());
            this.points[i].tu = (j % 2);
            this.points[i].tv = 0;
            this.points[i].color = this.get_color();
            this.points[i + 1] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this.points[i + 1].position = this.makePosition(centerX, centerY, (j / segments) * this.get_width() - (this.get_width() / 2), ((this.get_height() / 2) - 12), this.get_rotationAngle());
            this.points[i + 1].tu = (j % 2);
            this.points[i + 1].tv = 1;
            this.points[i + 1].color = this.get_color();
            var k = (((segments + 1) * 4) + ((segmentsHigh + 1) * 2) - 2) - i;
            this.points[k] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this.points[k].position = this.makePosition(centerX, centerY, (j / segments) * this.get_width() - (this.get_width() / 2), (-(this.get_height() / 2)) + 12, this.get_rotationAngle());
            this.points[k].tu = (j % 2);
            this.points[k].tv = 0;
            this.points[k].color = this.get_color();
            this.points[k + 1] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this.points[k + 1].position = this.makePosition(centerX, centerY, (j / segments) * this.get_width() - (this.get_width() / 2), (-(this.get_height() / 2)), this.get_rotationAngle());
            this.points[k + 1].tu = (j % 2);
            this.points[k + 1].tv = 1;
            this.points[k + 1].color = this.get_color();
        }
        var offset = ((segments + 1) * 2);
        for (var j = 0; j <= segmentsHigh; j++) {
            var top = ((segmentsHigh + 1) * 2) + offset - 2;
            var i = j * 2;
            this.points[top - i] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this.points[top - i].position = this.makePosition(centerX, centerY, (this.get_width() / 2), ((j / segmentsHigh) * this.get_height() - (this.get_height() / 2)), this.get_rotationAngle());
            this.points[top - i].tu = (j % 2);
            this.points[top - i].tv = 0;
            this.points[top - i].color = this.get_color();
            this.points[top - i + 1] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this.points[top - i + 1].position = this.makePosition(centerX, centerY, ((this.get_width() / 2) - 12), ((j / segmentsHigh) * this.get_height() - (this.get_height() / 2)), this.get_rotationAngle());
            this.points[top - i + 1].tu = (j % 2);
            this.points[top - i + 1].tv = 1;
            this.points[top - i + 1].color = this.get_color();
            var k = i + ((segments + 1) * 4) + ((segmentsHigh + 1) * 2);
            this.points[k] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this.points[k].position = this.makePosition(centerX, centerY, (-(this.get_width() / 2) + 12), ((j / segmentsHigh) * this.get_height() - (this.get_height() / 2)), this.get_rotationAngle());
            this.points[k].tu = (j % 2);
            this.points[k].tv = 0;
            this.points[k].color = this.get_color();
            this.points[k + 1] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this.points[k + 1].position = this.makePosition(centerX, centerY, (-(this.get_width() / 2)), ((j / segmentsHigh) * this.get_height() - (this.get_height() / 2)), this.get_rotationAngle());
            this.points[k + 1].tu = (j % 2);
            this.points[k + 1].tv = 1;
            this.points[k + 1].color = this.get_color();
        }
    },
    _createStarGeometry$1: function () {
        var centerX = this.get_x();
        var centerY = this.get_y();
        var radius = this.get_width() / 2;
        var radiansPerSegment = (Math.PI * 2) / 5;
        if (this.points == null) {
            this.points = new Array(12);
        }
        if (this._pnts$1 == null) {
            this._pnts$1 = new Array(10);
        }
        for (var i = 0; i < 5; i++) {
            var rads = i * radiansPerSegment - (Math.PI / 2);
            this._pnts$1[i] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this._pnts$1[i].position = this.makePosition(centerX, centerY, (Math.cos(rads) * (this.get_width() / 2)), (Math.sin(rads) * (this.get_height() / 2)), this.get_rotationAngle());
            this._pnts$1[i].tu = 0;
            this._pnts$1[i].tv = 0;
            this._pnts$1[i].color = this.get_color();
        }
        for (var i = 5; i < 10; i++) {
            var rads = i * radiansPerSegment + (radiansPerSegment / 2) - (Math.PI / 2);
            this._pnts$1[i] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this._pnts$1[i].position = this.makePosition(centerX, centerY, (Math.cos(rads) * (this.get_width() / 5.3)), (Math.sin(rads) * (this.get_height() / 5.3)), this.get_rotationAngle());
            this._pnts$1[i].tu = 0;
            this._pnts$1[i].tv = 0;
            this._pnts$1[i].color = this.get_color();
        }
        this.points[0] = this._pnts$1[0];
        this.points[1] = this._pnts$1[5];
        this.points[2] = this._pnts$1[9];
        this.points[3] = this._pnts$1[1];
        this.points[4] = this._pnts$1[7];
        this.points[5] = this._pnts$1[4];
        this.points[6] = this._pnts$1[6];
        this.points[7] = this._pnts$1[2];
        this.points[8] = this._pnts$1[7];
        this.points[9] = this._pnts$1[7];
        this.points[10] = this._pnts$1[3];
        this.points[11] = this._pnts$1[8];
        this._triangleStrip$1 = false;
    },
    _createArrowGeometry$1: function () {
        if (this.points == null) {
            this.points = new Array(9);
        }
        this.points[0] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
        this.points[0].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, -this.get_height() / 4, this.get_rotationAngle());
        this.points[0].tu = 0;
        this.points[0].tv = 0;
        this.points[0].color = this.get_color();
        this.points[1] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
        this.points[1].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, -this.get_height() / 4, this.get_rotationAngle());
        this.points[1].tu = 1;
        this.points[1].tv = 0;
        this.points[1].color = this.get_color();
        this.points[2] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
        this.points[2].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, this.get_height() / 4, this.get_rotationAngle());
        this.points[2].tu = 0;
        this.points[2].tv = 1;
        this.points[2].color = this.get_color();
        this.points[3] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
        this.points[3].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, -this.get_height() / 4, this.get_rotationAngle());
        this.points[3].tu = 1;
        this.points[3].tv = 0;
        this.points[3].color = this.get_color();
        this.points[4] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
        this.points[4].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, this.get_height() / 4, this.get_rotationAngle());
        this.points[4].tu = 0;
        this.points[4].tv = 1;
        this.points[4].color = this.get_color();
        this.points[5] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
        this.points[5].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, this.get_height() / 4, this.get_rotationAngle());
        this.points[5].tu = 1;
        this.points[5].tv = 1;
        this.points[5].color = this.get_color();
        this.points[6] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
        this.points[6].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, -this.get_height() / 2, this.get_rotationAngle());
        this.points[6].tu = 1;
        this.points[6].tv = 1;
        this.points[6].color = this.get_color();
        this.points[7] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
        this.points[7].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 2, 0, this.get_rotationAngle());
        this.points[7].tu = 1;
        this.points[7].tv = 0.5;
        this.points[7].color = this.get_color();
        this.points[8] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
        this.points[8].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, this.get_height() / 2, this.get_rotationAngle());
        this.points[8].tu = 1;
        this.points[8].tv = 1;
        this.points[8].color = this.get_color();
        this._triangleStrip$1 = false;
    },
    _createDonutGeometry$1: function () {
        var centerX = this.get_x();
        var centerY = this.get_y();
        var radius = this.get_width() / 2;
        var circumference = Math.PI * 2 * radius;
        var segments = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((circumference / 12)) + 1;
        var radiansPerSegment = (Math.PI * 2) / segments;
        if (this.points == null) {
            this.points = new Array(segments * 2 + 2);
        }
        for (var j = 0; j <= segments; j++) {
            var i = j * 2;
            this.points[i] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this.points[i].position = this.makePosition(centerX, centerY, (Math.cos(j * radiansPerSegment) * (this.get_width() / 2)), (Math.sin(j * radiansPerSegment) * (this.get_height() / 2)), this.get_rotationAngle());
            this.points[i].tu = (j % 2);
            this.points[i].tv = 0;
            this.points[i].color = this.get_color();
            this.points[i + 1] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this.points[i + 1].position = this.makePosition(centerX, centerY, (Math.cos(j * radiansPerSegment) * ((this.get_width() / 2) - 10)), (Math.sin(j * radiansPerSegment) * ((this.get_height() / 2) - 10)), this.get_rotationAngle());
            this.points[i + 1].tu = (j % 2);
            this.points[i + 1].tv = 1;
            this.points[i + 1].color = this.get_color();
        }
    },
    _createCircleGeometry$1: function () {
        var centerX = this.get_x();
        var centerY = this.get_y();
        var radius = this.get_width() / 2;
        var circumference = Math.PI * 2 * radius;
        var segments = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((circumference / 12)) + 1;
        var radiansPerSegment = (Math.PI * 2) / segments;
        if (this.points == null) {
            this.points = new Array(segments * 2 + 2);
        }
        for (var j = 0; j <= segments; j++) {
            var i = j * 2;
            this.points[i] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this.points[i].position = this.makePosition(centerX, centerY, (Math.cos(j * radiansPerSegment) * (this.get_width() / 2)), (Math.sin(j * radiansPerSegment) * (this.get_height() / 2)), this.get_rotationAngle());
            this.points[i].tu = (j % 2);
            this.points[i].tv = 0;
            this.points[i].color = this.get_color();
            this.points[i + 1] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            this.points[i + 1].position = this.makePosition(centerX, centerY, 0, 0, this.get_rotationAngle());
            this.points[i + 1].tu = (j % 2);
            this.points[i + 1].tv = 1;
            this.points[i + 1].color = this.get_color();
        }
    },

    initializeTexture: function () {
        switch (this.get_shapeType()) {
            case 5:
            case 3:
            case 6:
                break;
            case 0:
            case 1:
            case 2:
            case 4:
            default:
                this.texture = null;
                break;
        }
    },

    //todo this needs to be Dashed rounded lines..
    _drawLineGeometry$1: function (renderContext) {
        var ctx = renderContext.device;
        ctx.save();
        var radius = this.get_width() / 2;
        ctx.translate(this.get_x(), this.get_y());
        ctx.rotate(this.get_rotationAngle() * Overlay.RC);
        ctx.moveTo(-radius, 0);
        ctx.lineTo(radius, 0);
        ctx.lineWidth = 9;
        ctx.strokeStyle = this.get_color().toString();
        ctx.globalAlpha = this.get_opacity();
        ctx.stroke();
        ctx.restore();
    },

    _drawOpenRectGeometry$1: function (renderContext) {
        var ctx = renderContext.device;
        ctx.save();
        ctx.translate(this.get_x(), this.get_y());
        ctx.rotate(this.get_rotationAngle() * Overlay.RC);
        ctx.beginPath();
        ctx.moveTo(-this.get_width() / 2, -this.get_height() / 2);
        ctx.lineTo(this.get_width() / 2, -this.get_height() / 2);
        ctx.lineTo(this.get_width() / 2, this.get_height() / 2);
        ctx.lineTo(-this.get_width() / 2, this.get_height() / 2);
        ctx.closePath();
        ctx.lineWidth = 9;
        ctx.strokeStyle = this.get_color().toString();
        ctx.globalAlpha = this.get_opacity();
        ctx.stroke();
        ctx.restore();
    },

    _drawRectGeometry$1: function (renderContext) {
        var ctx = renderContext.device;
        ctx.save();
        ctx.translate(this.get_x(), this.get_y());
        ctx.rotate(this.get_rotationAngle() * Overlay.RC);
        ctx.beginPath();
        ctx.moveTo(-this.get_width() / 2, -this.get_height() / 2);
        ctx.lineTo(this.get_width() / 2, -this.get_height() / 2);
        ctx.lineTo(this.get_width() / 2, this.get_height() / 2);
        ctx.lineTo(-this.get_width() / 2, this.get_height() / 2);
        ctx.closePath();
        ctx.lineWidth = 0;
        ctx.fillStyle = this.get_color().toString();
        ctx.globalAlpha = this.get_opacity();
        ctx.fill();
        ctx.restore();
    },

    _drawStarGeometry$1: function (renderContext) {
        var ctx = renderContext.device;
        ctx.save();
        ctx.translate(this.get_x(), this.get_y());
        ctx.rotate(this.get_rotationAngle() * Overlay.RC);
        ctx.beginPath();
        var centerX = 0;
        var centerY = 0;
        var radius = this.get_width() / 2;
        var radiansPerSegment = (Math.PI * 2) / 5;
        var first = true;
        for (var i = 0; i < 5; i++) {
            var rads = i * radiansPerSegment - (Math.PI / 2);
            if (first) {
                first = false;
                ctx.moveTo(centerX + Math.cos(rads) * (this.get_width() / 2), centerY + Math.sin(rads) * (this.get_height() / 2));
            }
            else {
                ctx.lineTo(centerX + Math.cos(rads) * (this.get_width() / 2), centerY + Math.sin(rads) * (this.get_height() / 2));
            }
            var rads2 = i * radiansPerSegment + (radiansPerSegment / 2) - (Math.PI / 2);
            ctx.lineTo(centerX + Math.cos(rads2) * (this.get_width() / 5.3), centerY + Math.sin(rads2) * (this.get_height() / 5.3));
        }
        ctx.closePath();
        ctx.lineWidth = 0;
        ctx.fillStyle = this.get_color().toString();
        ctx.globalAlpha = this.get_opacity();
        ctx.fill();
        ctx.restore();
    },

    _drawArrowGeometry$1: function (renderContext) {
        var ctx = renderContext.device;
        ctx.save();
        ctx.translate(this.get_x(), this.get_y());
        ctx.rotate(this.get_rotationAngle() * Overlay.RC);
        ctx.beginPath();
        ctx.moveTo((-(this.get_width() / 2)), (-(this.get_height() / 4)));
        ctx.lineTo((this.get_width() / 4), (-(this.get_height() / 4)));
        ctx.lineTo((this.get_width() / 4), (-(this.get_height() / 2)));
        ctx.lineTo((this.get_width() / 2), 0);
        ctx.lineTo((this.get_width() / 4), (this.get_height() / 2));
        ctx.lineTo((this.get_width() / 4), (this.get_height() / 4));
        ctx.lineTo((-(this.get_width() / 2)), (this.get_height() / 4));
        ctx.closePath();
        ctx.lineWidth = 0;
        ctx.fillStyle = this.get_color().toString();
        ctx.globalAlpha = this.get_opacity();
        ctx.fill();
        ctx.restore();
    },

    //todo move to dashed lines in future
    _drawDonutGeometry$1: function (renderContext) {
        var ctx = renderContext.device;
        ctx.save();
        ctx.translate(this.get_x(), this.get_y());
        ctx.scale(1, this.get_height() / this.get_width());
        ctx.rotate(this.get_rotationAngle() * Overlay.RC);
        ctx.beginPath();
        ctx.arc(0, 0, this.get_width() / 2, 0, Math.PI * 2, false);
        ctx.closePath();
        ctx.lineWidth = 9;
        ctx.strokeStyle = this.get_color().toString();
        ctx.globalAlpha = this.get_opacity();
        ctx.stroke();
        ctx.restore();
    },

    _drawCircleGeometry$1: function (renderContext) {
        var ctx = renderContext.device;
        ctx.save();
        ctx.scale(1, this.get_width() / this.get_height());
        ctx.translate(this.get_x(), this.get_y());
        ctx.rotate(this.get_rotationAngle() * Overlay.RC);
        ctx.beginPath();
        ctx.arc(0, 0, this.get_width(), 0, Math.PI * 2, false);
        ctx.closePath();
        ctx.lineWidth = 0;
        ctx.fillStyle = this.get_color().toString();
        ctx.globalAlpha = this.get_opacity();
        ctx.fill();
        ctx.restore();
    },

    cleanUpGeometry: function () {
        Overlay.prototype.cleanUpGeometry.call(this);
        this.cleanUp();
    },

    writeOverlayProperties: function (xmlWriter) {
        xmlWriter._writeStartElement('Shape');
        xmlWriter._writeAttributeString('ShapeType', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('ShapeType', this._shapeType$1));
        xmlWriter._writeEndElement();
    },

    initializeFromXml: function (node) {
        var shape = _baseutil_js__WEBPACK_IMPORTED_MODULE_6__.Util.selectSingleNode(node, 'Shape');
        this._shapeType$1 = _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('ShapeType', shape.attributes.getNamedItem('ShapeType').nodeValue);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ShapeOverlay", [ShapeOverlay, ShapeOverlay$, Overlay]);

// wwtlib.AudioOverlay

function AudioOverlay() {
    this._audio$1 = null;
    this._audioReady$1 = false;
    this._wantPlaying$1 = false;
    this._volume$1 = 100;
    this._mute$1 = false;
    this._position$1 = 0;
    this._trackType$1 = 0;
    Overlay.call(this);
    this.isDesignTimeOnly = true;
}

AudioOverlay.create = function (currentTourStop, file) {
    var ao = new AudioOverlay();
    ao.set_owner(currentTourStop);
    ao._filename$1 = file.name;
    ao.get_owner().get_owner().addCachedFile(file.name, file);
    return ao;
};

var AudioOverlay$ = {
    getTypeName: function () {
        return 'TerraViewer.AudioOverlay';
    },

    get_mute: function () {
        return this._mute$1;
    },

    set_mute: function (value) {
        this._mute$1 = value;
        this.set_volume(this.get_volume());
        return value;
    },

    get_volume: function () {
        return this._volume$1;
    },

    set_volume: function (value) {
        this._volume$1 = value;
        if (this._audio$1 != null) {
            this._audio$1.volume = (this._mute$1) ? 0 : (this._volume$1 / 100);
        }
        return value;
    },

    addFilesToCabinet: function (fc) {
        fc.addFile(this.get_owner().get_owner().get_workingDirectory() + this._filename$1, this.get_owner().get_owner().getFileBlob(this._filename$1));
    },

    play: function () {
        if (this._audio$1 == null) {
            this.prepMultimedia();
        }
        this._wantPlaying$1 = true;
        if (this._audio$1 != null && this._audioReady$1) {
            this._audio$1.play();
            this.set_volume(this.get_volume());
            this._audio$1.currentTime = this._position$1;
        }
    },

    pause: function () {
        if (this._audio$1 == null) {
            this.prepMultimedia();
        }
        this._wantPlaying$1 = false;
        if (this._audio$1 != null && this._audioReady$1) {
            this._audio$1.pause();
        }
    },

    stop: function () {
        this.pause();  // these operations are identical for audio
    },

    seek: function (time) {
        this._position$1 = time;
        if (this._audio$1 == null) {
            this.prepMultimedia();
        }
        if (this._audioReady$1) {
            if (this._audio$1.duration < time) {
                this._audio$1.pause();
            }
            else {
                this._audio$1.currentTime = this._position$1;
            }
        }
    },

    prepMultimedia: function () {
        var $this = this;

        if (this._audio$1 != null) {
            return;
        }
        this._audio$1 = document.createElement('audio');
        this._audio$1.addEventListener('canplaythrough', function () {
            if (!$this._audioReady$1) {
                $this._audioReady$1 = true;
                if ($this._wantPlaying$1) {
                    $this.play();
                }
            }
        }, false);

        // As of December 2020, on Safari, we need to use a <source>
        // sub-element for the audio to play. If we set src/type on the
        // parent element the playback breaks. This in turn breaks some
        // older browsers -- in a world of infinite developer time we'd
        // choose the behavior based on the browser version.
        var source = document.createElement('source');
        this._audio$1.appendChild(source);
        source.src = this.get_owner().get_owner().getFileStream(this._filename$1);
        source.type = 'audio/mp3';
        this._audio$1.load();
    },

    // TODO: understand better when/how this function is called. It ought to
    // be called for every frame by the generic Draw3D implementation since
    // we never set `texture`, I think. But note that the main music and
    // voice tracks aren't "rendered" in this way, so this function doesn't
    // get called for them, it looks.
    initializeTexture: function () {
        this.prepMultimedia();
    },

    cleanUp: function () {
        Overlay.prototype.cleanUp.call(this);
        this._wantPlaying$1 = false;
        if (this._audio$1 != null) {
            this._audio$1.pause();
            this._audio$1.src = null;
            this._audio$1 = null;
        }
    },

    get_trackType: function () {
        return this._trackType$1;
    },

    set_trackType: function (value) {
        this._trackType$1 = value;
        return value;
    },

    writeOverlayProperties: function (xmlWriter) {
        xmlWriter._writeStartElement('Audio');
        xmlWriter._writeAttributeString('Filename', this._filename$1);
        xmlWriter._writeAttributeString('Volume', this._volume$1.toString());
        xmlWriter._writeAttributeString('Mute', this._mute$1.toString());
        xmlWriter._writeAttributeString('TrackType', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('AudioType', this._trackType$1));
        xmlWriter._writeEndElement();
    },

    initializeFromXml: function (node) {
        var audio = _baseutil_js__WEBPACK_IMPORTED_MODULE_6__.Util.selectSingleNode(node, 'Audio');
        this._filename$1 = audio.attributes.getNamedItem('Filename').nodeValue;
        if (audio.attributes.getNamedItem('Volume') != null) {
            this._volume$1 = parseInt(audio.attributes.getNamedItem('Volume').nodeValue);
        }
        if (audio.attributes.getNamedItem('Mute') != null) {
            this._mute$1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(audio.attributes.getNamedItem('Mute').nodeValue);
        }
        if (audio.attributes.getNamedItem('TrackType') != null) {
            this._trackType$1 = _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('AudioType', audio.attributes.getNamedItem('TrackType').nodeValue);
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("AudioOverlay", [AudioOverlay, AudioOverlay$, Overlay]);

// wwtlib.FlipbookOverlay

function FlipbookOverlay() {
    this._loopType$1 = 1;
    this._startFrame$1 = 0;
    this._framesList$1 = [];
    this._frames$1 = 1;
    this._framesX$1 = 8;
    this._framesY$1 = 8;
    this._textureReady$1 = false;
    this._currentFrame$1 = 0;
    this._cellHeight$1 = 256;
    this._cellWidth$1 = 256;
    this._timeStart$1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now();
    this._playing$1 = true;
    Overlay.call(this);
}

var FlipbookOverlay$ = {
    getTypeName: function () {
        return 'TerraViewer.FlipbookOverlay';
    },

    get_loopType: function () {
        return this._loopType$1;
    },

    set_loopType: function (value) {
        this._loopType$1 = value;
        return value;
    },

    get_startFrame: function () {
        return this._startFrame$1;
    },

    set_startFrame: function (value) {
        this._startFrame$1 = value;
        return value;
    },

    get_frameSequence: function () {
        return this._frameSequence$1;
    },

    set_frameSequence: function (value) {
        if (this._frameSequence$1 !== value) {
            this._frameSequence$1 = value;
            this._framesList$1 = [];
            if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._frameSequence$1)) {
                try {
                    var parts = this._frameSequence$1.split(',');
                    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(parts);
                    while ($enum1.moveNext()) {
                        var part = $enum1.current;
                        var x = parseInt(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.trim(part));
                        this._framesList$1.push(x);
                    }
                }
                catch ($e2) {
                }
            }
        }
        return value;
    },

    get_frames: function () {
        return this._frames$1;
    },

    set_frames: function (value) {
        this._frames$1 = value;
        return value;
    },

    get_framesX: function () {
        return this._framesX$1;
    },

    set_framesX: function (value) {
        this._framesX$1 = value;
        return value;
    },

    get_framesY: function () {
        return this._framesY$1;
    },

    set_framesY: function (value) {
        this._framesY$1 = value;
        return value;
    },

    copy: function (owner) {
        var newFlipbookOverlay = new FlipbookOverlay();
        newFlipbookOverlay.set_owner(owner);
        newFlipbookOverlay._filename$1 = this._filename$1;
        newFlipbookOverlay.set_x(this.get_x());
        newFlipbookOverlay.set_y(this.get_y());
        newFlipbookOverlay.set_width(this.get_width());
        newFlipbookOverlay.set_height(this.get_height());
        newFlipbookOverlay.set_color(this.get_color());
        newFlipbookOverlay.set_opacity(this.get_opacity());
        newFlipbookOverlay.set_rotationAngle(this.get_rotationAngle());
        newFlipbookOverlay.set_name(this.get_name() + ' - Copy');
        newFlipbookOverlay.set_startFrame(this.get_startFrame());
        newFlipbookOverlay.set_frames(this.get_frames());
        newFlipbookOverlay.set_loopType(this.get_loopType());
        newFlipbookOverlay.set_frameSequence(this.get_frameSequence());
        newFlipbookOverlay.set_framesX(this.get_framesX());
        newFlipbookOverlay.set_framesY(this.get_framesY());
        return newFlipbookOverlay;
    },

    cleanUp: function () {
        this.texture = null;
    },

    initializeTexture: function () {
        var $this = this;

        try {
            var colorKey = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.endsWith(this._filename$1.toLowerCase(), '.jpg');
            this.texture = this.get_owner().get_owner().getCachedTexture(this._filename$1, function () {
                $this._textureReady$1 = true;
            });
        }
        catch ($e1) {
        }
    },

    addFilesToCabinet: function (fc) {
        fc.addFile(this.get_owner().get_owner().get_workingDirectory() + this._filename$1, this.get_owner().get_owner().getFileBlob(this._filename$1));
    },

    writeOverlayProperties: function (xmlWriter) {
        xmlWriter._writeStartElement('Flipbook');
        xmlWriter._writeAttributeString('Filename', this._filename$1);
        xmlWriter._writeAttributeString('Frames', this._frames$1.toString());
        xmlWriter._writeAttributeString('Loop', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('LoopTypes', this._loopType$1));
        xmlWriter._writeAttributeString('FramesX', this._framesX$1.toString());
        xmlWriter._writeAttributeString('FramesY', this._framesY$1.toString());
        xmlWriter._writeAttributeString('StartFrame', this._startFrame$1.toString());
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._frameSequence$1)) {
            xmlWriter._writeAttributeString('FrameSequence', this._frameSequence$1);
        }
        xmlWriter._writeEndElement();
    },

    initializeFromXml: function (node) {
        var flipbook = _baseutil_js__WEBPACK_IMPORTED_MODULE_6__.Util.selectSingleNode(node, 'Flipbook');
        this._filename$1 = flipbook.attributes.getNamedItem('Filename').nodeValue;
        this._frames$1 = parseInt(flipbook.attributes.getNamedItem('Frames').nodeValue);
        this._loopType$1 = _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('LoopTypes', flipbook.attributes.getNamedItem('Loop').nodeValue);
        if (flipbook.attributes.getNamedItem('FramesX') != null) {
            this.set_framesX(parseInt(flipbook.attributes.getNamedItem('FramesX').nodeValue));
        }
        if (flipbook.attributes.getNamedItem('FramesY') != null) {
            this.set_framesY(parseInt(flipbook.attributes.getNamedItem('FramesY').nodeValue));
        }
        if (flipbook.attributes.getNamedItem('StartFrame') != null) {
            this.set_startFrame(parseInt(flipbook.attributes.getNamedItem('StartFrame').nodeValue));
        }
        if (flipbook.attributes.getNamedItem('FrameSequence') != null) {
            this.set_frameSequence(flipbook.attributes.getNamedItem('FrameSequence').nodeValue);
        }
    },

    play: function () {
        this._playing$1 = true;
        this._timeStart$1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now();
    },

    pause: function () {
        this._playing$1 = false;
    },

    stop: function () {
        this._playing$1 = false;
        this._currentFrame$1 = 0;
    },

    initializeGeometry: function () {
        var frameCount = this._frames$1;
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._frameSequence$1)) {
            frameCount = this._framesList$1.length;
        }
        if (this._playing$1) {
            var ts = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now() - this._timeStart$1;
            switch (this._loopType$1) {
                case 0:
                    this._currentFrame$1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((ts / 1000 * 24) % frameCount)) + this._startFrame$1;
                    break;
                case 1:
                    this._currentFrame$1 = Math.abs(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((ts / 1000 * 24 + frameCount) % (frameCount * 2 - 1))) - (frameCount - 1)) + this._startFrame$1;
                    if (this._currentFrame$1 < 0 || this._currentFrame$1 > frameCount - 1) {
                        var p = 0;
                    }
                    break;
                case 2:
                    this._currentFrame$1 = Math.max(0, frameCount - _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((ts / 1000 * 24) % frameCount))) + this._startFrame$1;
                    break;
                case 3:
                    var temp = Math.min(ts / 1000 * 24, frameCount * 2 + 1) + frameCount;
                    this._currentFrame$1 = Math.abs((temp % (frameCount * 2 - 1)) - (frameCount - 1)) + this._startFrame$1;
                    break;
                case 4:
                    this._currentFrame$1 = Math.min(frameCount - 1, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((ts / 1000 * 24)));
                    break;
                case 5:
                    this._currentFrame$1 = this._startFrame$1;
                    break;
                case 6:
                    this._currentFrame$1 = (frameCount - 1) + this._startFrame$1;
                    break;
                default:
                    this._currentFrame$1 = this._startFrame$1;
                    break;
            }
        }
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._frameSequence$1)) {
            if (this._currentFrame$1 < this._framesList$1.length && this._currentFrame$1 > -1) {
                this._currentFrame$1 = this._framesList$1[this._currentFrame$1];
            }
            else {
                this._currentFrame$1 = 0;
            }
        }
        this.currentRotation = 0;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("FlipbookOverlay", [FlipbookOverlay, FlipbookOverlay$, Overlay]);


/***/ }),

/***/ "./esm/tours/selection.js":
/*!********************************!*\
  !*** ./esm/tours/selection.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Selection: () => (/* binding */ Selection),
/* harmony export */   SelectionAnchor: () => (/* binding */ SelectionAnchor)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
/* harmony import */ var _graphics_sprite2d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../graphics/sprite2d.js */ "./esm/graphics/sprite2d.js");
/* harmony import */ var _graphics_texture_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../graphics/texture.js */ "./esm/graphics/texture.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util.js */ "./esm/util.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// An interactive selection for the tour editor.










// wwtlib.SelectionAnchor

var SelectionAnchor = {
    topLeft: 0,
    top: 1,
    topRight: 2,
    right: 3,
    bottomRight: 4,
    bottom: 5,
    bottomLeft: 6,
    left: 7,
    rotate: 8,
    move: 9,
    center: 10,
    none: 11
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("SelectionAnchor", SelectionAnchor);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("SelectionAnchor", SelectionAnchor);


// wwtlib.Selection
//
// Note: this type is a bit dangerous because there is a built-in browser type
// of the same name. So if you forget to import this type into your module, your
// code will likely get the other one instead. As usual, we're reluctant to
// rename it because that would break API compatibility.

function Selection() {
    this._singleSelectHandles = null;
    this._multiSelectHandles = null;
    this._focusHandles = null;
    this.selectionSet = [];
    this._focus = null;
    this._ratio = 1;
    this._sprite = new _graphics_sprite2d_js__WEBPACK_IMPORTED_MODULE_3__.Sprite2d();
    this._centerX = 0;
    this._centerY = 0;
}

Selection._points = new Array(9 * 3 * 2);

var Selection$ = {
    clearSelection: function () {
        this.selectionSet.length = 0;
    },

    addSelection: function (overlay) {
        if (overlay != null) {
            if (!(this.selectionSet.indexOf(overlay) >= 0)) {
                this.selectionSet.push(overlay);
            }
        }
    },

    addSelectionRange: function (overlays) {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(overlays);
        while ($enum1.moveNext()) {
            var ov = $enum1.current;
            this.selectionSet.push(ov);
        }
    },

    isOverlaySelected: function (overlay) {
        return (this.selectionSet.indexOf(overlay) >= 0);
    },

    setSelection: function (overlay) {
        this.selectionSet.length = 0;
        if (overlay != null) {
            this.selectionSet.push(overlay);
        }
    },

    get_multiSelect: function () {
        return this.selectionSet.length > 1;
    },

    setSelectionRange: function (overlays) {
        this.selectionSet.length = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(overlays);
        while ($enum1.moveNext()) {
            var ov = $enum1.current;
            this.selectionSet.push(ov);
        }
    },

    get_focus: function () {
        return this._focus;
    },

    set_focus: function (value) {
        this._focus = value;
        return value;
    },

    draw3D: function (renderContext, transparancy) {
        this._ratio = 1116 / renderContext.height;
        if (this._singleSelectHandles == null) {
            this._singleSelectHandles = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_4__.Texture.fromUrl('images/Selhand.bmp');
        }
        if (this._multiSelectHandles == null) {
            this._multiSelectHandles = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_4__.Texture.fromUrl('images/multiSelhand.bmp');
        }
        if (this._focusHandles == null) {
            this._focusHandles = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_4__.Texture.fromUrl('images/FocusHandles.png');
        }
        if (this.selectionSet.length > 1) {
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selectionSet);
            while ($enum1.moveNext()) {
                var overlay = $enum1.current;
                if (overlay === this._focus) {
                    this._drawSelectionHandles(renderContext, overlay, this._focusHandles);
                }
                else {
                    this._drawSelectionHandles(renderContext, overlay, this._multiSelectHandles);
                }
            }
        } else {
            var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selectionSet);
            while ($enum2.moveNext()) {
                var overlay = $enum2.current;
                this._drawSelectionHandles(renderContext, overlay, this._singleSelectHandles);
            }
        }
    },

    _drawSelectionHandles: function (renderContext, overlay, handleTexture) {
        var handles = this.makeHandles(overlay);
        var angle = overlay.get_rotationAngle();
        var i = 0;
        var j = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(handles);
        while ($enum1.moveNext()) {
            var handle = $enum1.current;
            Selection._points[i + 0] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            Selection._points[i + 0].position = overlay.makePosition(this._centerX, this._centerY, handle.get_left() - this._centerX, handle.get_top() - this._centerY, angle);
            Selection._points[i + 0].tu = j * (1 / 9);
            Selection._points[i + 0].tv = 0;
            Selection._points[i + 0].color = _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_white();
            Selection._points[i + 1] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            Selection._points[i + 1].position = overlay.makePosition(this._centerX, this._centerY, handle.get_right() - this._centerX, handle.get_top() - this._centerY, angle);
            Selection._points[i + 1].tu = (j + 1) * (1 / 9);
            Selection._points[i + 1].tv = 0;
            Selection._points[i + 1].color = _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_white();
            Selection._points[i + 2] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            Selection._points[i + 2].position = overlay.makePosition(this._centerX, this._centerY, handle.get_left() - this._centerX, handle.get_bottom() - this._centerY, angle);
            Selection._points[i + 2].tu = j * (1 / 9);
            Selection._points[i + 2].tv = 1;
            Selection._points[i + 2].color = _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_white();
            Selection._points[i + 3] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            Selection._points[i + 3].position = overlay.makePosition(this._centerX, this._centerY, handle.get_right() - this._centerX, handle.get_top() - this._centerY, angle);
            Selection._points[i + 3].tu = (j + 1) * (1 / 9);
            Selection._points[i + 3].tv = 0;
            Selection._points[i + 3].color = _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_white();
            Selection._points[i + 4] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            Selection._points[i + 4].position = overlay.makePosition(this._centerX, this._centerY, handle.get_right() - this._centerX, handle.get_bottom() - this._centerY, angle);
            Selection._points[i + 4].tu = (j + 1) * (1 / 9);
            Selection._points[i + 4].tv = 1;
            Selection._points[i + 4].color = _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_white();
            Selection._points[i + 5] = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.PositionColoredTextured();
            Selection._points[i + 5].position = overlay.makePosition(this._centerX, this._centerY, handle.get_left() - this._centerX, handle.get_bottom() - this._centerY, angle);
            Selection._points[i + 5].tu = j * (1 / 9);
            Selection._points[i + 5].tv = 1;
            Selection._points[i + 5].color = _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_white();
            i += 6;
            j++;
        }
        if (this.get_multiSelect()) {
            this._sprite.draw(renderContext, Selection._points, Selection._points.length - 6, handleTexture, false, 1);
        } else {
            this._sprite.draw(renderContext, Selection._points, Selection._points.length, handleTexture, false, 1);
        }
    },

    pointToSelectionSpace: function (pntIn) {
        var tempPoints = new Array(1);
        tempPoints[0] = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(pntIn.x, pntIn.y);
        var mat = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix2d.rotateAt(-this.selectionSet[0].get_rotationAngle() / 180 * Math.PI, _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(this.selectionSet[0].get_x(), this.selectionSet[0].get_y()));
        mat._transformPoints(tempPoints);
        return tempPoints[0];
    },

    pointToScreenSpace: function (pntIn) {
        var tempPoints = new Array(1);
        tempPoints[0] = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(pntIn.x, pntIn.y);
        var mat = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Matrix2d.rotateAt(this.selectionSet[0].get_rotationAngle() / 180 * Math.PI, _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(this.selectionSet[0].get_x(), this.selectionSet[0].get_y()));
        mat._transformPoints(tempPoints);
        return tempPoints[0];
    },

    hitTest: function (position) {
        if (this.selectionSet.length === 1) {
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selectionSet);
            while ($enum1.moveNext()) {
                var overlay = $enum1.current;
                var handles = this.makeHandles(overlay);
                var index = 0;
                var testPoint = this.pointToSelectionSpace(position);
                var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(handles);
                while ($enum2.moveNext()) {
                    var rectf = $enum2.current;
                    if (rectf.contains(testPoint)) {
                        return index;
                    }
                    index++;
                }
            }
        }
        return 11;
    },

    makeHandles: function (overlay) {
        var x = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((overlay.get_x() - (overlay.get_width() / 2))) + 0.5;
        var y = (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(overlay.get_y()) - (overlay.get_height() / 2)) + 0.5;
        this._centerX = overlay.get_x();
        this._centerY = overlay.get_y();
        var width = overlay.get_width();
        var height = overlay.get_height();
        var handleSize = 12 * this._ratio;
        var handles = new Array(9);
        handles[0] = _util_js__WEBPACK_IMPORTED_MODULE_6__.Rectangle.create(x - handleSize, y - handleSize, handleSize, handleSize);
        handles[1] = _util_js__WEBPACK_IMPORTED_MODULE_6__.Rectangle.create((x + (width / 2)) - (handleSize / 2), y - handleSize, handleSize, handleSize);
        handles[2] = _util_js__WEBPACK_IMPORTED_MODULE_6__.Rectangle.create(x + width, y - handleSize, handleSize, handleSize);
        handles[3] = _util_js__WEBPACK_IMPORTED_MODULE_6__.Rectangle.create(x + width, (y + (height / 2)) - (handleSize / 2), handleSize, handleSize);
        handles[4] = _util_js__WEBPACK_IMPORTED_MODULE_6__.Rectangle.create(x + width, (y + height), handleSize, handleSize);
        handles[5] = _util_js__WEBPACK_IMPORTED_MODULE_6__.Rectangle.create((x + (width / 2)) - (handleSize / 2), (y + height), handleSize, handleSize);
        handles[6] = _util_js__WEBPACK_IMPORTED_MODULE_6__.Rectangle.create(x - handleSize, (y + height), handleSize, handleSize);
        handles[7] = _util_js__WEBPACK_IMPORTED_MODULE_6__.Rectangle.create(x - handleSize, (y + (height / 2)) - (handleSize / 2), handleSize, handleSize);
        handles[8] = _util_js__WEBPACK_IMPORTED_MODULE_6__.Rectangle.create((x + (width / 2)) - (handleSize / 2), y - 30 * this._ratio, handleSize, handleSize);
        return handles;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Selection", [Selection, Selection$, null]);


/***/ }),

/***/ "./esm/tours/text_object.js":
/*!**********************************!*\
  !*** ./esm/tours/text_object.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TextBorderStyle: () => (/* binding */ TextBorderStyle),
/* harmony export */   TextObject: () => (/* binding */ TextObject)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A basic text data object.








// wwtlib.TextBorderStyle

var TextBorderStyle = {
    none: 0,
    tight: 1,
    small: 2,
    medium: 3,
    large: 4
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("TextBorderStyle", TextBorderStyle);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerEnum)("TextBorderStyle", TextBorderStyle);


// wwtlib.TextObject

function TextObject() {
    this.bold = false;
    this.italic = false;
    this.underline = false;
    this.fontSize = 0;
    this.borderStyle = 0;
}

TextObject.create = function (text, bold, italic, underline, fontSize, fontName, forgroundColor, backgroundColor, borderStyle) {
    var temp = new TextObject();
    temp.text = text;
    temp.bold = bold;
    temp.italic = italic;
    temp.underline = underline;
    temp.fontSize = fontSize;
    temp.fontName = fontName;
    temp.foregroundColor = forgroundColor;
    temp.backgroundColor = backgroundColor;
    temp.borderStyle = borderStyle;
    return temp;
};

TextObject._fromXml = function (node) {
    var newTextObject = new TextObject();
    newTextObject.text = _baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.getInnerText(node);
    newTextObject.borderStyle = 0;
    newTextObject.bold = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.boolean(node.attributes.getNamedItem('Bold').nodeValue);
    newTextObject.italic = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.boolean(node.attributes.getNamedItem('Italic').nodeValue);
    newTextObject.underline = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.boolean(node.attributes.getNamedItem('Underline').nodeValue);
    newTextObject.fontSize = parseFloat(node.attributes.getNamedItem('FontSize').nodeValue);
    newTextObject.fontName = node.attributes.getNamedItem('FontName').nodeValue;
    newTextObject.foregroundColor = _color_js__WEBPACK_IMPORTED_MODULE_3__.Color.load(node.attributes.getNamedItem('ForgroundColor').nodeValue);
    newTextObject.backgroundColor = _color_js__WEBPACK_IMPORTED_MODULE_3__.Color.load(node.attributes.getNamedItem('BackgroundColor').nodeValue);
    if (node.attributes.getNamedItem('BorderStyle') != null) {
        newTextObject.borderStyle = _typesystem_js__WEBPACK_IMPORTED_MODULE_0__.Enums.parse('TextBorderStyle', node.attributes.getNamedItem('BorderStyle').nodeValue);
    }
    return newTextObject;
};

var TextObject$ = {
    toString: function () {
        return this.text;
    },

    _saveToXml: function (xmlWriter) {
        xmlWriter._writeStartElement('TextObject');
        xmlWriter._writeAttributeString('Bold', this.bold.toString());
        xmlWriter._writeAttributeString('Italic', this.italic.toString());
        xmlWriter._writeAttributeString('Underline', this.underline.toString());
        xmlWriter._writeAttributeString('FontSize', this.fontSize.toString());
        xmlWriter._writeAttributeString('FontName', this.fontName);
        xmlWriter._writeAttributeString('ForgroundColor', this.foregroundColor.save());
        xmlWriter._writeAttributeString('BackgroundColor', this.backgroundColor.save());
        xmlWriter._writeAttributeString('BorderStyle', _typesystem_js__WEBPACK_IMPORTED_MODULE_0__.Enums.toXml('TextBorderStyle', this.borderStyle));
        xmlWriter._writeString(this.text);
        xmlWriter._writeEndElement();
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("TextObject", [TextObject, TextObject$, null]);


/***/ }),

/***/ "./esm/tours/tour_document.js":
/*!************************************!*\
  !*** ./esm/tours/tour_document.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TourDocument: () => (/* binding */ TourDocument),
/* harmony export */   UserLevel: () => (/* binding */ UserLevel)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _graphics_texture_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../graphics/texture.js */ "./esm/graphics/texture.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util.js */ "./esm/util.js");
/* harmony import */ var _utilities_xml_text_writer_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utilities/xml_text_writer.js */ "./esm/utilities/xml_text_writer.js");
/* harmony import */ var _imageset_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../imageset.js */ "./esm/imageset.js");
/* harmony import */ var _view_mover_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../view_mover.js */ "./esm/view_mover.js");
/* harmony import */ var _layers_reference_frame_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../layers/reference_frame.js */ "./esm/layers/reference_frame.js");
/* harmony import */ var _file_cabinet_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./file_cabinet.js */ "./esm/tours/file_cabinet.js");
/* harmony import */ var _tour_stop_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./tour_stop.js */ "./esm/tours/tour_stop.js");
/* harmony import */ var _tour_player_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./tour_player.js */ "./esm/tours/tour_player.js");
/* harmony import */ var _layers_layer_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../layers/layer.js */ "./esm/layers/layer.js");
/* harmony import */ var _layers_imageset_layer_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../layers/imageset_layer.js */ "./esm/layers/imageset_layer.js");
/* harmony import */ var _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../layers/layer_manager.js */ "./esm/layers/layer_manager.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A WWT Tour document.




















// wwtlib.UserLevel

var UserLevel = {
    beginner: 0,
    intermediate: 1,
    advanced: 2,
    educator: 3,
    professional: 4
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("UserLevel", UserLevel);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("UserLevel", UserLevel);


// wwtlib.TourDocument

function TourDocument() {
    this._tourDirty = 0;
    this._workingDirectory = '';
    this.url = '';
    this._tagId = '';
    this._representativeThumbnailTourstop = 0;
    this._id = '';
    this._title = '';
    this._runTime = 0;
    this._lastDirtyCheck = 0;
    this._description = '';
    this._attributesAndCredits = '';
    this._authorEmailOther = '';
    this._authorEmail = '';
    this._authorUrl = '';
    this._authorPhone = '';
    this._authorContactText = '';
    this._orgName = 'None';
    this._orgUrl = '';
    this._author = '';
    this._authorImageUrl = '';
    this._authorImage = null;
    this._organizationUrl = '';
    this._filename = '';
    this._level = 0;
    this._type = 268435456;
    this._taxonomy = '';
    this._keywords = '';
    this._objects = '';
    this._editMode = false;
    this.explicitTourLinks = [];
    this.implicitTourLinks = [];
    this._tourStops = [];
    this._currentTourstopIndex = -1;
    this._textureList = {};
    this._textureList2d = {};

    // This handles new files added while editing a tour
    this._fileCache = {};
    this.dontCleanUpTempFiles = false;
    this._id = _util_js__WEBPACK_IMPORTED_MODULE_6__.Guid.newGuid().toString();
}

TourDocument.get_baseWorkingDirectory = function () {
    return '';
};

TourDocument.fromUrl = function (url, callMe) {
    var temp = new TourDocument();
    temp.url = url;
    temp._callMe = callMe;
    temp._cabinet = _file_cabinet_js__WEBPACK_IMPORTED_MODULE_11__.FileCabinet.fromUrl(url, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_loadXmlDocument', temp));
    return temp;
};

TourDocument.fromUrlRaw = function (url, callMe) {
    var temp = new TourDocument();
    temp.url = url;
    temp._callMe = callMe;
    temp._cabinet = _file_cabinet_js__WEBPACK_IMPORTED_MODULE_11__.FileCabinet.fromUrl(url, callMe);
    return temp;
};

(0,_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.set_tourDocumentFromUrlRaw)(TourDocument.fromUrlRaw);

var TourDocument$ = {
    get_tourDirty: function () {
        return this._tourDirty > 0;
    },

    set_tourDirty: function (value) {
        if (value) {
            this._tourDirty++;
        } else {
            this._tourDirty = 0;
        }
        return value;
    },

    get_workingDirectory: function () {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._workingDirectory)) {
            this._workingDirectory = TourDocument.get_baseWorkingDirectory() + this._id + '\\';
        }
        return this._workingDirectory;
    },

    set_workingDirectory: function (value) {
        this._workingDirectory = value;
        return value;
    },

    _loadXmlDocument: function () {
        var $this = this;

        try {
            var master = this._cabinet.get_masterFile();
            var doc = new FileReader();
            doc.onloadend = function (ee) {
                var data = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(doc.result, String);
                var xParser = new DOMParser();
                $this.fromXml(xParser.parseFromString(data, 'text/xml'));
                $this._callMe();
            };
            doc.readAsText(this._cabinet.getFileBlob(master));
        }
        catch (ex) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalScriptInterface._fireTourError(ex);
        }
    },

    fromXml: function (doc) {
        var root = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(doc, 'Tour');
        this._id = root.attributes.getNamedItem('ID').nodeValue;
        this.set_title(root.attributes.getNamedItem('Title').nodeValue);
        this.set_author(root.attributes.getNamedItem('Author').nodeValue);
        if (root.attributes.getNamedItem('Descirption') != null) {
            this.set_description(root.attributes.getNamedItem('Descirption').nodeValue);
        }
        if (root.attributes.getNamedItem('AuthorEmail') != null) {
            this._authorEmail = root.attributes.getNamedItem('AuthorEmail').nodeValue;
        }
        if (root.attributes.getNamedItem('Keywords') != null) {
            this.set_keywords(root.attributes.getNamedItem('Keywords').nodeValue);
        }
        if (root.attributes.getNamedItem('OrganizationName') != null) {
            this.set_orgName(root.attributes.getNamedItem('OrganizationName').nodeValue);
        }
        this._organizationUrl = root.attributes.getNamedItem('OrganizationUrl').nodeValue;
        this._level = _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('UserLevel', root.attributes.getNamedItem('UserLevel').nodeValue);
        this._type = _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('Classification', root.attributes.getNamedItem('Classification').nodeValue);
        this._taxonomy = root.attributes.getNamedItem('Taxonomy').nodeValue;
        var TourStops = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(root, 'TourStops');
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(TourStops.childNodes);
        while ($enum1.moveNext()) {
            var tourStop = $enum1.current;
            if (tourStop.nodeName === 'TourStop') {
                this.addTourStop(_tour_stop_js__WEBPACK_IMPORTED_MODULE_12__.TourStop._fromXml(this, tourStop));
            }
        }
        var Frames = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(root, 'ReferenceFrames');
        if (Frames != null) {
            var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(Frames.childNodes);
            while ($enum2.moveNext()) {
                var frame = $enum2.current;
                if (frame.nodeName === 'ReferenceFrame') {
                    var newFrame = new _layers_reference_frame_js__WEBPACK_IMPORTED_MODULE_10__.ReferenceFrame();
                    newFrame.initializeFromXml(frame);
                    if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists((0,_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.layerManagerGetAllMaps)(), newFrame.name)) {
                        var map = new _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_16__.LayerMap(newFrame.name, 18);
                        map.frame = newFrame;
                        map.loadedFromTour = true;
                        (0,_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.layerManagerGetAllMaps)()[newFrame.name] = map;
                    }
                }
            }
            _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_16__.LayerManager.connectAllChildren();
            _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_16__.LayerManager.loadTree();
        }
        var Layers = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(root, 'Layers');
        if (Layers != null) {
            var $enum3 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(Layers.childNodes);
            while ($enum3.moveNext()) {
                var layer = $enum3.current;
                if (layer.nodeName === 'Layer') {
                    var newLayer = _layers_layer_js__WEBPACK_IMPORTED_MODULE_14__.Layer.fromXml(layer, true);
                    if (newLayer != null) {
                        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(newLayer, _layers_imageset_layer_js__WEBPACK_IMPORTED_MODULE_15__.ImageSetLayer)) {
                            var imageSetLayer = newLayer;
                            var imageset = imageSetLayer.get_imageSet();
                            if (imageset.get_projection() === _imageset_js__WEBPACK_IMPORTED_MODULE_8__.ProjectionType.healpix && imageset.get_extension() === '.tsv') {
                                _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.addCatalogHips(imageset);
                                continue;
                            }
                        }
                        var fileName = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0}.txt', newLayer.id.toString());
                        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(_layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_16__.LayerManager.get_layerList(), newLayer.id)) {
                            _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_16__.LayerManager.deleteLayerByID(newLayer.id, true, false);
                        }
                        try {
                            newLayer.loadedFromTour = true;
                            newLayer.loadData(this, fileName);
                            _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_16__.LayerManager.add(newLayer, false);
                        }
                        catch ($e4) {
                        }
                    }
                }
            }
            _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_16__.LayerManager.loadTree();
        }
        this._tourDirty = 0;
    },

    saveToDataUrl: function () {
        return URL.createObjectURL(this.saveToBlob());
    },

    saveToBlob: function () {
        var excludeAudio = false;
        this.cleanUp();
        var tourXml = this.getTourXML();
        var fc = new _file_cabinet_js__WEBPACK_IMPORTED_MODULE_11__.FileCabinet();
        fc.set_packageID(this.get_id());
        fc.addFile('Tour.wwtxml', new Blob([tourXml]));
        if (this._authorImage != null) {
        }
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.get_tourStops());
        while ($enum1.moveNext()) {
            var stop = $enum1.current;
            stop._addFilesToCabinet(fc, excludeAudio);
        }
        var masterList = this._createLayerMasterList();
        var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(masterList);
        while ($enum2.moveNext()) {
            var id = $enum2.current;
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(_layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_16__.LayerManager.get_layerList(), id)) {
                _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_16__.LayerManager.get_layerList()[id].addFilesToCabinet(fc);
            }
        }
        this.set_tourDirty(false);
        return fc.packageFiles();
    },

    getTourXML: function () {
        var xmlWriter = new _utilities_xml_text_writer_js__WEBPACK_IMPORTED_MODULE_7__.XmlTextWriter();
        xmlWriter.formatting = 1;
        xmlWriter._writeProcessingInstruction('xml', "version='1.0' encoding='UTF-8'");
        xmlWriter._writeStartElement('Tour');
        xmlWriter._writeAttributeString('ID', this._id);
        xmlWriter._writeAttributeString('Title', this._title);
        xmlWriter._writeAttributeString('Descirption', this.get_description());
        xmlWriter._writeAttributeString('Description', this.get_description());
        xmlWriter._writeAttributeString('RunTime', (this.get_runTime() / 1000).toString());
        xmlWriter._writeAttributeString('Author', this._author);
        xmlWriter._writeAttributeString('AuthorEmail', this._authorEmail);
        xmlWriter._writeAttributeString('OrganizationUrl', this._organizationUrl);
        xmlWriter._writeAttributeString('OrganizationName', this.get_orgName());
        xmlWriter._writeAttributeString('Keywords', this.get_keywords());
        xmlWriter._writeAttributeString('UserLevel', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('UserLevel', this._level));
        xmlWriter._writeAttributeString('Classification', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('Classification', this._type));
        xmlWriter._writeAttributeString('Taxonomy', this._taxonomy);
        var timeLineTour = this._isTimelineTour();
        xmlWriter._writeAttributeString('TimeLineTour', timeLineTour.toString());
        xmlWriter._writeStartElement('TourStops');
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.get_tourStops());
        while ($enum1.moveNext()) {
            var stop = $enum1.current;
            stop._saveToXml(xmlWriter, true);
        }
        xmlWriter._writeEndElement();
        var masterList = this._createLayerMasterList();

        // This will now save and sync emtpy frames...
        var referencedFrames = this._getReferenceFrameList();
        xmlWriter._writeStartElement('ReferenceFrames');
        var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(referencedFrames);
        while ($enum2.moveNext()) {
            var item = $enum2.current;
            item.saveToXml(xmlWriter);
        }
        xmlWriter._writeEndElement();
        xmlWriter._writeStartElement('Layers');
        var $enum3 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(masterList);
        while ($enum3.moveNext()) {
            var id = $enum3.current;
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(_layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_16__.LayerManager.get_layerList(), id)) {
                var layer = _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_16__.LayerManager.get_layerList()[id];
                var name = layer.get_name();
                var imageset = _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.getCatalogHipsByName(name);
                if (imageset != null) {
                    var imageSetLayer = _layers_imageset_layer_js__WEBPACK_IMPORTED_MODULE_15__.ImageSetLayer.create(imageset);
                    imageSetLayer.id = id;
                    imageSetLayer.set_name(name);
                    imageSetLayer.set_referenceFrame('Sky');
                    imageSetLayer.saveToXml(xmlWriter);
                }
                else {
                    _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_16__.LayerManager.get_layerList()[id].saveToXml(xmlWriter);
                }
            }
        }
        xmlWriter._writeEndElement();
        xmlWriter._writeFullEndElement();
        xmlWriter._close();
        return xmlWriter.body;
    },

    _getReferenceFrameList: function () {
        var list = [];
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys((0,_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.layerManagerGetAllMaps)()));
        while ($enum1.moveNext()) {
            var key = $enum1.current;
            var lm = (0,_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.layerManagerGetAllMaps)()[key];
            if ((lm.frame.reference === 18 || lm.frame.reference === 19) && !(list.indexOf(lm.frame) >= 0) && !lm.frame._systemGenerated) {
                list.push(lm.frame);
            }
        }
        return list;
    },

    _createLayerMasterList: function () {
        var masterList = [];
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.get_tourStops());
        while ($enum1.moveNext()) {
            var stop = $enum1.current;
            var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(stop.layers));
            while ($enum2.moveNext()) {
                var id = $enum2.current;
                if (!(masterList.indexOf(id) >= 0)) {
                    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(_layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_16__.LayerManager.get_layerList(), id)) {
                        masterList.push(id);
                    }
                }
            }
        }
        return masterList;
    },

    _isTimelineTour: function () {
        return false;
    },

    get_tagId: function () {
        return this._tagId;
    },

    set_tagId: function (value) {
        this._tagId = value;
        return value;
    },

    get_authorThumbnailFilename: function () {
        return 'Author.Png';
    },

    get_tourThumbnailFilename: function () {
        if (this._representativeThumbnailTourstop < this._tourStops.length) {
            return this._tourStops[this._representativeThumbnailTourstop].get_tourStopThumbnailFilename();
        } else {
            return null;
        }
    },

    get_id: function () {
        return this._id;
    },

    set_id: function (value) {
        this._id = value;
        return value;
    },

    get_title: function () {
        return this._title;
    },

    set_title: function (value) {
        this._title = value;
        this.set_tourDirty(true);
        return value;
    },

    get_runTime: function () {
        if (!this._runTime || this._lastDirtyCheck !== this._tourDirty) {
            this._runTime = this._calculateRunTime();
            this._lastDirtyCheck = this._tourDirty;
        }
        return this._runTime;
    },

    get_description: function () {
        return this._description;
    },

    set_description: function (value) {
        this._description = value;
        this.set_tourDirty(true);
        return value;
    },

    get_attributesAndCredits: function () {
        return this._attributesAndCredits;
    },

    set_attributesAndCredits: function (value) {
        this._attributesAndCredits = value;
        this.set_tourDirty(true);
        return value;
    },

    get_authorEmailOther: function () {
        return this._authorEmailOther;
    },

    set_authorEmailOther: function (value) {
        this._authorEmailOther = value;
        this.set_tourDirty(true);
        return value;
    },

    get_authorEmail: function () {
        return this._authorEmail;
    },

    set_authorEmail: function (value) {
        this._authorEmail = value;
        this.set_tourDirty(true);
        return value;
    },

    get_authorUrl: function () {
        return this._authorUrl;
    },

    set_authorUrl: function (value) {
        this._authorUrl = value;
        this.set_tourDirty(true);
        return value;
    },

    get_authorPhone: function () {
        return this._authorPhone;
    },

    set_authorPhone: function (value) {
        this._authorPhone = value;
        this.set_tourDirty(true);
        return value;
    },

    get_authorContactText: function () {
        return this._authorContactText;
    },

    set_authorContactText: function (value) {
        this._authorContactText = value;
        this.set_tourDirty(true);
        return value;
    },

    get_orgName: function () {
        return this._orgName;
    },

    set_orgName: function (value) {
        this._orgName = value;
        this.set_tourDirty(true);
        return value;
    },

    get_orgUrl: function () {
        return this._orgUrl;
    },

    set_orgUrl: function (value) {
        this._orgUrl = value;
        this.set_tourDirty(true);
        return value;
    },

    get_author: function () {
        return this._author;
    },

    set_author: function (value) {
        this._author = value;
        this.set_tourDirty(true);
        return value;
    },

    get_authorImageUrl: function () {
        return this._authorImageUrl;
    },

    set_authorImageUrl: function (value) {
        this._authorImageUrl = value;
        this.set_tourDirty(true);
        return value;
    },

    get_authorImage: function () {
        return this._authorImage;
    },

    set_authorImage: function (value) {
        this._authorImage = value;
        this.set_tourDirty(true);
        return value;
    },

    get_organizationUrl: function () {
        return this._organizationUrl;
    },

    set_organizationUrl: function (value) {
        this._organizationUrl = value;
        this.set_tourDirty(true);
        return value;
    },

    get_fileName: function () {
        return this._filename;
    },

    set_fileName: function (value) {
        this._filename = value;
        return value;
    },

    get_level: function () {
        return this._level;
    },

    set_level: function (value) {
        this._level = value;
        this.set_tourDirty(true);
        return value;
    },

    get_type: function () {
        return this._type;
    },

    set_type: function (value) {
        this._type = value;
        this.set_tourDirty(true);
        return value;
    },

    get_taxonomy: function () {
        return this._taxonomy;
    },

    set_taxonomy: function (value) {
        this._taxonomy = value;
        this.set_tourDirty(true);
        return value;
    },

    get_keywords: function () {
        return this._keywords;
    },

    set_keywords: function (value) {
        this._keywords = value;
        this.set_tourDirty(true);
        return value;
    },

    get_objects: function () {
        return this._objects;
    },

    set_objects: function (value) {
        this._objects = value;
        this.set_tourDirty(true);
        return value;
    },

    get_editMode: function () {
        return this._editMode;
    },

    set_editMode: function (value) {
        this._editMode = value;
        return value;
    },

    get_tourStops: function () {
        return this._tourStops;
    },

    set_tourStops: function (value) {
        this._tourStops = value;
        return value;
    },

    get_currentTourstopIndex: function () {
        return this._currentTourstopIndex;
    },

    set_currentTourstopIndex: function (value) {
        this._currentTourstopIndex = value;
        return value;
    },

    addTourStop: function (ts) {
        ts.set_owner(this);
        this.get_tourStops().push(ts);
        this._currentTourstopIndex = this._tourStops.length - 1;
        this.set_tourDirty(true);
    },

    insertTourStop: function (ts) {
        ts.set_owner(this);
        if (this._currentTourstopIndex > -1) {
            this.get_tourStops().splice(this._currentTourstopIndex, 0, ts);
        } else {
            this.get_tourStops().push(ts);
            this._currentTourstopIndex = this._tourStops.length - 1;
        }
        this.set_tourDirty(true);
    },

    insertAfterTourStop: function (ts) {
        ts.set_owner(this);
        if (this._currentTourstopIndex > -1 || this._currentTourstopIndex < this.get_tourStops().length) {
            this.get_tourStops().splice(this._currentTourstopIndex + 1, 0, ts);
        } else {
            this.get_tourStops().push(ts);
            this._currentTourstopIndex = this._tourStops.length - 1;
        }
        this.set_tourDirty(true);
    },

    removeTourStop: function (ts) {
        _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove(this._tourStops, ts);
        if (this._currentTourstopIndex > this._tourStops.length - 1) {
            this._currentTourstopIndex--;
        }
        this.set_tourDirty(true);
    },

    _calculateRunTime: function () {
        var totalTime = 0;
        for (var i = 0; i < this._tourStops.length; i++) {
            totalTime += this._tourStops[i].get_duration();
            if (i > 0) {
                switch (this._tourStops[i].get__transition()) {
                    case 0:
                        if (this._tourStops[i].get_target().get_backgroundImageset() == null || (this._tourStops[i - 1].get_target().get_backgroundImageset().get_dataSetType() === this._tourStops[i].get_target().get_backgroundImageset().get_dataSetType() && ((this._tourStops[i - 1].get_target().get_backgroundImageset().get_dataSetType() != _imageset_js__WEBPACK_IMPORTED_MODULE_8__.ImageSetType.solarSystem) || (this._tourStops[i - 1].get_target().get_target() === this._tourStops[i].get_target().get_target())))) {
                            var start = (this._tourStops[i - 1].get_endTarget() == null) ? this._tourStops[i - 1].get_target().get_camParams() : this._tourStops[i - 1].get_endTarget().get_camParams();
                            var slew = _view_mover_js__WEBPACK_IMPORTED_MODULE_9__.ViewMoverSlew.create(start, this._tourStops[i].get_target().get_camParams());
                            totalTime += slew.get_moveTime() * 1000;
                        }
                        break;
                    case 2:
                        break;
                    case 1:
                        break;
                    case 5:
                        break;
                    default:
                        break;
                }
            }
        }
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(totalTime);
    },

    elapsedTimeTillTourstop: function (index) {
        if (!index && index >= this._tourStops.length) {
            return 0;
        }
        var totalTime = 0;
        for (var i = 0; i < index; i++) {
            totalTime += this._tourStops[i].get_duration();
            if (i > 0) {
                switch (this._tourStops[i].get__transition()) {
                    case 0:
                        var start = (this._tourStops[i - 1].get_endTarget() == null) ? this._tourStops[i - 1].get_target().get_camParams() : this._tourStops[i - 1].get_endTarget().get_camParams();
                        if (this._tourStops[i - 1].get_target().get_backgroundImageset().get_dataSetType() === this._tourStops[i].get_target().get_backgroundImageset().get_dataSetType() && ((this._tourStops[i - 1].get_target().get_backgroundImageset().get_dataSetType() != _imageset_js__WEBPACK_IMPORTED_MODULE_8__.ImageSetType.solarSystem) || (this._tourStops[i - 1].get_target().get_target() === this._tourStops[i].get_target().get_target()))) {
                            var slew = _view_mover_js__WEBPACK_IMPORTED_MODULE_9__.ViewMoverSlew.create(start, this._tourStops[i].get_target().get_camParams());
                            totalTime += slew.get_moveTime() * 1000;
                        }
                        break;
                    case 2:
                        break;
                    case 1:
                        break;
                    case 5:
                        break;
                    default:
                        break;
                }
            }
        }
        return totalTime / 1000;
    },

    elapsedTimeSinceLastMaster: function (index) {
        var masterOut = null;
        if (!index && index >= this._tourStops.length) {
            return null;
        }
        var totalTime = 0;
        for (var i = 0; i < index; i++) {
            if (this._tourStops[i].get_masterSlide()) {
                totalTime = 0;
                masterOut = this._tourStops[i];
            }
            totalTime += this._tourStops[i].get_duration();
            if (i > 0) {
                switch (this._tourStops[i].get__transition()) {
                    case 0:
                        var start = (this._tourStops[i - 1].get_endTarget() == null) ? this._tourStops[i - 1].get_target().get_camParams() : this._tourStops[i - 1].get_endTarget().get_camParams();
                        if (this._tourStops[i - 1].get_target().get_backgroundImageset().get_dataSetType() === this._tourStops[i].get_target().get_backgroundImageset().get_dataSetType() && ((this._tourStops[i - 1].get_target().get_backgroundImageset().get_dataSetType() != _imageset_js__WEBPACK_IMPORTED_MODULE_8__.ImageSetType.solarSystem) || (this._tourStops[i - 1].get_target().get_target() === this._tourStops[i].get_target().get_target()))) {
                            var slew = _view_mover_js__WEBPACK_IMPORTED_MODULE_9__.ViewMoverSlew.create(start, this._tourStops[i].get_target().get_camParams());
                            totalTime += slew.get_moveTime() * 1000;
                        }
                        break;
                    case 2:
                        break;
                    case 1:
                        break;
                    case 5:
                        break;
                    default:
                        break;
                }
            }
        }
        return new _tour_player_js__WEBPACK_IMPORTED_MODULE_13__.MasterTime(masterOut, totalTime / 1000);
    },

    getMasterSlideForIndex: function (index) {
        var master = -1;
        for (var i = 0; i < index; i++) {
            if (this._tourStops[i].get_masterSlide()) {
                master = i;
            }
        }
        if (master === -1) {
            return null;
        }
        return this._tourStops[master];
    },

    getTourStopIndexByID: function (id) {
        if (!id || id === 'Next') {
            return this._currentTourstopIndex++;
        }
        var index = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._tourStops);
        while ($enum1.moveNext()) {
            var stop = $enum1.current;
            if (stop.get_id() === id) {
                return index;
            }
            index++;
        }
        return -1;
    },

    cleanUp: function () { },

    getCachedTexture: function (filename, callMe) {
        if (this._textureList == null) {
            this._textureList = {};
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this._textureList, filename)) {
            callMe();
            return this._textureList[filename];
        }
        var url = this.getFileStream(filename);
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.whitespace(url)) {
            var texture = document.createElement('img');
            texture.src = this.getFileStream(filename);
            texture.addEventListener('load', function () {
                callMe();
            }, false);
            this._textureList[filename] = texture;
            return texture;
        } else {
            return null;
        }
    },

    getCachedTexture2d: function (filename) {
        if (this._textureList2d == null) {
            this._textureList2d = {};
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this._textureList2d, filename)) {
            return this._textureList2d[filename];
        }
        var texture = new _graphics_texture_js__WEBPACK_IMPORTED_MODULE_5__.Texture();
        texture.load(this.getFileStream(filename));
        this._textureList2d[filename] = texture;
        return texture;
    },

    addCachedFile: function (filename, file) {
        this._fileCache[filename] = file;

        //Clean up old Cached Textures if they are based on this file.

        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this._textureList2d, filename)) {
            delete this._textureList2d[filename];
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this._textureList, filename)) {
            delete this._textureList[filename];
        }
    },

    getFileStream: function (filename) {
        var blob = this.getFileBlob(filename);
        if (blob == null) {
            return null;
        }
        return URL.createObjectURL(blob);
    },

    getFileBlob: function (filename) {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(this._fileCache, filename)) {
            return this._fileCache[filename];
        } else if (this._cabinet != null) {
            return this._cabinet.getFileBlob(this.get_workingDirectory() + filename);
        } else {
            return null;
        }
    },

    get_currentTourStop: function () {
        if (this._currentTourstopIndex > -1) {
            return this.get_tourStops()[this._currentTourstopIndex];
        } else {
            return null;
        }
    },

    set_currentTourStop: function (value) {
        var i = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.get_tourStops());
        while ($enum1.moveNext()) {
            var stop = $enum1.current;
            if (stop === value) {
                if (this._currentTourstopIndex > -1) {
                }
                this._currentTourstopIndex = i;
                break;
            }
            i++;
        }
        return value;
    },

    clearTempFiles: function () { }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("TourDocument", [TourDocument, TourDocument$, null]);


/***/ }),

/***/ "./esm/tours/tour_edit.js":
/*!********************************!*\
  !*** ./esm/tours/tour_edit.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TourEditTab: () => (/* binding */ TourEditTab)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
/* harmony import */ var _utilities_xml_text_writer_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utilities/xml_text_writer.js */ "./esm/utilities/xml_text_writer.js");
/* harmony import */ var _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utilities/context_menu_strip.js */ "./esm/utilities/context_menu_strip.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util.js */ "./esm/util.js");
/* harmony import */ var _place_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../place.js */ "./esm/place.js");
/* harmony import */ var _space_time_controller_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../space_time_controller.js */ "./esm/space_time_controller.js");
/* harmony import */ var _ui_tools_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../ui_tools.js */ "./esm/ui_tools.js");
/* harmony import */ var _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../layers/layer_manager.js */ "./esm/layers/layer_manager.js");
/* harmony import */ var _overlay_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./overlay.js */ "./esm/tours/overlay.js");
/* harmony import */ var _undo_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./undo.js */ "./esm/tours/undo.js");
/* harmony import */ var _tour_stop_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./tour_stop.js */ "./esm/tours/tour_stop.js");
/* harmony import */ var _tour_player_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./tour_player.js */ "./esm/tours/tour_player.js");
/* harmony import */ var _tour_editor_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./tour_editor.js */ "./esm/tours/tour_editor.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// The "tour editor tab" UX.
//
// This file defines `TourEditTab`; the types `TourEdit` and `TourEditor` are
// defined in `tour_editor.js`.






















// wwtlib.TourEditTab

function TourEditTab() {
    this.musicTrack = new _tour_editor_js__WEBPACK_IMPORTED_MODULE_18__.SoundEditor();
    this.voiceTrack = new _tour_editor_js__WEBPACK_IMPORTED_MODULE_18__.SoundEditor();
    this._tour = null;
    this.tourStopList = new _tour_editor_js__WEBPACK_IMPORTED_MODULE_18__.TourStopList();
    this.tourEditorUI = new _tour_editor_js__WEBPACK_IMPORTED_MODULE_18__.TourEditor();
    this._contextMenu = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ContextMenuStrip();
    this.nextSlideCallback = null;
    this.playing = false;
    this._player = null;
    this._defultColor = _color_js__WEBPACK_IMPORTED_MODULE_6__.Colors.get_white();
}

var TourEditTab$ = {
    setUiStrings: function () { },

    get_tour: function () {
        return this._tour;
    },

    set_tour: function (value) {
        this._tour = value;
        this.tourEditorUI.set_tour(this._tour);
        this.tourStopList.tour = this._tour;
        _overlay_js__WEBPACK_IMPORTED_MODULE_14__.Overlay.defaultAnchor = 1;
        if (this._tour.get_tourStops().length > 0) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.gotoTarget(this._tour.get_tourStops()[0].get_target(), false, true, false);
            this._tour.set_currentTourstopIndex(0);
            this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex();
            this.musicTrack.target = this._tour.get_currentTourStop();
            this.voiceTrack.target = this._tour.get_currentTourStop();
            (0,_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.setManagerVisibleLayerList)(this._tour.get_currentTourStop().layers);
        }
        this.setEditMode(this._tour.get_editMode());
        return value;
    },

    tour_CurrentTourstopChanged: function () {
        _tour_editor_js__WEBPACK_IMPORTED_MODULE_18__.OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.tourEditorUI.selection);
        if (this.tourEditorUI != null) {
            this.tourEditorUI.clearSelection();
        }
        this.tourStopList.refresh();
    },

    setFocusedChild: function () { },

    selectCurrent: function () {
        this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex();
        this.tourStopList.refresh();
    },

    tourEdit_Load: function (sender, e) { },

    playNow: function (fromStart) {
        this.playing = true;
        if (this.get_tour().get_editMode() || fromStart) {
            this.get_tour().set_currentTourstopIndex(-1);
        }
        this.setPlayPauseMode();
    },

    _tourPlayer_TourEnded: function (sender, e) { },

    _endTour_CloseTour: function (sender, e) { },

    _endTour_LaunchTour: function (sender, e) {
        this.playNow(true);
    },

    setEditMode: function (visible) { },

    tourStopList_ItemClicked: function (sender, e) {
        if (this._tour.get_currentTourStop() !== e) {
            this._tour.set_currentTourStop(e);
            if (e != null) {
                this.musicTrack.target = this._tour.get_currentTourStop();
                this.voiceTrack.target = this._tour.get_currentTourStop();
            }
            else {
                this.musicTrack.target = null;
                this.voiceTrack.target = null;
            }
            this.tourEditorUI.clearSelection();
        }
        if (this.playing) {
            this._playFromHere_Click(sender, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
        }
    },

    tourStopList_ItemDoubleClicked: function (sender, e) {
        this.showSlideStartPosition(e);
    },

    showSlideStartPosition: function (ts) {
        this._tour.set_currentTourStop(ts);
        if (ts != null) {
            this.musicTrack.target = this._tour.get_currentTourStop();
            this.voiceTrack.target = this._tour.get_currentTourStop();
        } else {
            this.musicTrack.target = null;
            this.voiceTrack.target = null;
        }
        this.tourEditorUI.clearSelection();
        if (this._tour.get_currentTourStop() != null) {
            this._tour.get_currentTourStop().syncSettings();
            _space_time_controller_js__WEBPACK_IMPORTED_MODULE_11__.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_startTime());
            _space_time_controller_js__WEBPACK_IMPORTED_MODULE_11__.SpaceTimeController.set_syncToClock(false);
            _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.gotoTarget(ts.get_target(), false, true, false);
            this._tour.get_currentTourStop().set_tweenPosition(0);
            this._tour.get_currentTourStop()._updateLayerOpacity();
            (0,_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.setManagerVisibleLayerList)(this._tour.get_currentTourStop().layers);
        }
    },

    tourStopList_MouseClick: function (sender, e) {
        if (!this._tour.get_editMode()) {
        }
        if (this.tourStopList.multipleSelection) {
            // MultiSelection Menu
            if (this._contextMenu != null) {
                this._contextMenu._dispose();
            }
            this._contextMenu = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ContextMenuStrip();
            var selectAllMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(1345, 'Select All'));
            var cutMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(427, 'Cut'));
            var copyMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(428, 'Copy'));
            var pasteMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(429, 'Paste'));
            var deleteMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(167, 'Delete'));
            cutMenu.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_cutMenu_Click', this);
            copyMenu.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_copyMenu_Click', this);
            pasteMenu.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_pasteMenu_Click', this);
            deleteMenu.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_deleteMenu_Click', this);
            selectAllMenu.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_selectAllMenu_Click', this);
            var sep1 = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripSeparator();
            this._contextMenu.items.push(selectAllMenu);
            this._contextMenu.items.push(sep1);
            this._contextMenu.items.push(cutMenu);
            this._contextMenu.items.push(copyMenu);
            pasteMenu.enabled = this.tourEditorUI.clipboardType === 'WorldWideTelescope.Slide';
            this._contextMenu.items.push(pasteMenu);
            this._contextMenu.items.push(deleteMenu);
            this._contextMenu._show(_util_js__WEBPACK_IMPORTED_MODULE_9__.Cursor.get_position());
        } else if (this._tour.get_currentTourStop() == null) {
            // Context menu for no selection
            if (this._contextMenu != null) {
                this._contextMenu._dispose();
            }
            this._contextMenu = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ContextMenuStrip();
            var selectAllMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(1345, 'Select All'));
            var pasteMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(425, 'Paste'));
            var sep1 = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripSeparator();
            var sep2 = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripSeparator();
            var insertSlide = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(426, 'Add New Slide'));
            pasteMenu.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_pasteMenu_Click', this);
            selectAllMenu.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_selectAllMenu_Click', this);
            insertSlide.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_addNewSlide_Click', this);
            pasteMenu.enabled = this.tourEditorUI.clipboardType === 'WorldWideTelescope.Slide';
            this._contextMenu.items.push(selectAllMenu);
            this._contextMenu.items.push(sep1);
            this._contextMenu.items.push(pasteMenu);
            this._contextMenu.items.push(sep2);
            this._contextMenu.items.push(insertSlide);
            this._contextMenu._show(_util_js__WEBPACK_IMPORTED_MODULE_9__.Cursor.get_position());
        } else {
            if (this._contextMenu != null) {
                this._contextMenu._dispose();
            }
            this._contextMenu = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ContextMenuStrip();
            var selectAllMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(1345, 'Select All'));
            var cutMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(427, 'Cut'));
            var copyMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(428, 'Copy'));
            var pasteMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(429, 'Paste'));
            var deleteMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(167, 'Delete'));
            var sep1 = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripSeparator();
            var sep3 = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripSeparator();
            var sep4 = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripSeparator();
            var sep5 = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripSeparator();
            var sep6 = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripSeparator();
            var sep7 = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripSeparator();
            var insertSlide = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(431, 'Insert New Slide'));
            var insertDuplicate = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(627, 'Duplicate Slide at End Position'));
            var insertSlideshow = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(628, 'Merge Tour after slide...'));
            var playFromHere = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(432, 'Preview Tour From Here'));
            var sep2 = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripSeparator();
            var captureThumbnail = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(433, 'Capture New Thumbnail'));
            var setSkyPosition = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(434, 'Set Start Camera Position'));
            var setEndSkyPosition = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(435, 'Set End Camera Position'));
            var showSkyPosition = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(436, 'Show Start Camera Position'));
            var showEndSkyPosition = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(437, 'Show End Camera Position'));
            var masterSlide = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(438, 'Master Slide'));
            var makeTimeline = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(1346, 'Create Timeline'));
            var showTimeline = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(1347, 'Show Timeline'));
            var linkString = this._tour.get_currentTourStop().get_nextSlide();
            switch (linkString) {
                case '':
                case null:
                case 'Next':
                    linkString = ' (' + _util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(610, 'Next Slide') + ')';
                    break;
                case 'Return':
                    linkString = ' (' + _util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(602, 'Return to Caller') + ')';
                    break;
                default:
                    var index = this.get_tour().getTourStopIndexByID(linkString);
                    if (index > -1) {
                        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._tour.get_tourStops()[index].get_description())) {
                            linkString = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format(' (Slide {0})', index);
                        }
                        else {
                            linkString = ' (' + this._tour.get_tourStops()[index].get_description() + ')';
                        }
                    }
                    break;
            }
            var setNextSlide = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(590, 'Set Next Slide') + linkString);
            var trackSpaceTime = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(439, 'Track Date/Time/Location'));
            var fadeInOverlays = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(629, 'Fade In Slide Elements'));
            var properties = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(20, 'Properties'));
            var interpolation = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(1029, 'Animation Tween Type'));
            var Linear = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(1030, 'Linear'));
            var Ease = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(1031, 'Ease In/Out'));
            var EaseIn = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(1032, 'Ease In'));
            var EaseOut = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(1033, 'Ease Out'));
            var Exponential = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_8__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(1034, 'Exponential'));
            Linear.tag = 0;
            Ease.tag = 3;
            EaseIn.tag = 1;
            EaseOut.tag = 2;
            Exponential.tag = 4;
            Linear.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_interpolation_Click', this);
            Ease.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_interpolation_Click', this);
            EaseIn.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_interpolation_Click', this);
            EaseOut.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_interpolation_Click', this);
            Exponential.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_interpolation_Click', this);
            switch (this._tour.get_currentTourStop().get_interpolationType()) {
                case 0:
                    Linear.checked = true;
                    break;
                case 1:
                    EaseIn.checked = true;
                    break;
                case 2:
                    EaseOut.checked = true;
                    break;
                case 3:
                    Ease.checked = true;
                    break;
                case 4:
                    Exponential.checked = true;
                    break;
                default:
                    break;
            }
            interpolation.dropDownItems.push(Linear);
            interpolation.dropDownItems.push(Ease);
            interpolation.dropDownItems.push(EaseIn);
            interpolation.dropDownItems.push(EaseOut);
            interpolation.dropDownItems.push(Exponential);
            selectAllMenu.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_selectAllMenu_Click', this);
            insertDuplicate.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_insertDuplicate_Click', this);
            cutMenu.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_cutMenu_Click', this);
            copyMenu.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_copyMenu_Click', this);
            pasteMenu.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_pasteMenu_Click', this);
            deleteMenu.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_deleteMenu_Click', this);
            insertSlide.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_insertNewSlide_Click', this);
            properties.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_properties_Click', this);
            captureThumbnail.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_captureThumbnail_Click', this);
            setSkyPosition.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_setSkyPosition_Click', this);
            setEndSkyPosition.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_setEndSkyPosition_Click', this);
            showEndSkyPosition.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_showEndSkyPosition_Click', this);
            showSkyPosition.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_showSkyPosition_Click', this);
            playFromHere.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_playFromHere_Click', this);
            masterSlide.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_masterSlide_Click', this);
            setNextSlide.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_setNextSlide_Click', this);
            trackSpaceTime.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_trackSpaceTime_Click', this);
            insertSlideshow.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_insertSlideshow_Click', this);
            fadeInOverlays.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_fadeInOverlays_Click', this);
            if (this._tour.get_currentTourStop().get_masterSlide()) {
                masterSlide.checked = true;
            }
            if (this._tour.get_currentTourStop().get_hasTime()) {
                trackSpaceTime.checked = true;
            }
            fadeInOverlays.checked = this._tour.get_currentTourStop().get_fadeInOverlays();
            this._contextMenu.items.push(selectAllMenu);
            this._contextMenu.items.push(sep7);
            this._contextMenu.items.push(cutMenu);
            this._contextMenu.items.push(copyMenu);
            pasteMenu.enabled = this.tourEditorUI.clipboardType === 'WorldWideTelescope.Slide';
            this._contextMenu.items.push(pasteMenu);
            this._contextMenu.items.push(deleteMenu);
            this._contextMenu.items.push(sep1);
            this._contextMenu.items.push(insertSlide);
            this._contextMenu.items.push(insertDuplicate);
            this._contextMenu.items.push(insertSlideshow);
            this._contextMenu.items.push(sep2);
            this._contextMenu.items.push(playFromHere);
            this._contextMenu.items.push(sep3);
            this._contextMenu.items.push(setSkyPosition);
            this._contextMenu.items.push(setEndSkyPosition);
            this._contextMenu.items.push(sep4);
            this._contextMenu.items.push(showSkyPosition);
            this._contextMenu.items.push(showEndSkyPosition);
            this._contextMenu.items.push(sep5);
            this._contextMenu.items.push(captureThumbnail);
            this._contextMenu.items.push(sep6);
            this._contextMenu.items.push(masterSlide);
            this._contextMenu.items.push(setNextSlide);
            this._contextMenu.items.push(fadeInOverlays);
            this._contextMenu.items.push(trackSpaceTime);
            this._contextMenu.items.push(interpolation);
            this._contextMenu._show(_double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector2d.create(e.clientX, e.clientY));
        }
    },

    _selectAllMenu_Click: function (sender, e) {
        this.tourStopList.selectAll();
    },

    _interpolation_Click: function (sender, e) {
        var item = sender;
        this._tour.get_currentTourStop().set_interpolationType(item.tag);
    },

    _nextSlideChosen: function () {
        if (this._selectDialog.get_OK()) {
            this._tour.get_currentTourStop().set_nextSlide(this._selectDialog.get_id());
        }
    },

    _setNextSlide_Click: function (sender, e) {
        this._selectDialog = new _util_js__WEBPACK_IMPORTED_MODULE_9__.SelectLink(null);
        this.nextSlideCallback(this._selectDialog, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_nextSlideChosen', this));
    },

    _insertDuplicate_Click: function (sender, e) {
        _undo_js__WEBPACK_IMPORTED_MODULE_15__.Undo.push(new _undo_js__WEBPACK_IMPORTED_MODULE_15__.UndoTourSlidelistChange(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(530, 'Duplicate Slide at End Position'), this._tour));
        var ts = this._tour.get_currentTourStop().copy();
        if (ts == null) {
            return;
        }
        if (ts.get_endTarget() != null) {
            ts.get_endTarget().set_backgroundImageset(ts.get_target().get_backgroundImageset());
            ts.get_endTarget().set_studyImageset(ts.get_target().get_studyImageset());
            ts.set_target(ts.get_endTarget());
            ts.set_startTime(ts.get_endTime());
            ts.set_endTarget(null);
        }
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(ts.get_overlays());
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            overlay.set_tweenFactor(1);
            overlay.set_animate(!overlay.get_animate());
            overlay.set_animate(!overlay.get_animate());
        }
        ts.set_tweenPosition(0);
        ts.set_fadeInOverlays(false);
        this._tour.insertAfterTourStop(ts);
        this.tourStopList.refresh();
    },

    _fadeInOverlays_Click: function (sender, e) {
        this._tour.get_currentTourStop().set_fadeInOverlays(!this._tour.get_currentTourStop().get_fadeInOverlays());
    },

    _insertSlideshow_Click: function (sender, e) { },

    _trackSpaceTime_Click: function (sender, e) {
        _undo_js__WEBPACK_IMPORTED_MODULE_15__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_16__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(532, 'Track Time Edit'), this._tour));
        this._tour.get_currentTourStop().set_hasTime(!this._tour.get_currentTourStop().get_hasTime());
    },

    _masterSlide_Click: function (sender, e) {
        _undo_js__WEBPACK_IMPORTED_MODULE_15__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_16__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(533, 'Master Slide State Edit'), this._tour));
        this._tour.get_currentTourStop().set_masterSlide(!this._tour.get_currentTourStop().get_masterSlide());
        this.tourStopList.refresh();
    },

    _playFromHere_Click: function (sender, e) {
        this.playFromCurrentTourstop();
    },

    playFromCurrentTourstop: function () {
        this.playing = true;
        _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.gotoTarget(this._tour.get_currentTourStop().get_target(), false, true, false);
        _space_time_controller_js__WEBPACK_IMPORTED_MODULE_11__.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_startTime());
        _space_time_controller_js__WEBPACK_IMPORTED_MODULE_11__.SpaceTimeController.set_syncToClock(false);
        this.setPlayPauseMode();
    },

    playFromTourstop: function (ts) {
        this._tour.set_currentTourStop(ts);
        this.playFromCurrentTourstop();
    },

    _showSkyPosition_Click: function (sender, e) {
        if (this._tour.get_currentTourStop() != null) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.gotoTarget(this._tour.get_currentTourStop().get_target(), false, true, false);
            this._tour.get_currentTourStop().syncSettings();
            _space_time_controller_js__WEBPACK_IMPORTED_MODULE_11__.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_startTime());
            _space_time_controller_js__WEBPACK_IMPORTED_MODULE_11__.SpaceTimeController.set_syncToClock(false);
            this._tour.get_currentTourStop().set_tweenPosition(0);
            (0,_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.setManagerVisibleLayerList)(this._tour.get_currentTourStop().layers);
            this.tourStopList.refresh();
        }
    },

    _showEndSkyPosition_Click: function (sender, e) {
        this._tour.get_currentTourStop().set_tweenPosition(1);
        this._tour.get_currentTourStop()._updateLayerOpacity();
        if (this._tour.get_currentTourStop() != null && this._tour.get_currentTourStop().get_endTarget() != null) {
            _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.gotoTargetFull(false, true, this._tour.get_currentTourStop().get_endTarget().get_camParams(), this._tour.get_currentTourStop().get_target().get_studyImageset(), this._tour.get_currentTourStop().get_target().get_backgroundImageset());
            _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.set_solarSystemTrack(this._tour.get_currentTourStop().get_endTarget().get_target());
            _space_time_controller_js__WEBPACK_IMPORTED_MODULE_11__.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_endTime());
            this._tour.get_currentTourStop().syncSettings();
            (0,_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.setManagerVisibleLayerList)(this._tour.get_currentTourStop().layers);
            _space_time_controller_js__WEBPACK_IMPORTED_MODULE_11__.SpaceTimeController.set_syncToClock(false);
            this.tourStopList.refresh();
            this.tourEditorUI.clearSelection();
        }
    },

    _setEndSkyPosition_Click: function (sender, e) {
        if (this._tour.get_currentTourStop() != null) {
            _undo_js__WEBPACK_IMPORTED_MODULE_15__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_16__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(435, 'Set End Camera Position'), this._tour));
            var newPlace = _place_js__WEBPACK_IMPORTED_MODULE_10__.Place.createCameraParams('End Place', _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera.copy(), 268435456, _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.constellation, _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.get_backgroundImageset().get_dataSetType(), _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.get_solarSystemTrack());
            this._tour.get_currentTourStop().set_endTarget(newPlace);
            this._tour.get_currentTourStop().get_endTarget().set_constellation(_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.constellation);
            this._tour.get_currentTourStop().set_endTime(_space_time_controller_js__WEBPACK_IMPORTED_MODULE_11__.SpaceTimeController.get_now());
            this._tour.get_currentTourStop().set_tweenPosition(1);
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(this._tour.get_currentTourStop().layers));
            while ($enum1.moveNext()) {
                var key = $enum1.current;
                var info = this._tour.get_currentTourStop().layers[key];
                if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists(_layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_13__.LayerManager.get_layerList(), info.id)) {
                    info.endOpacity = _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_13__.LayerManager.get_layerList()[info.id].get_opacity();
                    info.endParams = _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_13__.LayerManager.get_layerList()[info.id].getParams();
                }
            }
            this._tour.get_currentTourStop()._updateLayerOpacity();
            this.tourStopList.refresh();
            _tour_editor_js__WEBPACK_IMPORTED_MODULE_18__.TimeLine.refreshUi();
            this.tourEditorUI.clearSelection();
        }
    },

    _setSkyPosition_Click: function (sender, e) {
        if (this._tour.get_currentTourStop() != null) {
            _undo_js__WEBPACK_IMPORTED_MODULE_15__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_16__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(434, 'Set Start Camera Position'), this._tour));
            this._tour.get_currentTourStop().get_target().set_target(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.get_solarSystemTrack());
            this._tour.get_currentTourStop().get_target().set_type(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.get_backgroundImageset().get_dataSetType());
            this._tour.get_currentTourStop().get_target().set_camParams(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera.copy());
            this._tour.get_currentTourStop().get_target().set_constellation(_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.constellation);
            this._tour.get_currentTourStop().get_target().set_studyImageset(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.get_foregroundImageset());
            this._tour.get_currentTourStop().get_target().set_type(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.get_backgroundImageset().get_dataSetType());
            this._tour.get_currentTourStop().get_target().set_backgroundImageset(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.get_backgroundImageset().get_stockImageSet());
            this._tour.get_currentTourStop().captureSettings();
            this._tour.get_currentTourStop().layers = _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_13__.LayerManager._getVisibleLayerList(this._tour.get_currentTourStop().layers);
            this._tour.get_currentTourStop().set_tweenPosition(0);
            this.tourStopList.refresh();
            _tour_editor_js__WEBPACK_IMPORTED_MODULE_18__.TimeLine.refreshUi();
            this.tourEditorUI.clearSelection();
        }
    },

    _captureThumbnail_Click: function (sender, e) {
        if (this._tour.get_currentTourStop() != null) {
            this._captureThumbnail(this._tour.get_currentTourStop());
        }
    },

    _captureThumbnail: function (tourStop) {
        var $this = this;

        _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.captureThumbnail(function (blob) {
            var filename = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0}.thumb.png', tourStop.get_id());
            $this._tour.addCachedFile(filename, blob);
            tourStop.set_thumbnail($this._tour.getCachedTexture(filename, function () {
                $this.tourStopList.refresh();
            }));
        });
    },

    _properties_Click: function (sender, e) {
        throw new Error('The method or operation is not implemented.');
    },

    tourStopList_AddNewSlide: function (sender, e) {
        this.addSlide(false);
        this.tourStopList.ensureAddVisible();
    },

    _addNewSlide_Click: function (sender, e) {
        this.addSlide(false);
        this.tourStopList.ensureAddVisible();
    },

    _insertNewSlide_Click: function (sender, e) {
        this.addSlide(true);
    },

    addSlide: function (insert) {
        _undo_js__WEBPACK_IMPORTED_MODULE_15__.Undo.push(new _undo_js__WEBPACK_IMPORTED_MODULE_15__.UndoTourSlidelistChange(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(426, 'Add New Slide'), this._tour));
        _util_js__WEBPACK_IMPORTED_MODULE_9__.Cursor.set_current(_util_js__WEBPACK_IMPORTED_MODULE_9__.Cursors.get_waitCursor());
        var placeName = 'Current Screen';
        var newPlace = _place_js__WEBPACK_IMPORTED_MODULE_10__.Place.createCameraParams(placeName, _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.viewCamera.copy(), 268435456, _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.constellation, _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.get_backgroundImageset().get_dataSetType(), _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.get_solarSystemTrack());
        newPlace.set_studyImageset(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.get_foregroundImageset());
        newPlace.set_backgroundImageset(_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.get_backgroundImageset().get_stockImageSet());
        var newTourStop = _tour_stop_js__WEBPACK_IMPORTED_MODULE_16__.TourStop.create(newPlace);
        if (insert) {
            this._tour.insertTourStop(newTourStop);
        } else {
            this._tour.addTourStop(newTourStop);
        }
        if (this._tour.get_currentTourStop() != null) {
            this.musicTrack.target = this._tour.get_currentTourStop();
            this.voiceTrack.target = this._tour.get_currentTourStop();
        } else {
            this.musicTrack.target = null;
            this.voiceTrack.target = null;
        }
        this._tour.get_currentTourStop().layers = _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_13__.LayerManager._getVisibleLayerList(this._tour.get_currentTourStop().layers);
        this._captureThumbnail(newTourStop);
        this.tourStopList.selectedItem = this.tourStopList.findItem(newTourStop);
        this.tourStopList.refresh();
        this.tourEditorUI.clearSelection();
        _util_js__WEBPACK_IMPORTED_MODULE_9__.Cursor.set_current(_util_js__WEBPACK_IMPORTED_MODULE_9__.Cursors.get_defaultV());
        _tour_editor_js__WEBPACK_IMPORTED_MODULE_18__.TimeLine.refreshUi();
    },

    _deleteMenu_Click: function (sender, e) {
        _undo_js__WEBPACK_IMPORTED_MODULE_15__.Undo.push(new _undo_js__WEBPACK_IMPORTED_MODULE_15__.UndoTourSlidelistChange(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(534, 'Delete Slide'), this._tour));
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(this.tourStopList.selectedItems));
        while ($enum1.moveNext()) {
            var key = $enum1.current;
            var item = this.tourStopList.selectedItems[key];
            this._tour.removeTourStop(item);
        }
        _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.clearKeys(this.tourStopList.selectedItems);
        this.tourStopList.selectedItem = -1;
        this._tour.set_currentTourStop(null);
        this.musicTrack.target = null;
        this.voiceTrack.target = null;
        this.tourStopList.refresh();
        this.tourEditorUI.clearSelection();
    },

    _pasteMenu_Click: function (sender, e) {
        if (this.tourEditorUI.clipboardType === 'WorldWideTelescope.Slide') {
            _undo_js__WEBPACK_IMPORTED_MODULE_15__.Undo.push(new _undo_js__WEBPACK_IMPORTED_MODULE_15__.UndoTourSlidelistChange(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(535, 'Paste Slide'), this._tour));
            var xParser = new DOMParser();
            var doc = xParser.parseFromString(this.tourEditorUI.clipboardData, 'text/xml');
            var node = _baseutil_js__WEBPACK_IMPORTED_MODULE_5__.Util.selectSingleNode(doc, 'TourStops');
            var pasteStack = new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.Stack();
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(node.childNodes);
            while ($enum1.moveNext()) {
                var child = $enum1.current;
                if (child.nodeName === 'TourStop') {
                    var ts = _tour_stop_js__WEBPACK_IMPORTED_MODULE_16__.TourStop._fromXml(this._tour, child);
                    ts.set_id(_util_js__WEBPACK_IMPORTED_MODULE_9__.Guid.newGuid().toString());
                    pasteStack.push(ts);
                }
            }
            _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.clearKeys(this.tourStopList.selectedItems);
            var curIndex = this.tourStopList.selectedItem + pasteStack.count - 1;
            while (pasteStack.count > 0) {
                var ts = pasteStack.pop();
                this._tour.insertTourStop(ts);
                this.tourStopList.selectedItems[curIndex--] = ts;
            }
            this.tourStopList.refresh();
            this.tourEditorUI.clearSelection();
        }
    },

    _copyMenu_Click: function (sender, e) {
        var writer = new _utilities_xml_text_writer_js__WEBPACK_IMPORTED_MODULE_7__.XmlTextWriter();
        writer._writeProcessingInstruction('xml', "version='1.0' encoding='UTF-8'");
        writer._writeStartElement('TourStops');
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(this.tourStopList.selectedItems));
        while ($enum1.moveNext()) {
            var key = $enum1.current;
            var item = this.tourStopList.selectedItems[key];
            item._saveToXml(writer, true);
        }
        writer._writeEndElement();
        this.tourEditorUI.clipboardType = 'WorldWideTelescope.Slide';
        this.tourEditorUI.clipboardData = writer.body;
    },

    _cutMenu_Click: function (sender, e) {
        _undo_js__WEBPACK_IMPORTED_MODULE_15__.Undo.push(new _undo_js__WEBPACK_IMPORTED_MODULE_15__.UndoTourSlidelistChange(_util_js__WEBPACK_IMPORTED_MODULE_9__.Language.getLocalizedText(536, 'Cut Slide'), this._tour));
        this._copyMenu_Click(sender, e);
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(this.tourStopList.selectedItems));
        while ($enum1.moveNext()) {
            var key = $enum1.current;
            var item = this.tourStopList.selectedItems[key];
            this._tour.removeTourStop(item);
        }
        _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.clearKeys(this.tourStopList.selectedItems);
        this.tourStopList.refresh();
        this.tourEditorUI.clearSelection();
    },

    pauseTour: function () {
        if (this.playing) {
            this.playing = false;
        }
        this.setPlayPauseMode();
    },

    preview_Click: function (sender, e) {
        this.playing = !this.playing;
        if (this.playing && this._tour.get_editMode()) {
            this.get_tour().set_currentTourstopIndex(-1);
        }
        this.setPlayPauseMode();
    },

    setPlayPauseMode: function () {
        if (this._tour.get_editMode()) {
            if (this.playing) {
                if (this._player == null) {
                    this._player = new _tour_player_js__WEBPACK_IMPORTED_MODULE_17__.TourPlayer();
                }
                this._player.set_tour(this._tour);
                _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.uiController = this._player;
                this._player.play();
                this.tourStopList.showAddButton = false;
            }
            else {
                _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.uiController = this.tourEditorUI;
                if (this._player != null) {
                    this._player.stop(false);
                }
                this._player = null;
                _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.set__mover(null);
                this.tourStopList.showAddButton = this._tour.get_editMode();
            }
        } else {
            if (this.playing) {
                if (this._player == null) {
                    this._player = new _tour_player_js__WEBPACK_IMPORTED_MODULE_17__.TourPlayer();
                }
                this._player.set_tour(this._tour);
                _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.uiController = this._player;
                this._player.play();
                this.tourStopList.showAddButton = false;
            }
            else {
                _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.uiController = null;
                _render_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalRenderContext.freezeView();
                if (this._player != null) {
                    this._player.stop(false);
                }
                this._player = null;
                _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.uiController = null;
                _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalWWTControl.set__mover(null);
                this.tourStopList.showAddButton = this._tour.get_editMode();
            }
        }
        this.tourStopList.refresh();
    },

    playerTimer_Tick: function (sender, e) {
        if (this.playing) {
            if (this._player != null) {
                if (!_tour_player_js__WEBPACK_IMPORTED_MODULE_17__.TourPlayer.get_playing()) {
                    this.playing = false;
                    this.setPlayPauseMode();
                }
                else {
                    if (this.tourStopList.selectedItem !== this._tour.get_currentTourstopIndex()) {
                        this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex();
                    }
                }
            }
        }
    },

    insertShapeCircle_Click: function (sender, e) {
        this.tourEditorUI.addShape('', 0);
    },

    insertShapeRectangle_Click: function (sender, e) {
        this.tourEditorUI.addShape('', 1);
    },

    insertShapeLine_Click: function (sender, e) {
        this.tourEditorUI.addShape('', 5);
    },

    insertDonut_Click: function (sender, e) {
        this.tourEditorUI.addShape('', 3);
    },

    _addArrow_Click: function (sender, e) {
        this.tourEditorUI.addShape('', 4);
    },

    insertVideo_Click: function (sender, e) { },

    insertAudio_Click: function (sender, e) { },

    insertHyperlink_Click: function (sender, e) { },

    colorPicker_Click: function (sender, e) { },

    tourEditTab_Leave: function (sender, e) { },

    editTourProperties_Click: function (sender, e) { },

    saveTour_Click: function (sender, e) {
        this.save(false);
    },

    save: function (saveAs) {
        return true;
    },

    addVideo_Click: function (sender, e) { },

    addPicture_Click: function (sender, e) { },

    addShape_Click: function (sender, e) { },

    _addOpenRectangle_Click: function (sender, e) {
        this.tourEditorUI.addShape('', 6);
    },

    _addStar_Click: function (sender, e) {
        this.tourEditorUI.addShape('', 2);
    },

    addText_Click: function (sender, e) { },

    preview_EnabledChanged: function (sender, e) {
        if (this.playing) {
        } else {
        }
    },

    preview_MouseEnter: function (sender, e) { },

    preview_MouseLeave: function (sender, e) { },

    preview_MouseUp: function (sender, e) { },

    preview_MouseDown: function (sender, e) { },

    tourStopList_ItemHover: function (sender, e) { },

    refresh: function () { },

    undoStep: function () {
        if (_undo_js__WEBPACK_IMPORTED_MODULE_15__.Undo.peekAction()) {
            _undo_js__WEBPACK_IMPORTED_MODULE_15__.Undo.stepBack();
            this.tourStopList.refresh();
            this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex();
            this.showSlideStartPosition(this._tour.get_currentTourStop());
            this.refresh();
            _tour_editor_js__WEBPACK_IMPORTED_MODULE_18__.OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.tourEditorUI.selection);
        }
    },

    redoStep: function () {
        if (_undo_js__WEBPACK_IMPORTED_MODULE_15__.Undo.peekRedoAction()) {
            _undo_js__WEBPACK_IMPORTED_MODULE_15__.Undo.stepForward();
            this.tourStopList.refresh();
            this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex();
            this.showSlideStartPosition(this._tour.get_currentTourStop());
            this.refresh();
            _tour_editor_js__WEBPACK_IMPORTED_MODULE_18__.OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.tourEditorUI.selection);
        }
    },

    tourStopList_ShowEndPosition: function (sender, e) {
        this._showEndSkyPosition_Click(this, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
    },

    tourStopList_ShowStartPosition: function (sender, e) {
        this.showSlideStartPosition(this.get_tour().get_currentTourStop());
        this.tourEditorUI.clearSelection();
    },

    tourStopList_KeyDown: function (sender, e) {
        if (e.ctrlKey) {
            switch (e.keyCode) {
                case 67:
                    this._copyMenu_Click(null, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
                    break;
                case 86:
                    this._pasteMenu_Click(null, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
                    break;
                case 88:
                    this._cutMenu_Click(null, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
                    break;
                case 90:
                    if (_undo_js__WEBPACK_IMPORTED_MODULE_15__.Undo.peekAction()) {
                        _tour_editor_js__WEBPACK_IMPORTED_MODULE_18__.TourEdit._undoStep();
                    }
                    else {
                        _ui_tools_js__WEBPACK_IMPORTED_MODULE_12__.UiTools._beep();
                    }
                    break;
                case 89:
                    if (_undo_js__WEBPACK_IMPORTED_MODULE_15__.Undo.peekRedoAction()) {
                        _tour_editor_js__WEBPACK_IMPORTED_MODULE_18__.TourEdit._redoStep();
                    }
                    else {
                        _ui_tools_js__WEBPACK_IMPORTED_MODULE_12__.UiTools._beep();
                    }
                    break;
            }
        }
        if (e.keyCode === 46) {
            this._deleteMenu_Click(null, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
        }
    },

    _ensureSelectedVisible: function () {
        this.tourStopList.ensureSelectedVisible();
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("TourEditTab", [TourEditTab, TourEditTab$, null]);


/***/ }),

/***/ "./esm/tours/tour_editor.js":
/*!**********************************!*\
  !*** ./esm/tours/tour_editor.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OverlayList: () => (/* binding */ OverlayList),
/* harmony export */   SoundEditor: () => (/* binding */ SoundEditor),
/* harmony export */   TimeLine: () => (/* binding */ TimeLine),
/* harmony export */   TourEdit: () => (/* binding */ TourEdit),
/* harmony export */   TourEditor: () => (/* binding */ TourEditor),
/* harmony export */   TourStopList: () => (/* binding */ TourStopList)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
/* harmony import */ var _utilities_color_picker_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utilities/color_picker.js */ "./esm/utilities/color_picker.js");
/* harmony import */ var _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utilities/context_menu_strip.js */ "./esm/utilities/context_menu_strip.js");
/* harmony import */ var _utilities_simple_input_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utilities/simple_input.js */ "./esm/utilities/simple_input.js");
/* harmony import */ var _utilities_xml_text_writer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utilities/xml_text_writer.js */ "./esm/utilities/xml_text_writer.js");
/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../interfaces.js */ "./esm/interfaces.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../settings.js */ "./esm/settings.js");
/* harmony import */ var _ui_tools_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../ui_tools.js */ "./esm/ui_tools.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../util.js */ "./esm/util.js");
/* harmony import */ var _overlay_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./overlay.js */ "./esm/tours/overlay.js");
/* harmony import */ var _selection_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./selection.js */ "./esm/tours/selection.js");
/* harmony import */ var _undo_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./undo.js */ "./esm/tours/undo.js");
/* harmony import */ var _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./tour_stop.js */ "./esm/tours/tour_stop.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Infrastructure for editing tours.
//
// This file defines `TourEdit` and `TourEditor`, among others; the type
// `TourEditTab` is defined in `tour_edit.js`.





















// wwtlib.TourEditor

function TourEditor() {
    this.selection = new _selection_js__WEBPACK_IMPORTED_MODULE_15__.Selection();
    this._contextMenu = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ContextMenuStrip();
    this._tour = null;
    this._mouseDown = false;
    this._selectionAction = 11;
    this._needUndoFrame = false;
    this._contextPoint = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d();
    this._dragCopying = false;
    this._brokeThreshold = false;
    this.nextSlideCallback = null;
    this.clipboardData = '';
    this.clipboardType = '';
    this.editTextCallback = null;
    this._defaultColor = _color_js__WEBPACK_IMPORTED_MODULE_4__.Colors.get_white();
}

TourEditor.capturing = false;
TourEditor.currentEditor = null;

var TourEditor$ = {
    render: function (renderContext) {
        renderContext.setupMatricesOverlays();
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return;
        }
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._tour.get_currentTourStop().get_overlays());
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            if (overlay.get_animate() && this.get_tour().get_currentTourStop().get_keyFramed()) {
                overlay.set_tweenFactor(this._tour.get_currentTourStop().get_tweenPosition());
            }
            else if (!this.get_tour().get_currentTourStop().get_keyFramed()) {
                overlay.set_tweenFactor((this._tour.get_currentTourStop().get_tweenPosition() < 0.5) ? 0 : 1);
            }
            overlay.draw3D(renderContext, true);
        }
        this.selection.draw3D(renderContext, 1);
        if (TourEditor.currentEditor != null) {
            TourEditor.currentEditor.render(renderContext);
        }
        _settings_js__WEBPACK_IMPORTED_MODULE_11__.Settings.tourSettings = null;
    },

    get_tour: function () {
        return this._tour;
    },

    set_tour: function (value) {
        this._tour = value;
        return value;
    },

    close: function () {
        if (this._tour != null) {
            // todo check for changes
            this._tour = null;
            this.set_focus(null);
        }
    },

    clearSelection: function () {
        this.selection.clearSelection();
        OverlayList._updateOverlayListSelection(this.selection);
        this.set_focus(null);
    },

    get_focus: function () {
        return this.selection.get_focus();
    },

    set_focus: function (value) {
        this.selection.set_focus(value);
        return value;
    },

    pointToView: function (pnt) {
        var clientHeight = _render_globals_js__WEBPACK_IMPORTED_MODULE_10__.globalRenderContext.height;
        var clientWidth = _render_globals_js__WEBPACK_IMPORTED_MODULE_10__.globalRenderContext.width;
        var viewWidth = (_render_globals_js__WEBPACK_IMPORTED_MODULE_10__.globalRenderContext.width / _render_globals_js__WEBPACK_IMPORTED_MODULE_10__.globalRenderContext.height) * 1116;
        var x = ((pnt.x) / (clientWidth) * viewWidth) - ((viewWidth - 1920) / 2);
        var y = (pnt.y) / clientHeight * 1116;
        return _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(x, y);
    },

    mouseDown: function (sender, e) {
        this._brokeThreshold = false;
        this._needUndoFrame = true;
        var location = this.pointToView(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(e.offsetX, e.offsetY));
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            this._needUndoFrame = false;
            return false;
        }
        if (TourEditor.currentEditor != null) {
            if (TourEditor.currentEditor.mouseDown(sender, e)) {
                return true;
            }
        }
        if (this.get_focus() != null) {
            if (this.selection.get_multiSelect()) {
                var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
                while ($enum1.moveNext()) {
                    var overlay = $enum1.current;
                    if (overlay.hitTest(location)) {
                        this._selectionAction = 9;
                        this._mouseDown = true;
                        this._pointDown = location;
                        this.set_focus(overlay);
                        if (e.ctrlKey) {
                            this._dragCopying = true;
                        }
                        return true;
                    }
                }
            }
            else {
                if (this.get_focus().hitTest(location)) {
                    this._selectionAction = 9;
                    this._mouseDown = true;
                    this._pointDown = location;
                    if (e.ctrlKey) {
                        this._dragCopying = true;
                    }
                    return true;
                }
            }
            var hit = this.selection.hitTest(location);
            if (hit !== 11) {
                this._selectionAction = hit;
                this._mouseDown = true;
                if (hit === 8) {
                    this._pointDown = location;
                }
                else {
                    this._pointDown = this.selection.pointToSelectionSpace(location);
                }
                return true;
            }
        }
        for (var i = this._tour.get_currentTourStop().get_overlays().length - 1; i >= 0; i--) {
            if (this._tour.get_currentTourStop().get_overlays()[i].hitTest(location)) {
                this._selectionAction = 9;
                this.set_focus(this._tour.get_currentTourStop().get_overlays()[i]);
                if (e.ctrlKey || e.shiftKey) {
                    this.selection.addSelection(this.get_focus());
                }
                else {
                    this.selection.setSelection(this.get_focus());
                }
                OverlayList._updateOverlayListSelection(this.selection);
                this._mouseDown = true;
                this._pointDown = location;
                return true;
            }
        }
        this.set_focus(null);
        this.clearSelection();
        this._needUndoFrame = false;
        return false;
    },

    mouseUp: function (sender, e) {
        this._brokeThreshold = false;
        if (TourEditor.currentEditor != null) {
            if (TourEditor.currentEditor.mouseUp(sender, e)) {
                return true;
            }
        }
        this._contextPoint = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(e.offsetX, e.offsetY);
        if (this._mouseDown) {
            this._mouseDown = false;
            if (e.button === 2) {
                if (this.get_focus() != null) {
                    this.showSelectionContextMenu(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(e.offsetX, e.offsetY));
                }
            }
            return true;
        }
        if (e.button === 2) {
            if (this.get_focus() == null) {
                this._showNoSelectionContextMenu(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(e.offsetX, e.offsetY));
            }
            return true;
        }
        return false;
    },

    mouseMove: function (sender, e) {
        if (TourEditor.currentEditor != null) {
            if (TourEditor.currentEditor.mouseMove(sender, e)) {
                return true;
            }
        }
        var location = this.pointToView(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(e.offsetX, e.offsetY));
        if (this._mouseDown && this.get_focus() != null) {
            var undoFrame = null;
            var actionText = _util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(502, 'Edit');
            if (this._needUndoFrame) {
                undoFrame = new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(502, 'Edit'), this._tour);
            }
            var moveX;
            var moveY;
            if (this._selectionAction !== 9 && this._selectionAction !== 8) {
                var newPoint = this.selection.pointToSelectionSpace(location);
                moveX = newPoint.x - this._pointDown.x;
                moveY = newPoint.y - this._pointDown.y;
                this._pointDown = newPoint;
            }
            else {
                moveX = location.x - this._pointDown.x;
                moveY = location.y - this._pointDown.y;
                if (this._selectionAction === 9 && !this._brokeThreshold) {
                    if (Math.abs(moveX) > 3 || Math.abs(moveY) > 3) {
                        this._brokeThreshold = true;
                    }
                    else {
                        return true;
                    }
                }
                this._pointDown = location;
            }
            if (this._dragCopying) {
                if (this.selection.get_multiSelect()) {
                    var set = this.selection.selectionSet;
                    this.clearSelection();
                    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(set);
                    while ($enum1.moveNext()) {
                        var overlay = $enum1.current;
                        var newOverlay = this.addOverlay(overlay);
                        newOverlay.set_x(overlay.get_x());
                        newOverlay.set_y(overlay.get_y());
                        this.set_focus(newOverlay);
                        this.selection.addSelection(this.get_focus());
                    }
                    OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                    this._dragCopying = false;
                }
                else {
                    var newOverlay = this.addOverlay(this.get_focus());
                    newOverlay.set_x(this.get_focus().get_x());
                    newOverlay.set_y(this.get_focus().get_y());
                    this.set_focus(newOverlay);
                    this.selection.setSelection(this.get_focus());
                    OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                    this._dragCopying = false;
                }
            }
            var aspect = this.get_focus().get_width() / this.get_focus().get_height();
            var center = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(this.get_focus().get_x(), this.get_focus().get_y());
            if (e.ctrlKey) {
                actionText = _util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(537, 'Resize');
                switch (this._selectionAction) {
                    case 0:
                        this.get_focus().set_width(Math.max(2, this.get_focus().get_width() - moveX * 2));
                        this.get_focus().set_height(Math.max(2, this.get_focus().get_height() - (moveX / aspect) * 2));
                        break;
                    case 1:
                        this.get_focus().set_height(Math.max(2, this.get_focus().get_height() - moveY * 2));
                        break;
                    case 2:
                        this.get_focus().set_width(Math.max(2, this.get_focus().get_width() + moveX * 2));
                        this.get_focus().set_height(Math.max(2, this.get_focus().get_height() + (moveX / aspect) * 2));
                        break;
                    case 3:
                        this.get_focus().set_width(Math.max(2, this.get_focus().get_width() + moveX * 2));
                        break;
                    case 4:
                        this.get_focus().set_width(Math.max(2, this.get_focus().get_width() + moveX * 2));
                        this.get_focus().set_height(Math.max(2, this.get_focus().get_height() + (moveX / aspect) * 2));
                        break;
                    case 5:
                        this.get_focus().set_height(Math.max(2, this.get_focus().get_height() + moveY * 2));
                        break;
                    case 6:
                        this.get_focus().set_width(Math.max(2, this.get_focus().get_width() - moveX * 2));
                        this.get_focus().set_height(Math.max(2, this.get_focus().get_height() - (moveX / aspect) * 2));
                        break;
                    case 7:
                        this.get_focus().set_width(Math.max(2, this.get_focus().get_width() - moveX * 2));
                        break;
                    case 8:
                        actionText = _util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(538, 'Rotate');
                        this.get_focus().set_rotationAngle(this.get_focus().get_rotationAngle() + moveX / 10);
                        break;
                    case 9:
                        actionText = _util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(539, 'Drag Copy');
                        center.x += moveX;
                        center.y += moveY;
                        break;
                    case 10:
                        break;
                    case 11:
                        break;
                    default:
                        break;
                }
            }
            else {
                if (this._selectionAction !== 8 && this._selectionAction !== 9) {
                    if (moveX > (this.get_focus().get_width() - 2)) {
                        moveX = 0;
                    }
                    if (moveY > (this.get_focus().get_height() - 2)) {
                        moveY = 0;
                    }
                }
                actionText = _util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(537, 'Resize');
                switch (this._selectionAction) {
                    case 0:
                        this.get_focus().set_width(this.get_focus().get_width() - moveX);
                        this.get_focus().set_height(this.get_focus().get_height() - (moveX / aspect));
                        center.x += (moveX / 2);
                        center.y += ((moveX / aspect) / 2);
                        break;
                    case 1:
                        this.get_focus().set_height(this.get_focus().get_height() - moveY);
                        center.y += (moveY / 2);
                        break;
                    case 2:
                        this.get_focus().set_width(this.get_focus().get_width() + moveX);
                        this.get_focus().set_height(this.get_focus().get_height() + (moveX / aspect));
                        center.x += (moveX / 2);
                        center.y -= ((moveX / aspect) / 2);
                        break;
                    case 3:
                        this.get_focus().set_width(this.get_focus().get_width() + moveX);
                        center.x += (moveX / 2);
                        break;
                    case 4:
                        this.get_focus().set_width(this.get_focus().get_width() + moveX);
                        this.get_focus().set_height(this.get_focus().get_height() + (moveX / aspect));
                        center.x += (moveX / 2);
                        center.y += ((moveX / aspect) / 2);
                        break;
                    case 5:
                        this.get_focus().set_height(this.get_focus().get_height() + moveY);
                        center.y += (moveY / 2);
                        break;
                    case 6:
                        this.get_focus().set_width(this.get_focus().get_width() - moveX);
                        this.get_focus().set_height(this.get_focus().get_height() - (moveX / aspect));
                        center.x += (moveX / 2);
                        center.y -= ((moveX / aspect) / 2);
                        break;
                    case 7:
                        this.get_focus().set_width(this.get_focus().get_width() - moveX);
                        center.x += (moveX / 2);
                        break;
                    case 8:
                        actionText = _util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(538, 'Rotate');
                        this.get_focus().set_rotationAngle(this.get_focus().get_rotationAngle() + moveX);
                        break;
                    case 9:
                        actionText = _util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(540, 'Move');
                        center.x += moveX;
                        center.y += moveY;
                        break;
                    case 10:
                        break;
                    case 11:
                        break;
                    default:
                        break;
                }
            }
            if (this._selectionAction !== 9 && this._selectionAction !== 8) {
                center = this.selection.pointToScreenSpace(center);
            }
            if (this.selection.get_multiSelect()) {
                var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
                while ($enum2.moveNext()) {
                    var overlay = $enum2.current;
                    overlay.set_x(overlay.get_x() + moveX);
                    overlay.set_y(overlay.get_y() + moveY);
                }
            }
            else {
                this.get_focus().set_x(center.x);
                this.get_focus().set_y(center.y);
            }
            if (this._needUndoFrame) {
                this._needUndoFrame = false;
                undoFrame.set_actionText(actionText);
                _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(undoFrame);
            }
        } else {
            if (this.get_focus() != null) {
                if (this.get_focus().hitTest(location)) {
                    _util_js__WEBPACK_IMPORTED_MODULE_13__.Cursor.set_current(_util_js__WEBPACK_IMPORTED_MODULE_13__.Cursors.get_sizeAll());
                    return false;
                }
                var hit = this.selection.hitTest(location);
                if (hit === 11) {
                    return false;
                }
                switch (hit) {
                    case 0:
                        _util_js__WEBPACK_IMPORTED_MODULE_13__.Cursor.set_current(_util_js__WEBPACK_IMPORTED_MODULE_13__.Cursors.get_sizeNWSE());
                        break;
                    case 1:
                        _util_js__WEBPACK_IMPORTED_MODULE_13__.Cursor.set_current(_util_js__WEBPACK_IMPORTED_MODULE_13__.Cursors.get_sizeNS());
                        break;
                    case 2:
                        _util_js__WEBPACK_IMPORTED_MODULE_13__.Cursor.set_current(_util_js__WEBPACK_IMPORTED_MODULE_13__.Cursors.get_sizeNESW());
                        break;
                    case 3:
                        _util_js__WEBPACK_IMPORTED_MODULE_13__.Cursor.set_current(_util_js__WEBPACK_IMPORTED_MODULE_13__.Cursors.get_sizeWE());
                        break;
                    case 4:
                        _util_js__WEBPACK_IMPORTED_MODULE_13__.Cursor.set_current(_util_js__WEBPACK_IMPORTED_MODULE_13__.Cursors.get_sizeNWSE());
                        break;
                    case 5:
                        _util_js__WEBPACK_IMPORTED_MODULE_13__.Cursor.set_current(_util_js__WEBPACK_IMPORTED_MODULE_13__.Cursors.get_sizeNS());
                        break;
                    case 6:
                        _util_js__WEBPACK_IMPORTED_MODULE_13__.Cursor.set_current(_util_js__WEBPACK_IMPORTED_MODULE_13__.Cursors.get_sizeNESW());
                        break;
                    case 7:
                        _util_js__WEBPACK_IMPORTED_MODULE_13__.Cursor.set_current(_util_js__WEBPACK_IMPORTED_MODULE_13__.Cursors.get_sizeWE());
                        break;
                    case 8:
                        _util_js__WEBPACK_IMPORTED_MODULE_13__.Cursor.set_current(_util_js__WEBPACK_IMPORTED_MODULE_13__.Cursors.get_sizeWE());
                        break;
                    case 10:
                        break;
                    case 11:
                        break;
                    default:
                        break;
                }
            }
        }
        return false;
    },

    _showNoSelectionContextMenu: function (position) {
        if (this._contextMenu != null) {
            this._contextMenu._dispose();
        }
        if (this._tour.get_currentTourStop() == null) {
            return;
        }
        this._contextMenu = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ContextMenuStrip();
        var pasteMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(425, 'Paste'));
        pasteMenu.enabled = this.clipboardType === 'WorldWideTelescope.Overlay';
        pasteMenu.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_pasteMenu_Click', this);
        this._contextMenu.items.push(pasteMenu);
        this._contextMenu._show(position);
    },

    _addOpenRectangle_Click: function (sender, e) {
        this.addShape('', 6);
    },

    _addStar_Click: function (sender, e) {
        this.addShape('', 2);
    },

    _insertShapeCircle_Click: function (sender, e) {
        this.addShape('', 0);
    },

    _insertShapeRectangle_Click: function (sender, e) {
        this.addShape('', 1);
    },

    _insertShapeLine_Click: function (sender, e) {
        this.addShape('', 5);
    },

    _insertDonut_Click: function (sender, e) {
        this.addShape('', 3);
    },

    _addArrow_Click: function (sender, e) {
        this.addShape('', 4);
    },

    showSelectionContextMenu: function (position) {
        if (this.get_focus() == null) {
            return;
        }
        var multiSelect = this.selection.get_multiSelect();
        if (this._contextMenu != null) {
            this._contextMenu._dispose();
        }
        this._contextMenu = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ContextMenuStrip();
        var cutMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(427, 'Cut'));
        var copyMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(428, 'Copy'));
        var pasteMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(425, 'Paste'));
        var deleteMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(167, 'Delete'));
        var sep1 = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripSeparator();
        var sep2 = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripSeparator();
        var sep3 = new _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripSeparator();
        var bringToFront = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(452, 'Bring to Front'));
        var sendToBack = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(453, 'Send to Back'));
        var bringForward = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(454, 'Bring Forward'));
        var sendBackward = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(455, 'Send Backward'));
        var properties = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(20, 'Properties'));
        var editText = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(502, 'Edit'));
        var url = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(587, 'Hyperlink'));
        var linkString = this.get_focus().get_linkID();
        switch (this.get_focus().get_linkID()) {
            case '':
            case null:
                linkString = ' (' + _util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(609, 'No Link') + ')';
                break;
            case 'Next':
                linkString = ' (' + _util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(610, 'Next Slide') + ')';
                break;
            case 'Return':
                linkString = ' (' + _util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(602, 'Return to Caller') + ')';
                break;
            default:
                var index = this.get_tour().getTourStopIndexByID(this.get_focus().get_linkID());
                if (index > -1) {
                    if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._tour.get_tourStops()[index].get_description())) {
                        linkString = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format(' (' + _util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1340, 'Slide') + ' {0})', index);
                    }
                    else {
                        linkString = ' (' + this._tour.get_tourStops()[index].get_description() + ')';
                    }
                }
                break;
        }
        var animateMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(588, 'Animate'));
        var linkID = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(589, 'Link to Slide') + linkString);
        var pickColor = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(458, 'Color/Opacity'));
        var flipbookProperties = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(630, 'Flipbook Properties'));
        var interpolateMenu = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1029, 'Animation Tween Type'));
        var Linear = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1030, 'Linear'));
        var Ease = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1031, 'Ease In/Out'));
        var EaseIn = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1032, 'Ease In'));
        var EaseOut = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1033, 'Ease Out'));
        var Exponential = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1034, 'Exponential'));
        var Default = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1035, 'Slide Default'));
        var Align = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(790, 'Align'));
        var AlignTop = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1333, 'Top'));
        var AlignBottom = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1334, 'Bottom'));
        var AlignLeft = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1335, 'Left'));
        var AlignRight = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1336, 'Right'));
        var AlignHorizon = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1337, 'Horizontal'));
        var AlignVertical = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1338, 'Vertical'));
        var AlignCenter = _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_6__.ToolStripMenuItem.create(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1339, 'Centered'));
        Align.dropDownItems.push(AlignTop);
        Align.dropDownItems.push(AlignBottom);
        Align.dropDownItems.push(AlignLeft);
        Align.dropDownItems.push(AlignRight);
        Align.dropDownItems.push(AlignHorizon);
        Align.dropDownItems.push(AlignVertical);
        Align.dropDownItems.push(AlignCenter);
        Linear.tag = 0;
        Ease.tag = 3;
        EaseIn.tag = 1;
        EaseOut.tag = 2;
        Exponential.tag = 4;
        Default.tag = 5;
        Linear.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_interpolation_Click', this);
        Ease.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_interpolation_Click', this);
        EaseIn.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_interpolation_Click', this);
        EaseOut.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_interpolation_Click', this);
        Exponential.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_interpolation_Click', this);
        Default.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_interpolation_Click', this);
        switch (this.get_focus().get_interpolationType()) {
            case 0:
                Linear.checked = true;
                break;
            case 1:
                EaseIn.checked = true;
                break;
            case 2:
                EaseOut.checked = true;
                break;
            case 3:
                Ease.checked = true;
                break;
            case 4:
                Exponential.checked = true;
                break;
            case 5:
                Default.checked = true;
                break;
            default:
                break;
        }
        interpolateMenu.dropDownItems.push(Default);
        interpolateMenu.dropDownItems.push(Linear);
        interpolateMenu.dropDownItems.push(Ease);
        interpolateMenu.dropDownItems.push(EaseIn);
        interpolateMenu.dropDownItems.push(EaseOut);
        interpolateMenu.dropDownItems.push(Exponential);
        cutMenu.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_cutMenu_Click', this);
        copyMenu.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_copyMenu_Click', this);
        deleteMenu.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_deleteMenu_Click', this);
        bringToFront.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_bringToFront_Click', this);
        sendToBack.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_sendToBack_Click', this);
        sendBackward.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_sendBackward_Click', this);
        bringForward.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_bringForward_Click', this);
        properties.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_properties_Click', this);
        editText.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_editText_Click', this);
        url.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_url_Click', this);
        pickColor.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_pickColor_Click', this);
        pasteMenu.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_pasteMenu_Click', this);
        animateMenu.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_animateMenu_Click', this);
        flipbookProperties.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_flipbookProperties_Click', this);
        linkID.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_linkID_Click', this);
        AlignTop.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_alignTop_Click', this);
        AlignBottom.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_alignBottom_Click', this);
        AlignLeft.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_alignLeft_Click', this);
        AlignRight.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_alignRight_Click', this);
        AlignHorizon.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_alignHorizon_Click', this);
        AlignVertical.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_alignVertical_Click', this);
        AlignCenter.click = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_alignCenter_Click', this);
        this._contextMenu.items.push(cutMenu);
        this._contextMenu.items.push(copyMenu);
        this._contextMenu.items.push(pasteMenu);
        this._contextMenu.items.push(deleteMenu);
        this._contextMenu.items.push(sep1);
        this._contextMenu.items.push(bringToFront);
        this._contextMenu.items.push(sendToBack);
        this._contextMenu.items.push(bringForward);
        this._contextMenu.items.push(sendBackward);
        this._contextMenu.items.push(Align);
        this._contextMenu.items.push(sep2);
        pasteMenu.enabled = false;
        this._contextMenu.items.push(pickColor);
        this._contextMenu.items.push(url);
        this._contextMenu.items.push(linkID);
        this._contextMenu.items.push(animateMenu);
        this._contextMenu.items.push(sep3);
        this._contextMenu.items.push(flipbookProperties);
        animateMenu.checked = this.get_focus().get_animate();
        this._contextMenu.items.push(interpolateMenu);
        interpolateMenu.enabled = this.get_focus().get_animate();
        flipbookProperties.visible = (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(this.get_focus(), _overlay_js__WEBPACK_IMPORTED_MODULE_14__.FlipbookOverlay));
        sep3.visible = (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(this.get_focus(), _overlay_js__WEBPACK_IMPORTED_MODULE_14__.FlipbookOverlay));
        if (multiSelect) {
            url.visible = false;
            linkID.visible = false;
            properties.visible = false;
            flipbookProperties.visible = false;
            bringForward.visible = false;
            sendBackward.visible = false;
        } else {
            Align.visible = false;
        }
        this._contextMenu.items.push(properties);
        if (this.get_focus() != null) {
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.typeOf(this.get_focus()) === _overlay_js__WEBPACK_IMPORTED_MODULE_14__.TextOverlay) {
                this._contextMenu.items.push(editText);
            }
        }
        this._contextMenu._show(position);
    },

    _editText_Click: function (sender, e) {
        if (this.get_focus() != null) {
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.typeOf(this.get_focus()) === _overlay_js__WEBPACK_IMPORTED_MODULE_14__.TextOverlay) {
                this._editText();
            }
        }
    },

    _alignVertical_Click: function (sender, e) {
        if (this.get_focus() == null) {
            return;
        }
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1036, 'Vertical Align'), this._tour));
        var xCenter = this.get_focus().get_x();
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            overlay.set_x(xCenter);
        }
    },

    _alignHorizon_Click: function (sender, e) {
        if (this.get_focus() == null) {
            return;
        }
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1037, 'Horizontal Align'), this._tour));
        var yCenter = this.get_focus().get_y();
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            overlay.set_y(yCenter);
        }
    },

    _alignCenter_Click: function (sender, e) {
        if (this.get_focus() == null) {
            return;
        }
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1038, 'Align Centers'), this._tour));
        var yCenter = this.get_focus().get_y();
        var xCenter = this.get_focus().get_x();
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            overlay.set_y(yCenter);
            overlay.set_x(xCenter);
        }
    },

    _alignRight_Click: function (sender, e) {
        if (this.get_focus() == null) {
            return;
        }
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1040, 'Align Right'), this._tour));
        var left = this.get_focus().get_x() + this.get_focus().get_width() / 2;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            overlay.set_x(left - overlay.get_width() / 2);
        }
    },

    _alignLeft_Click: function (sender, e) {
        if (this.get_focus() == null) {
            return;
        }
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1041, 'Align Left'), this._tour));
        var right = this.get_focus().get_x() - this.get_focus().get_width() / 2;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            overlay.set_x(right + overlay.get_width() / 2);
        }
    },

    _alignBottom_Click: function (sender, e) {
        if (this.get_focus() == null) {
            return;
        }
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1042, 'Align Bottoms'), this._tour));
        var top = this.get_focus().get_y() + this.get_focus().get_height() / 2;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            overlay.set_y(top - overlay.get_height() / 2);
        }
    },

    _alignTop_Click: function (sender, e) {
        if (this.get_focus() == null) {
            return;
        }
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(1039, 'Align Tops'), this._tour));
        var top = this.get_focus().get_y() - this.get_focus().get_height() / 2;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            overlay.set_y(top + overlay.get_height() / 2);
        }
    },

    _interpolation_Click: function (sender, e) {
        var item = sender;
        if (this.get_focus() != null) {
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
            while ($enum1.moveNext()) {
                var overlay = $enum1.current;
                overlay.set_interpolationType(item.tag);
            }
        }
    },

    _linkSlideChosen: function () {
        if (this.selectDialog.get_OK()) {
            this.get_focus().set_linkID(this.selectDialog.get_id());
        }
    },

    _linkID_Click: function (sender, e) {
        this.selectDialog = new _util_js__WEBPACK_IMPORTED_MODULE_13__.SelectLink(this.get_focus().get_linkID());
        this.nextSlideCallback(this.selectDialog, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_linkSlideChosen', this));
    },

    _flipbookProperties_Click: function (sender, e) { },

    _animateMenu_Click: function (sender, e) {
        if (this.get_focus() != null) {
            _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(588, 'Animate'), this._tour));
            var animate = !this.get_focus().get_animate();
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
            while ($enum1.moveNext()) {
                var overlay = $enum1.current;
                overlay.set_animate(animate);
            }
        }
    },

    _url_Click: function (sender, e) {
        var $this = this;

        if (this.get_focus() != null) {
            var input = new _utilities_simple_input_js__WEBPACK_IMPORTED_MODULE_7__.SimpleInput(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(541, 'Edit Hyperlink'), _util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(542, 'Url'), this.get_focus().get_url(), 2048);
            input.show(_util_js__WEBPACK_IMPORTED_MODULE_13__.Cursor.get_position(), function () {
                _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(541, 'Edit Hyperlink'), $this._tour));
                $this.get_focus().set_url(input.text);
            });
        }
    },

    _pickColor_Click: function (sender, e) {
        var $this = this;

        var picker = new _utilities_color_picker_js__WEBPACK_IMPORTED_MODULE_5__.ColorPicker();
        picker.color = this.get_focus().get_color();
        picker.callBack = function () {
            _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(543, 'Edit Color'), $this._tour));
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate($this.selection.selectionSet);
            while ($enum1.moveNext()) {
                var overlay = $enum1.current;
                overlay.set_color(picker.color);
            }
        };
        picker.show(e);
    },

    _volume_Click: function (sender, e) {
        var vol = new _util_js__WEBPACK_IMPORTED_MODULE_13__.PopupVolume();
        vol.volume = (this.get_focus()).get_volume();
        vol.showDialog();
        (this.get_focus()).set_volume(vol.volume);
    },

    _deleteMenu_Click: function (sender, e) {
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return;
        }
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(167, 'Delete'), this._tour));
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            this._tour.get_currentTourStop().removeOverlay(overlay);
        }
        this.set_focus(null);
        this.clearSelection();
        OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
    },

    _properties_Click: function (sender, e) {
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
        }
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(549, 'Properties Edit'), this._tour));
        var props = new _util_js__WEBPACK_IMPORTED_MODULE_13__.OverlayProperties();
        props.overlay = this.get_focus();
        props.showDialog();
        OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
    },

    _bringForward_Click: function (sender, e) {
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return;
        }
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(454, 'Bring Forward'), this._tour));
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._getSortedSelection(false));
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            this._tour.get_currentTourStop().bringForward(overlay);
        }
        OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
    },

    _sendBackward_Click: function (sender, e) {
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return;
        }
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(455, 'Send Backward'), this._tour));
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._getSortedSelection(true));
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            this._tour.get_currentTourStop().sendBackward(overlay);
        }
        OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
    },

    _sendToBack_Click: function (sender, e) {
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return;
        }
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(453, 'Send to Back'), this._tour));
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._getSortedSelection(true));
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            this._tour.get_currentTourStop().sendToBack(overlay);
        }
        OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
    },

    _bringToFront_Click: function (sender, e) {
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return;
        }
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(452, 'Bring to Front'), this._tour));
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._getSortedSelection(false));
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            this._tour.get_currentTourStop().bringToFront(overlay);
        }
        OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
    },

    _getSortedSelection: function (reverse) {
        var sorted = [];
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
        while ($enum1.moveNext()) {
            var ov = $enum1.current;
            sorted.push(ov);
        }
        if (reverse) {
            sorted.sort(function (p1, p2) {
                return -_baseutil_js__WEBPACK_IMPORTED_MODULE_3__.Util.compare(p1.get_zOrder(), p2.get_zOrder());
            });
        } else {
            sorted.sort(function (p1, p2) {
                return _baseutil_js__WEBPACK_IMPORTED_MODULE_3__.Util.compare(p1.get_zOrder(), p2.get_zOrder());
            });
        }
        return sorted;
    },

    _copyMenu_Click: function (sender, e) {
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return;
        }
        var writer = new _utilities_xml_text_writer_js__WEBPACK_IMPORTED_MODULE_8__.XmlTextWriter();
        writer._writeProcessingInstruction('xml', "version='1.0' encoding='UTF-8'");
        writer._writeStartElement('Overlays');
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            overlay.saveToXml(writer, true);
        }
        writer._writeEndElement();
        this.clipboardData = writer.body;
        this.clipboardType = 'WorldWideTelescope.Overlay';
    },

    _cutMenu_Click: function (sender, e) {
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return;
        }
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(427, 'Cut'), this._tour));
        this._copyMenu_Click(sender, e);
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            this._tour.get_currentTourStop().removeOverlay(overlay);
        }
        this.set_focus(null);
        this.clearSelection();
        OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
    },

    _pasteMenu_Click: function (sender, e) {
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _undo_js__WEBPACK_IMPORTED_MODULE_16__.UndoTourSlidelistChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(544, 'Paste Object'), this._tour));
        if (this.clipboardType === 'WorldWideTelescope.Overlay') {
            var xParser = new DOMParser();
            var doc = xParser.parseFromString(this.clipboardData, 'text/xml');
            this.clearSelection();
            var parent = _baseutil_js__WEBPACK_IMPORTED_MODULE_3__.Util.selectSingleNode(doc, 'Overlays');
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(parent.childNodes);
            while ($enum1.moveNext()) {
                var child = $enum1.current;
                if (child.nodeName === 'Overlay') {
                    var copy = _overlay_js__WEBPACK_IMPORTED_MODULE_14__.Overlay._fromXml(this._tour.get_currentTourStop(), child);
                    var found = false;
                    var maxX = 0;
                    var maxY = 0;
                    var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._tour.get_currentTourStop().get_overlays());
                    while ($enum2.moveNext()) {
                        var item = $enum2.current;
                        if (item.id === copy.id && _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.typeOf(item) === _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.typeOf(copy)) {
                            found = true;
                            if (maxY < item.get_y() || maxX < item.get_x()) {
                                maxX = item.get_x();
                                maxY = item.get_y();
                            }
                        }
                    }
                    if (found) {
                        copy.set_x(maxX + 20);
                        copy.set_y(maxY + 20);
                    }
                    this._tour.get_currentTourStop().addOverlay(copy);
                    this.set_focus(copy);
                    this.selection.addSelection(this.get_focus());
                    OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                }
            }
        }
    },

    mouseClick: function (sender, e) {
        if (TourEditor.currentEditor != null) {
            if (TourEditor.currentEditor.mouseClick(sender, e)) {
                return true;
            }
        }
        return false;
    },

    click: function (sender, e) {
        if (TourEditor.currentEditor != null) {
            if (TourEditor.currentEditor.click(sender, e)) {
                return true;
            }
        }
        return false;
    },

    mouseDoubleClick: function (sender, e) {
        if (TourEditor.currentEditor != null) {
            if (TourEditor.currentEditor.mouseDoubleClick(sender, e)) {
                return true;
            }
        }
        if (this.get_focus() != null) {
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.typeOf(this.get_focus()) === _overlay_js__WEBPACK_IMPORTED_MODULE_14__.TextOverlay) {
                this._editText();
                return true;
            }
        }
        return true;
    },

    _doneEditing: function () {
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(545, 'Text Edit'), this._tour));
        (this.get_focus()).set_width(0);
        (this.get_focus()).set_height(0);
        this.get_focus().set_color((this.get_focus()).textObject.foregroundColor);
        this.get_focus().cleanUp();
    },

    _editText: function () {
        var textObj = (this.get_focus()).textObject;
        this.editTextCallback(textObj, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_doneEditing', this));
    },

    keyDown: function (sender, e) {
        if (TourEditor.currentEditor != null) {
            if (TourEditor.currentEditor.keyDown(sender, e)) {
                return true;
            }
        }
        var increment = 1;
        if (e.ctrlKey) {
            increment = 10;
        }
        switch (e.keyCode) {
            case 65:
                if (e.ctrlKey) {
                    this.clearSelection();
                    this.selection.addSelectionRange(this._tour.get_currentTourStop().get_overlays());
                    OverlayList._updateOverlayListSelection(this.selection);
                    if (this._tour.get_currentTourStop().get_overlays().length > 0) {
                        this.set_focus(this._tour.get_currentTourStop().get_overlays()[0]);
                    }
                }
                break;
            case 90:
                if (e.ctrlKey) {
                    if (_undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.peekAction()) {
                        TourEdit._undoStep();
                    }
                    else {
                        _ui_tools_js__WEBPACK_IMPORTED_MODULE_12__.UiTools._beep();
                    }
                }
                break;
            case 89:
                if (e.ctrlKey) {
                    if (_undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.peekRedoAction()) {
                        TourEdit._redoStep();
                    }
                    else {
                        _ui_tools_js__WEBPACK_IMPORTED_MODULE_12__.UiTools._beep();
                    }
                }
                break;
            case 67:
                if (e.ctrlKey) {
                    this._copyMenu_Click(this, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
                }
                break;
            case 86:
                if (e.ctrlKey) {
                    this._pasteMenu_Click(this, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
                }
                break;
            case 88:
                if (e.ctrlKey) {
                    this._cutMenu_Click(this, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
                }
                break;
            case 46:
                this._deleteMenu_Click(null, null);
                return true;
            case 9:
                if (e.shiftKey) {
                    this._selectLast();
                }
                else {
                    this._selectNext();
                }
                return true;
            case 37:
                if (this.get_focus() != null) {
                    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
                    while ($enum1.moveNext()) {
                        var overlay = $enum1.current;
                        if (e.shiftKey) {
                            if (e.altKey) {
                                if (overlay.get_width() > increment) {
                                    _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(537, 'Resize'), this._tour));
                                    overlay.set_width(overlay.get_width() - increment);
                                }
                            }
                            else {
                                var aspect = overlay.get_width() / overlay.get_height();
                                if (overlay.get_width() > increment && overlay.get_height() > (increment * aspect)) {
                                    _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(537, 'Resize'), this._tour));
                                    overlay.set_width(overlay.get_width() - increment);
                                    overlay.set_height(overlay.get_height() - increment * aspect);
                                }
                            }
                        }
                        else if (e.altKey) {
                            _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(538, 'Rotate'), this._tour));
                            overlay.set_rotationAngle(overlay.get_rotationAngle() - increment);
                        }
                        else {
                            _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(540, 'Move'), this._tour));
                            overlay.set_x(overlay.get_x() - increment);
                        }
                    }
                    return true;
                }
                break;
            case 39:
                if (this.get_focus() != null) {
                    var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
                    while ($enum2.moveNext()) {
                        var overlay = $enum2.current;
                        if (e.shiftKey) {
                            _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(537, 'Resize'), this._tour));
                            if (e.altKey) {
                                overlay.set_width(overlay.get_width() + increment);
                            }
                            else {
                                var aspect = overlay.get_width() / overlay.get_height();
                                overlay.set_width(overlay.get_width() + increment);
                                overlay.set_height(overlay.get_height() + increment * aspect);
                            }
                        }
                        else if (e.altKey) {
                            _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(538, 'Rotate'), this._tour));
                            overlay.set_rotationAngle(overlay.get_rotationAngle() + increment);
                        }
                        else {
                            _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(540, 'Move'), this._tour));
                            overlay.set_x(overlay.get_x() + increment);
                        }
                    }
                    return true;
                }
                break;
            case 38:
                if (this.get_focus() != null) {
                    var $enum3 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
                    while ($enum3.moveNext()) {
                        var overlay = $enum3.current;
                        if (e.shiftKey) {
                            _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(537, 'Resize'), this._tour));
                            if (e.altKey) {
                                overlay.set_height(overlay.get_height() + increment);
                            }
                            else {
                                var aspect = overlay.get_width() / overlay.get_height();
                                overlay.set_width(overlay.get_width() + increment);
                                overlay.set_height(overlay.get_height() + increment * aspect);
                            }
                        }
                        else if (!e.altKey) {
                            _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(540, 'Move'), this._tour));
                            overlay.set_y(overlay.get_y() - increment);
                        }
                    }
                    return true;
                }
                break;
            case 40:
                if (this.get_focus() != null) {
                    var $enum4 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.selection.selectionSet);
                    while ($enum4.moveNext()) {
                        var overlay = $enum4.current;
                        if (e.shiftKey) {
                            if (e.altKey) {
                                if (overlay.get_height() > increment) {
                                    _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(537, 'Resize'), this._tour));
                                    overlay.set_height(overlay.get_height() - increment);
                                }
                            }
                            else {
                                var aspect = overlay.get_width() / overlay.get_height();
                                if (overlay.get_width() > increment && overlay.get_height() > (increment * aspect)) {
                                    _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(537, 'Resize'), this._tour));
                                    overlay.set_width(overlay.get_width() - increment);
                                    overlay.set_height(overlay.get_height() - increment * aspect);
                                }
                            }
                        }
                        else if (!e.altKey) {
                            _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(540, 'Move'), this._tour));
                            overlay.set_y(overlay.get_y() + increment);
                        }
                    }
                    return true;
                }
                break;
            case 34:
                // Next Slide
                if (e.altKey) {
                    if (this._tour.get_currentTourstopIndex() < (this._tour.get_tourStops().length - 1)) {
                        this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() + 1) - 1;
                        TourEdit._selectCurrent();
                        TourEdit._ensureSelectedVisible();
                    }
                    return true;
                }
                break;
            case 33:
                // Prev Slide
                if (e.altKey) {
                    if (this._tour.get_currentTourstopIndex() > 0) {
                        this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() - 1) + 1;
                        TourEdit._selectCurrent();
                        TourEdit._ensureSelectedVisible();
                    }
                    return true;
                }
                break;
        }
        return false;
    },

    _selectNext: function () {
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return;
        }
        this.set_focus(this._tour.get_currentTourStop().getNextOverlay(this.get_focus()));
        this.selection.setSelection(this.get_focus());
        OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
    },

    _selectLast: function () {
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return;
        }
        this.set_focus(this._tour.get_currentTourStop().getPerviousOverlay(this.get_focus()));
        this.selection.setSelection(this.get_focus());
        OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
    },

    keyUp: function (sender, e) {
        if (TourEditor.currentEditor != null) {
            if (TourEditor.currentEditor.keyUp(sender, e)) {
                return true;
            }
        }
        return false;
    },

    addPicture: function (file) {
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return false;
        }
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(546, 'Insert Picture'), this._tour));
        var bmp = _overlay_js__WEBPACK_IMPORTED_MODULE_14__.BitmapOverlay.create(this._tour.get_currentTourStop(), file);
        bmp.set_x(960);
        bmp.set_y(600);
        this._tour.get_currentTourStop().addOverlay(bmp);
        OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
        return true;
    },

    addFlipbook: function (filename) {
        return false;
    },

    addAudio: function (file, music) {
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return false;
        }
        var audio = _overlay_js__WEBPACK_IMPORTED_MODULE_14__.AudioOverlay.create(this._tour.get_currentTourStop(), file);
        audio.set_x(900);
        audio.set_y(600);
        if (music) {
            this._tour.get_currentTourStop().set_musicTrack(audio);
        } else {
            this._tour.get_currentTourStop().set_voiceTrack(audio);
        }
        return true;
    },

    addVideo: function (filename) {
        return true;
    },

    addText: function (p, textObject) {
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return false;
        }
        var text = _overlay_js__WEBPACK_IMPORTED_MODULE_14__.TextOverlay.create(textObject);
        text.set_color(textObject.foregroundColor);
        text.set_x(960);
        text.set_y(600);
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(547, 'Insert Text'), this._tour));
        this._tour.get_currentTourStop().addOverlay(text);
        OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
        return true;
    },

    addOverlay: function (ol) {
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return null;
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.typeOf(ol) === _overlay_js__WEBPACK_IMPORTED_MODULE_14__.ShapeOverlay) {
            var srcShapeOverlay = ol;
            if (srcShapeOverlay != null) {
                var shape = _overlay_js__WEBPACK_IMPORTED_MODULE_14__.ShapeOverlay._create(this._tour.get_currentTourStop(), srcShapeOverlay.get_shapeType());
                shape.set_width(srcShapeOverlay.get_width());
                shape.set_height(srcShapeOverlay.get_height());
                shape.set_x(this._contextPoint.x);
                shape.set_y(this._contextPoint.y);
                shape.set_color(srcShapeOverlay.get_color());
                shape.set_rotationAngle(srcShapeOverlay.get_rotationAngle());
                this._tour.get_currentTourStop().addOverlay(shape);
                return shape;
            }
        } else if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.typeOf(ol) === _overlay_js__WEBPACK_IMPORTED_MODULE_14__.TextOverlay) {
            var srcTxtOverlay = ol;
            if (srcTxtOverlay != null) {
                var text = _overlay_js__WEBPACK_IMPORTED_MODULE_14__.TextOverlay.create(srcTxtOverlay.textObject);
                text.set_x(this._contextPoint.x);
                text.set_y(this._contextPoint.y);
                text.set_color(srcTxtOverlay.get_color());
                this._tour.get_currentTourStop().addOverlay(text);
                return text;
            }
        } else if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.typeOf(ol) === _overlay_js__WEBPACK_IMPORTED_MODULE_14__.BitmapOverlay) {
            var srcBmpOverlay = ol;
            if (srcBmpOverlay != null) {
                var bitmap = srcBmpOverlay.copy(this._tour.get_currentTourStop());
                bitmap.set_x(this._contextPoint.x);
                bitmap.set_y(this._contextPoint.y);
                this._tour.get_currentTourStop().addOverlay(bitmap);
                return bitmap;
            }
        } else if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.typeOf(ol) === _overlay_js__WEBPACK_IMPORTED_MODULE_14__.FlipbookOverlay) {
            var srcFlipbookOverlay = ol;
            if (srcFlipbookOverlay != null) {
                var bitmap = srcFlipbookOverlay.copy(this._tour.get_currentTourStop());
                bitmap.set_x(this._contextPoint.x);
                bitmap.set_y(this._contextPoint.y);
                this._tour.get_currentTourStop().addOverlay(bitmap);
                return bitmap;
            }
        }
        return null;
    },

    addShape: function (p, shapeType) {
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return false;
        }
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.push(new _tour_stop_js__WEBPACK_IMPORTED_MODULE_17__.UndoTourStopChange(_util_js__WEBPACK_IMPORTED_MODULE_13__.Language.getLocalizedText(548, 'Insert Shape'), this._tour));
        var shape = _overlay_js__WEBPACK_IMPORTED_MODULE_14__.ShapeOverlay._create(this._tour.get_currentTourStop(), shapeType);
        shape.set_width(200);
        shape.set_height(200);
        if (shapeType === 4) {
            shape.set_height(shape.get_height() / 2);
        }
        if (shapeType === 5) {
            shape.set_height(12);
        }
        shape.set_x(960);
        shape.set_y(600);
        this._tour.get_currentTourStop().addOverlay(shape);
        this.set_focus(shape);
        this.selection.setSelection(this.get_focus());
        OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
        return true;
    },

    getCurrentColor: function () {
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return this._defaultColor;
        }
        if (this.get_focus() != null) {
            return this.get_focus().get_color();
        } else {
            return this._defaultColor;
        }
    },

    setCurrentColor: function (color) {
        this._defaultColor = color;
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return;
        }
        if (this.get_focus() != null) {
            this.get_focus().set_color(color);
        }
    },

    dispose: function () {
        if (this._contextMenu != null) {
            this._contextMenu._dispose();
            this._contextMenu = null;
        }
    },

    hover: function (pnt) {
        if (TourEditor.currentEditor != null) {
            if (TourEditor.currentEditor.hover(pnt)) {
                return true;
            }
        }
        return true;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("TourEditor", [TourEditor, TourEditor$, null, _interfaces_js__WEBPACK_IMPORTED_MODULE_9__.IUiController]);


// wwtlib.OverlayList

function OverlayList() { }

OverlayList._updateOverlayList = function (currentTourStop, selection) { };

OverlayList._updateOverlayListSelection = function (selection) { };

var OverlayList$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("OverlayList", [OverlayList, OverlayList$, null]);


// wwtlib.TourEdit

function TourEdit() { }

TourEdit._ensureSelectedVisible = function () { };

TourEdit._selectCurrent = function () { };

TourEdit._undoStep = function () {
    if (_undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.peekAction()) {
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.stepBack();
    }
};

TourEdit._redoStep = function () {
    if (_undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.peekRedoAction()) {
        _undo_js__WEBPACK_IMPORTED_MODULE_16__.Undo.stepForward();
    }
};

var TourEdit$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("TourEdit", [TourEdit, TourEdit$, null]);


// wwtlib.SoundEditor

function SoundEditor() {
    this.target = null;
}

var SoundEditor$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("SoundEditor", [SoundEditor, SoundEditor$, null]);


// wwtlib.TourStopList

function TourStopList() {
    this.tour = null;
    this.showAddButton = false;
    this.selectedItems = null;
    this.selectedItem = -1;
    this.refreshCallback = null;
    this.multipleSelection = false;
    this.hitType = false;
}

var TourStopList$ = {
    selectAll: function () {
        this.selectedItems = {};
        for (var i = 0; i < this.tour.get_tourStops().length; i++) {
            this.selectedItems[i] = this.tour.get_tourStops()[i];
        }
    },

    refresh: function () {
        if (this.refreshCallback != null) {
            this.refreshCallback();
        }
    },

    findItem: function (ts) {
        return -1;
    },

    ensureSelectedVisible: function () { },

    ensureAddVisible: function () { }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("TourStopList", [TourStopList, TourStopList$, null]);


// wwtlib.TimeLine

function TimeLine() { }

TimeLine.refreshUi = function () { };

var TimeLine$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("TimeLine", [TimeLine, TimeLine$, null]);


/***/ }),

/***/ "./esm/tours/tour_player.js":
/*!**********************************!*\
  !*** ./esm/tours/tour_player.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MasterTime: () => (/* binding */ MasterTime),
/* harmony export */   TourPlayer: () => (/* binding */ TourPlayer)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _blend_state_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../blend_state.js */ "./esm/blend_state.js");
/* harmony import */ var _camera_parameters_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../camera_parameters.js */ "./esm/camera_parameters.js");
/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../interfaces.js */ "./esm/interfaces.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../settings.js */ "./esm/settings.js");
/* harmony import */ var _space_time_controller_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../space_time_controller.js */ "./esm/space_time_controller.js");
/* harmony import */ var _view_mover_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../view_mover.js */ "./esm/view_mover.js");
/* harmony import */ var _overlay_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./overlay.js */ "./esm/tours/overlay.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Infrastructure for playing back tours.















// wwtlib.TourPlayer

function TourPlayer() {
    this._overlayBlend = _blend_state_js__WEBPACK_IMPORTED_MODULE_4__.BlendState.create(false, 1000);
    this._tour = null;
    this._onTarget = false;
    this._currentMasterSlide = null;
    this._callStack = new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.Stack();
    this._leaveSettingsWhenStopped = false;
}

TourPlayer._playing = false;
TourPlayer._switchedToFullScreen = false;
TourPlayer.noRestoreUIOnStop = false;

TourPlayer.get_playing = function () {
    return TourPlayer._playing;
};

TourPlayer.set_playing = function (value) {
    TourPlayer._playing = value;
    return value;
};

TourPlayer.add_tourEnded = function (value) {
    TourPlayer.__tourEnded = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(TourPlayer.__tourEnded, value);
};

TourPlayer.remove_tourEnded = function (value) {
    TourPlayer.__tourEnded = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(TourPlayer.__tourEnded, value);
};

var TourPlayer$ = {
    render: function (renderContext) {
        if (this._tour == null || this._tour.get_currentTourStop() == null || !TourPlayer._playing) {
            return;
        }
        renderContext.save();
        this.updateSlideStates();
        if (!this._onTarget) {
            this._slideStartTime = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now();
            if (renderContext.onTarget(this.get_tour().get_currentTourStop().get_target())) {
                this._onTarget = true;
                this._overlayBlend.set_state(!this.get_tour().get_currentTourStop().get_fadeInOverlays());
                this._overlayBlend.set_targetState(true);
                if (this._tour.get_currentTourStop().get_musicTrack() != null) {
                    this._tour.get_currentTourStop().get_musicTrack().seek(0);
                    this._tour.get_currentTourStop().get_musicTrack().play();
                }
                if (this._tour.get_currentTourStop().get_voiceTrack() != null) {
                    this._tour.get_currentTourStop().get_voiceTrack().seek(0);
                    this._tour.get_currentTourStop().get_voiceTrack().play();
                }
                var caption = '';
                var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._tour.get_currentTourStop().get_overlays());
                while ($enum1.moveNext()) {
                    var overlay = $enum1.current;
                    if (overlay.get_name().toLowerCase() === 'caption') {
                        var text = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(overlay, _overlay_js__WEBPACK_IMPORTED_MODULE_11__.TextOverlay);
                        if (text != null) {
                            caption = text.textObject.text;
                        }
                    }
                    overlay.play();
                }
                (0,_data_globals_js__WEBPACK_IMPORTED_MODULE_7__.setManagerVisibleLayerList)(this._tour.get_currentTourStop().layers);
                if (this._tour.get_currentTourStop().get_endTarget() != null && this._tour.get_currentTourStop().get_endTarget().get_zoomLevel() !== -1) {
                    if (this._tour.get_currentTourStop().get_target().get_type() === 4) {
                        // TODO fix this when Planets are implemented
                        //tour.CurrentTourStop.Target.UpdatePlanetLocation(SpaceTimeController.UtcToJulian(tour.CurrentTourStop.StartTime));
                        //tour.CurrentTourStop.EndTarget.UpdatePlanetLocation(SpaceTimeController.UtcToJulian(tour.CurrentTourStop.EndTime));
                    }
                    renderContext.viewMover = new _view_mover_js__WEBPACK_IMPORTED_MODULE_10__.ViewMoverKenBurnsStyle(this._tour.get_currentTourStop().get_target().get_camParams(), this._tour.get_currentTourStop().get_endTarget().get_camParams(), this._tour.get_currentTourStop().get_duration() / 1000, this._tour.get_currentTourStop().get_startTime(), this._tour.get_currentTourStop().get_endTime(), this._tour.get_currentTourStop().get_interpolationType());
                }
                _settings_js__WEBPACK_IMPORTED_MODULE_8__.Settings.tourSettings = this._tour.get_currentTourStop();
                _space_time_controller_js__WEBPACK_IMPORTED_MODULE_9__.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_startTime());
                _space_time_controller_js__WEBPACK_IMPORTED_MODULE_9__.SpaceTimeController.set_syncToClock(false);
                _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalScriptInterface._fireSlideChanged(caption);
            }
        }
        if (renderContext.gl != null) {
            renderContext.setupMatricesOverlays();
            if (this._currentMasterSlide != null) {
                var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._currentMasterSlide.get_overlays());
                while ($enum2.moveNext()) {
                    var overlay = $enum2.current;
                    overlay.set_tweenFactor(1);
                    overlay.draw3D(renderContext, false);
                }
            }
            if (this._onTarget) {
                var $enum3 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._tour.get_currentTourStop().get_overlays());
                while ($enum3.moveNext()) {
                    var overlay = $enum3.current;
                    if (overlay.get_name().toLowerCase() !== 'caption' || _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalScriptInterface.get_showCaptions()) {
                        overlay.set_tweenFactor(_camera_parameters_js__WEBPACK_IMPORTED_MODULE_5__.CameraParameters.easeCurve(this._tour.get_currentTourStop().get_tweenPosition(), (overlay.get_interpolationType() === 5) ? this._tour.get_currentTourStop().get_interpolationType() : overlay.get_interpolationType()));
                        overlay.draw3D(renderContext, false);
                    }
                }
            }
            renderContext.restore();

            // There used to be code to draw on-screen tour player controls here.
            // In the web engine, that kind of work is now taken care of at higher levels.
            //DrawPlayerControls(renderContext);
        } else {
            renderContext.device.scale(renderContext.height / 1116, renderContext.height / 1116);
            var aspectOrig = 1920 / 1116;
            var aspectNow = renderContext.width / renderContext.height;
            renderContext.device.translate(-((1920 - (aspectNow * 1116)) / 2), 0);
            if (this._currentMasterSlide != null) {
                var $enum4 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._currentMasterSlide.get_overlays());
                while ($enum4.moveNext()) {
                    var overlay = $enum4.current;
                    overlay.set_tweenFactor(1);
                    overlay.draw3D(renderContext, false);
                }
            }
            if (this._onTarget) {
                var $enum5 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._tour.get_currentTourStop().get_overlays());
                while ($enum5.moveNext()) {
                    var overlay = $enum5.current;
                    if (overlay.get_name().toLowerCase() !== 'caption' || _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalScriptInterface.get_showCaptions()) {
                        overlay.set_tweenFactor(_camera_parameters_js__WEBPACK_IMPORTED_MODULE_5__.CameraParameters.easeCurve(this._tour.get_currentTourStop().get_tweenPosition(), (overlay.get_interpolationType() === 5) ? this._tour.get_currentTourStop().get_interpolationType() : overlay.get_interpolationType()));
                        overlay.draw3D(renderContext, false);
                    }
                }
            }
            else {
                var i = 0;
            }
            renderContext.restore();
        }
    },

    get_tour: function () {
        return this._tour;
    },

    set_tour: function (value) {
        this._tour = value;
        return value;
    },

    nextSlide: function () {
        if (this._tour.get_currentTourStop() != null) {
            if (!this._tour.get_currentTourStop().get_masterSlide()) {
                if (this._tour.get_currentTourStop().get_musicTrack() != null) {
                    this._tour.get_currentTourStop().get_musicTrack().stop();
                }
                if (this._tour.get_currentTourStop().get_voiceTrack() != null) {
                    this._tour.get_currentTourStop().get_voiceTrack().stop();
                }
                var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._tour.get_currentTourStop().get_overlays());
                while ($enum1.moveNext()) {
                    var overlay = $enum1.current;
                    overlay.stop();
                }
            }
            else {
                this._currentMasterSlide = this._tour.get_currentTourStop();
            }
        }
        if (this._tour.get_currentTourstopIndex() < (this._tour.get_tourStops().length - 1) || this._tour.get_currentTourStop().get_isLinked()) {
            if (this._tour.get_currentTourStop().get_endTarget() != null) {
                _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl.gotoTargetFull(false, true, this._tour.get_currentTourStop().get_endTarget().get_camParams(), this._tour.get_currentTourStop().get_target().get_studyImageset(), this._tour.get_currentTourStop().get_target().get_backgroundImageset());
                _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl.set__mover(null);
            }
            this._onTarget = false;
            if (this._tour.get_currentTourStop().get_isLinked()) {
                try {
                    switch (this._tour.get_currentTourStop().get_nextSlide()) {
                        case 'Return':
                            if (this._callStack.count > 0) {
                                this.playFromTourstop(this._tour.get_tourStops()[this._callStack.pop()]);
                            }
                            else {
                                this._tour.set_currentTourstopIndex(this._tour.get_tourStops().length - 1);
                            }
                            break;
                        default:
                            this.playFromTourstop(this._tour.get_tourStops()[this._tour.getTourStopIndexByID(this._tour.get_currentTourStop().get_nextSlide())]);
                            break;
                    }
                }
                catch ($e2) {
                    if (this._tour.get_currentTourstopIndex() < (this._tour.get_tourStops().length - 1)) {
                        this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() + 1) - 1;
                    }
                }
            }
            else {
                this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() + 1) - 1;
            }
            if (this._currentMasterSlide != null && this._tour.get_currentTourStop().get_masterSlide()) {
                this._stopCurrentMaster();
            }
            var instant = false;
            switch (this._tour.get_currentTourStop().get__transition()) {
                case 0:
                    break;
                case 1:
                    instant = true;
                    break;
                case 2:
                    instant = true;
                    break;
                case 3:
                    instant = true;
                    break;
                case 5:
                    instant = true;
                    break;
                case 4:
                    instant = true;
                    break;
                default:
                    break;
            }
            _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl.gotoTarget(this._tour.get_currentTourStop().get_target(), false, instant, false);
            this._slideStartTime = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now();
            // Move to new settings
            _settings_js__WEBPACK_IMPORTED_MODULE_8__.Settings.tourSettings = this._tour.get_currentTourStop();
            _space_time_controller_js__WEBPACK_IMPORTED_MODULE_9__.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_startTime());
            _space_time_controller_js__WEBPACK_IMPORTED_MODULE_9__.SpaceTimeController.set_syncToClock(false);
        } else {
            this._stopCurrentMaster();
            TourPlayer._playing = false;
            if (_settings_js__WEBPACK_IMPORTED_MODULE_8__.Settings.get_current().autoRepeatTour) {
                this._tour.set_currentTourstopIndex(-1);
                this.play();
            }
            else {
                _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl._freezeView();
                if (TourPlayer.__tourEnded != null) {
                    TourPlayer.__tourEnded(this, new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.EventArgs());
                }
                _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl._hideUI(false);
                _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalScriptInterface._fireTourEnded();
            }
        }
    },

    _stopCurrentMaster: function () {
        if (this._currentMasterSlide != null) {
            if (this._currentMasterSlide.get_musicTrack() != null) {
                this._currentMasterSlide.get_musicTrack().stop();
            }
            if (this._currentMasterSlide.get_voiceTrack() != null) {
                this._currentMasterSlide.get_voiceTrack().stop();
            }
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._currentMasterSlide.get_overlays());
            while ($enum1.moveNext()) {
                var overlay = $enum1.current;
                overlay.stop();
            }
            this._currentMasterSlide = null;
        }
    },

    get_leaveSettingsWhenStopped: function () {
        return this._leaveSettingsWhenStopped;
    },

    set_leaveSettingsWhenStopped: function (value) {
        this._leaveSettingsWhenStopped = value;
        return value;
    },

    play: function () {
        if (this._tour == null) {
            return;
        }
        if (TourPlayer._playing) {
            this.stop(true);
        } else {
            TourPlayer._playing = true;
        }
        _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl._hideUI(true);
        TourPlayer._playing = true;
        if (this._tour.get_tourStops().length > 0) {
            this._onTarget = false;
            if (this._tour.get_currentTourstopIndex() === -1) {
                this._tour.set_currentTourStop(this._tour.get_tourStops()[0]);
            }

            // Ensure that all multimedia elements are prepared. When
            // playing back a tour in a browser, restrictions on autoplay
            // mean that we have to ensure that all of our multimedia
            // elements are prepared for playback inside code that is
            // triggered by a user-initiated event. The PrepMultimedia
            // callback should do whatever's needed to make sure that media
            // files are all ready to go.

            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._tour.get_tourStops());
            while ($enum1.moveNext()) {
                var stop = $enum1.current;
                if (stop.get_musicTrack() != null) {
                    stop.get_musicTrack().prepMultimedia();
                }
                if (stop.get_voiceTrack() != null) {
                    stop.get_voiceTrack().prepMultimedia();
                }
                var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(stop.get_overlays());
                while ($enum2.moveNext()) {
                    var overlay = $enum2.current;
                    overlay.prepMultimedia();
                }
            }
            if (this._tour.get_currentTourstopIndex() > 0) {
                this._playMasterForCurrent();
            }
            _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl.gotoTarget(this._tour.get_currentTourStop().get_target(), false, true, false);
        }
        this._slideStartTime = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now();
        TourPlayer._playing = true;
    },

    _playMasterForCurrent: function () {
        if (!this._tour.get_currentTourStop().get_masterSlide()) {
            var currentMaster = this._tour.elapsedTimeSinceLastMaster(this._tour.get_currentTourstopIndex());
            if (currentMaster != null) {
                var elapsed = currentMaster.duration;
                this._currentMasterSlide = currentMaster.master;
                if (this._currentMasterSlide.get_musicTrack() != null) {
                    this._currentMasterSlide.get_musicTrack().seek(elapsed);
                    this._currentMasterSlide.get_musicTrack().play();
                }
                if (this._currentMasterSlide.get_voiceTrack() != null) {
                    this._currentMasterSlide.get_voiceTrack().seek(elapsed);
                    this._currentMasterSlide.get_voiceTrack().play();
                }
                var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._currentMasterSlide.get_overlays());
                while ($enum1.moveNext()) {
                    var overlay = $enum1.current;
                    overlay.seek(elapsed);
                    overlay.play();
                }
            }
        }
    },

    stop: function (noSwitchBackFullScreen) {
        if (TourPlayer._switchedToFullScreen && !noSwitchBackFullScreen) {
        }

        // By default, when you stop (or pause) a tour, the main WWT
        // settings become active again. However, this can cause a jarring
        // jump if, say, the tour has localHorizonMode active and the main
        // settings don't. If you activate this option, we'll leave the tour
        // settings lingering, preventing any dramatic changes.
        if (!this._leaveSettingsWhenStopped) {
            _settings_js__WEBPACK_IMPORTED_MODULE_8__.Settings.tourSettings = null;
        }
        TourPlayer._playing = false;
        if (this._tour.get_currentTourStop() != null) {
            if (this._tour.get_currentTourStop().get_musicTrack() != null) {
                this._tour.get_currentTourStop().get_musicTrack().stop();
            }
            if (this._tour.get_currentTourStop().get_voiceTrack() != null) {
                this._tour.get_currentTourStop().get_voiceTrack().stop();
            }
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._tour.get_currentTourStop().get_overlays());
            while ($enum1.moveNext()) {
                var overlay = $enum1.current;
                overlay.stop();
            }
        }
        if (this._currentMasterSlide != null) {
            if (this._currentMasterSlide.get_musicTrack() != null) {
                this._currentMasterSlide.get_musicTrack().stop();
            }
            if (this._currentMasterSlide.get_voiceTrack() != null) {
                this._currentMasterSlide.get_voiceTrack().stop();
            }
            var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._currentMasterSlide.get_overlays());
            while ($enum2.moveNext()) {
                var overlay = $enum2.current;
                overlay.stop();
            }
        }
        _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl._hideUI(TourPlayer.noRestoreUIOnStop);
        _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalScriptInterface._fireTourEnded();
    },

    updateSlideStates: function () {
        var slideChanging = false;
        var slideElapsedTime = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now() - this._slideStartTime;
        if (slideElapsedTime > this._tour.get_currentTourStop().get_duration() && TourPlayer._playing) {
            this.nextSlide();
            slideChanging = true;
        }
        slideElapsedTime = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now() - this._slideStartTime;
        if (this._tour.get_currentTourStop() != null) {
            this._tour.get_currentTourStop().set_tweenPosition(Math.min(1, (slideElapsedTime / this._tour.get_currentTourStop().get_duration())));
            this._tour.get_currentTourStop().faderOpacity = 0;
            var elapsedSeconds = this._tour.get_currentTourStop().get_tweenPosition() * this._tour.get_currentTourStop().get_duration() / 1000;
            if (slideChanging) {
                _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl.set_crossFadeFrame(false);
            }
            switch (this._tour.get_currentTourStop().get__transition()) {
                case 0:
                    this._tour.get_currentTourStop().faderOpacity = 0;
                    _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl.set_crossFadeFrame(false);
                    break;
                case 2:
                    if (slideChanging) {
                    }
                    if (elapsedSeconds < (elapsedSeconds - this._tour.get_currentTourStop().get__transitionHoldTime())) {
                        _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl.set_crossFadeFrame(true);
                        this._tour.get_currentTourStop().faderOpacity = 1;
                    }
                    else {
                        this._tour.get_currentTourStop().faderOpacity = 0;
                        _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl.set_crossFadeFrame(false);
                    }
                    break;
                case 1:
                    _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl.set_crossFadeFrame(true);
                    var opacity = Math.max(0, 1 - Math.min(1, (elapsedSeconds - this._tour.get_currentTourStop().get__transitionHoldTime()) / this._tour.get_currentTourStop().get__transitionTime()));
                    this._tour.get_currentTourStop().faderOpacity = opacity;
                    if (slideChanging) {
                    }
                    break;
                case 3:
                case 4:
                    _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl.set_crossFadeFrame(false);
                    var opacity = Math.max(0, 1 - Math.max(0, elapsedSeconds - this._tour.get_currentTourStop().get__transitionHoldTime()) / this._tour.get_currentTourStop().get__transitionTime());
                    this._tour.get_currentTourStop().faderOpacity = opacity;
                    break;
                case 5:
                    _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl.set_crossFadeFrame(false);
                    break;
                default:
                    break;
            }
            if (!this._tour.get_currentTourStop().get_isLinked() && this._tour.get_currentTourstopIndex() < (this._tour.get_tourStops().length - 1)) {
                var nextTrans = this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() + 1].get__transition();
                var nextTransTime = this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() + 1].get__transitionOutTime();
                switch (nextTrans) {
                    case 5:
                    case 3:
                        if (!this._tour.get_currentTourStop().faderOpacity) {
                            _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl.set_crossFadeFrame(false);
                            var opacity = Math.max(0, 1 - Math.min(1, ((this._tour.get_currentTourStop().get_duration() / 1000) - elapsedSeconds) / nextTransTime));
                            this._tour.get_currentTourStop().faderOpacity = opacity;
                        }
                        break;
                    default:
                        break;
                }
            }
        }
    },

    updateTweenPosition: function (tween) {
        var slideElapsedTime = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now() - this._slideStartTime;
        if (tween > -1) {
            return this._tour.get_currentTourStop().set_tweenPosition(Math.min(1, tween));
        } else {
            return this._tour.get_currentTourStop().set_tweenPosition(Math.min(1, (slideElapsedTime / this._tour.get_currentTourStop().get_duration())));
        }
    },

    close: function () {
        if (this._tour != null) {
            if (TourPlayer.get_playing()) {
                this.stop(TourPlayer._switchedToFullScreen);
            }
            this._tour = null;
        }
    },

    mouseDown: function (sender, e) {
        var location;
        location = this.pointToView(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(e.offsetX, e.offsetY));
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return false;
        }
        for (var i = this._tour.get_currentTourStop().get_overlays().length - 1; i >= 0; i--) {
            if (this._tour.get_currentTourStop().get_overlays()[i].hitTest(location)) {
                if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._tour.get_currentTourStop().get_overlays()[i].get_url())) {
                    var linkItem = this._tour.get_currentTourStop().get_overlays()[i];
                    _baseutil_js__WEBPACK_IMPORTED_MODULE_3__.Util._openUrl(linkItem.get_url());
                    return true;
                }
                if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._tour.get_currentTourStop().get_overlays()[i].get_linkID())) {
                    this._callStack.push(this._tour.get_currentTourstopIndex());
                    this.playFromTourstop(this._tour.get_tourStops()[this._tour.getTourStopIndexByID(this._tour.get_currentTourStop().get_overlays()[i].get_linkID())]);
                    return true;
                }
            }
        }
        return false;
    },

    mouseUp: function (sender, e) {
        return false;
    },

    mouseMove: function (sender, e) {
        var location;
        try {
            location = this.pointToView(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(e.offsetX, e.offsetY));
        }
        catch ($e1) {
            return false;
        }
        if (this._tour == null || this._tour.get_currentTourStop() == null) {
            return false;
        }
        for (var i = this._tour.get_currentTourStop().get_overlays().length - 1; i >= 0; i--) {
            if (this._tour.get_currentTourStop().get_overlays()[i].hitTest(location) && (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._tour.get_currentTourStop().get_overlays()[i].get_url()) || !_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._tour.get_currentTourStop().get_overlays()[i].get_linkID()))) {
                return true;
            }
        }
        return false;
    },

    mouseClick: function (sender, e) {
        return false;
    },

    click: function (sender, e) {
        return false;
    },

    mouseDoubleClick: function (sender, e) {
        return false;
    },

    keyDown: function (sender, e) {
        switch (e.keyCode) {
            case 27: // escape
                this.stop(TourPlayer._switchedToFullScreen);
                _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl._closeTour();
                return true;
            case 32: // spacebar
                this.pauseTour();
                return true;
            case 39: // right arrow
                this._playNextSlide();
                return true;
            case 37: // left arrow
                this._playPreviousSlide();
                return true;
            case 35: // end key
                if (this._tour.get_tourStops().length > 0) {
                    this.playFromTourstop(this._tour.get_tourStops()[this._tour.get_tourStops().length - 1]);
                }
                return true;
            case 36: // home key
                if (this._tour.get_tourStops().length > 0) {
                    this.playFromTourstop(this._tour.get_tourStops()[0]);
                }
                return true;
        }
        return false;
    },

    _playNextSlide: function () {
        if ((this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1) && this._tour.get_tourStops().length > 0) {
            this.playFromTourstop(this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() + 1]);
        }
    },

    _playPreviousSlide: function () {
        if (this._tour.get_currentTourstopIndex() > 0) {
            this.playFromTourstop(this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() - 1]);
        }
    },

    playFromTourstop: function (tourStop) {
        this.stop(true);
        this._tour.set_currentTourStop(tourStop);
        _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl.gotoTarget(this._tour.get_currentTourStop().get_target(), false, true, false);
        _space_time_controller_js__WEBPACK_IMPORTED_MODULE_9__.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_startTime());
        _space_time_controller_js__WEBPACK_IMPORTED_MODULE_9__.SpaceTimeController.set_syncToClock(false);
        this.play();
    },

    pauseTour: function () {
        if (TourPlayer._playing) {
            this.stop(TourPlayer._switchedToFullScreen);
            _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl._freezeView();
            _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalScriptInterface._fireTourPaused();
        } else {
            this.play();
            _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalScriptInterface._fireTourResume();
        }
    },

    keyUp: function (sender, e) {
        return false;
    },

    hover: function (pnt) {
        if (TourPlayer._playing) {
            return true;
        }
        return false;
    },

    pointToView: function (pnt) {
        var clientHeight = _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl.canvas.height;
        var clientWidth = _data_globals_js__WEBPACK_IMPORTED_MODULE_7__.globalWWTControl.canvas.width;
        var viewWidth = (clientWidth / clientHeight) * 1116;
        var x = ((pnt.x) / (clientWidth) * viewWidth) - ((viewWidth - 1920) / 2);
        var y = (pnt.y) / clientHeight * 1116;
        return _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(x, y);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("TourPlayer", [TourPlayer, TourPlayer$, null, _interfaces_js__WEBPACK_IMPORTED_MODULE_6__.IUiController]);

// wwtlib.MasterTime

function MasterTime(master, duration) {
    this.duration = 0;
    this.master = master;
    this.duration = duration;
}

var MasterTime$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("MasterTime", [MasterTime, MasterTime$, null]);


/***/ }),

/***/ "./esm/tours/tour_stop.js":
/*!********************************!*\
  !*** ./esm/tours/tour_stop.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LayerInfo: () => (/* binding */ LayerInfo),
/* harmony export */   TourStop: () => (/* binding */ TourStop),
/* harmony export */   TransitionType: () => (/* binding */ TransitionType),
/* harmony export */   UndoTourStopChange: () => (/* binding */ UndoTourStopChange)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _utilities_xml_text_writer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utilities/xml_text_writer.js */ "./esm/utilities/xml_text_writer.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
/* harmony import */ var _constellation_filter_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../constellation_filter.js */ "./esm/constellation_filter.js");
/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../interfaces.js */ "./esm/interfaces.js");
/* harmony import */ var _place_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../place.js */ "./esm/place.js");
/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../settings.js */ "./esm/settings.js");
/* harmony import */ var _space_time_controller_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../space_time_controller.js */ "./esm/space_time_controller.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../util.js */ "./esm/util.js");
/* harmony import */ var _overlay_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./overlay.js */ "./esm/tours/overlay.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A stop on a tour.
















// wwtlib.TransitionType

var TransitionType = {
    slew: 0,
    crossFade: 1,
    crossCut: 2,
    fadeOutIn: 3,
    fadeIn: 4,
    fadeOut: 5
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("TransitionType", TransitionType);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("TransitionType", TransitionType);


// wwtlib.TourStop

function TourStop() {
    this._tourStopType = 0;
    this._keyFramed = false;
    this._tweenPosition = 0;
    this.faderOpacity = 0;
    this._owner = null;
    this._transition = 0;
    this._transitionTime = 2;
    this._transitionHoldTime = 4;
    this._transitionOutTime = 2;
    this._nextSlide = 'Next';
    this._fadeInOverlays = false;
    this._masterSlide = false;
    this._id = '';
    this._description = '';
    this._name = '';
    this._duration = 10000;
    this._interpolationType = 0;
    this._hasLocation = true;
    this._hasTime = true;
    this._startTime = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_10__.SpaceTimeController.get_now();
    this._endTime = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_10__.SpaceTimeController.get_now();
    this._actualPlanetScale = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_actualPlanetScale();
    this._locationAltitude = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_locationAltitude();
    this._locationLat = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_locationLat();
    this._locationLng = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_locationLng();
    this._showClouds = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showClouds();
    this._showConstellationBoundries = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showConstellationBoundries();
    this._showConstellationFigures = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showConstellationFigures();
    this._showConstellationSelection = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showConstellationSelection();
    this._showEcliptic = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showEcliptic();
    this._showElevationModel = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showElevationModel();
    this._showFieldOfView = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showFieldOfView();
    this._showGrid = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showGrid();
    this._showHorizon = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showHorizon();
    this._showHorizonPanorama = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showHorizonPanorama();
    this._showMoonsAsPointSource = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showMoonsAsPointSource();
    this._showSolarSystem = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showSolarSystem();
    this._fovTelescope = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_fovTelescope();
    this._fovEyepiece = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_fovEyepiece();
    this._fovCamera = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_fovCamera();
    this._localHorizonMode = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_localHorizonMode();
    this._galacticMode = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_galacticMode();
    this._solarSystemStars = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemStars();
    this._solarSystemMilkyWay = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemMilkyWay();
    this._solarSystemCosmos = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemCosmos();
    this._solarSystemOrbits = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemOrbits();
    this._solarSystemOverlays = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemOverlays();
    this._solarSystemLighting = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemLighting();
    this._solarSystemScale = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemScale();
    this._solarSystemMultiRes = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemMultiRes();
    this._showEquatorialGridText = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showEquatorialGridText();
    this._showGalacticGrid = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showGalacticGrid();
    this._showGalacticGridText = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showGalacticGridText();
    this._showEclipticGrid = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showEclipticGrid();
    this._showEclipticGridText = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showEclipticGridText();
    this._showEclipticOverviewText = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showEclipticOverviewText();
    this._showAltAzGrid = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showAltAzGrid();
    this._showAltAzGridText = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showAltAzGridText();
    this._showPrecessionChart = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showPrecessionChart();
    this._showConstellationPictures = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showConstellationPictures();
    this._showConstellationLabels = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showConstellationLabels();
    this._solarSystemCMB = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemCMB();
    this._solarSystemMinorPlanets = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemMinorPlanets();
    this._solarSystemPlanets = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemPlanets();
    this._showEarthSky = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showEarthSky();
    this._solarSystemMinorOrbits = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemMinorOrbits();
    this._constellationsEnabled = '';
    this._constellationFiguresFilter = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_constellationFiguresFilter().clone();
    this._constellationBoundariesFilter = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_constellationBoundariesFilter().clone();
    this._constellationNamesFilter = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_constellationNamesFilter().clone();
    this._constellationArtFilter = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_constellationArtFilter().clone();
    this._showSkyOverlays = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showSkyOverlays();
    this._showConstellations = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showConstellations();
    this._showSkyNode = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showSkyNode();
    this._showSkyGrids = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showSkyGrids();
    this._showSkyOverlaysIn3d = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showSkyOverlaysIn3d();
    this._earthCutawayView = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_earthCutawayView();
    this._showISSModel = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showISSModel();
    this._milkyWayModel = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_milkyWayModel();
    this._minorPlanetsFilter = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_minorPlanetsFilter();
    this._planetOrbitsFilter = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_planetOrbitsFilter();
    this._thumbnailString = '';
    this._thumbnail = null;
    this.layers = {};
    this._overlays = [];
    this._musicTrack = null;
    this._voiceTrack = null;
    this._eclipticGridColor = _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_green();
    this._galacticGridColor = _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_cyan();
    this._altAzGridColor = _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_magenta();
    this._precessionChartColor = _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_orange();
    this._eclipticColor = _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_blue();
    this._equatorialGridColor = _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_white();
    this._constellationLabelsHeight = 80;
    this._id = _util_js__WEBPACK_IMPORTED_MODULE_11__.Guid.newGuid().toString();
}

TourStop.clipboardFormat = 'WorldWideTelescope.Slide';

TourStop.create = function (target) {
    var ts = new TourStop();
    ts._target = target;
    return ts;
};

TourStop.getXmlText = function (ts) {
    var writer = new _utilities_xml_text_writer_js__WEBPACK_IMPORTED_MODULE_3__.XmlTextWriter();
    writer._writeProcessingInstruction('xml', "version='1.0' encoding='UTF-8'");
    ts._saveToXml(writer, true);
    writer._close();
    return writer.body;
};

TourStop._fromXml = function (owner, tourStop) {
    try {
        var newTourStop = new TourStop();
        newTourStop._owner = owner;
        newTourStop.set_id(tourStop.attributes.getNamedItem('Id').nodeValue);
        newTourStop.set_name(tourStop.attributes.getNamedItem('Name').nodeValue);
        newTourStop.set_description(tourStop.attributes.getNamedItem('Description').nodeValue);
        newTourStop._thumbnailString = tourStop.attributes.getNamedItem('Thumbnail').nodeValue;
        newTourStop._duration = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.parseTimeSpan(tourStop.attributes.getNamedItem('Duration').nodeValue);
        if (tourStop.attributes.getNamedItem('Master') != null) {
            newTourStop._masterSlide = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('Master').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('NextSlide') != null) {
            newTourStop._nextSlide = tourStop.attributes.getNamedItem('NextSlide').nodeValue;
        }
        if (tourStop.attributes.getNamedItem('InterpolationType') != null) {
            newTourStop.set_interpolationType(_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('InterpolationType', tourStop.attributes.getNamedItem('InterpolationType').nodeValue));
        }
        newTourStop._fadeInOverlays = true;
        if (tourStop.attributes.getNamedItem('FadeInOverlays') != null) {
            newTourStop._fadeInOverlays = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('FadeInOverlays').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('Transition') != null) {
            newTourStop._transition = _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.parse('TransitionType', tourStop.attributes.getNamedItem('Transition').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('HasLocation') != null) {
            newTourStop._hasLocation = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('HasLocation').nodeValue);
        }
        if (newTourStop._hasLocation) {
            if (tourStop.attributes.getNamedItem('LocationAltitude') != null) {
                newTourStop._locationAltitude = parseFloat(tourStop.attributes.getNamedItem('LocationAltitude').nodeValue);
            }
            if (tourStop.attributes.getNamedItem('LocationLat') != null) {
                newTourStop._locationLat = parseFloat(tourStop.attributes.getNamedItem('LocationLat').nodeValue);
            }
            if (tourStop.attributes.getNamedItem('LocationLng') != null) {
                newTourStop._locationLng = parseFloat(tourStop.attributes.getNamedItem('LocationLng').nodeValue);
            }
        }
        if (tourStop.attributes.getNamedItem('HasTime') != null) {
            newTourStop._hasTime = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('HasTime').nodeValue);
            if (newTourStop._hasTime) {
                if (tourStop.attributes.getNamedItem('StartTime') != null) {
                    newTourStop._startTime = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.date(tourStop.attributes.getNamedItem('StartTime').nodeValue + ' UTC');
                }
                if (tourStop.attributes.getNamedItem('EndTime') != null) {
                    newTourStop._endTime = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.date(tourStop.attributes.getNamedItem('EndTime').nodeValue + ' UTC');
                }
            }
        }
        if (tourStop.attributes.getNamedItem('ActualPlanetScale') != null) {
            newTourStop._actualPlanetScale = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ActualPlanetScale').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowClouds') != null) {
            newTourStop._showClouds = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowClouds').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowConstellationBoundries') != null) {
            newTourStop._showConstellationBoundries = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowConstellationBoundries').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowConstellationFigures') != null) {
            newTourStop._showConstellationFigures = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowConstellationFigures').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowConstellationSelection') != null) {
            newTourStop._showConstellationSelection = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowConstellationSelection').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowEcliptic') != null) {
            newTourStop._showEcliptic = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowEcliptic').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('EclipticColor') != null) {
            newTourStop._eclipticColor = _color_js__WEBPACK_IMPORTED_MODULE_5__.Color.load(tourStop.attributes.getNamedItem('EclipticColor').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowElevationModel') != null) {
            newTourStop._showElevationModel = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowElevationModel').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowFieldOfView') != null) {
            newTourStop._showFieldOfView = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowFieldOfView').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowGrid') != null) {
            newTourStop._showGrid = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowGrid').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowHorizon') != null) {
            newTourStop._showHorizon = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowHorizon').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowHorizonPanorama') != null) {
            newTourStop._showHorizonPanorama = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowHorizonPanorama').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowMoonsAsPointSource') != null) {
            newTourStop._showMoonsAsPointSource = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowMoonsAsPointSource').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowSolarSystem') != null) {
            newTourStop._showSolarSystem = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowSolarSystem').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('FovTelescope') != null) {
            newTourStop._fovTelescope = parseInt(tourStop.attributes.getNamedItem('FovTelescope').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('FovEyepiece') != null) {
            newTourStop._fovEyepiece = parseInt(tourStop.attributes.getNamedItem('FovEyepiece').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('FovCamera') != null) {
            newTourStop._fovCamera = parseInt(tourStop.attributes.getNamedItem('FovCamera').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('LocalHorizonMode') != null) {
            newTourStop._localHorizonMode = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('LocalHorizonMode').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('GalacticMode') != null) {
            newTourStop._galacticMode = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('GalacticMode').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('SolarSystemStars') != null) {
            newTourStop._solarSystemStars = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('SolarSystemStars').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('SolarSystemMilkyWay') != null) {
            newTourStop._solarSystemMilkyWay = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('SolarSystemMilkyWay').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('SolarSystemCosmos') != null) {
            newTourStop._solarSystemCosmos = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('SolarSystemCosmos').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('SolarSystemOrbits') != null) {
            newTourStop._solarSystemOrbits = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('SolarSystemOrbits').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('SolarSystemOverlays') != null) {
            newTourStop._solarSystemOverlays = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('SolarSystemOverlays').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('SolarSystemLighting') != null) {
            newTourStop._solarSystemLighting = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('SolarSystemLighting').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('SolarSystemScale') != null) {
            newTourStop._solarSystemScale = parseInt(tourStop.attributes.getNamedItem('SolarSystemScale').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('SolarSystemMultiRes') != null) {
            newTourStop._solarSystemMultiRes = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('SolarSystemMultiRes').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowEquatorialGridText') != null) {
            newTourStop._showEquatorialGridText = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowEquatorialGridText').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('EquatorialGridColor') != null) {
            newTourStop._equatorialGridColor = _color_js__WEBPACK_IMPORTED_MODULE_5__.Color.load(tourStop.attributes.getNamedItem('EquatorialGridColor').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowGalacticGrid') != null) {
            newTourStop._showGalacticGrid = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowGalacticGrid').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowGalacticGridText') != null) {
            newTourStop._showGalacticGridText = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowGalacticGridText').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('GalacticGridColor') != null) {
            newTourStop._galacticGridColor = _color_js__WEBPACK_IMPORTED_MODULE_5__.Color.load(tourStop.attributes.getNamedItem('GalacticGridColor').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowEclipticGrid') != null) {
            newTourStop._showEclipticGrid = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowEclipticGrid').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowEclipticGridText') != null) {
            newTourStop._showEclipticGridText = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowEclipticGridText').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('EclipticGridColor') != null) {
            newTourStop._eclipticGridColor = _color_js__WEBPACK_IMPORTED_MODULE_5__.Color.load(tourStop.attributes.getNamedItem('EclipticGridColor').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowEclipticOverviewText') != null) {
            newTourStop._showEclipticOverviewText = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowEclipticOverviewText').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowAltAzGrid') != null) {
            newTourStop._showAltAzGrid = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowAltAzGrid').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowAltAzGridText') != null) {
            newTourStop._showAltAzGridText = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowAltAzGridText').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('AltAzGridColor') != null) {
            newTourStop._altAzGridColor = _color_js__WEBPACK_IMPORTED_MODULE_5__.Color.load(tourStop.attributes.getNamedItem('AltAzGridColor').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowPrecessionChart') != null) {
            newTourStop._showPrecessionChart = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowPrecessionChart').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('PrecessionChartColor') != null) {
            newTourStop._precessionChartColor = _color_js__WEBPACK_IMPORTED_MODULE_5__.Color.load(tourStop.attributes.getNamedItem('PrecessionChartColor').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowConstellationPictures') != null) {
            newTourStop._showConstellationPictures = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowConstellationPictures').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowConstellationLabels') != null) {
            newTourStop._showConstellationLabels = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowConstellationLabels').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('SolarSystemCMB') != null) {
            newTourStop._solarSystemCMB = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('SolarSystemCMB').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('SolarSystemMinorPlanets') != null) {
            newTourStop._solarSystemMinorPlanets = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('SolarSystemMinorPlanets').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('SolarSystemPlanets') != null) {
            newTourStop._solarSystemPlanets = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('SolarSystemPlanets').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowEarthSky') != null) {
            newTourStop._showEarthSky = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowEarthSky').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('SolarSystemMinorOrbits') != null) {
            newTourStop._solarSystemMinorOrbits = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('SolarSystemMinorOrbits').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowSkyOverlays') != null) {
            newTourStop._showSkyOverlays = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowSkyOverlays').nodeValue);
        } else {
            newTourStop._showSkyOverlays = true;
        }
        if (tourStop.attributes.getNamedItem('ShowConstellations') != null) {
            newTourStop._showConstellations = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowConstellations').nodeValue);
        } else {
            newTourStop._showConstellations = true;
        }
        if (tourStop.attributes.getNamedItem('ShowSkyNode') != null) {
            newTourStop._showSkyNode = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowSkyNode').nodeValue);
        } else {
            newTourStop._showSkyNode = true;
        }
        if (tourStop.attributes.getNamedItem('ShowSkyGrids') != null) {
            newTourStop._showSkyGrids = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowSkyGrids').nodeValue);
        } else {
            newTourStop._showSkyGrids = true;
        }
        if (tourStop.attributes.getNamedItem('ShowSkyOverlaysIn3d') != null) {
            newTourStop._showSkyOverlaysIn3d = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowSkyOverlaysIn3d').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('EarthCutawayView') != null) {
            newTourStop._earthCutawayView = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('EarthCutawayView').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ShowISSModel') != null) {
            newTourStop._showISSModel = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('ShowISSModel').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('MilkyWayModel') != null) {
            newTourStop._milkyWayModel = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.boolean(tourStop.attributes.getNamedItem('MilkyWayModel').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('ConstellationBoundariesFilter') != null) {
            newTourStop._constellationBoundariesFilter = _constellation_filter_js__WEBPACK_IMPORTED_MODULE_6__.ConstellationFilter.parse(tourStop.attributes.getNamedItem('ConstellationBoundariesFilter').nodeValue);
        } else {
            newTourStop._constellationBoundariesFilter = _constellation_filter_js__WEBPACK_IMPORTED_MODULE_6__.ConstellationFilter.get_allConstellation();
        }
        if (tourStop.attributes.getNamedItem('ConstellationBoundariesFilter') != null) {
            newTourStop._constellationFiguresFilter = _constellation_filter_js__WEBPACK_IMPORTED_MODULE_6__.ConstellationFilter.parse(tourStop.attributes.getNamedItem('ConstellationBoundariesFilter').nodeValue);
        } else {
            newTourStop._constellationFiguresFilter = new _constellation_filter_js__WEBPACK_IMPORTED_MODULE_6__.ConstellationFilter();
        }
        if (tourStop.attributes.getNamedItem('ConstellationNamesFilter') != null) {
            newTourStop._constellationNamesFilter = _constellation_filter_js__WEBPACK_IMPORTED_MODULE_6__.ConstellationFilter.parse(tourStop.attributes.getNamedItem('ConstellationNamesFilter').nodeValue);
        } else {
            newTourStop._constellationNamesFilter = new _constellation_filter_js__WEBPACK_IMPORTED_MODULE_6__.ConstellationFilter();
        }
        if (tourStop.attributes.getNamedItem('ConstellationArtFilter') != null) {
            newTourStop._constellationArtFilter = _constellation_filter_js__WEBPACK_IMPORTED_MODULE_6__.ConstellationFilter.parse(tourStop.attributes.getNamedItem('ConstellationArtFilter').nodeValue);
        } else {
            newTourStop._constellationArtFilter = new _constellation_filter_js__WEBPACK_IMPORTED_MODULE_6__.ConstellationFilter();
        }
        if (tourStop.attributes.getNamedItem('MinorPlanetsFilter') != null) {
            newTourStop._minorPlanetsFilter = parseInt(tourStop.attributes.getNamedItem('MinorPlanetsFilter').nodeValue);
        }
        if (tourStop.attributes.getNamedItem('PlanetOrbitsFilter') != null) {
            newTourStop._planetOrbitsFilter = parseInt(tourStop.attributes.getNamedItem('PlanetOrbitsFilter').nodeValue);
        }
        var place = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(tourStop, 'Place');
        newTourStop._target = _place_js__WEBPACK_IMPORTED_MODULE_8__.Place._fromXml(place);
        var endTarget = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(tourStop, 'EndTarget');
        if (endTarget != null) {
            newTourStop._endTarget = _place_js__WEBPACK_IMPORTED_MODULE_8__.Place._fromXml(endTarget);
        }
        var overlays = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(tourStop, 'Overlays');
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(overlays.childNodes);
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            if (overlay.nodeName === 'Overlay') {
                newTourStop.addOverlay(_overlay_js__WEBPACK_IMPORTED_MODULE_12__.Overlay._fromXml(newTourStop, overlay));
            }
        }
        var musicNode = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(tourStop, 'MusicTrack');
        if (musicNode != null) {
            newTourStop._musicTrack = _overlay_js__WEBPACK_IMPORTED_MODULE_12__.Overlay._fromXml(newTourStop, _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(musicNode, 'Overlay'));
        }
        var voiceNode = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(tourStop, 'VoiceTrack');
        if (voiceNode != null) {
            newTourStop._voiceTrack = _overlay_js__WEBPACK_IMPORTED_MODULE_12__.Overlay._fromXml(newTourStop, _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(voiceNode, 'Overlay'));
        }
        var layerNode = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(tourStop, 'VisibleLayers');
        if (layerNode != null) {
            newTourStop._loadLayerList(layerNode);
        }
        newTourStop._thumbnail = owner.getCachedTexture(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0}.thumb.png', newTourStop._id), function () {
            var c = 0;
        });
        return newTourStop;
    }
    catch (ex) {
        _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalScriptInterface._fireTourError(ex);
        return null;
    }
};

var TourStop$ = {
    get_keyFramed: function () {
        return this._keyFramed;
    },

    get_tourStopType: function () {
        if (this._target.get_backgroundImageset() != null) {
            return this._target.get_backgroundImageset().get_dataSetType();
        } else {
            return this._tourStopType;
        }
    },

    set_tourStopType: function (value) {
        if (this._target.get_backgroundImageset() != null) {
            if (this._target.get_backgroundImageset().get_dataSetType() !== value) {
                this._target.set_backgroundImageset(null);
            }
        }
        this._tourStopType = value;
        return value;
    },

    get_tweenPosition: function () {
        return this._tweenPosition;
    },

    set_tweenPosition: function (value) {
        if (this._tweenPosition !== value) {
            this._tweenPosition = Math.max(0, Math.min(1, value));
            this.updateTweenPosition();
        }
        return value;
    },

    updateTweenPosition: function () {
        if (this.get_keyFramed()) {
        }
    },

    copy: function () {
        var writer = new _utilities_xml_text_writer_js__WEBPACK_IMPORTED_MODULE_3__.XmlTextWriter();
        writer._writeProcessingInstruction('xml', "version='1.0' encoding='UTF-8'");
        this._saveToXml(writer, true);
        try {
            var xParser = new DOMParser();
            var doc = xParser.parseFromString(writer.body, 'text/xml');
            var node = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(doc, 'TourStop');
            var ts = TourStop._fromXml(this.get_owner(), node);
            ts.set_id(_util_js__WEBPACK_IMPORTED_MODULE_11__.Guid.newGuid().toString());
            return ts;
        }
        catch ($e1) {
        }
        return null;
    },

    get_owner: function () {
        return this._owner;
    },

    set_owner: function (value) {
        this._owner = value;
        return value;
    },

    get__transition: function () {
        return this._transition;
    },

    set__transition: function (value) {
        if (this._transition !== value) {
            this._transition = value;
            if (this._owner != null) {
                this._owner.set_tourDirty(true);
            }
        }
        return value;
    },

    get__transitionTime: function () {
        return this._transitionTime;
    },

    set__transitionTime: function (value) {
        if (this._transitionTime !== value) {
            this._transitionTime = value;
            if (this._owner != null) {
                this._owner.set_tourDirty(true);
            }
        }
        return value;
    },

    get__transitionHoldTime: function () {
        return this._transitionHoldTime;
    },

    set__transitionHoldTime: function (value) {
        if (this._transitionHoldTime !== value) {
            this._transitionHoldTime = value;
            if (this._owner != null) {
                this._owner.set_tourDirty(true);
            }
        }
        return value;
    },

    get__transitionOutTime: function () {
        return this._transitionOutTime;
    },

    set__transitionOutTime: function (value) {
        if (this._transitionOutTime !== value) {
            this._transitionOutTime = value;
            if (this._owner != null) {
                this._owner.set_tourDirty(true);
            }
        }
        return value;
    },

    get_nextSlide: function () {
        return this._nextSlide;
    },

    set_nextSlide: function (value) {
        this._nextSlide = value;
        return value;
    },

    get_isLinked: function () {
        if (this._nextSlide == null || this._nextSlide === 'Next' || !this._nextSlide) {
            return false;
        }
        return true;
    },

    get_fadeInOverlays: function () {
        return this._fadeInOverlays;
    },

    set_fadeInOverlays: function (value) {
        this._fadeInOverlays = value;
        return value;
    },

    get_masterSlide: function () {
        return this._masterSlide;
    },

    set_masterSlide: function (value) {
        if (this._masterSlide !== value) {
            this._masterSlide = value;
            if (this._owner != null) {
                this._owner.set_tourDirty(true);
            }
        }
        return value;
    },

    get_id: function () {
        return this._id;
    },

    set_id: function (value) {
        this._id = value;
        if (this._owner != null) {
            this._owner.set_tourDirty(true);
        }
        return value;
    },

    toString: function () {
        if (this._target != null) {
            return this.get_target().get_name();
        } else {
            return this._description;
        }
    },

    get_description: function () {
        return this._description;
    },

    set_description: function (value) {
        if (this._description !== value) {
            this._description = value;
            if (this._owner != null) {
                this._owner.set_tourDirty(true);
            }
        }
        return value;
    },

    get_name: function () {
        if (this._target != null) {
            return this._target.get_name();
        }
        return this._name;
    },

    set_name: function (value) {
        if (this._name !== value) {
            this._name = value;
            if (this._owner != null) {
                this._owner.set_tourDirty(true);
            }
        }
        return value;
    },

    get_duration: function () {
        return this._duration;
    },

    set_duration: function (value) {
        if (this._duration !== value) {
            this._duration = value;
            if (this._owner != null) {
                this._owner.set_tourDirty(true);
            }
        }
        return value;
    },

    get_target: function () {
        return this._target;
    },

    set_target: function (value) {
        if (this._target !== value) {
            this._target = value;
            if (this._owner != null) {
                this._owner.set_tourDirty(true);
            }
        }
        return value;
    },

    get_endTarget: function () {
        return this._endTarget;
    },

    set_endTarget: function (value) {
        if (this._endTarget !== value) {
            this._endTarget = value;
            if (this._owner != null) {
                this._owner.set_tourDirty(true);
            }
        }
        return value;
    },

    get_interpolationType: function () {
        return this._interpolationType;
    },

    set_interpolationType: function (value) {
        this._interpolationType = value;
        return value;
    },

    get_hasLocation: function () {
        return this._hasTime;
    },

    set_hasLocation: function (value) {
        if (this._hasLocation !== value) {
            this._hasLocation = value;
            if (this._owner != null) {
                this._owner.set_tourDirty(true);
            }
        }
        return value;
    },

    get_hasTime: function () {
        return this._hasTime;
    },

    set_hasTime: function (value) {
        if (this._hasTime !== value) {
            this._hasTime = this._hasLocation = value;
            if (this._owner != null) {
                this._owner.set_tourDirty(true);
            }
        }
        return value;
    },

    get_startTime: function () {
        return this._startTime;
    },

    set_startTime: function (value) {
        this._startTime = value;
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.compareDates(this._startTime, value)) {
            this._startTime = value;
            if (this._owner != null) {
                this._owner.set_tourDirty(true);
            }
        }
        return value;
    },

    get_endTime: function () {
        return this._endTime;
    },

    set_endTime: function (value) {
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.compareDates(this._endTime, value)) {
            this._endTime = value;
            if (this._owner != null) {
                this._owner.set_tourDirty(true);
            }
        }
        return value;
    },

    captureSettings: function () {
        this._startTime = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_10__.SpaceTimeController.get_now();
        this._actualPlanetScale = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_actualPlanetScale();
        this._locationAltitude = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_locationAltitude();
        this._locationLat = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_locationLat();
        this._locationLng = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_locationLng();
        this._showClouds = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showClouds();
        this._showConstellationBoundries = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showConstellationBoundries();
        this._showConstellationFigures = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showConstellationFigures();
        this._showConstellationSelection = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showConstellationSelection();
        this._showEcliptic = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showEcliptic();
        this._showElevationModel = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showElevationModel();
        this._showFieldOfView = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showFieldOfView();
        this._showGrid = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showGrid();
        this._showHorizon = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showHorizon();
        this._showHorizonPanorama = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showHorizonPanorama();
        this._showMoonsAsPointSource = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showMoonsAsPointSource();
        this._showSolarSystem = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showSolarSystem();
        this._fovTelescope = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_fovTelescope();
        this._fovEyepiece = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_fovEyepiece();
        this._fovCamera = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_fovCamera();
        this._localHorizonMode = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_localHorizonMode();
        this._galacticMode = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_galacticMode();
        this._solarSystemStars = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemStars();
        this._solarSystemMilkyWay = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemMilkyWay();
        this._solarSystemCosmos = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemCosmos();
        this._solarSystemOrbits = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemOrbits();
        this._solarSystemOverlays = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemOverlays();
        this._solarSystemLighting = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemLighting();
        this._solarSystemScale = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemScale();
        this._solarSystemMultiRes = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemMultiRes();
        this._showEquatorialGridText = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showEquatorialGridText();
        this._showGalacticGrid = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showGalacticGrid();
        this._showGalacticGridText = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showGalacticGridText();
        this._showEclipticGrid = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showEclipticGrid();
        this._showEclipticGridText = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showEclipticGridText();
        this._showEclipticOverviewText = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showEclipticOverviewText();
        this._showAltAzGrid = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showAltAzGrid();
        this._showAltAzGridText = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showAltAzGridText();
        this._showPrecessionChart = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showPrecessionChart();
        this._showConstellationPictures = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showConstellationPictures();
        this._showConstellationLabels = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showConstellationLabels();
        this._solarSystemCMB = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemCMB();
        this._solarSystemMinorPlanets = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemMinorPlanets();
        this._solarSystemPlanets = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemPlanets();
        this._showEarthSky = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showEarthSky();
        this._solarSystemMinorOrbits = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_solarSystemMinorOrbits();
        this._constellationFiguresFilter = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_constellationFiguresFilter().clone();
        this._constellationBoundariesFilter = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_constellationBoundariesFilter().clone();
        this._constellationNamesFilter = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_constellationNamesFilter().clone();
        this._constellationArtFilter = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_constellationArtFilter().clone();
        this._showSkyOverlays = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showSkyOverlays();
        this._showConstellations = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showConstellations();
        this._showSkyNode = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showSkyNode();
        this._showSkyGrids = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showSkyGrids();
        this._showSkyOverlaysIn3d = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showSkyOverlaysIn3d();
        this._earthCutawayView = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_earthCutawayView();
        this._showISSModel = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_showISSModel();
        this._milkyWayModel = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_milkyWayModel();
        this._minorPlanetsFilter = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_minorPlanetsFilter();
        this._planetOrbitsFilter = _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_planetOrbitsFilter();
    },

    syncSettings: function () {
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_actualPlanetScale(this._actualPlanetScale);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_locationAltitude(this._locationAltitude);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_locationLat(this._locationLat);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_locationLng(this._locationLng);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_earthCutawayView(this._earthCutawayView);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showConstellationBoundries(this._showConstellationBoundries);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showConstellationFigures(this._showConstellationFigures);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showConstellationSelection(this._showConstellationSelection);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showEcliptic(this._showEcliptic);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showElevationModel(this._showElevationModel);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showGrid(this._showGrid);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showHorizon(this._showHorizon);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showSolarSystem(this._showSolarSystem);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_localHorizonMode(this._localHorizonMode);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_galacticMode(this._galacticMode);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_solarSystemStars(this._solarSystemStars);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_solarSystemMilkyWay(this._solarSystemMilkyWay);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_solarSystemCosmos(this._solarSystemCosmos);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_solarSystemCMB(this._solarSystemCMB);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_solarSystemOrbits(this._solarSystemOrbits);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_solarSystemMinorOrbits(this._solarSystemMinorOrbits);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_solarSystemMinorPlanets(this._solarSystemMinorPlanets);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_solarSystemOverlays(this._solarSystemOverlays);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_solarSystemLighting(this._solarSystemLighting);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showISSModel(this._showISSModel);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_solarSystemScale(this._solarSystemScale);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_solarSystemMultiRes(this._solarSystemMultiRes);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showEarthSky(this._showEarthSky);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_minorPlanetsFilter(this._minorPlanetsFilter);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_planetOrbitsFilter(this._planetOrbitsFilter);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showEquatorialGridText(this._showEquatorialGridText);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showGalacticGrid(this._showGalacticGrid);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showGalacticGridText(this._showGalacticGridText);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showEclipticGrid(this._showEclipticGrid);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showEclipticGridText(this._showEclipticGridText);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showEclipticOverviewText(this._showEclipticOverviewText);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showAltAzGrid(this._showAltAzGrid);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showAltAzGridText(this._showAltAzGridText);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showPrecessionChart(this._showPrecessionChart);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showConstellationPictures(this._showConstellationPictures);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_constellationsEnabled(this._constellationsEnabled);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showSkyOverlays(this._showSkyOverlays);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_constellations(this._showConstellations);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showSkyNode(this._showSkyNode);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_showSkyGrids(this._showSkyGrids);
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_constellationFiguresFilter(this._constellationFiguresFilter.clone());
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_constellationBoundariesFilter(this._constellationBoundariesFilter.clone());
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_constellationNamesFilter(this._constellationNamesFilter.clone());
        _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_globalSettings().set_constellationArtFilter(this._constellationArtFilter.clone());
    },

    get_solarSystemStars: function () {
        return this._solarSystemStars;
    },

    get_solarSystemMultiRes: function () {
        return this._solarSystemMultiRes;
    },

    get_solarSystemMilkyWay: function () {
        return this._solarSystemMilkyWay;
    },

    get_solarSystemCosmos: function () {
        return this._solarSystemCosmos;
    },

    get_solarSystemOrbits: function () {
        return this._solarSystemOrbits;
    },

    get_solarSystemOverlays: function () {
        return this._solarSystemOverlays;
    },

    get_solarSystemLighting: function () {
        return this._solarSystemLighting;
    },

    get_solarSystemScale: function () {
        return this._solarSystemScale;
    },

    get_actualPlanetScale: function () {
        return this._actualPlanetScale;
    },

    get_fovCamera: function () {
        return this._fovCamera;
    },

    get_fovEyepiece: function () {
        return this._fovEyepiece;
    },

    get_fovTelescope: function () {
        return this._fovTelescope;
    },

    get_locationAltitude: function () {
        if (this._hasLocation) {
            return this._locationAltitude;
        } else {
            return _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_locationAltitude();
        }
    },

    get_locationLat: function () {
        if (this._hasLocation) {
            return this._locationLat;
        } else {
            return _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_locationLat();
        }
    },

    get_locationLng: function () {
        if (this._hasLocation) {
            return this._locationLng;
        } else {
            return _settings_js__WEBPACK_IMPORTED_MODULE_9__.Settings.get_current().get_locationLng();
        }
    },

    get_showClouds: function () {
        return this._showClouds;
    },

    get_showConstellationBoundries: function () {
        return this._showConstellationBoundries;
    },

    get_showConstellationFigures: function () {
        return this._showConstellationFigures;
    },

    get_showConstellationSelection: function () {
        return this._showConstellationSelection;
    },

    get_showEcliptic: function () {
        return this._showEcliptic;
    },

    get_showElevationModel: function () {
        return this._showElevationModel;
    },

    get_showFieldOfView: function () {
        return this._showFieldOfView;
    },

    get_showGrid: function () {
        return this._showGrid;
    },

    get_showHorizon: function () {
        return this._showHorizon;
    },

    get_showHorizonPanorama: function () {
        return this._showHorizonPanorama;
    },

    get_showMoonsAsPointSource: function () {
        return this._showMoonsAsPointSource;
    },

    get_showSolarSystem: function () {
        return this._showSolarSystem;
    },

    get_localHorizonMode: function () {
        return this._localHorizonMode;
    },

    get_galacticMode: function () {
        return this._galacticMode;
    },

    get_thumbnail: function () {
        if (this._target != null && this._thumbnail == null) {
            return null;
        }
        return this._thumbnail;
    },

    set_thumbnail: function (value) {
        this._thumbnail = value;
        if (this._owner != null) {
            this._owner.set_tourDirty(true);
        }
        return value;
    },

    get_overlays: function () {
        return this._overlays;
    },

    get_musicTrack: function () {
        return this._musicTrack;
    },

    set_musicTrack: function (value) {
        if (this._musicTrack !== value) {
            this._musicTrack = value;
            if (this._owner != null) {
                this._owner.set_tourDirty(true);
            }
        }
        return value;
    },

    get_voiceTrack: function () {
        return this._voiceTrack;
    },

    set_voiceTrack: function (value) {
        if (this._voiceTrack !== value) {
            this._voiceTrack = value;
            if (this._owner != null) {
                this._owner.set_tourDirty(true);
            }
        }
        return value;
    },

    addOverlay: function (overlay) {
        if (overlay == null) {
            return;
        }
        overlay.set_owner(this);
        this._overlays.push(overlay);
        if (this._owner != null) {
            this._owner.set_tourDirty(true);
        }
    },

    removeOverlay: function (overlay) {
        _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove(this._overlays, overlay);
        if (this._owner != null) {
            this._owner.set_tourDirty(true);
        }
    },

    cleanUp: function () {
        // "todo this needs to be evaluated. Causes major pain in WebClient"
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.get_overlays());
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            overlay.cleanUp();
        }
        if (this._voiceTrack != null) {
            this._voiceTrack.cleanUp();
        }
        if (this._musicTrack != null) {
            this._musicTrack.cleanUp();
        }
    },

    sendToBack: function (target) {
        _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove(this._overlays, target);
        this._overlays.splice(0, 0, target);
        if (this._owner != null) {
            this._owner.set_tourDirty(true);
        }
    },

    bringToFront: function (target) {
        _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove(this._overlays, target);
        this._overlays.push(target);
        if (this._owner != null) {
            this._owner.set_tourDirty(true);
        }
    },

    bringForward: function (target) {
        var index = this._overlays.indexOf(target);
        if (index < this._overlays.length - 1) {
            _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove(this._overlays, target);
            this._overlays.splice(index + 1, 0, target);
        }
        if (this._owner != null) {
            this._owner.set_tourDirty(true);
        }
    },

    sendBackward: function (target) {
        var index = this._overlays.indexOf(target);
        if (index > 0) {
            _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove(this._overlays, target);
            this._overlays.splice(index - 1, 0, target);
        }
        if (this._owner != null) {
            this._owner.set_tourDirty(true);
        }
    },

    getNextOverlay: function (current) {
        if (current == null) {
            if (this._overlays.length > 0) {
                return this._overlays[0];
            }
            else {
                return null;
            }
        }
        var index = this._overlays.indexOf(current);
        if (index < this._overlays.length - 1) {
            return this._overlays[index + 1];
        } else {
            return this._overlays[0];
        }
    },

    getPerviousOverlay: function (current) {
        if (current == null) {
            if (this._overlays.length > 0) {
                return this._overlays[0];
            }
            else {
                return null;
            }
        }
        var index = this._overlays.indexOf(current);
        if (index > 0) {
            return this._overlays[index - 1];
        } else {
            return this._overlays[this._overlays.length - 1];
        }
    },

    getOverlayById: function (id) {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._overlays);
        while ($enum1.moveNext()) {
            var ol = $enum1.current;
            if (ol.id === id) {
                return ol;
            }
        }
        return null;
    },

    get_tourStopThumbnailFilename: function () {
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0}.thumb.png', this._id);
    },

    _saveToXml: function (xmlWriter, saveContent) {
        if (saveContent) {
            if (this._thumbnail != null) {
            }
        }
        xmlWriter._writeStartElement('TourStop');
        xmlWriter._writeAttributeString('Id', this._id);
        xmlWriter._writeAttributeString('Name', this._name);
        xmlWriter._writeAttributeString('Description', this._description);
        xmlWriter._writeAttributeString('Thumbnail', this._thumbnailString);
        xmlWriter._writeAttributeString('Duration', _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.xmlDuration(this._duration));
        xmlWriter._writeAttributeString('Master', this._masterSlide.toString());
        xmlWriter._writeAttributeString('TransitionType', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('TransitionType', this._transition));
        xmlWriter._writeAttributeString('TransitionTime', this._transitionTime.toString());
        xmlWriter._writeAttributeString('TransitionOutTime', this._transitionOutTime.toString());
        xmlWriter._writeAttributeString('TransitionHoldTime', this._transitionHoldTime.toString());
        xmlWriter._writeAttributeString('NextSlide', this._nextSlide);
        xmlWriter._writeAttributeString('InterpolationType', _typesystem_js__WEBPACK_IMPORTED_MODULE_1__.Enums.toXml('InterpolationType', this._interpolationType));
        xmlWriter._writeAttributeString('HasLocation', this._hasLocation.toString());
        if (this._hasLocation) {
            xmlWriter._writeAttributeString('LocationAltitude', this._locationAltitude.toString());
            xmlWriter._writeAttributeString('LocationLat', this._locationLat.toString());
            xmlWriter._writeAttributeString('LocationLng', this._locationLng.toString());
        }
        xmlWriter._writeAttributeString('HasTime', this._hasTime.toString());
        if (this._hasTime) {
            xmlWriter._writeAttributeString('StartTime', _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.xmlDate(this._startTime));
            xmlWriter._writeAttributeString('EndTime', _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.xmlDate(this._endTime));
        }
        xmlWriter._writeAttributeString('ActualPlanetScale', this._actualPlanetScale.toString());
        xmlWriter._writeAttributeString('ShowClouds', this._showClouds.toString());
        xmlWriter._writeAttributeString('EarthCutawayView', this._earthCutawayView.toString());
        xmlWriter._writeAttributeString('ShowConstellationBoundries', this._showConstellationBoundries.toString());
        xmlWriter._writeAttributeString('ShowConstellationFigures', this._showConstellationFigures.toString());
        xmlWriter._writeAttributeString('ShowConstellationSelection', this._showConstellationSelection.toString());
        xmlWriter._writeAttributeString('ShowEcliptic', this._showEcliptic.toString());
        xmlWriter._writeAttributeString('EclipticColor', this._eclipticColor.save());
        xmlWriter._writeAttributeString('ShowElevationModel', this._showElevationModel.toString());
        this._showFieldOfView = false;
        xmlWriter._writeAttributeString('ShowFieldOfView', this._showFieldOfView.toString());
        xmlWriter._writeAttributeString('ShowGrid', this._showGrid.toString());
        xmlWriter._writeAttributeString('ShowHorizon', this._showHorizon.toString());
        xmlWriter._writeAttributeString('ShowHorizonPanorama', this._showHorizonPanorama.toString());
        xmlWriter._writeAttributeString('ShowMoonsAsPointSource', this._showMoonsAsPointSource.toString());
        xmlWriter._writeAttributeString('ShowSolarSystem', this._showSolarSystem.toString());
        xmlWriter._writeAttributeString('FovTelescope', this._fovTelescope.toString());
        xmlWriter._writeAttributeString('FovEyepiece', this._fovEyepiece.toString());
        xmlWriter._writeAttributeString('FovCamera', this._fovCamera.toString());
        xmlWriter._writeAttributeString('LocalHorizonMode', this._localHorizonMode.toString());
        xmlWriter._writeAttributeString('GalacticMode', this._galacticMode.toString());
        xmlWriter._writeAttributeString('FadeInOverlays', this._fadeInOverlays.toString());
        xmlWriter._writeAttributeString('SolarSystemStars', this._solarSystemStars.toString());
        xmlWriter._writeAttributeString('SolarSystemMilkyWay', this._solarSystemMilkyWay.toString());
        xmlWriter._writeAttributeString('SolarSystemCosmos', this._solarSystemCosmos.toString());
        xmlWriter._writeAttributeString('SolarSystemCMB', this._solarSystemCMB.toString());
        xmlWriter._writeAttributeString('SolarSystemOrbits', this._solarSystemOrbits.toString());
        xmlWriter._writeAttributeString('SolarSystemMinorOrbits', this._solarSystemMinorOrbits.toString());
        xmlWriter._writeAttributeString('SolarSystemOverlays', this._solarSystemOverlays.toString());
        xmlWriter._writeAttributeString('SolarSystemLighting', this._solarSystemLighting.toString());
        xmlWriter._writeAttributeString('ShowISSModel', this._showISSModel.toString());
        xmlWriter._writeAttributeString('SolarSystemScale', this._solarSystemScale.toString());
        xmlWriter._writeAttributeString('MinorPlanetsFilter', this._minorPlanetsFilter.toString());
        xmlWriter._writeAttributeString('PlanetOrbitsFilter', this._planetOrbitsFilter.toString());
        xmlWriter._writeAttributeString('SolarSystemMultiRes', this._solarSystemMultiRes.toString());
        xmlWriter._writeAttributeString('SolarSystemMinorPlanets', this._solarSystemMinorPlanets.toString());
        xmlWriter._writeAttributeString('SolarSystemPlanets', this._solarSystemPlanets.toString());
        xmlWriter._writeAttributeString('ShowEarthSky', this._showEarthSky.toString());
        xmlWriter._writeAttributeString('ShowEquatorialGridText', this.get_showEquatorialGridText().toString());
        xmlWriter._writeAttributeString('EquatorialGridColor', this.get_equatorialGridColor().save());
        xmlWriter._writeAttributeString('ShowGalacticGrid', this.get_showGalacticGrid().toString());
        xmlWriter._writeAttributeString('ShowGalacticGridText', this.get_showGalacticGridText().toString());
        xmlWriter._writeAttributeString('GalacticGridColor', this.get_galacticGridColor().save());
        xmlWriter._writeAttributeString('ShowEclipticGrid', this.get_showEclipticGrid().toString());
        xmlWriter._writeAttributeString('ShowEclipticGridText', this.get_showEclipticGridText().toString());
        xmlWriter._writeAttributeString('EclipticGridColor', this.get_eclipticGridColor().save());
        xmlWriter._writeAttributeString('ShowEclipticOverviewText', this.get_showEclipticOverviewText().toString());
        xmlWriter._writeAttributeString('ShowAltAzGrid', this.get_showAltAzGrid().toString());
        xmlWriter._writeAttributeString('ShowAltAzGridText', this.get_showAltAzGridText().toString());
        xmlWriter._writeAttributeString('AltAzGridColor', this.get_altAzGridColor().save());
        xmlWriter._writeAttributeString('ShowPrecessionChart', this.get_showPrecessionChart().toString());
        xmlWriter._writeAttributeString('PrecessionChartColor', this.get_precessionChartColor().save());
        xmlWriter._writeAttributeString('ConstellationPictures', this.get_showConstellationPictures().toString());
        xmlWriter._writeAttributeString('ConstellationsEnabled', this.get_constellationsEnabled());
        xmlWriter._writeAttributeString('ShowConstellationLabels', this.get_showConstellationLabels().toString());
        xmlWriter._writeAttributeString('ShowSkyOverlays', this.get_showSkyOverlays().toString());
        xmlWriter._writeAttributeString('ShowConstellations', this.get_showConstellations().toString());
        xmlWriter._writeAttributeString('ShowSkyNode', this.get_showSkyNode().toString());
        xmlWriter._writeAttributeString('ShowSkyGrids', this.get_showSkyGrids().toString());
        xmlWriter._writeAttributeString('SkyOverlaysIn3d', this.get_showSkyOverlaysIn3d().toString());
        xmlWriter._writeAttributeString('ConstellationFiguresFilter', this._constellationFiguresFilter.toString());
        xmlWriter._writeAttributeString('ConstellationBoundariesFilter', this._constellationBoundariesFilter.toString());
        xmlWriter._writeAttributeString('ConstellationNamesFilter', this._constellationNamesFilter.toString());
        xmlWriter._writeAttributeString('ConstellationArtFilter', this._constellationArtFilter.toString());
        this._target._saveToXml(xmlWriter, 'Place');
        if (this._endTarget != null) {
            this._endTarget._saveToXml(xmlWriter, 'EndTarget');
        }
        xmlWriter._writeStartElement('Overlays');
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._overlays);
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            overlay.saveToXml(xmlWriter, false);
        }
        xmlWriter._writeEndElement();
        if (this._musicTrack != null) {
            xmlWriter._writeStartElement('MusicTrack');
            this._musicTrack.saveToXml(xmlWriter, false);
            xmlWriter._writeEndElement();
        }
        if (this._voiceTrack != null) {
            xmlWriter._writeStartElement('VoiceTrack');
            this._voiceTrack.saveToXml(xmlWriter, false);
            xmlWriter._writeEndElement();
        }
        this._writeLayerList(xmlWriter);
        xmlWriter._writeEndElement();
    },

    _writeLayerList: function (xmlWriter) {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyCount(this.layers) > 0) {
            xmlWriter._writeStartElement('VisibleLayers');
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keys(this.layers));
            while ($enum1.moveNext()) {
                var key = $enum1.current;
                var info = this.layers[key];
                xmlWriter._writeStartElement('Layer');
                xmlWriter._writeAttributeString('StartOpacity', info.startOpacity.toString());
                xmlWriter._writeAttributeString('EndOpacity', info.endOpacity.toString());
                var len = info.startParams.length;
                xmlWriter._writeAttributeString('ParamCount', len.toString());
                for (var i = 0; i < len; i++) {
                    xmlWriter._writeAttributeString(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('StartParam{0}', i), info.startParams[i].toString());
                    xmlWriter._writeAttributeString(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('EndParam{0}', i), info.endParams[i].toString());
                }
                xmlWriter._writeValue(info.id.toString());
                xmlWriter._writeEndElement();
            }
            xmlWriter._writeEndElement();
        }
    },

    _addFilesToCabinet: function (fc, excludeAudio) {
        if (this._thumbnail != null) {
            var filename = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0}.thumb.png', this._id);
            var blob = this._owner.getFileBlob(filename);
            fc.addFile(this._owner.get_workingDirectory() + filename, blob);
        }
        if (!excludeAudio) {
            if (this._musicTrack != null) {
                this._musicTrack.addFilesToCabinet(fc);
            }
            if (this._voiceTrack != null) {
                this._voiceTrack.addFilesToCabinet(fc);
            }
        }
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._overlays);
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            overlay.addFilesToCabinet(fc);
        }
    },

    getNextDefaultName: function (baseName) {
        var suffixId = 1;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._overlays);
        while ($enum1.moveNext()) {
            var overlay = $enum1.current;
            if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.startsWith(overlay.get_name(), baseName)) {
                var id = 0;
                try {
                    id = parseInt(overlay.get_name().substr(baseName.length));
                }
                catch ($e2) {
                }
                if (id >= suffixId) {
                    suffixId = id + 1;
                }
            }
        }
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0} {1}', baseName, suffixId);
    },

    _loadLayerList: function (layersNode) {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(layersNode.childNodes);
        while ($enum1.moveNext()) {
            var layer = $enum1.current;
            if (layer.nodeName === 'Layer') {
                var info = new LayerInfo();
                var id = layer.innerHTML;
                info.id = _util_js__WEBPACK_IMPORTED_MODULE_11__.Guid.fromString(id);
                info.startOpacity = parseFloat(layer.attributes.getNamedItem('StartOpacity').nodeValue);
                info.endOpacity = parseFloat(layer.attributes.getNamedItem('EndOpacity').nodeValue);
                var len = 0;
                if (layer.attributes.getNamedItem('ParamCount') != null) {
                    len = parseInt(layer.attributes.getNamedItem('ParamCount').nodeValue);
                }
                info.startParams = new Array(len);
                info.endParams = new Array(len);
                info.frameParams = new Array(len);
                for (var i = 0; i < len; i++) {
                    info.startParams[i] = parseFloat(layer.attributes.getNamedItem(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('StartParam{0}', i)).nodeValue);
                    info.endParams[i] = parseFloat(layer.attributes.getNamedItem(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('EndParam{0}', i)).nodeValue);
                    info.frameParams[i] = info.startParams[i];
                }
                this.layers[info.id] = info;
            }
        }
    },

    _updateLayerOpacity: function () {
        if (!this.get_keyFramed()) {
        } else {
            this.updateTweenPosition();
        }
    },

    get_showEquatorialGridText: function () {
        return this._showEquatorialGridText;
    },

    set_showEquatorialGridText: function (value) {
        this._showEquatorialGridText = value;
        return value;
    },

    get_showGalacticGrid: function () {
        return this._showGalacticGrid;
    },

    set_showGalacticGrid: function (value) {
        this._showGalacticGrid = value;
        return value;
    },

    get_showGalacticGridText: function () {
        return this._showGalacticGridText;
    },

    set_showGalacticGridText: function (value) {
        this._showGalacticGridText = value;
        return value;
    },

    get_showEclipticGrid: function () {
        return this._showEclipticGrid;
    },

    set_showEclipticGrid: function (value) {
        this._showEclipticGrid = value;
        return value;
    },

    get_showEclipticGridText: function () {
        return this._showEclipticGridText;
    },

    set_showEclipticGridText: function (value) {
        this._showEclipticGridText = value;
        return value;
    },

    get_showEclipticOverviewText: function () {
        return this._showEclipticOverviewText;
    },

    set_showEclipticOverviewText: function (value) {
        this._showEclipticOverviewText = value;
        return value;
    },

    get_showAltAzGrid: function () {
        return this._showAltAzGrid;
    },

    set_showAltAzGrid: function (value) {
        this._showAltAzGrid = value;
        return value;
    },

    get_showAltAzGridText: function () {
        return this._showAltAzGridText;
    },

    set_showAltAzGridText: function (value) {
        this._showAltAzGridText = value;
        return value;
    },

    get_showPrecessionChart: function () {
        return this._showPrecessionChart;
    },

    set_showPrecessionChart: function (value) {
        this._showPrecessionChart = value;
        return value;
    },

    get_showConstellationPictures: function () {
        return this._showConstellationPictures;
    },

    set_showConstellationPictures: function (value) {
        this._showConstellationPictures = value;
        return value;
    },

    get_showConstellationLabels: function () {
        return this._showConstellationLabels;
    },

    set_showConstellationLabels: function (value) {
        this._showConstellationLabels = value;
        return value;
    },

    get_solarSystemCMB: function () {
        return this._solarSystemCMB;
    },

    set_solarSystemCMB: function (value) {
        this._solarSystemCMB = value;
        return value;
    },

    get_solarSystemMinorPlanets: function () {
        return this._solarSystemMinorPlanets;
    },

    set_solarSystemMinorPlanets: function (value) {
        this._solarSystemMinorPlanets = value;
        return value;
    },

    get_solarSystemPlanets: function () {
        return this._solarSystemPlanets;
    },

    set_solarSystemPlanets: function (value) {
        this._solarSystemPlanets = value;
        return value;
    },

    get_showEarthSky: function () {
        return this._showEarthSky;
    },

    set_showEarthSky: function (value) {
        this._showEarthSky = value;
        return value;
    },

    get_solarSystemMinorOrbits: function () {
        return this._solarSystemMinorOrbits;
    },

    set_solarSystemMinorOrbits: function (value) {
        this._solarSystemMinorOrbits = value;
        return value;
    },

    get_constellationsEnabled: function () {
        return this._constellationsEnabled;
    },

    set_constellationsEnabled: function (value) {
        this._constellationsEnabled = value;
        return value;
    },

    get_constellationFiguresFilter: function () {
        return this._constellationFiguresFilter;
    },

    set_constellationFiguresFilter: function (value) {
        this._constellationFiguresFilter = value;
        return value;
    },

    get_constellationBoundariesFilter: function () {
        return this._constellationBoundariesFilter;
    },

    set_constellationBoundariesFilter: function (value) {
        this._constellationBoundariesFilter = value;
        return value;
    },

    get_constellationNamesFilter: function () {
        return this._constellationNamesFilter;
    },

    set_constellationNamesFilter: function (value) {
        this._constellationNamesFilter = value;
        return value;
    },

    get_constellationArtFilter: function () {
        return this._constellationArtFilter;
    },

    set_constellationArtFilter: function (value) {
        this._constellationArtFilter = value;
        return value;
    },

    get_showSkyOverlays: function () {
        return this._showSkyOverlays;
    },

    set_showSkyOverlays: function (value) {
        this._showSkyOverlays = value;
        return value;
    },

    get_showConstellations: function () {
        return this._showConstellations;
    },

    set_showConstellations: function (value) {
        this._showConstellations = value;
        return value;
    },

    get_showSkyNode: function () {
        return this._showSkyNode;
    },

    set_showSkyNode: function (value) {
        this._showSkyNode = value;
        return value;
    },

    get_showSkyGrids: function () {
        return this._showSkyGrids;
    },

    set_showSkyGrids: function (value) {
        this._showSkyGrids = value;
        return value;
    },

    get_showSkyOverlaysIn3d: function () {
        return this._showSkyOverlaysIn3d;
    },

    set_showSkyOverlaysIn3d: function (value) {
        this._showSkyOverlaysIn3d = value;
        return value;
    },

    get_earthCutawayView: function () {
        return this._earthCutawayView;
    },

    set_earthCutawayView: function (value) {
        this._earthCutawayView = value;
        return value;
    },

    get_showISSModel: function () {
        return this._showISSModel;
    },

    set_showISSModel: function (value) {
        this._showISSModel = value;
        return value;
    },

    get_milkyWayModel: function () {
        return this._milkyWayModel;
    },

    set_milkyWayModel: function (value) {
        this._milkyWayModel = value;
        return value;
    },

    get_minorPlanetsFilter: function () {
        return this._minorPlanetsFilter;
    },

    set_minorPlanetsFilter: function (value) {
        this._minorPlanetsFilter = value;
        return value;
    },

    get_planetOrbitsFilter: function () {
        return this._planetOrbitsFilter;
    },

    set_planetOrbitsFilter: function (value) {
        this._planetOrbitsFilter = value;
        return value;
    },

    getSetting: function (type) {
        if (type === 17) {
            return new _settings_js__WEBPACK_IMPORTED_MODULE_9__.SettingParameter(true, this.faderOpacity, !!this.faderOpacity, null);
        }
        return new _settings_js__WEBPACK_IMPORTED_MODULE_9__.SettingParameter(false, 1, false, null);
    },

    get_eclipticGridColor: function () {
        return this._eclipticGridColor;
    },

    set_eclipticGridColor: function (value) {
        this._eclipticGridColor = value;
        return value;
    },

    get_galacticGridColor: function () {
        return this._galacticGridColor;
    },

    set_galacticGridColor: function (value) {
        this._galacticGridColor = value;
        return value;
    },

    get_altAzGridColor: function () {
        return this._altAzGridColor;
    },

    set_altAzGridColor: function (value) {
        this._altAzGridColor = value;
        return value;
    },

    get_precessionChartColor: function () {
        return this._precessionChartColor;
    },

    set_precessionChartColor: function (value) {
        this._precessionChartColor = value;
        return value;
    },

    get_eclipticColor: function () {
        return this._eclipticColor;
    },

    set_eclipticColor: function (value) {
        this._eclipticColor = value;
        return value;
    },

    get_equatorialGridColor: function () {
        return this._equatorialGridColor;
    },

    set_equatorialGridColor: function (value) {
        this._equatorialGridColor = value;
        return value;
    },

    get_constellationLabelsHeight: function () {
        return this._constellationLabelsHeight;
    },

    set_constellationLabelsHeight: function (value) {
        this._constellationLabelsHeight = value;
        return value;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("TourStop", [TourStop, TourStop$, null, _interfaces_js__WEBPACK_IMPORTED_MODULE_7__.ISettings]);


// wwtlib.LayerInfo

function LayerInfo() {
    this.id = _util_js__WEBPACK_IMPORTED_MODULE_11__.Guid.newGuid();
    this.startOpacity = 1;
    this.endOpacity = 1;
    this.frameOpacity = 1;
    this.startParams = new Array(0);
    this.endParams = new Array(0);
    this.frameParams = new Array(0);
}

var LayerInfo$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("LayerInfo", [LayerInfo, LayerInfo$, null]);


// wwtlib.UndoTourStopChange

function UndoTourStopChange(text, tour) {
    this._undoXml = '';
    this._redoXml = '';
    this._currentIndex = 0;
    this._actionText = '';
    this._targetTour = null;
    this._currentIndex = tour.get_currentTourstopIndex();
    this._actionText = text;
    this._targetTour = tour;
    this._undoXml = TourStop.getXmlText(tour.get_currentTourStop());
    this._targetTour.set_tourDirty(true);
}

var UndoTourStopChange$ = {
    get_actionText: function () {
        return this._actionText;
    },

    set_actionText: function (value) {
        this._actionText = value;
        return value;
    },

    undo: function () {
        var tsRedo = this._targetTour.get_tourStops()[this._currentIndex];
        var parser = new DOMParser();
        var doc = parser.parseFromString(this._undoXml, 'text/xml');
        var node = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(doc, 'TourStop');
        this._targetTour.get_tourStops()[this._currentIndex] = TourStop._fromXml(this._targetTour, node);
        this._targetTour.set_currentTourstopIndex(this._currentIndex);
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._redoXml)) {
            this._redoXml = TourStop.getXmlText(tsRedo);
        }
        this._targetTour.set_tourDirty(true);
    },

    redo: function () {
        var parser = new DOMParser();
        var doc = parser.parseFromString(this._redoXml, 'text/xml');
        var node = _baseutil_js__WEBPACK_IMPORTED_MODULE_4__.Util.selectSingleNode(doc, 'TourStop');
        this._targetTour.get_tourStops()[this._currentIndex] = TourStop._fromXml(this._targetTour, node);
        this._targetTour.set_currentTourstopIndex(this._currentIndex);
        this._targetTour.set_tourDirty(true);
    },

    toString: function () {
        return this._actionText;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("UndoTourStopChange", [UndoTourStopChange, UndoTourStopChange$, null, _interfaces_js__WEBPACK_IMPORTED_MODULE_7__.IUndoStep]);


/***/ }),

/***/ "./esm/tours/undo.js":
/*!***************************!*\
  !*** ./esm/tours/undo.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Undo: () => (/* binding */ Undo),
/* harmony export */   UndoStep: () => (/* binding */ UndoStep),
/* harmony export */   UndoTourPropertiesChange: () => (/* binding */ UndoTourPropertiesChange),
/* harmony export */   UndoTourSlidelistChange: () => (/* binding */ UndoTourSlidelistChange)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../interfaces.js */ "./esm/interfaces.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util.js */ "./esm/util.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Managing undos of changes made in the tour editor.







// wwtlib.Undo

function Undo() { }

Undo._undoStack = new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.Stack();
Undo._redoStack = new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.Stack();

Undo.clear = function () {
    Undo._undoStack = new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.Stack();
    Undo._redoStack = new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.Stack();
};

Undo.push = function (step) {
    Undo._undoStack.push(step);
    Undo._redoStack = new _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.Stack();
};

Undo.peekActionString = function () {
    if (Undo._undoStack.count > 0) {
        return Undo._undoStack.peek().toString();
    }
    else {
        return _util_js__WEBPACK_IMPORTED_MODULE_3__.Language.getLocalizedText(551, 'Nothing to Undo');
    }
};

Undo.peekRedoActionString = function () {
    if (Undo._redoStack.count > 0) {
        return Undo._redoStack.peek().toString();
    }
    else {
        return '';
    }
};

Undo.peekAction = function () {
    return (Undo._undoStack.count > 0);
};

Undo.peekRedoAction = function () {
    return (Undo._redoStack.count > 0);
};

Undo.stepBack = function () {
    var step = Undo._undoStack.pop();
    step.undo();
    Undo._redoStack.push(step);
};

Undo.stepForward = function () {
    var step = Undo._redoStack.pop();
    step.redo();
    Undo._undoStack.push(step);
};

var Undo$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Undo", [Undo, Undo$, null]);


// wwtlib.UndoStep

function UndoStep() { }

var UndoStep$ = {
    undo: function () { },

    redo: function () { },

    toString: function () {
        return _util_js__WEBPACK_IMPORTED_MODULE_3__.Language.getLocalizedText(551, 'Nothing to Undo');
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("UndoStep", [UndoStep, UndoStep$, null, _interfaces_js__WEBPACK_IMPORTED_MODULE_2__.IUndoStep]);


// wwtlib.UndoTourSlidelistChange

function UndoTourSlidelistChange(text, tour) {
    this._currentIndex = 0;
    this._actionText = '';
    this._targetTour = null;
    this._undoList = [];
    for (var i = 0; i < tour.get_tourStops().length; i++) {
        this._undoList.push(tour.get_tourStops()[i]);
    }
    this._currentIndex = tour.get_currentTourstopIndex();
    this._actionText = text;
    this._targetTour = tour;
    this._targetTour.set_tourDirty(true);
}

var UndoTourSlidelistChange$ = {
    get_actionText: function () {
        return this._actionText;
    },

    set_actionText: function (value) {
        this._actionText = value;
        return value;
    },

    undo: function () {
        this._redoList = this._targetTour.get_tourStops();
        this._targetTour.set_tourStops(this._undoList);
        this._targetTour.set_currentTourstopIndex(this._currentIndex);
        this._targetTour.set_tourDirty(true);
    },

    redo: function () {
        this._undoList = this._targetTour.get_tourStops();
        this._targetTour.set_tourStops(this._redoList);
        this._targetTour.set_currentTourstopIndex(this._currentIndex);
        this._targetTour.set_tourDirty(true);
    },

    toString: function () {
        return this._actionText;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("UndoTourSlidelistChange", [UndoTourSlidelistChange, UndoTourSlidelistChange$, null, _interfaces_js__WEBPACK_IMPORTED_MODULE_2__.IUndoStep]);


// wwtlib.UndoTourPropertiesChange

function UndoTourPropertiesChange(text, tour) {
    this._actionText = '';
    this._targetTour = null;
    this._undoDomeMode = false;
    this._undoLevel = 0;
    this._redoDomeMode = false;
    this._redoLevel = 0;
    this._undoTitle = tour.get_title();
    this._undoAuthor = tour.get_author();
    this._undoAuthorEmail = tour.get_authorEmail();
    this._undoDescription = tour.get_description();
    this._undoAuthorImage = tour.get_authorImage();
    this._undoOrganizationUrl = tour.get_organizationUrl();
    this._undoOrgName = tour.get_orgName();
    this._undoKeywords = tour.get_keywords();
    this._undoTaxonomy = tour.get_taxonomy();
    this._undoLevel = tour.get_level();
    this._actionText = text;
    this._targetTour = tour;
    this._targetTour.set_tourDirty(true);
}

var UndoTourPropertiesChange$ = {
    get_actionText: function () {
        return this._actionText;
    },

    set_actionText: function (value) {
        this._actionText = value;
        return value;
    },

    undo: function () {
        this._redoTitle = this._targetTour.get_title();
        this._redoAuthor = this._targetTour.get_author();
        this._redoAuthorEmail = this._targetTour.get_authorEmail();
        this._redoDescription = this._targetTour.get_description();
        this._redoAuthorImage = this._targetTour.get_authorImage();
        this._redoOrganizationUrl = this._targetTour.get_organizationUrl();
        this._redoOrgName = this._targetTour.get_orgName();
        this._redoKeywords = this._targetTour.get_keywords();
        this._redoTaxonomy = this._targetTour.get_taxonomy();
        this._redoLevel = this._targetTour.get_level();
        this._targetTour.set_title(this._undoTitle);
        this._targetTour.set_author(this._undoAuthor);
        this._targetTour.set_authorEmail(this._undoAuthorEmail);
        this._targetTour.set_description(this._undoDescription);
        this._targetTour.set_authorImage(this._undoAuthorImage);
        this._targetTour.set_organizationUrl(this._undoOrganizationUrl);
        this._targetTour.set_orgName(this._undoOrgName);
        this._targetTour.set_keywords(this._undoKeywords);
        this._targetTour.set_taxonomy(this._undoTaxonomy);
        this._targetTour.set_level(this._undoLevel);
        this._targetTour.set_tourDirty(true);
    },

    redo: function () {
        this._targetTour.set_title(this._redoTitle);
        this._targetTour.set_author(this._redoAuthor);
        this._targetTour.set_authorEmail(this._redoAuthorEmail);
        this._targetTour.set_description(this._redoDescription);
        this._targetTour.set_authorImage(this._redoAuthorImage);
        this._targetTour.set_organizationUrl(this._redoOrganizationUrl);
        this._targetTour.set_orgName(this._redoOrgName);
        this._targetTour.set_keywords(this._redoKeywords);
        this._targetTour.set_taxonomy(this._redoTaxonomy);
        this._targetTour.set_level(this._redoLevel);
        this._targetTour.set_tourDirty(true);
    },

    toString: function () {
        return this._actionText;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("UndoTourPropertiesChange", [UndoTourPropertiesChange, UndoTourPropertiesChange$, null, _interfaces_js__WEBPACK_IMPORTED_MODULE_2__.IUndoStep]);


/***/ }),

/***/ "./esm/triangle.js":
/*!*************************!*\
  !*** ./esm/triangle.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Triangle: () => (/* binding */ Triangle)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A spherical triangle that can be subdivided.





// wwtlib.Triangle

function Triangle() {
    // Vertex Indices
    this.a = -1;
    this.b = -1;
    this.c = -1;
}

Triangle.create = function (a, b, c) {
    var temp = new Triangle();
    temp.a = a;
    temp.b = b;
    temp.c = c;
    return temp;
};

var Triangle$ = {
    subDivide: function (triList, vertexList) {
        var a1 = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.lerp(vertexList[this.b].position, vertexList[this.c].position, 0.5);
        var b1 = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.lerp(vertexList[this.c].position, vertexList[this.a].position, 0.5);
        var c1 = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.lerp(vertexList[this.a].position, vertexList[this.b].position, 0.5);
        var a1uv = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.lerp(_double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.create(vertexList[this.b].tu, vertexList[this.b].tv), _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.create(vertexList[this.c].tu, vertexList[this.c].tv), 0.5);
        var b1uv = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.lerp(_double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.create(vertexList[this.c].tu, vertexList[this.c].tv), _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.create(vertexList[this.a].tu, vertexList[this.a].tv), 0.5);
        var c1uv = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.lerp(_double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.create(vertexList[this.a].tu, vertexList[this.a].tv), _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.create(vertexList[this.b].tu, vertexList[this.b].tv), 0.5);
        a1.normalize();
        b1.normalize();
        c1.normalize();
        var aIndex = vertexList.length;
        var bIndex = vertexList.length + 1;
        var cIndex = vertexList.length + 2;
        vertexList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_1__.PositionTexture.createPosRaw(a1, a1uv.x, a1uv.y));
        vertexList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_1__.PositionTexture.createPosRaw(b1, b1uv.x, b1uv.y));
        vertexList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_1__.PositionTexture.createPosRaw(c1, c1uv.x, c1uv.y));
        triList.push(Triangle.create(this.a, cIndex, bIndex));
        triList.push(Triangle.create(this.b, aIndex, cIndex));
        triList.push(Triangle.create(this.c, bIndex, aIndex));
        triList.push(Triangle.create(aIndex, bIndex, cIndex));
    },

    subDivideNoNormalize: function (triList, vertexList) {
        var a1 = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.lerp(vertexList[this.b].position, vertexList[this.c].position, 0.5);
        var b1 = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.lerp(vertexList[this.c].position, vertexList[this.a].position, 0.5);
        var c1 = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector3d.lerp(vertexList[this.a].position, vertexList[this.b].position, 0.5);
        var a1uv = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.lerp(_double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.create(vertexList[this.b].tu, vertexList[this.b].tv), _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.create(vertexList[this.c].tu, vertexList[this.c].tv), 0.5);
        var b1uv = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.lerp(_double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.create(vertexList[this.c].tu, vertexList[this.c].tv), _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.create(vertexList[this.a].tu, vertexList[this.a].tv), 0.5);
        var c1uv = _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.lerp(_double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.create(vertexList[this.a].tu, vertexList[this.a].tv), _double3d_js__WEBPACK_IMPORTED_MODULE_1__.Vector2d.create(vertexList[this.b].tu, vertexList[this.b].tv), 0.5);
        var aIndex = vertexList.length;
        var bIndex = vertexList.length + 1;
        var cIndex = vertexList.length + 2;
        vertexList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_1__.PositionTexture.createPosRaw(a1, a1uv.x, a1uv.y));
        vertexList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_1__.PositionTexture.createPosRaw(b1, b1uv.x, b1uv.y));
        vertexList.push(_double3d_js__WEBPACK_IMPORTED_MODULE_1__.PositionTexture.createPosRaw(c1, c1uv.x, c1uv.y));
        triList.push(Triangle.create(this.a, cIndex, bIndex));
        triList.push(Triangle.create(this.b, aIndex, cIndex));
        triList.push(Triangle.create(this.c, bIndex, aIndex));
        triList.push(Triangle.create(aIndex, bIndex, cIndex));
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Triangle", [Triangle, Triangle$, null]);


/***/ }),

/***/ "./esm/typesystem.js":
/*!***************************!*\
  !*** ./esm/typesystem.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Enums: () => (/* binding */ Enums),
/* harmony export */   registerEnum: () => (/* binding */ registerEnum),
/* harmony export */   registerType: () => (/* binding */ registerType)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Some small but helpful structures applied on top of the type system
// provided by ScriptSharp.



const registry = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.createRegistry("wwtlib");
const enumTypes = {};


// Finish the creation and registration of a type that plugs into the
// ScriptSharp type system. The return value is the new type object.
//
// The `typeinfo` argument has a complex structure and comes from the code
// generated by ScriptSharp.
function registerType(name, typeinfo) {
    // This function modifies the class object and returns it, but we can just
    // ignore the return value.
    _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.createType(name, typeinfo, registry);
}


// Register an enumeration with the type system.
//
// This is used to parse various enumerations from serialized formats.
function registerEnum(name, type) {
    enumTypes[name] = type;
}


// The Enums helper "class". We could easily port this to a non-OO interface.

function Enums() { }

Enums.parse = function (enumType, value) {
    if (value === "Default") {
        value = "DefaultV";
    }

    if (value === "0") {
        return 0;
    }

    var val = value.substr(0, 1).toLowerCase() + value.substr(1);
    return enumTypes[enumType][val];
};

Enums.toXml = function (enumType, value) {
    var x = "0";
    var p = Object.keys(enumTypes[enumType]);

    for (var i in p) {
        if (enumTypes[enumType][p[i]] == value) {
            x = p[i];
            break;
        }
    }

    var val = x;
    var enumString = val.substr(0, 1).toUpperCase() + val.substr(1);
    if (enumString === "DefaultV") {
        enumString = "Default";
    }

    return enumString;
};

const Enums$ = {};

registerType("Enums", [Enums, Enums$, null]);


/***/ }),

/***/ "./esm/ui_tools.js":
/*!*************************!*\
  !*** ./esm/ui_tools.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UiTools: () => (/* binding */ UiTools)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A tile in a pyramid that uses a HEALPix projection.





// wwtlib.UiTools

function UiTools() { }

UiTools.kilometersPerAu = 149598000;
UiTools.auPerParsec = 206264.806;
UiTools.auPerLightYear = 63239.6717;
UiTools.ssmUnitConversion = 370; // No idea where this fudge factor comes from

UiTools.gamma = function (val, gamma) {
    return Math.min(255, _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((255 * Math.pow(val / 255, 1 / gamma)) + 0.5)));
};

UiTools.getNamesStringFromArray = function (array) {
    var names = '';
    var delim = '';
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(array);
    while ($enum1.moveNext()) {
        var name = $enum1.current;
        names += delim;
        names += name;
        delim = ';';
    }
    return names;
};

UiTools.solarSystemToMeters = function (SolarSystemCameraDistance) {
    return SolarSystemCameraDistance * 149598000 * 370;
};

UiTools.metersToSolarSystemDistance = function (meters) {
    return meters / 370 * 149598000;
};

UiTools.metersToZoom = function (meters) {
    return ((meters / 1000 / 370) - 1E-06) / 4 * 9;
};

// Distance is stored in AU in WWT but is displayed in KM AU, LY, MPC
UiTools.formatDistance = function (distance) {
    if (distance < 0.1) {
        var km = (distance * 149598000);
        if (km < 10) {
            var m = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((km * 1000));
            return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0} m', m);
        } else {
            km = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(km);
            return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0} km', km);
        }
    }
    else if (distance < (10)) {
        var au = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((distance * 10)) / 10;
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0} au', au);
    }
    else if (distance < (63239.6717 / 10)) {
        var au = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(distance);
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0} au', au);
    }
    else if (distance < (63239.6717 * 10)) {
        var ly = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((distance * 10) / 63239.6717)) / 10;
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0} ly', ly);
    }
    else if (distance < (63239.6717 * 1000000)) {
        var ly = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((distance / 63239.6717));
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0} ly', ly);
    }
    else if (distance < (206264.806 * 10000000)) {
        var mpc = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((distance * 10) / (206264.806 * 1000000))) / 10;
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0} Mpc', mpc);
    }
    else if (distance < (206264.806 * 1000000000)) {
        var mpc = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((distance / (206264.806 * 1000000)));
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0} Mpc', mpc);
    }
    else {
        var mpc = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((distance * 10) / (206264.806 * 1000000000))) / 10;
        return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0} Gpc', mpc);
    }
};

UiTools.formatDecimalHours = function (dayFraction) {
    var today = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now();
    var ts = today.getTimezoneOffset() / 60;
    ts = 0;
    var day = (dayFraction - ts) + 0.0083333334;
    while (day > 24) {
        day -= 24;
    }
    while (day < 0) {
        day += 24;
    }
    var hours = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(day);
    var minutes = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((day * 60) - (hours * 60)));
    var seconds = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(((day * 3600) - ((hours * 3600) + (minutes * 60))));
    return _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('{0}:{1}', hours, minutes, seconds);
};

UiTools.splitString = function (data, delimiter) {
    var output = [];
    var nestingLevel = 0;
    var current = 0;
    var count = 0;
    var start = 0;
    while (current < data.length) {
        if (data.substr(current, 1) === '(') {
            nestingLevel++;
        }
        if (data.substr(current, 1) === ')') {
            nestingLevel--;
        }
        if (current === (data.length - 1)) {
            if (data.substr(current, 1) === delimiter) {
                output.push(data.substr(start, count));
                output.push('');
                return output;
            }
            else {
                count++;
            }
        }
        if (current === (data.length - 1) || (data.substr(current, 1) === delimiter && delimiter === '\t') || (!nestingLevel && data.substr(current, 1) === delimiter)) {
            output.push(data.substr(start, count));
            start = current + 1;
            count = 0;
        } else {
            count++;
        }
        current++;
    }
    return output;
};

UiTools.split = function (data, delimiters) {
    var output = [];
    var nestingLevel = 0;
    var current = 0;
    var count = 0;
    var start = 0;
    while (current < data.length) {
        if (current === (data.length - 1)) {
            count++;
        }
        if (current === (data.length - 1) || delimiters.indexOf(data.substr(current, 1)) > -1) {
            output.push(data.substr(start, count));
            start = current + 1;
            count = 0;
        } else {
            count++;
        }
        current++;
    }
    return output;
};

UiTools._beep = function () { };

var UiTools$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("UiTools", [UiTools, UiTools$, null]);


/***/ }),

/***/ "./esm/url_helpers.js":
/*!****************************!*\
  !*** ./esm/url_helpers.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   URLHelpers: () => (/* binding */ URLHelpers),
/* harmony export */   URLRewriteMode: () => (/* binding */ URLRewriteMode)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data_globals.js */ "./esm/data_globals.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// The helper class for rewriting URLs. This gets complicated, because we might
// need to proxy for CORS headers and/or HTTPS support, *and* we sometimes also
// want to change the host and/or path to allow the engine or the webclient to
// swap out the data backend or the frontend.





var DomainHandling = {
    wwtFlagship: 0, // this host is worldwidetelescope.org or an equivalent
    localhost: 1, // this host is localhost or an equivalent
    neverProxy: 2, // this host is known to never need proxying
    tryNoProxy: 3,  // none of the above, and we hope that we can get data from it without needing to use our proxy
    proxy: 4, // none of the above, and we need to proxy it for HTTPS/CORS reasons
}

// wwtlib.URLRewriteMode

var URLRewriteMode = {
    asIfAbsolute: 0, // act as if this URL is absolute even if it is missing a domain
    originRelative: 1, // if this URL is relative, treat it as relative to the browser origin
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("URLRewriteMode", URLRewriteMode);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerEnum)("URLRewriteMode", URLRewriteMode);


// wwtlib.URLHelpers

function URLHelpers() {
    // this will be "http:" or "https:"
    this._origin_protocol = typeof window === "undefined" ? "https:" : window.location.protocol;
    this._force_https = (this._origin_protocol === 'https:');

    // host name, no port number
    this._origin_domain = typeof window === "undefined" ? "" : window.location.hostname;


    this._domain_handling = {};
    this._domain_handling['worldwidetelescope.org'] = DomainHandling.wwtFlagship;
    this._domain_handling['www.worldwidetelescope.org'] = DomainHandling.wwtFlagship;
    this._domain_handling['cdn.worldwidetelescope.org'] = DomainHandling.wwtFlagship;
    this._domain_handling['content.worldwidetelescope.org'] = DomainHandling.wwtFlagship;
    this._domain_handling['beta.worldwidetelescope.org'] = DomainHandling.wwtFlagship;
    this._domain_handling['beta-cdn.worldwidetelescope.org'] = DomainHandling.wwtFlagship;
    this._domain_handling['wwtstaging.azurewebsites.net'] = DomainHandling.wwtFlagship;
    this._domain_handling['wwtfiles.blob.core.windows.net'] = DomainHandling.neverProxy;
    this._domain_handling['wwttiles.blob.core.windows.net'] = DomainHandling.neverProxy;
    this._domain_handling['web.wwtassets.org'] = DomainHandling.neverProxy;
    this._domain_handling['data1.wwtassets.org'] = DomainHandling.neverProxy;
    this._domain_handling['localhost'] = DomainHandling.localhost;
    this._domain_handling['127.0.0.1'] = DomainHandling.localhost;

    switch (this._origin_domain) {
        case 'worldwidetelescope.org':
        case 'www.worldwidetelescope.org':
        case 'cdn.worldwidetelescope.org':
            this._core_static_baseurl = this._origin_protocol + '//cdn.worldwidetelescope.org';
            this._core_dynamic_baseurl = this._origin_protocol + '//worldwidetelescope.org';
            break;
        case 'beta.worldwidetelescope.org':
        case 'beta-cdn.worldwidetelescope.org':
            this._core_static_baseurl = this._origin_protocol + '//beta-cdn.worldwidetelescope.org';
            this._core_dynamic_baseurl = this._origin_protocol + '//beta.worldwidetelescope.org';
            break;
        default:
            this._core_static_baseurl = this._origin_protocol + '//cdn.worldwidetelescope.org';
            this._core_dynamic_baseurl = this._origin_protocol + '//worldwidetelescope.org';
            break;
    }

    this._engine_asset_baseurl = this._origin_protocol + '//web.wwtassets.org/engine/assets';

    // this should be a set, but ScriptSharp had trouble with that.
    this._flagship_static_lcpaths = {};
    this._flagship_static_lcpaths['/wwtweb/2massoct.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/bingdemtile.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/bingdemtile2.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/catalog.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/catalog2.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/dem.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/dembath.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/demmars.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/demtile.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/dss.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/dsstoast.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/dusttoast.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/earthblend.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/earthmerbath.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/fixedaltitudedemtile.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/g360.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/galex4far.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/galex4near.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/galextoast.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/gettile.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/gettour.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/gettourfile.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/gettours.aspx'] = true; // maybe not?
    this._flagship_static_lcpaths['/wwtweb/glimpse.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/halphatoast.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/hirise.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/hirisedem2.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/hirisedem3.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/jupiter.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/mandel.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/mandel1.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/mars.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/marsdem.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/marshirise.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/marsmoc.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/martiantile.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/martiantile2.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/mipsgal.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/moondem.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/moonoct.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/moontoast.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/moontoastdem.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/postmars.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/postmarsdem.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/postmarsdem2.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/rasstoast.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/sdsstoast.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/sdsstoast2.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/sdsstoast2.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/thumbnail.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/tiles.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/tiles2.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/tilesthumb.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/twomasstoast.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/tychooct.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/veblend.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/vlsstoast.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/wmap.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/wmsmoon.aspx'] = true;
    this._flagship_static_lcpaths['/wwtweb/wmstoast.aspx'] = true;
}

var URLHelpers$ = {
    overrideAssetBaseurl: function (baseurl) {
        this._engine_asset_baseurl = baseurl;
    },

    rewrite: function (url, rwmode) {
        // Sadly, we can't take advantage of JS/browser URL parsing
        // because this function might be passed template URLs like
        // "http://r{S:2}.ortho.tiles.virtualearth.net/..." that won't
        // parse. So we have to split up the URL manually.
        var lc = url.toLowerCase();
        var lcproto;
        var url_no_protocol;

        if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.startsWith(lc, 'http://')) {
            lcproto = 'http:';
            url_no_protocol = url.substring(7);
        } else if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.startsWith(lc, 'https://')) {
            lcproto = 'https:';
            url_no_protocol = url.substring(8);
        } else if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.startsWith(lc, '//')) {
            lcproto = '';
            url_no_protocol = url.substring(2);
        } else if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.startsWith(lc, 'blob:')) {
            // The web client uses URL.createObjectURL() to ingest local
            // disk files into the web app. That function creates blob
            // URLs, and it turns out that we definitely don't want to
            // rewrite them!
            return url;
        } else {
            switch (rwmode) {
                case URLRewriteMode.asIfAbsolute:
                default:
                    // Treat `foo/bar` as a domain name of `foo` and a
                    // path of `/bar`. Really we should demand that the
                    // caller always pass us an absolute URL, but URLs
                    // will be coming from random data sources and we're
                    // not currently rigorous enough to guarantee that
                    // this function will get validated inputs -- and in
                    // such cases, throwing exceptions won't help.
                    lcproto = '';
                    url_no_protocol = url;
                    break;

                case URLRewriteMode.originRelative:
                    // Treat `foo/bar` as a URL relative to the window
                    // origin. Since it looks relative, any weird
                    // templating stuff in the URL text *ought* not cause
                    // problems for the browser URL parsing ...
                    url = (new URL(url, window.location.href)).toString();
                    return this.rewrite(url, 0);
            }
        }

        // If we're freestanding, we can't use the proxy and we don't want
        // to forcibly rewrite URLs to potentially point at any core WWT
        // domains, so there is nothing more to do (now that we've potentially
        // handled origin-relative URLs).
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.freestandingMode) {
            return url;
        }

        var domain;
        var rest; // potentially "/foo/CASE/bar?q=1&b=1#fragment"
        var slash_index = url_no_protocol.indexOf('/');

        if (slash_index < 0) {
            domain = url_no_protocol;
            rest = '/';
        } else {
            domain = url_no_protocol.substring(0, slash_index);
            rest = url_no_protocol.substring(slash_index); // starts with "/"
        }

        var lcdomain = domain.toLowerCase();
        var lcpath = rest.toLowerCase().split('?')[0];

        if (!_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.keyExists(this._domain_handling, lcdomain)) {
            // Domains include nonstandard port specifications, so it's
            // possible that we could get here with a discernably
            // localhost-y domain.
            if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.startsWith(lcdomain, 'localhost:') || _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.startsWith(lcdomain, '127.0.0.1:')) {
                this._domain_handling[lcdomain] = DomainHandling.localhost;
            } else {
                this._domain_handling[lcdomain] = DomainHandling.tryNoProxy;
            }
        }

        var mode = this._domain_handling[lcdomain];

        switch (mode) {
            case DomainHandling.localhost:
                return url;  // can't proxy, so we'll just have to hope it works

            case DomainHandling.neverProxy:
            case DomainHandling.tryNoProxy:
            default:
                if (this._force_https && lcproto !== 'https:') {
                    // Force HTTPS and we'll see what happens. If
                    // downloading fails, we'll set a flag and use our
                    // proxy to launder the security.
                    //
                    // NOTE: it is important that we use `domain` and not
                    // `lcdomain`, even though domain names are
                    // case-insensitive, because we might be processing a
                    // template URL containing text like `{S}`, and WWT's
                    // replacements *are* case-sensitive. Yes, I did learn
                    // this the hard way.
                    return 'https://' + domain + rest;
                }
                return url;

            case DomainHandling.proxy:
                if (!lcproto) {
                    // Make sure that we give the proxy a real absolute
                    // URL. Guess http, and if the proxy is forced to
                    // upgrade, so be it.
                    url = 'http://' + url;
                }

                // We need to encode the URL as a query-string parameter
                // to pass to the proxy. However, the encoding will turn
                // "{}" into "%7B%7D", so that *if* this URL is then going
                // to be fed into the templating system,
                // search-and-replace for e.g. "{0}" will break. So we
                // un-encode those particular characters, since it ought
                // to be safe to do so anyway.
                url = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.replaceString(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.replaceString(encodeURIComponent(url), '%7B', '{'), '%7D', '}');
                return this._core_dynamic_baseurl + '/webserviceproxy.aspx?targeturl=' + url;

            case DomainHandling.wwtFlagship:
                // Rewrite "flagship"/core URLs to go through whatever our
                // core bases are. Assume that URLs are dynamic (=> are
                // not loaded through the CDN) unless proven otherwise.
                var is_static = false;

                if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.startsWith(lcpath, '/data/')) {
                    is_static = true;
                } else if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.keyExists(this._flagship_static_lcpaths, lcpath)) {
                    is_static = true;
                } else if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.startsWith(lcpath, '/content/')) {
                    is_static = true;
                } else if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.startsWith(lcpath, '/engine/assets/')) {
                    is_static = true;
                }

                if (is_static) {
                    return this._core_static_baseurl + rest;
                }

                return this._core_dynamic_baseurl + rest;
        }
    },

    // Call this when you have tried to load a url via XMLHttpRequest or
    // something along those lines, and the attempt has failed. We will mark the
    // domain as needing proxying, and will return a new proxy-enabled URL to try.
    // The exception is for flagship website URLs, which we know that the proxy
    // won't help with. For those, null is returned.
    activateProxy: function (url) {
        // If we're freestanding, we never proxy.
        if (_data_globals_js__WEBPACK_IMPORTED_MODULE_2__.freestandingMode) {
            return null;
        }

        // Get the domain. XXX copy/pastey from the above.

        var lc = url.toLowerCase();
        var url_no_protocol;

        if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.startsWith(lc, 'http://')) {
            url_no_protocol = url.substring(7);
        } else if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.startsWith(lc, 'https://')) {
            url_no_protocol = url.substring(8);
        } else if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.startsWith(lc, '//')) {
            url_no_protocol = url.substring(2);
        } else {
            url_no_protocol = url;
        }

        var lcdomain;
        var slash_index = url_no_protocol.indexOf('/');

        if (slash_index < 0) {
            lcdomain = url_no_protocol;
        } else {
            lcdomain = url_no_protocol.substring(0, slash_index).toLowerCase();
        }

        // Is this a flagship or never-proxy URL? If so, don't bother proxying.

        if (!_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.keyExists(this._domain_handling, lcdomain)) {
            if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.startsWith(lcdomain, 'localhost:') || _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.startsWith(lcdomain, '127.0.0.1:')) {
                this._domain_handling[lcdomain] = DomainHandling.localhost;
            }
            else {
                this._domain_handling[lcdomain] = DomainHandling.tryNoProxy;
            }
        }

        var mode = this._domain_handling[lcdomain];
        if (mode === DomainHandling.wwtFlagship || mode === DomainHandling.neverProxy || mode === DomainHandling.localhost) {
            return null;
        }

        // OK, we should try proxying. So:
        this._domain_handling[lcdomain] = DomainHandling.proxy;
        return this.rewrite(url, 0);
    },

    engineAssetUrl: function (subpath) {
        return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('{0}/{1}', this._engine_asset_baseurl, subpath);
    },

    coreDynamicUrl: function (subpath) {
        return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('{0}/{1}', this._core_dynamic_baseurl, subpath);
    },

    coreStaticUrl: function (subpath) {
        return _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('{0}/{1}', this._core_static_baseurl, subpath);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("URLHelpers", [URLHelpers, URLHelpers$, null]);

URLHelpers.singleton = new URLHelpers();


/***/ }),

/***/ "./esm/util.js":
/*!*********************!*\
  !*** ./esm/util.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Cursor: () => (/* binding */ Cursor),
/* harmony export */   Cursors: () => (/* binding */ Cursors),
/* harmony export */   DialogResult: () => (/* binding */ DialogResult),
/* harmony export */   DistanceCalc: () => (/* binding */ DistanceCalc),
/* harmony export */   Guid: () => (/* binding */ Guid),
/* harmony export */   Keys: () => (/* binding */ Keys),
/* harmony export */   Language: () => (/* binding */ Language),
/* harmony export */   Mouse: () => (/* binding */ Mouse),
/* harmony export */   OverlayProperties: () => (/* binding */ OverlayProperties),
/* harmony export */   PopupColorPicker: () => (/* binding */ PopupColorPicker),
/* harmony export */   PopupVolume: () => (/* binding */ PopupVolume),
/* harmony export */   Rectangle: () => (/* binding */ Rectangle),
/* harmony export */   SelectLink: () => (/* binding */ SelectLink),
/* harmony export */   Util: () => (/* reexport safe */ _baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util),
/* harmony export */   getTileKey: () => (/* binding */ getTileKey)
/* harmony export */ });
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uuid */ "../node_modules/uuid/dist/esm-browser/v5.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./color.js */ "./esm/color.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Miscellaneous utilities.










// wwtlib.Rectangle

function Rectangle() {
    this.x = 0;
    this.y = 0;
    this.width = 0;
    this.height = 0;
}

Rectangle.create = function (x, y, width, height) {
    var temp = new Rectangle();
    temp.x = x;
    temp.y = y;
    temp.width = width;
    temp.height = height;
    return temp;
};

var Rectangle$ = {
    get_left: function () {
        return this.x;
    },

    get_right: function () {
        return this.x + this.width;
    },

    get_top: function () {
        return this.y;
    },

    get_bottom: function () {
        return this.y + this.height;
    },

    contains: function (point) {
        return (this._between(point.x, this.x, this.x + this.width) && this._between(point.y, this.y, this.y + this.height));
    },

    _between: function (n, n1, n2) {
        if (n1 > n2) {
            return !(n > n1) && !(n < n2);
        }
        else {
            return !(n < n1) && !(n > n2);
        }
    },

    copy: function () {
        var temp = new Rectangle();
        temp.x = this.x;
        temp.y = this.y;
        temp.width = this.width;
        temp.height = this.height;
        return temp;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Rectangle", [Rectangle, Rectangle$, null]);


// wwtlib.Guid

function Guid() {
    this._guid = Guid.create();
}

Guid.newGuid = function () {
    return new Guid();
};

Guid.fromString = function (id) {
    var temp = new Guid();
    temp._guid = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.trim(id);
    return temp;
};

Guid.create = function () {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) { var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8); return v.toString(16); });
};

// The value 1420736a-a637-40a7-813a-ba692e72204e is a UUID (generated using the uuid CLI)
// that serves as a 'namespace' for our GUIDs
// The key property here is that this function always yields the same result for a given input
// See for example https://www.sohamkamani.com/uuid-versions-explained/
Guid.createFrom = function (value) {
    var str = uuid__WEBPACK_IMPORTED_MODULE_5__["default"](value, '1420736a-a637-40a7-813a-ba692e72204e');
    return Guid.fromString(str);
};

var Guid$ = {
    toString: function () {
        return this._guid;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Guid", [Guid, Guid$, null]);


// The "Enums" typed lived here in the C#, but is now in `typesystem.js`.

// wwtlib.Mouse

function Mouse() { }

Mouse.offsetX = function (canvas, e) {
    var x = 0;
    var element = canvas;
    var me = e;
    if (element.offsetParent != null) {
        do {
            x += element.offsetLeft;
        } while ((element = element.offsetParent) != null);
    }
    return me.pageX - x;
};

Mouse.offsetY = function (canvas, e) {
    var y = 0;
    var element = canvas;
    var me = e;
    if (element.offsetParent != null) {
        do {
            y += element.offsetTop;
        } while ((element = element.offsetParent) != null);
    }
    return me.pageY - y;
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Mouse", [Mouse, null, null]);


// wwtlib.Language

function Language() { }

Language.getLocalizedText = function (id, text) {
    return text;
};

var Language$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Language", [Language, Language$, null]);


// wwtlib.Cursor

function Cursor() { }

Cursor.get_position = function () {
    return new _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector2d();
};

Cursor.get_current = function () {
    return document.body.style.cursor;
};

Cursor.set_current = function (value) {
    document.body.style.cursor = value;
    return value;
};

var Cursor$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Cursor", [Cursor, Cursor$, null]);


// wwtlib.Cursors

function Cursors() { }

Cursors.get_arrow = function () {
    return 'default';
};

Cursors.get_cross = function () {
    return 'crosshair';
};

Cursors.get_defaultV = function () {
    return 'default';
};

Cursors.get_hand = function () {
    return 'grab';
};

Cursors.get_help = function () {
    return 'help';
};

Cursors.get_hSplit = function () {
    return 'row-resize';
};

Cursors.get_iBeam = function () {
    return 'text';
};

Cursors.get_no = function () {
    return 'not-allowed';
};

Cursors.get_sizeAll = function () {
    return 'help';
};

Cursors.get_sizeNESW = function () {
    return 'nwse-resize';
};

Cursors.get_sizeNS = function () {
    return 'ns-resize';
};

Cursors.get_sizeNWSE = function () {
    return 'nwse-resize';
};

Cursors.get_sizeWE = function () {
    return 'ew-resize';
};

Cursors.get_upArrow = function () {
    return 'help';
};

Cursors.get_vSplit = function () {
    return 'col-resize';
};

Cursors.get_waitCursor = function () {
    return 'wait';
};

var Cursors$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Cursors", [Cursors, Cursors$, null]);


// wwtlib.Keys

var Keys = {
    modifiers: -65536,
    none: 0,
    lButton: 1,
    rButton: 2,
    cancel: 3,
    mButton: 4,
    xButton1: 5,
    xButton2: 6,
    back: 8,
    tab: 9,
    lineFeed: 10,
    clearKey: 12,
    returnKey: 13,
    enter: 13,
    shiftKey: 16,
    controlKey: 17,
    menu: 18,
    pause: 19,
    capital: 20,
    capsLock: 20,
    kanaMode: 21,
    hanguelMode: 21,
    hangulMode: 21,
    junjaMode: 23,
    finalMode: 24,
    hanjaMode: 25,
    kanjiMode: 25,
    escape: 27,
    imeConvert: 28,
    imeNonconvert: 29,
    imeAccept: 30,
    imeAceept: 30,
    imeModeChange: 31,
    space: 32,
    prior: 33,
    pageUp: 33,
    next: 34,
    pageDown: 34,
    end: 35,
    home: 36,
    left: 37,
    up: 38,
    right: 39,
    down: 40,
    select: 41,
    print: 42,
    execute: 43,
    snapshot: 44,
    printScreen: 44,
    insertKey: 45,
    deleteKey: 46,
    help: 47,
    d0: 48,
    d1: 49,
    d2: 50,
    d3: 51,
    d4: 52,
    d5: 53,
    d6: 54,
    d7: 55,
    d8: 56,
    d9: 57,
    a: 65,
    b: 66,
    c: 67,
    d: 68,
    e: 69,
    f: 70,
    g: 71,
    h: 72,
    i: 73,
    j: 74,
    k: 75,
    l: 76,
    m: 77,
    n: 78,
    o: 79,
    p: 80,
    q: 81,
    r: 82,
    s: 83,
    t: 84,
    u: 85,
    v: 86,
    w: 87,
    x: 88,
    y: 89,
    z: 90,
    lWin: 91,
    rWin: 92,
    apps: 93,
    sleep: 95,
    numPad0: 96,
    numPad1: 97,
    numPad2: 98,
    numPad3: 99,
    numPad4: 100,
    numPad5: 101,
    numPad6: 102,
    numPad7: 103,
    numPad8: 104,
    numPad9: 105,
    multiply: 106,
    add: 107,
    separator: 108,
    subtract: 109,
    decimal: 110,
    divide: 111,
    f1: 112,
    f2: 113,
    f3: 114,
    f4: 115,
    f5: 116,
    f6: 117,
    f7: 118,
    f8: 119,
    f9: 120,
    f10: 121,
    f11: 122,
    f12: 123,
    f13: 124,
    f14: 125,
    f15: 126,
    f16: 127,
    f17: 128,
    f18: 129,
    f19: 130,
    f20: 131,
    f21: 132,
    f22: 133,
    f23: 134,
    f24: 135,
    numLock: 144,
    scroll: 145,
    lShiftKey: 160,
    rShiftKey: 161,
    lControlKey: 162,
    rControlKey: 163,
    lMenu: 164,
    rMenu: 165,
    browserBack: 166,
    browserForward: 167,
    browserRefresh: 168,
    browserStop: 169,
    browserSearch: 170,
    browserFavorites: 171,
    browserHome: 172,
    volumeMute: 173,
    volumeDown: 174,
    volumeUp: 175,
    mediaNextTrack: 176,
    mediaPreviousTrack: 177,
    mediaStop: 178,
    mediaPlayPause: 179,
    launchMail: 180,
    selectMedia: 181,
    launchApplication1: 182,
    launchApplication2: 183,
    oemSemicolon: 186,
    oem1: 186,
    oemplus: 187,
    oemcomma: 188,
    oemMinus: 189,
    oemPeriod: 190,
    oemQuestion: 191,
    oem2: 191,
    oemtilde: 192,
    oem3: 192,
    oemOpenBrackets: 219,
    oem4: 219,
    oemPipe: 220,
    oem5: 220,
    oemCloseBrackets: 221,
    oem6: 221,
    oemQuotes: 222,
    oem7: 222,
    oem8: 223,
    oemBackslash: 226,
    oem102: 226,
    processKey: 229,
    packet: 231,
    attn: 246,
    crsel: 247,
    exsel: 248,
    eraseEof: 249,
    play: 250,
    zoom: 251,
    noName: 252,
    pa1: 253,
    oemClear: 254,
    keyCode: 65535,
    shift: 65536,
    control: 131072,
    alt: 262144
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Keys", Keys);


// wwtlib.SelectLink

function SelectLink(id) {
    this._return = false;
    this._next = true;
    this._linkSlide = false;
    this._slide = null;
    this._ok = false;
    if (id != null) {
        this.set_id(id);
    }
    else {
        this.set_next(true);
    }
}

var SelectLink$ = {
    get_returnCaller: function () {
        return this._return;
    },

    set_returnCaller: function (value) {
        if (value) {
            this._slide = 'Return';
        }
        this._return = value;
        return value;
    },

    get_next: function () {
        return this._next;
    },

    set_next: function (value) {
        if (value) {
            this._slide = 'Next';
        }
        this._next = value;
        return value;
    },

    get_linkToSlide: function () {
        return this._linkSlide;
    },

    set_linkToSlide: function (value) {
        if (value) {
            this._slide = 'Next';
        }
        this._linkSlide = value;
        return value;
    },

    get_id: function () {
        return this._slide;
    },

    set_id: function (value) {
        this._return = false;
        this._next = false;
        this._linkSlide = true;
        this._slide = value;
        return value;
    },

    get_OK: function () {
        return this._ok;
    },

    set_OK: function (value) {
        this._ok = value;
        return value;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("SelectLink", [SelectLink, SelectLink$, null]);


// wwtlib.PopupVolume

function PopupVolume() {
    this.volume = 0;
}

var PopupVolume$ = {
    showDialog: function () {
        return 1;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PopupVolume", [PopupVolume, PopupVolume$, null]);


// wwtlib.PopupColorPicker

function PopupColorPicker() {
    this.volume = 0;
    this.location = new _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector2d();
    this.color = new _color_js__WEBPACK_IMPORTED_MODULE_3__.Color();
}

var PopupColorPicker$ = {
    showDialog: function () {
        return 1;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("PopupColorPicker", [PopupColorPicker, PopupColorPicker$, null]);


// wwtlib.OverlayProperties

function OverlayProperties() {
    this.volume = 0;
    this.location = new _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector2d();
    this.overlay = null;
}

var OverlayProperties$ = {
    showDialog: function () {
        return 1;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("OverlayProperties", [OverlayProperties, OverlayProperties$, null]);


// This used to be Imageset.getTileKey, but to break
// circular dependencies, we move it here.

function getTileKey(imageset, level, x, y, parent) {
    if (imageset.get_projection() === 7 && parent != null) {
        var ipix = (parent).ipix * 4 + y * 2 + x;
        return imageset.get_imageSetID().toString() + '\\' + level.toString() + '\\' + ipix.toString();
    }

    return imageset.get_imageSetID().toString() + '\\' + level.toString() + '\\' + y.toString() + '_' + x.toString();
}


// wwtlib.DistanceCalc
//
// This was originally defined in ToastTile.cs but we moved it to sort out the
// dependency graph.

function DistanceCalc() { }

DistanceCalc.lineToPoint = function (l0, l1, p) {
    var v = _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector3d.subtractVectors(l1, l0);
    var w = _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector3d.subtractVectors(p, l0);
    var dist = _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector3d.cross(w, v).length() / v.length();
    return dist;
};

DistanceCalc.getUVFromInnerPoint = function (ul, ur, ll, lr, pnt) {
    ul.normalize();
    ur.normalize();
    ll.normalize();
    lr.normalize();
    pnt.normalize();
    var dUpper = DistanceCalc.lineToPoint(ul, ur, pnt);
    var dLower = DistanceCalc.lineToPoint(ll, lr, pnt);
    var dVert = dUpper + dLower;
    var dRight = DistanceCalc.lineToPoint(ur, lr, pnt);
    var dLeft = DistanceCalc.lineToPoint(ul, ll, pnt);
    var dHoriz = dRight + dLeft;
    return _double3d_js__WEBPACK_IMPORTED_MODULE_4__.Vector2d.create(dLeft / dHoriz, dUpper / dVert);
};

var DistanceCalc$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("DistanceCalc", [DistanceCalc, DistanceCalc$, null]);


// wwtlib.DialogResult

var DialogResult = {
    OK: 1
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("DialogResult", DialogResult);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerEnum)("DialogResult", DialogResult);


/***/ }),

/***/ "./esm/utilities/binary_reader.js":
/*!****************************************!*\
  !*** ./esm/utilities/binary_reader.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BinaryReader: () => (/* binding */ BinaryReader)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Reading binary data from a stream.




// wwtlib.BinaryReader

function BinaryReader(arraybuf) {
    this.position = 0;
    this._data = null;
    this._data = arraybuf;
}

BinaryReader.id = 1;

var BinaryReader$ = {
    get_position: function () {
        return this.position;
    },

    seek: function (pos) {
        this.position = pos;
    },

    seekRelative: function (pos) {
        this.position += pos;
    },

    get_length: function () {
        return this._data.length;
    },

    get_endOfStream: function () {
        return this.position >= this.get_length();
    },

    readByte: function () {
        var result;
        result = this._data[this.position];
        this.position += 1;
        return result;
    },

    readSByte: function () {
        var result;
        result = this._data[this.position];
        this.position += 1;
        return result;
    },

    readBytes: function (count) {
        var buf = new Array(count);
        for (var i = 0; i < count; i++) {
            buf[i] = this._data[this.position + i];
        }
        this.position += count;
        return buf;
    },

    readRemainingI16: function (i16Remaining) {
        var data = new Float32Array(i16Remaining);
        for (var i = 0; i < i16Remaining; i++) {
            data[i] = this.readInt16(true);
        }
        return data;
    },

    readByteString: function (count) {
        var data = '';
        for (var i = 0; i < count; i++) {
            data += String.fromCharCode(this._data[this.position + i]);
        }
        this.position += count;
        return data;
    },

    readSingle: function () {
        var tmp = new Uint8Array(4);
        tmp[0] = this._data[this.position];
        tmp[1] = this._data[this.position + 1];
        tmp[2] = this._data[this.position + 2];
        tmp[3] = this._data[this.position + 3];
        var result = new Float32Array(tmp.buffer, 0, 1)[0];
        this.position += 4;
        return result;
    },

    readUInt32: function () {
        var result = (this._data[this.position] + (this._data[this.position + 1] << 8) + (this._data[this.position + 2] << 16) + (this._data[this.position + 3] << 24));
        this.position += 4;
        return result;
    },

    readUInt16: function () {
        var result = (this._data[this.position] + (this._data[this.position + 1] << 8));
        this.position += 2;
        return result;
    },

    readUInt16LittleEndian: function () {
        var result = ((this._data[this.position] << 8) + this._data[this.position + 1]);
        this.position += 2;
        return result;
    },

    readInt16: function (littleEndian) {
        var result = (littleEndian) ? this.readUInt16LittleEndian() : this.readUInt16();
        if (!!(result & 0x8000)) {
            return (-((result - 1) ^ 0xFFFF));
        }
        return result;
    },

    readInt32: function () {
        var result = this.readUInt32();
        if (!!(result & 0x80000000)) {
            return (-((result - 1) ^ 0xFFFFFFFF));
        }
        return result;
    },

    readInt64: function () {
        this.position += 8;
        return BinaryReader.id++;
    },

    close: function () { }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("BinaryReader", [BinaryReader, BinaryReader$, null]);


/***/ }),

/***/ "./esm/utilities/bitmap.js":
/*!*********************************!*\
  !*** ./esm/utilities/bitmap.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Bitmap: () => (/* binding */ Bitmap)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../graphics/webgl_constants.js */ "./esm/graphics/webgl_constants.js");
/* harmony import */ var _graphics_texture_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../graphics/texture.js */ "./esm/graphics/texture.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A basic bitmap class.







// wwtlib.Bitmap

function Bitmap() {
    this.width = 0;
    this.height = 0;
}

Bitmap.create = function (width, height) {
    height = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_3__.Texture.fitPowerOfTwo(height);
    width = _graphics_texture_js__WEBPACK_IMPORTED_MODULE_3__.Texture.fitPowerOfTwo(width);
    var bmp = new Bitmap();
    bmp.height = height;
    bmp.width = width;
    bmp._buffer = new Uint8Array(width * height * 4);
    return bmp;
};

var Bitmap$ = {
    setPixel: function (x, y, r, g, b, a) {
        var index = (x + y * this.width) * 4;
        this._buffer[index++] = r;
        this._buffer[index++] = g;
        this._buffer[index++] = b;
        this._buffer[index++] = a;
    },

    getTexture: function () {
        var tex = _render_globals_js__WEBPACK_IMPORTED_MODULE_1__.tilePrepDevice.createTexture();
        _render_globals_js__WEBPACK_IMPORTED_MODULE_1__.tilePrepDevice.bindTexture(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_2__.WEBGL.TEXTURE_2D, tex);
        _render_globals_js__WEBPACK_IMPORTED_MODULE_1__.tilePrepDevice.texParameteri(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_2__.WEBGL.TEXTURE_2D, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_2__.WEBGL.TEXTURE_WRAP_S, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_2__.WEBGL.CLAMP_TO_EDGE);
        _render_globals_js__WEBPACK_IMPORTED_MODULE_1__.tilePrepDevice.texParameteri(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_2__.WEBGL.TEXTURE_2D, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_2__.WEBGL.TEXTURE_WRAP_T, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_2__.WEBGL.CLAMP_TO_EDGE);
        _render_globals_js__WEBPACK_IMPORTED_MODULE_1__.tilePrepDevice.texImage2D(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_2__.WEBGL.TEXTURE_2D, 0, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_2__.WEBGL.RGBA, this.width, this.height, 0, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_2__.WEBGL.RGBA, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_2__.WEBGL.UNSIGNED_BYTE, this._buffer);
        _render_globals_js__WEBPACK_IMPORTED_MODULE_1__.tilePrepDevice.texParameteri(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_2__.WEBGL.TEXTURE_2D, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_2__.WEBGL.TEXTURE_MIN_FILTER, _graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_2__.WEBGL.LINEAR_MIPMAP_NEAREST);
        _render_globals_js__WEBPACK_IMPORTED_MODULE_1__.tilePrepDevice.generateMipmap(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_2__.WEBGL.TEXTURE_2D);
        _render_globals_js__WEBPACK_IMPORTED_MODULE_1__.tilePrepDevice.bindTexture(_graphics_webgl_constants_js__WEBPACK_IMPORTED_MODULE_2__.WEBGL.TEXTURE_2D, null);
        return tex;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Bitmap", [Bitmap, Bitmap$, null]);


/***/ }),

/***/ "./esm/utilities/color_picker.js":
/*!***************************************!*\
  !*** ./esm/utilities/color_picker.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ColorPicker: () => (/* binding */ ColorPicker)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../color.js */ "./esm/color.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data_globals.js */ "./esm/data_globals.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A color picker UI.






// wwtlib.ColorPicker

function ColorPicker() {
    this.callBack = null;
    this.color = _color_js__WEBPACK_IMPORTED_MODULE_1__.Colors.get_white();
}

var ColorPicker$ = {
    nonMenuClick: function (e) { },

    show: function (e) {
        _data_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalScriptInterface.showColorPicker(this, e);
    },

    getColorFromClick: function (e) {
        var image = document.getElementById('colorhex');
        var canvas = document.createElement('canvas');
        canvas.width = image.width;
        canvas.height = image.height;
        var ctx = canvas.getContext('2d');
        ctx.drawImage(image, 0, 0);
        var pixels = ctx.getImageData(e.offsetX, e.offsetY, 1, 1).data;
        this.color = _color_js__WEBPACK_IMPORTED_MODULE_1__.Color.fromArgb(pixels[3], pixels[0], pixels[1], pixels[2]);
        return this.color;
    },

    pickColor: function (e) {
        this.callBack(this.color);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("ColorPicker", [ColorPicker, ColorPicker$, null]);


/***/ }),

/***/ "./esm/utilities/context_menu_strip.js":
/*!*********************************************!*\
  !*** ./esm/utilities/context_menu_strip.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ContextMenuStrip: () => (/* binding */ ContextMenuStrip),
/* harmony export */   TagMe: () => (/* binding */ TagMe),
/* harmony export */   ToolStripMenuItem: () => (/* binding */ ToolStripMenuItem),
/* harmony export */   ToolStripSeparator: () => (/* binding */ ToolStripSeparator)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Context menu items






// wwtlib.ContextMenuStrip

function ContextMenuStrip() {
    this.items = [];
}

var ContextMenuStrip$ = {
    _dispose: function () { },

    _nonMenuClick: function (e) {
        var menu = document.getElementById('contextmenu');
        menu.style.display = 'none';
        window.removeEventListener('click', _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.bind('_nonMenuClick', this), false);
        var popup = document.getElementById('popoutmenu');
        while (popup.firstChild != null) {
            popup.removeChild(popup.firstChild);
        }
        popup.style.display = 'none';
    },

    _menuItemClicked: function (e) {
        var me = e.currentTarget;
        me.itemTag.click(me.itemTag, new _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.EventArgs());
    },

    _show: function (position) {
        var menu = document.getElementById('contextmenu');
        while (menu.firstChild != null) {
            menu.removeChild(menu.firstChild);
        }
        menu.className = 'contextmenu';
        menu.style.display = 'block';
        menu.style.left = position.x.toString() + 'px';
        menu.style.top = position.y.toString() + 'px';
        window.addEventListener('click', _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.bind('_nonMenuClick', this), true);
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(this.items);
        while ($enum1.moveNext()) {
            var item = $enum1.current;
            if (item.visible) {
                var md = document.createElement('div');
                if (item.dropDownItems.length > 0) {
                    md.className = 'contextmenuitem submenu';
                }
                else {
                    if (item.checked) {
                        md.className = 'contextmenuitem checkedmenu';
                    }
                    else {
                        md.className = 'contextmenuitem';
                    }
                }
                md.innerText = item.name;
                var it = md;
                it.itemTag = item;
                md.addEventListener('mouseover', _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.bind('_openSubMenu', this), false);
                if (item.click != null) {
                    md.addEventListener('click', _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.bind('_menuItemClicked', this), false);
                }
                menu.appendChild(md);
            }
        }
    },

    _openSubMenu: function (e) {
        var me = e.currentTarget;
        var child = me.itemTag;
        var menu = document.getElementById('popoutmenu');
        while (menu.firstChild != null) {
            menu.removeChild(menu.firstChild);
        }
        menu.style.display = 'none';
        if (!child.dropDownItems.length) {
            return;
        }
        var position = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d();
        position.x = e.currentTarget.parentNode.offsetLeft + e.currentTarget.parentNode.clientWidth;
        position.y = e.currentTarget.parentNode.offsetTop + e.currentTarget.offsetTop;
        menu.className = 'contextmenu';
        menu.style.display = 'block';
        menu.style.left = position.x.toString() + 'px';
        menu.style.top = position.y.toString() + 'px';
        window.addEventListener('click', _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.bind('_nonMenuClick', this), true);
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(child.dropDownItems);
        while ($enum1.moveNext()) {
            var item = $enum1.current;
            if (item.visible) {
                var md = document.createElement('div');
                md.className = (item.checked) ? 'contextmenuitem checkedmenu' : 'contextmenuitem';
                md.innerText = item.name;
                var it = md;
                it.itemTag = item;
                md.addEventListener('click', _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.bind('_menuItemClicked', this), false);
                menu.appendChild(md);
            }
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("ContextMenuStrip", [ContextMenuStrip, ContextMenuStrip$, null]);


// wwtlib.ToolStripMenuItem

function ToolStripMenuItem() {
    this.tag = null;
    this.dropDownItems = [];
    this.checked = false;
    this.enabled = true;
    this.visible = true;
}

ToolStripMenuItem.create = function (name) {
    var tsmi = new ToolStripMenuItem();
    tsmi.name = name;
    return tsmi;
};

var ToolStripMenuItem$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("ToolStripMenuItem", [ToolStripMenuItem, ToolStripMenuItem$, null]);


// wwtlib.ToolStripSeparator

function ToolStripSeparator() {
    ToolStripMenuItem.call(this);
    this.name = '--------------------------------------';
}

var ToolStripSeparator$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("ToolStripSeparator", [ToolStripSeparator, ToolStripSeparator$, ToolStripMenuItem]);


// wwtlib.TagMe

function TagMe() { }

var TagMe$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("TagMe", [TagMe, TagMe$, null]);


/***/ }),

/***/ "./esm/utilities/dialog.js":
/*!*********************************!*\
  !*** ./esm/utilities/dialog.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Dialog: () => (/* binding */ Dialog)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Types corresponding to popup dialog boxes.





// wwtlib.Dialog

function Dialog() { }

var Dialog$ = {
    add_showDialogHook: function (value) {
        this.__showDialogHook = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindAdd(this.__showDialogHook, value);
    },

    remove_showDialogHook: function (value) {
        this.__showDialogHook = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bindSub(this.__showDialogHook, value);
    },

    show: function (dialogArgs, e) {
        if (this.__showDialogHook != null) {
            this.__showDialogHook(dialogArgs, e);
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Dialog", [Dialog, Dialog$, null]);


/***/ }),

/***/ "./esm/utilities/histogram.js":
/*!************************************!*\
  !*** ./esm/utilities/histogram.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Histogram: () => (/* binding */ Histogram)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../double3d.js */ "./esm/double3d.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util.js */ "./esm/util.js");
/* harmony import */ var _layers_fits_image_js_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../layers/fits_image_js.js */ "./esm/layers/fits_image_js.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// UI for viewing and manipulating a data histogram.









// wwtlib.Histogram

function Histogram() {
    this.image = null;
    this.layer = null;
    this.tile = null;
    this._dropDown = null;
    this._downPosition = 0;
    this._lowPosition = 0;
    this._highPosition = 255;
    this._center = 127;
    this._ignoreNextClick = false;
    this._dragType = 4;
    this._updated = false;
    this.selectedCurveStyle = 0;
}

Histogram.updateImage = function (isl, z) {
    if (!_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.useGlVersion2) {
        var image = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(isl.get_imageSet().get_wcsImage(), _layers_fits_image_js_js__WEBPACK_IMPORTED_MODULE_5__.FitsImageJs);
        var Tile = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileCacheGetTile)(0, 0, 0, isl.get_imageSet(), null);
        Tile.texture2d = image.getBitmap().getTexture();
    }
};

Histogram.updateScale = function (isl, scale, low, hi) {
    isl.get_imageSet().get_fitsProperties().scaleType = scale;
    isl.get_imageSet().get_fitsProperties().lowerCut = low;
    isl.get_imageSet().get_fitsProperties().upperCut = hi;
    if (!_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.useGlVersion2) {
        var image = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(isl.get_imageSet().get_wcsImage(), _layers_fits_image_js_js__WEBPACK_IMPORTED_MODULE_5__.FitsImageJs);
        var Tile = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileCacheGetTile)(0, 0, 0, isl.get_imageSet(), null);
        Tile.texture2d = image.getBitmap().getTexture();
    }
};

Histogram.updateColorMapper = function (isl, colorMapperName) {
    isl.get_imageSet().get_fitsProperties().colorMapName = colorMapperName;
    if (!_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.useGlVersion2) {
        var image = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.safeCast(isl.get_imageSet().get_wcsImage(), _layers_fits_image_js_js__WEBPACK_IMPORTED_MODULE_5__.FitsImageJs);
        var Tile = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileCacheGetTile)(0, 0, 0, isl.get_imageSet(), null);
        Tile.texture2d = image.getBitmap().getTexture();
    }
};

var Histogram$ = {
    close: function (e) {
        var menu = document.getElementById('histogram');
        var closeBtn = document.getElementById('histogramClose');
        menu.style.display = 'none';
        window.removeEventListener('click', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('close', this), true);
        var image = document.getElementById('graph');
        image.removeEventListener('mousedown', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onPointerDown', this), false);
        image.removeEventListener('mousemove', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onPointerMove', this), false);
        image.removeEventListener('mouseup', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onPointerUp', this), false);
        this._dropDown.removeEventListener('change', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('curveStyleSelected', this), false);
        this._dropDown.removeEventListener('click', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('ignoreMe', this), true);
    },

    show: function (position) {
        this.tile = (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.tileCacheGetTile)(0, 0, 0, this.layer.get_imageSet(), null);
        var picker = document.getElementById('histogram');
        var closeBtn = document.getElementById('histogramClose');
        picker.style.display = 'block';
        picker.style.left = position.x.toString() + 'px';
        picker.style.top = position.y.toString() + 'px';
        this.selectedCurveStyle = this.layer.get_imageSet().get_fitsProperties().scaleType;
        this._dropDown = document.getElementById('ScaleTypePicker');
        this._dropDown.addEventListener('change', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('curveStyleSelected', this), false);
        this._dropDown.addEventListener('click', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('ignoreMe', this), true);
        var canvas = document.getElementById('graph');
        canvas.addEventListener('pointerdown', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onPointerDown', this), false);
        canvas.addEventListener('pointermove', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onPointerMove', this), false);
        canvas.addEventListener('pointerup', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onPointerUp', this), false);
        closeBtn.addEventListener('click', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('close', this), true);
        this.draw();
    },

    ignoreMe: function (e) {
        this._ignoreNextClick = true;
    },

    curveStyleSelected: function (e) {
        this.selectedCurveStyle = this._dropDown.selectedIndex;
        this.setUpdateTimer();
        this.layer.get_imageSet().get_fitsProperties().scaleType = this.selectedCurveStyle;
        this.draw();
        this._ignoreNextClick = true;
    },

    onPointerDown: function (e) {
        var canvas = document.getElementById('graph');
        var x = _util_js__WEBPACK_IMPORTED_MODULE_4__.Mouse.offsetX(canvas, e);
        var y = _util_js__WEBPACK_IMPORTED_MODULE_4__.Mouse.offsetY(canvas, e);
        canvas.setPointerCapture(e.pointerId);
        if ((Math.abs(x - this._center) < 10) && Math.abs(y - 75) < 10) {
            this._dragType = 3;
        } else if (Math.abs(x - this._lowPosition) < 10) {
            this._dragType = 0;
        } else if (Math.abs(x - this._highPosition) < 10) {
            this._dragType = 1;
        } else {
            this._dragType = 2;
            this._downPosition = Math.min(255, Math.max(0, x));
            this.draw();
        }
        e.cancelBubble = true;
    },

    onPointerMove: function (e) {
        var canvas = document.getElementById('graph');
        var x = _util_js__WEBPACK_IMPORTED_MODULE_4__.Mouse.offsetX(canvas, e);
        var y = _util_js__WEBPACK_IMPORTED_MODULE_4__.Mouse.offsetY(canvas, e);
        switch (this._dragType) {
            case 0:
                this._lowPosition = Math.min(255, Math.max(0, x));
                break;
            case 1:
                this._highPosition = Math.min(255, Math.max(0, x));
                break;
            case 2:
                this._lowPosition = this._downPosition;
                this._highPosition = Math.min(255, Math.max(0, x));
                break;
            case 3:
                var hWidth = Math.abs(this._highPosition - this._lowPosition) / 2;
                var adCenter = Math.min(255 - hWidth, Math.max(hWidth, x));
                var moved = this._center - adCenter;
                this._lowPosition -= moved;
                this._highPosition -= moved;
                break;
            case 4:
                return;
            default:
                break;
        }
        this._center = (this._lowPosition + this._highPosition) / 2;
        this.draw();
        var factor = (this.layer.get_imageSet().get_fitsProperties().maxVal - this.layer.get_imageSet().get_fitsProperties().minVal) / 256;
        var low = this.layer.get_imageSet().get_fitsProperties().minVal + (this._lowPosition * factor);
        var hi = this.layer.get_imageSet().get_fitsProperties().minVal + (this._highPosition * factor);
        this.setUpdateTimer();
        this.layer.get_imageSet().get_fitsProperties().upperCut = hi;
        this.layer.get_imageSet().get_fitsProperties().lowerCut = low;
        this.layer.get_imageSet().get_fitsProperties().scaleType = this.selectedCurveStyle;
        e.cancelBubble = true;
    },

    onPointerUp: function (e) {
        e.srcElement.releasePointerCapture(e.pointerId);
        if (this._dragType !== 4) {
            this._dragType = 4;
            this.setUpdateTimer();
            this._ignoreNextClick = true;
        }
        e.cancelBubble = true;
    },

    setUpdateTimer: function () {
        var $this = this;

        if (!_render_globals_js__WEBPACK_IMPORTED_MODULE_3__.useGlVersion2) {
            setTimeout(function () {
                $this.update();
            }, 500);
            this._updated = false;
        }
    },

    update: function () {
        if (this._updated) {
            return;
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(this.image, _layers_fits_image_js_js__WEBPACK_IMPORTED_MODULE_5__.FitsImageJs)) {
            var factor = (this.layer.get_imageSet().get_fitsProperties().maxVal - this.layer.get_imageSet().get_fitsProperties().minVal) / 256;
            var low = this.layer.get_imageSet().get_fitsProperties().minVal + (this._lowPosition * factor);
            var hi = this.layer.get_imageSet().get_fitsProperties().minVal + (this._highPosition * factor);
            this.tile.texture2d = (this.image).getScaledBitmap(low, hi, this.selectedCurveStyle, 0, null).getTexture();
        }
        this._updated = true;
    },

    draw: function () {
        var canvas = document.getElementById('graph');
        var ctx = canvas.getContext('2d');
        if (this.image != null) {
            this.image.drawHistogram(ctx);
        }
        var red = 'rgba(255,0,0,255)';
        var green = 'rgba(0,255,0,255)';
        var blue = 'rgba(0,0,255,255)';
        ctx.strokeStyle = red;
        ctx.beginPath();
        ctx.moveTo(this._lowPosition, 0);
        ctx.lineTo(this._lowPosition, 150);
        ctx.stroke();
        ctx.strokeStyle = green;
        ctx.beginPath();
        ctx.moveTo(this._highPosition, 0);
        ctx.lineTo(this._highPosition, 150);
        ctx.stroke();
        ctx.strokeStyle = blue;
        ctx.beginPath();
        ctx.arc(this._center, 75, 10, 0, Math.PI * 2, false);
        ctx.closePath();
        ctx.stroke();
        var Curve = [];
        switch (this.selectedCurveStyle) {
            case 0: // linear
                Curve.length = 0;
                Curve.push(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(this._lowPosition, 150));
                Curve.push(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(this._highPosition, 0));
                break;
            case 1: // log
                Curve.length = 0;
                var factor = 150 / Math.log(255);
                var diff = (this._highPosition - this._lowPosition);
                var jump = (diff < 0) ? -1 : 1;
                var step = Math.abs(256 / ((!diff) ? 1E-06 : diff));
                var val = 1E-06;
                for (var i = this._lowPosition; i !== this._highPosition; i += jump) {
                    Curve.push(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(i, (150 - (Math.log(val) * factor))));
                    val += step;
                }
                break;
            case 2: // power 2
                Curve.length = 0;
                var factor = 150 / Math.pow(255, 2);
                var diff = (this._highPosition - this._lowPosition);
                var jump = (diff < 0) ? -1 : 1;
                var step = Math.abs(256 / ((!diff) ? 1E-06 : diff));
                var val = 1E-06;
                for (var i = this._lowPosition; i !== this._highPosition; i += jump) {
                    Curve.push(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(i, (150 - (Math.pow(val, 2) * factor))));
                    val += step;
                }
                break;
            case 3: // square root
                Curve.length = 0;
                var factor = 150 / Math.sqrt(255);
                var diff = (this._highPosition - this._lowPosition);
                var jump = (diff < 0) ? -1 : 1;
                var step = Math.abs(256 / ((!diff) ? 1E-06 : diff));
                var val = 1E-06;
                for (var i = this._lowPosition; i !== this._highPosition; i += jump) {
                    Curve.push(_double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector2d.create(i, (150 - (Math.sqrt(val) * factor))));
                    val += step;
                }
                break;
        }
        if (Curve.length > 1) {
            ctx.beginPath();
            ctx.strokeStyle = blue;
            ctx.moveTo(Curve[0].x, Curve[0].y);
            for (var i = 1; i < Curve.length; i++) {
                ctx.lineTo(Curve[i].x, Curve[i].y);
            }
            ctx.stroke();
        }
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Histogram", [Histogram, Histogram$, null]);


/***/ }),

/***/ "./esm/utilities/simple_input.js":
/*!***************************************!*\
  !*** ./esm/utilities/simple_input.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SimpleInput: () => (/* binding */ SimpleInput)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A manually-built HTML based input dialog.





// wwtlib.SimpleInput

function SimpleInput(title, label, text, v3) {
    this.title = 'Tile';
    this.label = 'Enter Text Below';
    this.text = '';
    this._textElement = null;
    this._ignoreNextClick = false;
    this.title = title;
    this.label = label;
    this.text = text;
}

var SimpleInput$ = {
    showDialog: function () {
        return 1;
    },

    nonMenuClick: function (e) {
        if (!this._ignoreNextClick) {
            this._close();
        }
        this._ignoreNextClick = false;
    },

    show: function (position, callback) {
        var simpleInputElement = document.getElementById('simpleinput');
        var modalElement = document.getElementById('simplemodal');
        modalElement.style.display = 'block';
        simpleInputElement.style.display = 'block';
        simpleInputElement.style.marginLeft = position.x.toString() + 'px';
        simpleInputElement.style.marginTop = position.y.toString() + 'px';
        this._textElement = document.getElementById('inputtext');
        this._textElement.value = this.text;
        var titleDiv = document.getElementById('simpletitle');
        var labelDiv = document.getElementById('inputlabel');
        titleDiv.innerText = this.title;
        labelDiv.innerText = this.label;
        this._textElement.addEventListener('change', _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.bind('textChanged', this), false);
        this._textElement.addEventListener('click', _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.bind('ignoreMe', this), true);
        var okButton = document.getElementById('simpleinputok');
        var cancelButton = document.getElementById('simpleinputcancel');
        okButton.addEventListener('click', _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.bind('okClicked', this), false);
        cancelButton.addEventListener('click', _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.bind('cancelClicked', this), false);
        this._okCallback = callback;
    },

    okClicked: function (e) {
        this._close();
        if (this._okCallback != null) {
            this._okCallback();
        }
    },

    cancelClicked: function (e) {
        this._close();
    },

    _close: function () {
        var simpleInputElement = document.getElementById('simplemodal');
        simpleInputElement.style.display = 'none';
        this._textElement.removeEventListener('change', _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.bind('textChanged', this), false);
        var okButton = document.getElementById('simpleinputok');
        var cancelButton = document.getElementById('simpleinputcancel');
        okButton.removeEventListener('click', _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.bind('okClicked', this), false);
        cancelButton.removeEventListener('click', _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.bind('cancelClicked', this), false);
    },

    ignoreMe: function (e) {
        this._ignoreNextClick = true;
    },

    textChanged: function (e) {
        this.text = this._textElement.value;
        this._ignoreNextClick = true;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("SimpleInput", [SimpleInput, SimpleInput$, null]);


/***/ }),

/***/ "./esm/utilities/xml_text_writer.js":
/*!******************************************!*\
  !*** ./esm/utilities/xml_text_writer.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Formatting: () => (/* binding */ Formatting),
/* harmony export */   XmlTextWriter: () => (/* binding */ XmlTextWriter)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ss.js */ "./esm/ss.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Writing XML.





// wwtlib.Formatting

var Formatting = {
    indented: 1
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("Formatting", Formatting);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerEnum)("Formatting", Formatting);


// wwtlib.XmlTextWriter

function XmlTextWriter() {
    this.body = "<?xml version='1.0' encoding='UTF-8'?>\r\n";
    this.formatting = 1;
    this._elementStack = new _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.Stack();
    this._pending = false;
    this._currentName = '';
    this._attributes = {};
    this._value = '';
}

var XmlTextWriter$ = {
    _pushNewElement: function (name) {
        //write pending element and attributes
        this._writePending(false);

        //Push new attribute on to stack
        this._elementStack.push(name);

        //setup pending structures
        this._pending = true;
        this._currentName = name;
    },

    _writePending: function (fullClose) {
        var closed = true;
        if (this._pending) {
            for (var i = 1; i < this._elementStack.count; i++) {
                this.body += '  ';
            }
            this.body += '<' + this._currentName;
            if (_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.keyCount(this._attributes) > 0) {
                var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.enumerate(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.keys(this._attributes));
                while ($enum1.moveNext()) {
                    var key = $enum1.current;
                    this.body += _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format(' {0}="{1}"', key, this._attributes[key]);
                }
            }
            if (!_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.emptyString(this._value)) {
                this.body += '>';
                closed = false;
                if (!_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.emptyString(this._value)) {
                    this.body += this._value;
                }
            }
            else {
                if (fullClose) {
                    this.body += ' />\r\n';
                    closed = true;
                }
                else {
                    this.body += '>\r\n';
                }
            }
            this._pending = false;
            this._currentName = '';
            this._value = '';
            this._attributes = {};
            return closed;
        }
        return false;
    },

    _writeProcessingInstruction: function (v1, v2) { },

    _writeStartElement: function (name) {
        this._pushNewElement(name);
    },

    _writeAttributeString: function (key, value) {
        if (value != null) {
            this._attributes[key] = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.replaceString(value.toString(), '&', '&amp;');
        } else {
            this._attributes[key] = '';
        }
    },

    _writeEndElement: function () {
        if (!this._writePending(true)) {
            for (var i = 1; i < this._elementStack.count; i++) {
                this.body += '  ';
            }
            this.body += _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('</{0}>\r\n', this._elementStack.pop());
        } else {
            this._elementStack.pop();
        }
    },

    _writeString: function (text) {
        this._value = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.replaceString(text, '&', '&amp;');
    },

    _writeFullEndElement: function () {
        this._writePending(false);
        for (var i = 1; i < this._elementStack.count; i++) {
            this.body += '  ';
        }
        this.body += _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('</{0}>\r\n', this._elementStack.pop());
    },

    _close: function () { },

    _writeElementString: function (name, value) {
        this._writeStartElement(name);
        this._writeValue(_ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.replaceString(value, '&', '&amp;'));
        this._writeEndElement();
    },

    _writeValue: function (val) {
        this._value = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.replaceString(val, '&', '&amp;');
    },

    _writeCData: function (htmlDescription) {
        this._value = _ss_js__WEBPACK_IMPORTED_MODULE_1__.ss.format('<![CDATA[{0}]]>', htmlDescription);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("XmlTextWriter", [XmlTextWriter, XmlTextWriter$, null]);


/***/ }),

/***/ "./esm/video_output_type.js":
/*!**********************************!*\
  !*** ./esm/video_output_type.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VideoOutputType: () => (/* binding */ VideoOutputType)
/* harmony export */ });
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Specifications of a requested video output format.




// wwtlib.VideoOutputType

function VideoOutputType(width, height, fps, format, waitDownload) {
    this.fps = 0;
    this.width = 0;
    this.height = 0;
    this.totalFrames = 0;
    this.waitDownload = false;
    this.format = 'image/jpeg';
    this.width = width;
    this.height = height;
    this.fps = fps;
    this.format = format;
    this.waitDownload = waitDownload;
}

var VideoOutputType$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_0__.registerType)("VideoOutputType", [VideoOutputType, VideoOutputType$, null]);


/***/ }),

/***/ "./esm/view_mover.js":
/*!***************************!*\
  !*** ./esm/view_mover.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ViewMoverKenBurnsStyle: () => (/* binding */ ViewMoverKenBurnsStyle),
/* harmony export */   ViewMoverSlew: () => (/* binding */ ViewMoverSlew)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _camera_parameters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./camera_parameters.js */ "./esm/camera_parameters.js");
/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./interfaces.js */ "./esm/interfaces.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./settings.js */ "./esm/settings.js");
/* harmony import */ var _space_time_controller_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./space_time_controller.js */ "./esm/space_time_controller.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Moving the view around.
//
// These types were originally implemented in `IViewMover.cs`, but we merged the
// `IViewMover` interface into `interfaces.js`, since currently in the JS
// implementation the interfaces don't contain any content.











// wwtlib.ViewMoverKenBurnsStyle
//
// This was defined in `IViewMover.cs`, which we've folded into `interfaces.js`.

function ViewMoverKenBurnsStyle(from, to, time, fromDateTime, toDateTime, type) {
    this.interpolationType = 0;
    this.fastDirectionMove = false;
    this._toTargetTime = 0;
    this._dateTimeSpan = 0;
    this._complete = false;
    this._midpointFired = false;
    this.interpolationType = type;
    if (Math.abs(from.lng - to.lng) > 180) {
        if (from.lng > to.lng) {
            from.lng -= 360;
        } else {
            from.lng += 360;
        }
    }
    this._fromDateTime = fromDateTime;
    this._toDateTime = toDateTime;
    this._dateTimeSpan = toDateTime - fromDateTime;
    this._from = from.copy();
    this._to = to.copy();
    this._fromTime = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_7__.SpaceTimeController.get_metaNow();
    this._toTargetTime = time;
}

var ViewMoverKenBurnsStyle$ = {
    get_complete: function () {
        return this._complete;
    },

    get_currentPosition: function () {
        var elapsed = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_7__.SpaceTimeController.get_metaNow() - this._fromTime;
        var elapsedSeconds = (elapsed) / 1000;
        var alpha = elapsedSeconds / this._toTargetTime;
        if (!this._midpointFired && alpha >= 0.5) {
            this._midpointFired = true;
            if (this._midpoint != null) {
                this._midpoint();
            }
        }
        if (alpha >= 1) {
            alpha = 1;
            this._complete = true;
            return this._to.copy();
        }
        if (_settings_js__WEBPACK_IMPORTED_MODULE_6__.Settings.get_active().get_galacticMode() && _render_globals_js__WEBPACK_IMPORTED_MODULE_5__.globalRenderContext.space) {
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_3__.CameraParameters.interpolateGreatCircle(this._from, this._to, alpha, this.interpolationType, this.fastDirectionMove);
        }
        return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_3__.CameraParameters.interpolate(this._from, this._to, alpha, this.interpolationType, this.fastDirectionMove);
    },

    get_currentDateTime: function () {
        var elapsed = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_7__.SpaceTimeController.get_metaNow() - this._fromTime;
        var elapsedSeconds = (elapsed) / 1000;
        var alpha = elapsedSeconds / this._toTargetTime;
        var delta = this._dateTimeSpan * alpha;
        var retDate = new Date(this._fromDateTime.getTime() + _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(delta));
        return retDate;
    },

    get_midpoint: function () {
        return this._midpoint;
    },

    set_midpoint: function (value) {
        this._midpoint = value;
        return value;
    },

    get_moveTime: function () {
        return this._toTargetTime;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ViewMoverKenBurnsStyle", [ViewMoverKenBurnsStyle, ViewMoverKenBurnsStyle$, null, _interfaces_js__WEBPACK_IMPORTED_MODULE_4__.IViewMover]);


// wwtlib.ViewMoverSlew
//
// This was defined in `IViewMover.cs`, which we've folded into `interfaces.js`.

function ViewMoverSlew() {
    this._upTargetTime = 0;
    this._downTargetTime = 0;
    this._toTargetTime = 0;
    this._upTimeFactor = 0.6;
    this._downTimeFactor = 0.6;
    this._travelTimeFactor = 7;
    this._midpointFired = false;
    this._complete = false;
}

ViewMoverSlew.create = function (from, to) {
    var temp = new ViewMoverSlew();
    temp.init(from, to);
    return temp;
};

ViewMoverSlew.createUpDown = function (from, to, upDowFactor) {
    var temp = new ViewMoverSlew();
    temp._upTimeFactor = temp._downTimeFactor = upDowFactor;
    temp.init(from.copy(), to.copy());
    return temp;
};

var ViewMoverSlew$ = {
    init: function (from, to) {
        if (Math.abs(from.lng - to.lng) > 180) {
            if (from.lng > to.lng) {
                from.lng -= 360;
            }
            else {
                from.lng += 360;
            }
        }
        if (to.zoom <= 0) {
            to.zoom = 360;
        }
        if (from.zoom <= 0) {
            from.zoom = 360;
        }
        this._from = from;
        this._to = to;
        this._fromTime = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_7__.SpaceTimeController.get_metaNow();
        var zoomUpTarget = 360;
        var travelTime;
        var lngDist = Math.abs(from.lng - to.lng);
        var latDist = Math.abs(from.lat - to.lat);
        var distance = Math.sqrt(latDist * latDist + lngDist * lngDist);
        zoomUpTarget = (distance / 3) * 20;
        if (zoomUpTarget > 360) {
            zoomUpTarget = 360;
        }
        if (zoomUpTarget < from.zoom) {
            zoomUpTarget = from.zoom;
        }
        travelTime = (distance / 180) * (360 / zoomUpTarget) * this._travelTimeFactor;
        var rotateTime = Math.max(Math.abs(from.angle - to.angle), Math.abs(from.rotation - to.rotation));
        var logDistUp = Math.max(Math.abs(_baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.logN(zoomUpTarget, 2) - _baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.logN(from.zoom, 2)), rotateTime);
        this._upTargetTime = this._upTimeFactor * logDistUp;
        this._downTargetTime = this._upTargetTime + travelTime;
        var logDistDown = Math.abs(_baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.logN(zoomUpTarget, 2) - _baseutil_js__WEBPACK_IMPORTED_MODULE_2__.Util.logN(to.zoom, 2));
        this._toTargetTime = this._downTargetTime + Math.max((this._downTimeFactor * logDistDown), rotateTime);
        this._fromTop = from.copy();
        this._fromTop.zoom = zoomUpTarget;
        this._fromTop.angle = (from.angle + to.angle) / 2;
        this._fromTop.rotation = (from.rotation + to.rotation) / 2;
        this._toTop = to.copy();
        this._toTop.zoom = this._fromTop.zoom;
        this._toTop.angle = this._fromTop.angle;
        this._toTop.rotation = this._fromTop.rotation;
    },

    get_complete: function () {
        return this._complete;
    },

    get_currentPosition: function () {
        var elapsed = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_7__.SpaceTimeController.get_metaNow() - this._fromTime;
        var elapsedSeconds = (elapsed) / 1000;
        if (elapsedSeconds < this._upTargetTime) {
            // Log interpolate from from to fromTop
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_3__.CameraParameters.interpolate(this._from, this._fromTop, elapsedSeconds / this._upTargetTime, 3, false);
        } else if (elapsedSeconds < this._downTargetTime) {
            elapsedSeconds -= this._upTargetTime;
            if (_settings_js__WEBPACK_IMPORTED_MODULE_6__.Settings.get_active().get_galacticMode() && _render_globals_js__WEBPACK_IMPORTED_MODULE_5__.globalRenderContext.space) {
                return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_3__.CameraParameters.interpolateGreatCircle(this._fromTop, this._toTop, elapsedSeconds / (this._downTargetTime - this._upTargetTime), 3, false);
            }
            // interpolate linear fromTop and toTop
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_3__.CameraParameters.interpolate(this._fromTop, this._toTop, elapsedSeconds / (this._downTargetTime - this._upTargetTime), 3, false);
        } else {
            if (!this._midpointFired) {
                this._midpointFired = true;
                if (this._midpoint != null) {
                    this._midpoint();
                }
            }
            elapsedSeconds -= this._downTargetTime;
            // Interpolate log from toTop and to
            var alpha = elapsedSeconds / (this._toTargetTime - this._downTargetTime);
            if (alpha > 1) {
                alpha = 1;
                this._complete = true;
                return this._to.copy();
            }
            return _camera_parameters_js__WEBPACK_IMPORTED_MODULE_3__.CameraParameters.interpolate(this._toTop, this._to, alpha, 3, false);
        }
    },

    get_currentDateTime: function () {
        _space_time_controller_js__WEBPACK_IMPORTED_MODULE_7__.SpaceTimeController.updateClock();
        return _space_time_controller_js__WEBPACK_IMPORTED_MODULE_7__.SpaceTimeController.get_now();
    },

    get_midpoint: function () {
        return this._midpoint;
    },

    set_midpoint: function (value) {
        this._midpoint = value;
        return value;
    },

    get_moveTime: function () {
        return this._toTargetTime;
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("ViewMoverSlew", [ViewMoverSlew, ViewMoverSlew$, null, _interfaces_js__WEBPACK_IMPORTED_MODULE_4__.IViewMover]);


/***/ }),

/***/ "./esm/viz_layer.js":
/*!**************************!*\
  !*** ./esm/viz_layer.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VizLayer: () => (/* binding */ VizLayer)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./graphics/primitives3d.js */ "./esm/graphics/primitives3d.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./coordinates.js */ "./esm/coordinates.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// A layer displaying catalog data? This type is unused in the WWT engine, but
// we preserve it because it is exported in the API.









// wwtlib.VizLayer

function VizLayer() {
    this.table = [];
    this.items = [];
    this._imageReady = false;
    this._dateColumn = 0;
    this._latColumn = 1;
    this._lngColumn = 2;
    this._depthColumn = 3;
    this._magColumn = 4;
}

VizLayer.earthRadius = 6371000;

var VizLayer$ = {
    load: function (data) {
        var $this = this;

        var lines = data.split('\r\n');
        this._starProfile = document.createElement('img');
        this._starProfile.addEventListener('load', function (e) {
            $this._imageReady = true;
        }, false);
        this._starProfile.src = _url_helpers_js__WEBPACK_IMPORTED_MODULE_4__.URLHelpers.singleton.engineAssetUrl('StarProfileAlpha.png');
        var gotHeader = false;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(lines);
        while ($enum1.moveNext()) {
            var line = $enum1.current;
            if (gotHeader) {
                this.table.push(line.split('\t'));
            }
            else {
                this.header = line.split('\t');
                gotHeader = true;
            }
        }
    },

    prepare: function () {
        this._worldList = new Array(this.table.length);
        this._transformedList = new Array(this.table.length);
        var index = 0;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.table);
        while ($enum1.moveNext()) {
            var row = $enum1.current;
            var item = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_3__.DataItem();
            item.eventTime = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.date(row[this._dateColumn]);
            var radius = (6371000 - parseFloat(row[this._depthColumn]) * 1000) / 6371000;
            item.location = _coordinates_js__WEBPACK_IMPORTED_MODULE_5__.Coordinates.geoTo3dRad(parseFloat(row[this._latColumn]), parseFloat(row[this._lngColumn]) + 180, radius);
            item.tranformed = new _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d();
            item.size = Math.pow(2, parseFloat(row[this._magColumn])) / 50;
            this._worldList[index] = item.location;
            this._transformedList[index] = item.tranformed;
            this.items.push(item);
            index++;
        }
    },

    draw: function (renderContext) {
        if (!this._imageReady) {
            return;
        }
        renderContext.device.save();
        renderContext.WVP.projectArrayToScreen(this._worldList, this._transformedList);
        var ctx = renderContext.device;
        ctx.globalAlpha = 0.4;
        var width = renderContext.width;
        var height = renderContext.height;
        var viewPoint = _double3d_js__WEBPACK_IMPORTED_MODULE_2__.Vector3d.makeCopy(renderContext.get_viewPoint());
        var scaleFactor = renderContext.get_fovScale() / 100;
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.items);
        while ($enum1.moveNext()) {
            var item = $enum1.current;
            if (item.tranformed.z < 1) {
                var x = item.tranformed.x;
                var y = item.tranformed.y;
                var size = 4 * item.size / scaleFactor;
                var half = size / 2;
                if (x > -half && x < width + half && y > -half && y < height + half) {
                    ctx.drawImage(this._starProfile, x - size / 2, y - size / 2, size, size);
                }
            }
        }
        renderContext.device.restore();
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("VizLayer", [VizLayer, VizLayer$, null]);


/***/ }),

/***/ "./esm/web_file.js":
/*!*************************!*\
  !*** ./esm/web_file.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   StateType: () => (/* binding */ StateType),
/* harmony export */   WebFile: () => (/* binding */ WebFile)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./url_helpers.js */ "./esm/url_helpers.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Files downloaded over the web.






// wwtlib.StateType

var StateType = {
    pending: 0,
    received: 1,
    error: 2
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("StateType", StateType);
(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerEnum)("StateType", StateType);


// wwtlib.WebFile

function WebFile(url) {
    this._state = 0;
    this.responseType = '';
    this._triedOnce = false;
    this._url = url;
}

var WebFile$ = {
    send: function () {
        // There used to be code here to work with IE 8/9, but we're not
        // worrying about those anymore.
        if (typeof navigator === "undefined") { return; }
        this._CORS();
        this.set_state(StateType.pending);
    },

    get_message: function () {
        return this._message;
    },

    get_state: function () {
        return this._state;
    },

    set_state: function (value) {
        this._state = value;
        if (this.onStateChange != null) {
            this.onStateChange();
        }
        return value;
    },

    _loadData: function (textReceived) {
        // received data, set the state vars and send statechange
        this._data = textReceived;
        this.set_state(StateType.received);
    },

    _loadBlob: function (blob) {
        // received data, set the state vars and send statechange
        this._blobdata = blob;
        this.set_state(StateType.received);
    },

    _error: function () {
        this._message = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('Error encountered loading {0}', this._url);
        this.set_state(StateType.error);
    },

    _timeOut: function () {
        this._message = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.format('Timeout encountered loading {0}', this._url);
        this.set_state(StateType.error);
    },

    _CORS: function () {
        var $this = this;

        this._xhr = new XMLHttpRequest();
        try {
            this._xhr.open('GET', this._url);
            if (this.responseType != null) {
                this._xhr.responseType = this.responseType;
            }
            this._xhr.onreadystatechange = function () {
                if ($this._xhr.readyState === 4) {
                    if (!$this._xhr.status) {
                        if (!$this._triedOnce) {
                            $this._triedOnce = true;
                            $this._xhr.onreadystatechange = null;
                            var new_url = _url_helpers_js__WEBPACK_IMPORTED_MODULE_2__.URLHelpers.singleton.activateProxy($this._url);

                            // null => don't bother: we know that the proxy won't help
                            if (new_url !== null) {
                                $this._url = new_url;
                                $this._CORS();
                            } else {
                                $this._message = $this._xhr.statusText;
                                $this.set_state(StateType.error);
                            }
                        }
                    } else {
                        if ($this._xhr.status >= 400) {
                            $this._message = $this._xhr.statusText;
                            $this.set_state(StateType.error);
                        } else {
                            if (!$this.responseType) {
                                $this._loadData($this._xhr.responseText);
                            } else {
                                $this._loadBlob($this._xhr.response);
                            }
                        }
                    }
                }
            };
            this._xhr.send();
        } catch (err) {
            this._message = err.message;
            this.set_state(StateType.error);
            throw err;
        }
    },

    getText: function () {
        return this._data;
    },

    getBlob: function () {
        return this._blobdata;
    },

    getXml: function () {
        var xParser = new DOMParser();
        return xParser.parseFromString(this._data, 'text/xml');
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("WebFile", [WebFile, WebFile$, null]);


/***/ }),

/***/ "./esm/wtml.js":
/*!*********************!*\
  !*** ./esm/wtml.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FolderDownloadAction: () => (/* binding */ FolderDownloadAction),
/* harmony export */   Wtml: () => (/* binding */ Wtml)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _imageset_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./imageset.js */ "./esm/imageset.js");
/* harmony import */ var _place_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./place.js */ "./esm/place.js");
/* harmony import */ var _folder_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./folder.js */ "./esm/folder.js");
/* harmony import */ var _wwt_control_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./wwt_control.js */ "./esm/wwt_control.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// Global methods for dealing with WTML folders.











// wwtlib.FolderDownloadAction

function FolderDownloadAction(action, loadChildFolders) {
    this.loadChildFolders = false;
    this._numLoadingFolders = 0;
    this._onComplete = action;
    this.loadChildFolders = loadChildFolders;
}

var FolderDownloadAction$ = {
    _folderLoaded: function () {
        this._numLoadingFolders--;
        if (!this._numLoadingFolders) {
            this._onComplete();
        }
    },

    startingNewFolderLoad: function (folder) {
        var $this = this;

        this._numLoadingFolders++;
        folder.childLoadCallback(function () {
            Wtml.loadImagesets(folder, $this);
            $this._folderLoaded();
        });
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("FolderDownloadAction", [FolderDownloadAction, FolderDownloadAction$, null]);


// wwtlib.Wtml

function Wtml() { }

Wtml.getWtmlFile = function (url, complete, loadChildFolders) {
    if (loadChildFolders == null) {
        loadChildFolders = false;
    }
    var folder = new _folder_js__WEBPACK_IMPORTED_MODULE_6__.Folder();
    folder.set_url(url);
    var folderDownloadAction = new FolderDownloadAction(complete, loadChildFolders);
    folderDownloadAction.startingNewFolderLoad(folder);
    return folder;
};

(0,_data_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_loadWtmlFile)(Wtml.getWtmlFile);

Wtml.loadImagesets = function (folder, folderDownloadAction) {
    var children = folder.get_children();
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(children);

    while ($enum1.moveNext()) {
        var child = $enum1.current;
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(child, _imageset_js__WEBPACK_IMPORTED_MODULE_4__.Imageset)) {
            var imageSet = child;
            _wwt_control_js__WEBPACK_IMPORTED_MODULE_7__.WWTControl.addImageSetToRepository(imageSet);
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(child, _place_js__WEBPACK_IMPORTED_MODULE_5__.Place)) {
            var place = child;
            if (place.get_studyImageset() != null) {
                _wwt_control_js__WEBPACK_IMPORTED_MODULE_7__.WWTControl.addImageSetToRepository(place.get_studyImageset());
            }
            if (place.get_backgroundImageset() != null) {
                _wwt_control_js__WEBPACK_IMPORTED_MODULE_7__.WWTControl.addImageSetToRepository(place.get_backgroundImageset());
            }
        }
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(child, _folder_js__WEBPACK_IMPORTED_MODULE_6__.Folder) && folderDownloadAction.loadChildFolders) {
            folderDownloadAction.startingNewFolderLoad((child));
        }
    }

    if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(_wwt_control_js__WEBPACK_IMPORTED_MODULE_7__.WWTControl.imageSetName)) {
        var name = _wwt_control_js__WEBPACK_IMPORTED_MODULE_7__.WWTControl.imageSetName.toLowerCase();
        var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(_wwt_control_js__WEBPACK_IMPORTED_MODULE_7__.WWTControl.getImageSets());
        while ($enum2.moveNext()) {
            var imageset = $enum2.current;
            if (imageset.get_name().toLowerCase() === name) {
                _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext.set_backgroundImageset(imageset);
            }
        }
    }
};

var Wtml$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("Wtml", [Wtml, Wtml$, null]);


/***/ }),

/***/ "./esm/wwt_control.js":
/*!****************************!*\
  !*** ./esm/wwt_control.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WWTControl: () => (/* binding */ WWTControl),
/* harmony export */   WWTControlBuilder: () => (/* binding */ WWTControlBuilder),
/* harmony export */   WWTElementEvent: () => (/* binding */ WWTElementEvent)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data_globals.js */ "./esm/data_globals.js");
/* harmony import */ var _blend_state_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./blend_state.js */ "./esm/blend_state.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./color.js */ "./esm/color.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./util.js */ "./esm/util.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./graphics/primitives3d.js */ "./esm/graphics/primitives3d.js");
/* harmony import */ var _graphics_sprite2d_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./graphics/sprite2d.js */ "./esm/graphics/sprite2d.js");
/* harmony import */ var _annotation_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./annotation.js */ "./esm/annotation.js");
/* harmony import */ var _camera_parameters_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./camera_parameters.js */ "./esm/camera_parameters.js");
/* harmony import */ var _constellations_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./constellations.js */ "./esm/constellations.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./coordinates.js */ "./esm/coordinates.js");
/* harmony import */ var _grids_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./grids.js */ "./esm/grids.js");
/* harmony import */ var _imageset_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./imageset.js */ "./esm/imageset.js");
/* harmony import */ var _minor_planets_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./minor_planets.js */ "./esm/minor_planets.js");
/* harmony import */ var _place_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./place.js */ "./esm/place.js");
/* harmony import */ var _planets_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./planets.js */ "./esm/planets.js");
/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./settings.js */ "./esm/settings.js");
/* harmony import */ var _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./space_time_controller.js */ "./esm/space_time_controller.js");
/* harmony import */ var _render_triangle_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./render_triangle.js */ "./esm/render_triangle.js");
/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./tile.js */ "./esm/tile.js");
/* harmony import */ var _tile_cache_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./tile_cache.js */ "./esm/tile_cache.js");
/* harmony import */ var _video_output_type_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./video_output_type.js */ "./esm/video_output_type.js");
/* harmony import */ var _ui_tools_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./ui_tools.js */ "./esm/ui_tools.js");
/* harmony import */ var _view_mover_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./view_mover.js */ "./esm/view_mover.js");
/* harmony import */ var _tours_tour_player_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./tours/tour_player.js */ "./esm/tours/tour_player.js");
/* harmony import */ var _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./layers/layer_manager.js */ "./esm/layers/layer_manager.js");
/* harmony import */ var _tours_tour_document_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./tours/tour_document.js */ "./esm/tours/tour_document.js");
/* harmony import */ var _tours_tour_edit_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./tours/tour_edit.js */ "./esm/tours/tour_edit.js");
/* harmony import */ var _planets_3d_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./planets_3d.js */ "./esm/planets_3d.js");
/* harmony import */ var _script_interface_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./script_interface.js */ "./esm/script_interface.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// The integrated WWT web engine application.
//
// This is named "WWTControl" due to its heritage of thinking of WWT as a "web
// control" in Microsoft-ese.















































// wwtlib.WWTControl

function WWTControl() {
    // In "freestanding" mode, no worldwidetelescope.org resources are
    // relied upon. The default screen is black sky, and the 3D solar system
    // mode is unavailable because it relies on so many built-in assets. If
    // you want to see anything, you need to load it in yourself.
    this.freestandingMode = false;

    this.uiController = null;
    this._annotations = [];
    this._hoverText = '';
    this._hoverTextPoint = new _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d();
    this._lastMouseMove = new Date(1900, 1, 0, 0, 0, 0, 0);
    this.layers = [];
    this._frameCount = 0;
    this._zoomMax = 360;
    this._zoomMaxSolarSystem = 10000000000000000;
    this._zoomMin = 0.001373291015625;
    this._zoomMinSolarSystem = 1E-08;
    this.constellation = 'UMA';
    this._fadePoints = null;
    this.fader = _blend_state_js__WEBPACK_IMPORTED_MODULE_4__.BlendState.create(true, 2000);
    this._crossFadeFrame = false;
    this._crossFadeTexture = null;
    this._sprite = new _graphics_sprite2d_js__WEBPACK_IMPORTED_MODULE_10__.Sprite2d();
    this.renderType = 2;
    this._milkyWayBackground = null;
    this.capturingVideo = false;
    this._videoBlobReady = null;
    this.dumpFrameParams = null;
    this._videoBlobQueue = {};
    this._videoQueueIndex = 0;
    this._emptyFrames = [];

    // Mouse, touch, gesture controls -- lots of different event listeners for different
    // devices and browser support.
    this._beginZoom = 1;
    this._dragging = false;
    this._mouseDown = false;
    this._hasTwoTouches = false;
    this._lastX = 0;
    this._lastY = 0;
    this._pointerIds = new Array(2);
    this._pinchingZoomRect = new Array(2);
    this._moved = false;

    this._foregroundCanvas = null;
    this._fgDevice = null;
    this._tracking = false;
    this._trackingObject = null;
    this.sandboxMode = false;
    this._solarSystemTrack = 65536;
    this._moving = false;
    this._targetStudyImageset = null;
    this._targetBackgroundImageset = null;
    this.tour = null;
    this.tourEdit = null;
    this._crossHairs = null;
}

// Note: these fields must remain public because there is JS code in the
// wild that accesses `WWTControl.imageSets`.
WWTControl.imageSets = [];
WWTControl.imageSetName = '';
WWTControl.showDataLayers = false;
WWTControl._renderNeeded = false;
WWTControl.constellationsFigures = null;
WWTControl.constellationsBoundries = null;
WWTControl.solarSystemObjectsNames = ['Sun', 'Mercury', 'Venus', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune', 'Pluto', 'Moon', 'Io', 'Europa', 'Ganymede', 'Callisto', 'IoShadow', 'EuropaShadow', 'GanymedeShadow', 'CallistoShadow', 'SunEclipsed', 'Earth', 'Custom', 'Undefined'];

WWTControl.addImageSetToRepository = function (imagesetToAdd) {
    var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(WWTControl.imageSets);
    while ($enum1.moveNext()) {
        var imageset = $enum1.current;
        if (imageset.get_imageSetID() === imagesetToAdd.get_imageSetID()) {
            return imageset;
        }
    }
    WWTControl.imageSets.push(imagesetToAdd);
    return imagesetToAdd;
};

WWTControl.getImageSets = function () {
    return WWTControl.imageSets;
};

// This parameter does nothing. We keep it to maintain API compatibility.
WWTControl.get_renderNeeded = function () {
    return WWTControl._renderNeeded;
};

// This parameter does nothing. We keep it to maintain API compatibility.
WWTControl.set_renderNeeded = function (value) {
    WWTControl._renderNeeded = true;
    return value;
};

// Initialization

// For backwards compatibility, we preserve the semantics that calling
// this function kicks off the rendering loop.
WWTControl.initControl = function (DivId) {
    return WWTControl.initControl2(DivId, true);
};

// This function had a parameter to choose whether to use WebGL or HTML5
// canvas, but at some point the argument was defused. We preserve it
// for backwards compatibility.
WWTControl.initControlParam = function (DivId, webgl_ignored) {
    return WWTControl.initControl2(DivId, true);
};

// Prefer using WWTControlBuilder rather than this interface directly.
WWTControl.initControl2 = function (DivId, startRenderLoop) {
    return WWTControl.initControl6(DivId, startRenderLoop, 0, 0, 360, 'Sky');
};

// Prefer using WWTControlBuilder rather than this interface directly.
WWTControl.initControl6 = function (DivId, startRenderLoop, startLat, startLng, startZoom, startMode) {
    if (_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext.device == null) {
        WWTControl.scriptInterface = new _script_interface_js__WEBPACK_IMPORTED_MODULE_33__.ScriptInterface();
        WWTControl.scriptInterface.settings = _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_current();
        (0,_data_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_globalScriptInterface)(WWTControl.scriptInterface);
        var canvas = WWTControl._createCanvasElement(DivId);
        var gl = canvas.getContext('webgl2');

        if (gl != null) {
            (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.set_useGlVersion2)(true);
        } else {
            console.warn('This browser does not support WebGL 2.0. Some features will work suboptimally. To get the full AAS WWT experience, consider using the latest version of Chrome, Firefox or Edge. In case you would like to use Safari, we recommend that you enable WebGL 2.0');
            gl = canvas.getContext('webgl');
        }

        if (gl == null) {
            gl = canvas.getContext('experimental-webgl');
        }

        if (gl == null) {
            var ctx = canvas.getContext('2d');
            _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext.device = ctx;
        } else {
            (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.set_tilePrepDevice)(gl);
            _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext.gl = gl;
            (0,_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.set_useGl)(true);
        }

        _data_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalWWTControl.canvas = canvas;
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext.width = canvas.width;
        _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext.height = canvas.height;
        _data_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalWWTControl.setup(canvas, startLat, startLng, startZoom);

        _constellations_js__WEBPACK_IMPORTED_MODULE_13__.Constellations.initializeConstellations();
        _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_29__.LayerManager.oneTimeInitialization();

        if (startMode === 'earth') {
            _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext.set_backgroundImageset(
                _imageset_js__WEBPACK_IMPORTED_MODULE_16__.Imageset.create(
                    'Blue Marble', // name
                    _url_helpers_js__WEBPACK_IMPORTED_MODULE_6__.URLHelpers.singleton.coreStaticUrl('wwtweb/tiles.aspx?q={1},{2},{3},bm200407'),
                    _imageset_js__WEBPACK_IMPORTED_MODULE_16__.ImageSetType.earth, // dataSetType
                    _imageset_js__WEBPACK_IMPORTED_MODULE_16__.BandPass.visible, // bandPass
                    _imageset_js__WEBPACK_IMPORTED_MODULE_16__.ProjectionType.toast, // projectionType
                    101, // imageSetID
                    0, // baseLevel
                    7, // levels
                    256, // tileSize (unused)
                    180, // basetileDegrees
                    '.png', // extension
                    false, // bottomsUp
                    '', // quadTreeMap
                    0, // centerX
                    0, // centerY
                    0, // rotation
                    false, // sparse
                    _url_helpers_js__WEBPACK_IMPORTED_MODULE_6__.URLHelpers.singleton.coreStaticUrl('wwtweb/thumbnail.aspx?name=bm200407'),
                    true, // defaultSet
                    false, // elevationModel
                    0, // widthFactor
                    0, // offsetX
                    0, // offsetY
                    '', // creditsText
                    '', // creditsUrl
                    '', // demUrl
                    '', // altUrl
                    6371000, // meanRadius
                    'Earth' // referenceFrame
                )
            );
        } else if (startMode === 'black') {
            // Black sky init -- probably because we are in freestanding mode
            _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext.set_backgroundImageset(
                _imageset_js__WEBPACK_IMPORTED_MODULE_16__.Imageset.create(
                    'Black Sky Background', // name
                    '', // url
                    _imageset_js__WEBPACK_IMPORTED_MODULE_16__.ImageSetType.sky, // dataSetType
                    _imageset_js__WEBPACK_IMPORTED_MODULE_16__.BandPass.visible, // bandPass
                    _imageset_js__WEBPACK_IMPORTED_MODULE_16__.ProjectionType.toast, // projectionType
                    102, // imageSetID
                    0, // baseLevel
                    0, // levels
                    256, // tileSize (unused)
                    180, // baseTileDegrees
                    '.png', // extension
                    false, // bottomsUp
                    '0123', // quadTreeMap
                    0, // centerX
                    0, // centerY
                    0, // rotation
                    false, // sparse
                    '', // thumbnailUrl
                    false, // defaultSet
                    false, // elevationModel
                    2, // widthFactor
                    0, // offsetX
                    0, // offsetY
                    '', // creditsText
                    '', // creditsUrl
                    '', // demUrl
                    '', // altUrl
                    1, // meanRadius
                    'Sky' // referenceFrame
                )
            );
        } else {
            _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext.set_backgroundImageset(
                _imageset_js__WEBPACK_IMPORTED_MODULE_16__.Imageset.create(
                    'DSS', // name
                    _url_helpers_js__WEBPACK_IMPORTED_MODULE_6__.URLHelpers.singleton.coreStaticUrl('wwtweb/dss.aspx?q={1},{2},{3}'),
                    _imageset_js__WEBPACK_IMPORTED_MODULE_16__.ImageSetType.sky, // dataSetTYpe
                    _imageset_js__WEBPACK_IMPORTED_MODULE_16__.BandPass.visible, // bandPass
                    _imageset_js__WEBPACK_IMPORTED_MODULE_16__.ProjectionType.toast, // projectionType
                    100, // imageSetId
                    0, // baseLevel
                    12, // levels
                    256, // tileSize (unused)
                    180, // baseTileDegrees
                    '.png', // extension
                    false, // bottomsUp
                    '', // quadTreeMap
                    0, // centerX
                    0, // centerY
                    0, // rotation
                    false, // sparse
                    _url_helpers_js__WEBPACK_IMPORTED_MODULE_6__.URLHelpers.singleton.coreStaticUrl('thumbnails/DSS.png'),
                    true, // defaultSet
                    false, // elevationModel
                    0, // widthFactor
                    0, // offsetX
                    0, // offsetY
                    '', // creditsText
                    '', // creditsUrl
                    '', // demUrl
                    '', // altUrl
                    1, // meanRadius
                    'Sky' // referenceFrame
                )
            );
        }
    }
    _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext.viewCamera.lng += 0;
    _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext._initGL();
    if (startRenderLoop) {
        _data_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalWWTControl.render();
    }
    return _data_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalScriptInterface;
};

WWTControl._createCanvasElement = function (DivId) {
    var div = document.getElementById(DivId);
    var canvas = document.createElement('canvas');
    canvas.height = div.clientHeight;
    canvas.width = div.clientWidth;
    div.appendChild(canvas);
    return canvas;
};

WWTControl.useUserLocation = function () {
    navigator.geolocation.getCurrentPosition(WWTControl._getLocation, WWTControl._getLocationError);
};

WWTControl._getLocation = function (pos) {
    if (!!pos.coords.latitude) {
        _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_globalSettings().set_locationLat(pos.coords.latitude);
    }
    if (!!pos.coords.longitude) {
        _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_globalSettings().set_locationLng(pos.coords.longitude);
    }
    if (!!pos.coords.altitude) {
        _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_globalSettings().set_locationAltitude(pos.coords.altitude);
    }
};

WWTControl._getLocationError = function (pos) {
    if (pos != null && pos.coords != null) {
        var lat = pos.coords.latitude;
        var lng = pos.coords.longitude;
    }
};

WWTControl.setBackgroundImageName = function (name) {
    WWTControl.imageSetName = name;
};

WWTControl.setForegroundImageName = function (name) {
    WWTControl.imageSetName = name;
};

WWTControl.showLayers = function (show) {
    WWTControl.showDataLayers = show;
};

var WWTControl$ = {
    _addAnnotation: function (annotation) {
        this._annotations.push(annotation);
        _annotation_js__WEBPACK_IMPORTED_MODULE_11__.Annotation.batchDirty = true;
    },

    _removeAnnotation: function (annotation) {
        _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove(this._annotations, annotation);
        _annotation_js__WEBPACK_IMPORTED_MODULE_11__.Annotation.batchDirty = true;
    },

    _clearAnnotations: function () {
        this._annotations.length = 0;
        _annotation_js__WEBPACK_IMPORTED_MODULE_11__.Annotation.batchDirty = true;
    },

    _annotationclicked: function (ra, dec, x, y) {
        if (this._annotations != null && this._annotations.length > 0) {
            var index = 0;
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._annotations);
            while ($enum1.moveNext()) {
                var note = $enum1.current;
                if (note.hitTest(this.renderContext, ra, dec, x, y)) {
                    _data_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalScriptInterface._fireAnnotationclicked(ra, dec, note.get_id());
                    return true;
                }
                index++;
            }
        }
        return false;
    },

    _annotationHover: function (ra, dec, x, y) {
        if (this._annotations != null && this._annotations.length > 0) {
            var index = 0;
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._annotations);
            while ($enum1.moveNext()) {
                var note = $enum1.current;
                if (note.hitTest(this.renderContext, ra, dec, x, y)) {
                    this._hoverText = note.get_label();
                    this._hoverTextPoint = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.create(x, y);
                    return true;
                }
                index++;
            }
        }
        return false;
    },

    get_zoomMax: function () {
        if (this.renderContext.get_backgroundImageset() != null && this.renderContext.get_backgroundImageset().get_dataSetType() == _imageset_js__WEBPACK_IMPORTED_MODULE_16__.ImageSetType.solarSystem) {
            return this._zoomMaxSolarSystem;
        } else {
            return this._zoomMax;
        }
    },

    set_zoomMax: function (value) {
        this._zoomMax = value;
        return value;
    },

    setSolarSystemMaxZoom: function (value) {
        this._zoomMaxSolarSystem = value;
    },

    get_zoomMin: function () {
        if (this.renderContext.get_backgroundImageset() != null && this.renderContext.get_backgroundImageset().get_dataSetType() == _imageset_js__WEBPACK_IMPORTED_MODULE_16__.ImageSetType.solarSystem) {
            return this._zoomMinSolarSystem;
        } else {
            return this._zoomMin;
        }
    },

    set_zoomMin: function (value) {
        this._zoomMin = value;
        return value;
    },

    setSolarSystemMinZoom: function (value) {
        this._zoomMinSolarSystem = value;
    },

    _notifyMoveComplete: function () { },

    get_crossFadeFrame: function () {
        return this._crossFadeFrame;
    },

    set_crossFadeFrame: function (value) {
        if (value && this._crossFadeFrame !== value) {
            if (this._crossFadeTexture != null) {
            }
            this._crossFadeTexture = this.renderContext._getScreenTexture();
        }
        this._crossFadeFrame = value;
        if (!value) {
            if (this._crossFadeTexture != null) {
                this._crossFadeTexture = null;
            }
        }
        return value;
    },

    _fadeFrame: function () {
        if (this.renderContext.gl != null) {
            var sp = _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().getSetting(17);
            if ((sp.opacity > 0)) {
                var color = _color_js__WEBPACK_IMPORTED_MODULE_5__.Color._fromArgbColor(255 - _ui_tools_js__WEBPACK_IMPORTED_MODULE_26__.UiTools.gamma(255 - _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((sp.opacity * 255)), 1 / 2.2), _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_black());
                if (!(sp.opacity > 0)) {
                    color = _color_js__WEBPACK_IMPORTED_MODULE_5__.Color._fromArgbColor(255 - _ui_tools_js__WEBPACK_IMPORTED_MODULE_26__.UiTools.gamma(255 - _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((sp.opacity * 255)), 1 / 2.2), _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_black());
                }
                if (this._crossFadeFrame) {
                    color = _color_js__WEBPACK_IMPORTED_MODULE_5__.Color._fromArgbColor(_ui_tools_js__WEBPACK_IMPORTED_MODULE_26__.UiTools.gamma(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((sp.opacity * 255)), 1 / 2.2), _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_white());
                }
                else {
                    if (this._crossFadeTexture != null) {
                        this._crossFadeTexture = null;
                    }
                }
                if (this._fadePoints == null) {
                    this._fadePoints = new Array(4);
                    for (var i = 0; i < 4; i++) {
                        this._fadePoints[i] = new _double3d_js__WEBPACK_IMPORTED_MODULE_8__.PositionColoredTextured();
                    }
                }
                this._fadePoints[0].position.x = -this.renderContext.width / 2;
                this._fadePoints[0].position.y = this.renderContext.height / 2;
                this._fadePoints[0].position.z = 1347;
                this._fadePoints[0].tu = 0;
                this._fadePoints[0].tv = 1;
                this._fadePoints[0].color = color;
                this._fadePoints[1].position.x = -this.renderContext.width / 2;
                this._fadePoints[1].position.y = -this.renderContext.height / 2;
                this._fadePoints[1].position.z = 1347;
                this._fadePoints[1].tu = 0;
                this._fadePoints[1].tv = 0;
                this._fadePoints[1].color = color;
                this._fadePoints[2].position.x = this.renderContext.width / 2;
                this._fadePoints[2].position.y = this.renderContext.height / 2;
                this._fadePoints[2].position.z = 1347;
                this._fadePoints[2].tu = 1;
                this._fadePoints[2].tv = 1;
                this._fadePoints[2].color = color;
                this._fadePoints[3].position.x = this.renderContext.width / 2;
                this._fadePoints[3].position.y = -this.renderContext.height / 2;
                this._fadePoints[3].position.z = 1347;
                this._fadePoints[3].tu = 1;
                this._fadePoints[3].tv = 0;
                this._fadePoints[3].color = color;
                this._sprite.draw(this.renderContext, this._fadePoints, 4, this._crossFadeTexture, true, 1);
            }
        }
    },

    captureVideo: function (VideoBlobReady, Width, Height, FramesPerSecond, TotalFrames, Format) {
        this.capturingVideo = true;
        this._videoBlobReady = VideoBlobReady;
        _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.clearKeys(this._videoBlobQueue);
        this._videoQueueIndex = 0;
        this._emptyFrames.length = 0;
        this.dumpFrameParams = new _video_output_type_js__WEBPACK_IMPORTED_MODULE_25__.VideoOutputType(Width, Height, FramesPerSecond, Format, true);
        _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.frameDumping = true;
        _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.framesPerSecond = FramesPerSecond;
        _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.totalFrames = TotalFrames;
        _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.currentFrameNumber = 0;
    },

    // To preserve semantic backwards compatibility, this function must requeue itself
    // to be called again in a timeout.
    render: function () {
        var $this = this;

        this.renderOneFrame();
        setTimeout(function () {
            $this.render();
        }, 10);
    },

    renderOneFrame: function () {
        if (this.renderContext.get_backgroundImageset() != null) {
            this.renderType = this.renderContext.get_backgroundImageset().get_dataSetType();
        } else {
            this.renderType = 2;
        }
        var sizeChange = false;
        if (this.canvas.width !== this.canvas.parentNode.clientWidth) {
            this.canvas.width = this.canvas.parentNode.clientWidth;
            sizeChange = true;
        }
        if (this.canvas.height !== this.canvas.parentNode.clientHeight) {
            this.canvas.height = this.canvas.parentNode.clientHeight;
            sizeChange = true;
        }
        if (sizeChange && this.explorer != null) {
            this.explorer.refresh();
        }

        if (this.canvas.width < 1 || this.canvas.height < 1) {
            // This can happen during initialization if perhaps some
            // HTML/JavaScript interaction hasn't happened to set the canvas
            // size correctly. If we don't exit this function early, we get
            // NaNs in our transformation matrices that lead IsTileBigEnough
            // to say "no" for everything so that we spin out of control
            // downloading maximum-resolution DSS tiles for an enormous
            // viewport. That's bad!
            return;
        }

        if (sizeChange) {
            // In GL, the crosshairs are in viewport coordinates
            // ([0,1]x[0,1]), so a size change alters their perceived aspect
            // ratio.
            this._crossHairs = null;
        }

        _tile_js__WEBPACK_IMPORTED_MODULE_23__.Tile.lastDeepestLevel = _tile_js__WEBPACK_IMPORTED_MODULE_23__.Tile.deepestLevel;
        _render_triangle_js__WEBPACK_IMPORTED_MODULE_22__.RenderTriangle.width = this.renderContext.width = this.canvas.width;
        _render_triangle_js__WEBPACK_IMPORTED_MODULE_22__.RenderTriangle.height = this.renderContext.height = this.canvas.height;
        _tile_js__WEBPACK_IMPORTED_MODULE_23__.Tile.tilesInView = 0;
        _tile_js__WEBPACK_IMPORTED_MODULE_23__.Tile.tilesTouched = 0;
        _tile_js__WEBPACK_IMPORTED_MODULE_23__.Tile.deepestLevel = 0;
        _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.set_metaNow(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now());
        if (this.get__mover() != null) {
            _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.set_now(this.get__mover().get_currentDateTime());
            _planets_js__WEBPACK_IMPORTED_MODULE_19__.Planets.updatePlanetLocations(this.get_solarSystemMode());
            if (this.get__mover() != null) {
                var newCam = this.get__mover().get_currentPosition();
                this.renderContext.targetCamera = newCam.copy();
                this.renderContext.viewCamera = newCam.copy();
                if (this.renderContext.space && _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_galacticMode()) {
                    var gPoint = _coordinates_js__WEBPACK_IMPORTED_MODULE_14__.Coordinates.j2000toGalactic(newCam.get_RA() * 15, newCam.get_dec());
                    this.renderContext.targetAlt = this.renderContext.alt = gPoint[1];
                    this.renderContext.targetAz = this.renderContext.az = gPoint[0];
                }
                else if (this.renderContext.space && _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_localHorizonMode()) {
                    var currentAltAz = _coordinates_js__WEBPACK_IMPORTED_MODULE_14__.Coordinates.equitorialToHorizon(_coordinates_js__WEBPACK_IMPORTED_MODULE_14__.Coordinates.fromRaDec(newCam.get_RA(), newCam.get_dec()), _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.get_location(), _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.get_now());
                    this.renderContext.targetAlt = this.renderContext.alt = currentAltAz.get_alt();
                    this.renderContext.targetAz = this.renderContext.az = currentAltAz.get_az();
                }
                if (this.get__mover().get_complete()) {
                    _data_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalScriptInterface._fireArrived(this.get__mover().get_currentPosition().get_RA(), this.get__mover().get_currentPosition().get_dec(), _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext.viewCamera.zoom);
                    this.set__mover(null);
                    this._notifyMoveComplete();
                }
            }
        } else {
            _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.updateClock();
            _planets_js__WEBPACK_IMPORTED_MODULE_19__.Planets.updatePlanetLocations(this.get_solarSystemMode());
            this._updateViewParameters();
        }
        this.renderContext.clear();
        if (this.renderType === 4) {
            if (this._solarSystemTrack < 20) {
                var radius = _planets_js__WEBPACK_IMPORTED_MODULE_19__.Planets.getAdjustedPlanetRadius(this._solarSystemTrack);
                var distance = this.renderContext.get_solarSystemCameraDistance();
                var camAngle = this.renderContext.get_fovLocal();
            }
            if (this._trackingObject == null) {
            }
            this.renderContext.setupMatricesSolarSystem(true);
            var zoom = this.renderContext.viewCamera.zoom;
            var milkyWayBlend = Math.min(1, Math.max(0, (Math.log(zoom) - 8.4)) / 4.2);
            var milkyWayBlendIn = Math.min(1, Math.max(0, (Math.log(zoom) - 17.9)) / 2.3);
            var matOldMW = this.renderContext.get_world();
            var matLocalMW = this.renderContext.get_world().clone();
            matLocalMW._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_8__.Matrix3d._scaling(100000, 100000, 100000));
            matLocalMW._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_8__.Matrix3d._rotationX(23.5 / 180 * Math.PI));
            matLocalMW._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_8__.Matrix3d.translation(this.renderContext.cameraPosition));
            this.renderContext.set_world(matLocalMW);
            this.renderContext.set_worldBase(matLocalMW);
            this.renderContext.space = true;
            this.renderContext.makeFrustum();
            var lighting = this.renderContext.lighting;
            this.renderContext.lighting = false;
            if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_solarSystemMilkyWay()) {
                if (milkyWayBlend < 1) {
                    if (this._milkyWayBackground == null) {
                        this._milkyWayBackground = this.getImagesetByName('Digitized Sky Survey (Color)');
                    }
                    if (this._milkyWayBackground != null) {
                        _render_triangle_js__WEBPACK_IMPORTED_MODULE_22__.RenderTriangle.cullInside = true;
                        var c = (1 - milkyWayBlend) / 2;
                        this.renderContext.drawImageSet(this._milkyWayBackground, c * 100);
                        _render_triangle_js__WEBPACK_IMPORTED_MODULE_22__.RenderTriangle.cullInside = false;
                    }
                }
            }
            this._drawSkyOverlays();
            this.renderContext.lighting = lighting;
            this.renderContext.space = false;
            this.renderContext.set_world(matOldMW);
            this.renderContext.set_worldBase(matOldMW);
            this.renderContext.makeFrustum();
            var oldCamera = this.renderContext.cameraPosition;
            var matOld = this.renderContext.get_world();
            var matLocal = this.renderContext.get_world();
            matLocal._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_8__.Matrix3d.translation(this.renderContext.viewCamera.viewTarget));
            this.renderContext.cameraPosition = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector3d.subtractVectors(this.renderContext.cameraPosition, this.renderContext.viewCamera.viewTarget);
            this.renderContext.set_world(matLocal);
            this.renderContext.makeFrustum();
            if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_solarSystemCosmos()) {
                _grids_js__WEBPACK_IMPORTED_MODULE_15__.Grids.drawCosmos3D(this.renderContext, 1);
            }
            if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_solarSystemMilkyWay() && milkyWayBlendIn > 0) {
                _grids_js__WEBPACK_IMPORTED_MODULE_15__.Grids.drawGalaxyImage(this.renderContext, milkyWayBlendIn);
            }
            if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_solarSystemStars()) {
                _grids_js__WEBPACK_IMPORTED_MODULE_15__.Grids.drawStars3D(this.renderContext, 1);
            }
            matLocal = matOld;
            var pnt = this.renderContext.viewCamera.viewTarget;
            var vt = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector3d.create(-pnt.x, -pnt.y, -pnt.z);
            this.renderContext.cameraPosition = oldCamera;
            matLocal._multiply(_double3d_js__WEBPACK_IMPORTED_MODULE_8__.Matrix3d.translation(vt));
            this.renderContext.set_world(matLocal);
            this.renderContext.makeFrustum();
            _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_29__.LayerManager._draw(this.renderContext, 1, true, 'Sky', true, false);
            this.renderContext.set_world(matOld);
            this.renderContext.makeFrustum();
            if (this.renderContext.get_solarSystemCameraDistance() < 15000) {
                this.renderContext.setupMatricesSolarSystem(false);
                if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_solarSystemMinorPlanets()) {
                    _minor_planets_js__WEBPACK_IMPORTED_MODULE_17__.MinorPlanets.drawMPC3D(this.renderContext, 1, this.renderContext.viewCamera.viewTarget);
                }
                if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_solarSystemPlanets()) {
                    _planets_3d_js__WEBPACK_IMPORTED_MODULE_32__.Planets3d.drawPlanets3D(this.renderContext, 1, this.renderContext.viewCamera.viewTarget);
                }
            }
        } else {
            // RenderType is not SolarSystem
            if (!this.renderType || this.renderType === 1) {
                this.renderContext._setupMatricesLand3d();
            }
            else {
                this.renderContext.setupMatricesSpace3d(this.renderContext.width, this.renderContext.height);
            }
            this.renderContext.drawImageSet(this.renderContext.get_backgroundImageset(), 100);
            if (this.renderContext.get_foregroundImageset() != null) {
                if (this.renderContext.get_foregroundImageset().get_dataSetType() !== this.renderContext.get_backgroundImageset().get_dataSetType()) {
                    this.renderContext.set_foregroundImageset(null);
                }
                else {
                    if (this.renderContext.viewCamera.opacity !== 100 && this.renderContext.gl == null) {
                        if (this._foregroundCanvas.width !== this.renderContext.width || this._foregroundCanvas.height !== this.renderContext.height) {
                            this._foregroundCanvas.width = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(this.renderContext.width);
                            this._foregroundCanvas.height = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(this.renderContext.height);
                        }
                        var saveDevice = this.renderContext.device;
                        this._fgDevice.clearRect(0, 0, this.renderContext.width, this.renderContext.height);
                        this.renderContext.device = this._fgDevice;
                        this.renderContext.drawImageSet(this.renderContext.get_foregroundImageset(), 100);
                        this.renderContext.device = saveDevice;
                        this.renderContext.device.save();
                        this.renderContext.device.globalAlpha = this.renderContext.viewCamera.opacity / 100;
                        this.renderContext.device.drawImage(this._foregroundCanvas, 0, 0);
                        this.renderContext.device.restore();
                    }
                    else {
                        this.renderContext.drawImageSet(this.renderContext.get_foregroundImageset(), this.renderContext.viewCamera.opacity);
                    }
                }
            }
            if (this.renderType === 2) {
                var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this.renderContext.get_catalogHipsImagesets());
                while ($enum1.moveNext()) {
                    var imageset = $enum1.current;
                    if (imageset.get_hipsProperties().get_catalogSpreadSheetLayer().enabled && imageset.get_hipsProperties().get_catalogSpreadSheetLayer().lastVersion === imageset.get_hipsProperties().get_catalogSpreadSheetLayer().get_version()) {
                        this.renderContext.drawImageSet(imageset, 100);
                    }
                }
            }
            if (this.renderType === 2 && _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_showSolarSystem()) {
                _planets_js__WEBPACK_IMPORTED_MODULE_19__.Planets.drawPlanets(this.renderContext, 1);
                this.constellation = _constellations_js__WEBPACK_IMPORTED_MODULE_13__.Constellations.containment.findConstellationForPoint(this.renderContext.viewCamera.get_RA(), this.renderContext.viewCamera.get_dec());
                this._drawSkyOverlays();
            }
            if (this.get_planetLike() || this.get_space()) {
                if (!this.get_space()) {
                    var angle = _coordinates_js__WEBPACK_IMPORTED_MODULE_14__.Coordinates.mstFromUTC2(_space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.get_now(), 0) / 180 * Math.PI;
                    this.renderContext.set_worldBaseNonRotating(_double3d_js__WEBPACK_IMPORTED_MODULE_8__.Matrix3d.multiplyMatrix(_double3d_js__WEBPACK_IMPORTED_MODULE_8__.Matrix3d._rotationY(angle), this.renderContext.get_worldBase()));
                    if (this._targetBackgroundImageset != null) {
                        this.renderContext.set_nominalRadius(this._targetBackgroundImageset.get_meanRadius());
                    }
                }
                else {
                    this.renderContext.set_worldBaseNonRotating(this.renderContext.get_world());
                    if (this._targetBackgroundImageset != null) {
                        this.renderContext.set_nominalRadius(this._targetBackgroundImageset.get_meanRadius());
                    }
                }
                var referenceFrame = this.getCurrentReferenceFrame();
                _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_29__.LayerManager._draw(this.renderContext, 1, this.get_space(), referenceFrame, true, this.get_space());
            }
        }
        var worldSave = this.renderContext.get_world();
        var viewSave = this.renderContext.get_view();
        var projSave = this.renderContext.get_projection();
        if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_current().get_showCrosshairs()) {
            this._drawCrosshairs(this.renderContext);
        }
        if (this.uiController != null) {
            this.uiController.render(this.renderContext);
        } else {
            var index = 0;
            _annotation_js__WEBPACK_IMPORTED_MODULE_11__.Annotation.prepBatch(this.renderContext);
            var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(this._annotations);
            while ($enum2.moveNext()) {
                var item = $enum2.current;
                item.draw(this.renderContext);
                index++;
            }
            _annotation_js__WEBPACK_IMPORTED_MODULE_11__.Annotation.drawBatch(this.renderContext);
            if ((_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now() - this._lastMouseMove) > 400) {
                var raDecDown = this.getCoordinatesForScreenPoint(this._hoverTextPoint.x, this._hoverTextPoint.y);
                this._annotationHover(raDecDown.x, raDecDown.y, this._hoverTextPoint.x, this._hoverTextPoint.y);
                this._lastMouseMove = new Date(2100, 1, 1);
            }
            if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this._hoverText)) {
                this._drawHoverText(this.renderContext);
            }
        }
        var tilesAllLoaded = !_tile_cache_js__WEBPACK_IMPORTED_MODULE_24__.TileCache.get_queueCount();
        this.renderContext.setupMatricesOverlays();
        this._fadeFrame();
        this._frameCount++;
        _tile_cache_js__WEBPACK_IMPORTED_MODULE_24__.TileCache.decimateQueue();
        _tile_cache_js__WEBPACK_IMPORTED_MODULE_24__.TileCache.processQueue(this.renderContext);
        _tile_js__WEBPACK_IMPORTED_MODULE_23__.Tile.currentRenderGeneration++;
        if (!_tours_tour_player_js__WEBPACK_IMPORTED_MODULE_28__.TourPlayer.get_playing()) {
            this.set_crossFadeFrame(false);
        }

        // Restore Matrices for Finder Scope and such to map points
        this.renderContext.set_world(worldSave);
        this.renderContext.set_view(viewSave);
        this.renderContext.set_projection(projSave);
        var now = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now();
        var ms = now - this._lastUpdate;
        if (ms > 1000) {
            this._lastUpdate = now;
            this._frameCount = 0;
            _render_triangle_js__WEBPACK_IMPORTED_MODULE_22__.RenderTriangle.trianglesRendered = 0;
            _render_triangle_js__WEBPACK_IMPORTED_MODULE_22__.RenderTriangle.trianglesCulled = 0;
        }
        if (this.capturingVideo) {
            if ((this.dumpFrameParams != null) && (!this.dumpFrameParams.waitDownload || tilesAllLoaded)) {
                this.captureFrameForVideo(this._videoBlobReady, this.dumpFrameParams.width, this.dumpFrameParams.height, this.dumpFrameParams.format);
                _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.nextFrame();
            }
            if (_space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.get_doneDumping()) {
                _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.frameDumping = false;
                _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.cancelFrameDump = false;
                this.capturingVideo = false;
            }
        }
    },

    getCurrentReferenceFrame: function () {
        if (this.renderContext.get_backgroundImageset() == null) {
            return 'Sun';
        }
        if (!_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this.renderContext.get_backgroundImageset().get_referenceFrame())) {
            return this.renderContext.get_backgroundImageset().get_referenceFrame();
        }
        if (!this.renderContext.get_backgroundImageset().get_dataSetType()) {
            return 'Earth';
        }
        if (this.renderContext.get_backgroundImageset().get_name() === 'Visible Imagery' && this.renderContext.get_backgroundImageset().get_url().toLowerCase().indexOf('mars') > -1) {
            this.renderContext.get_backgroundImageset().set_referenceFrame('Mars');
            return this.renderContext.get_backgroundImageset().get_referenceFrame();
        }
        if (this.renderContext.get_backgroundImageset().get_dataSetType() === 1) {
            var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(WWTControl.solarSystemObjectsNames);
            while ($enum1.moveNext()) {
                var name = $enum1.current;
                if (this.renderContext.get_backgroundImageset().get_name().toLowerCase().indexOf(name.toLowerCase()) > -1) {
                    this.renderContext.get_backgroundImageset().set_referenceFrame(name);
                    return name;
                }
            }
        }
        if (this.renderContext.get_backgroundImageset().get_dataSetType() === 2) {
            return 'Sky';
        }
        return '';
    },

    get_planetLike: function () {
        if (this.renderContext.get_backgroundImageset() != null) {
            return !this.renderContext.get_backgroundImageset().get_dataSetType() || this.renderContext.get_backgroundImageset().get_dataSetType() === 1;
        } else {
            return true;
        }
    },

    get_space: function () {
        if (this.renderContext.get_backgroundImageset() != null) {
            return this.renderContext.get_backgroundImageset().get_dataSetType() === 2;
        } else {
            return true;
        }
    },

    _drawSkyOverlays: function () {
        if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_showConstellationPictures() && !this.freestandingMode) {
            _constellations_js__WEBPACK_IMPORTED_MODULE_13__.Constellations.drawArtwork(this.renderContext);
        }
        if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_showConstellationFigures()) {
            if (WWTControl.constellationsFigures == null) {
                WWTControl.constellationsFigures = _constellations_js__WEBPACK_IMPORTED_MODULE_13__.Constellations.create(
                    'Constellations',
                    _url_helpers_js__WEBPACK_IMPORTED_MODULE_6__.URLHelpers.singleton.engineAssetUrl('figures.txt'),
                    false,  // "boundry"
                    false,  // "noInterpollation"
                    false,  // "resource"
                );
            }
            WWTControl.constellationsFigures.draw(this.renderContext, false, 'UMA', false);
        }
        if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_showEclipticGrid()) {
            _grids_js__WEBPACK_IMPORTED_MODULE_15__.Grids.drawEclipticGrid(this.renderContext, 1, _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_eclipticGridColor());
            if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_showEclipticGridText()) {
                _grids_js__WEBPACK_IMPORTED_MODULE_15__.Grids.drawEclipticGridText(this.renderContext, 1, _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_eclipticGridColor());
            }
        }
        if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_showGalacticGrid()) {
            _grids_js__WEBPACK_IMPORTED_MODULE_15__.Grids.drawGalacticGrid(this.renderContext, 1, _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_galacticGridColor());
            if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_showGalacticGridText()) {
                _grids_js__WEBPACK_IMPORTED_MODULE_15__.Grids.drawGalacticGridText(this.renderContext, 1, _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_galacticGridColor());
            }
        }
        if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_showAltAzGrid()) {
            _grids_js__WEBPACK_IMPORTED_MODULE_15__.Grids.drawAltAzGrid(this.renderContext, 1, _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_altAzGridColor());
            if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_showAltAzGridText()) {
                _grids_js__WEBPACK_IMPORTED_MODULE_15__.Grids.drawAltAzGridText(this.renderContext, 1, _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_altAzGridColor());
            }
        }
        if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_showPrecessionChart()) {
            _grids_js__WEBPACK_IMPORTED_MODULE_15__.Grids.drawPrecessionChart(this.renderContext, 1, _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_precessionChartColor());
        }
        if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_showEcliptic()) {
            _grids_js__WEBPACK_IMPORTED_MODULE_15__.Grids.drawEcliptic(this.renderContext, 1, _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_eclipticColor());
            if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_showEclipticOverviewText()) {
                _grids_js__WEBPACK_IMPORTED_MODULE_15__.Grids.drawEclipticText(this.renderContext, 1, _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_eclipticColor());
            }
        }
        if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_showGrid()) {
            _grids_js__WEBPACK_IMPORTED_MODULE_15__.Grids.drawEquitorialGrid(this.renderContext, 1, _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_equatorialGridColor());
            if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_showEquatorialGridText()) {
                _grids_js__WEBPACK_IMPORTED_MODULE_15__.Grids.drawEquitorialGridText(this.renderContext, 1, _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_equatorialGridColor());
            }
        }
        if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_showConstellationBoundries()) {
            if (WWTControl.constellationsBoundries == null) {
                WWTControl.constellationsBoundries = _constellations_js__WEBPACK_IMPORTED_MODULE_13__.Constellations.create(
                    'Constellations',
                    _url_helpers_js__WEBPACK_IMPORTED_MODULE_6__.URLHelpers.singleton.engineAssetUrl('constellations.txt'),
                    true,   // "boundry"
                    false,  // "noInterpollation"
                    false,  // "resource"
                );
            }
            WWTControl.constellationsBoundries.draw(this.renderContext, _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_showConstellationSelection(), this.constellation, false);
        }
        if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_showConstellationLabels()) {
            _constellations_js__WEBPACK_IMPORTED_MODULE_13__.Constellations.drawConstellationNames(this.renderContext, 1, _color_js__WEBPACK_IMPORTED_MODULE_5__.Colors.get_yellow());
        }
    },

    _drawHoverText: function (RenderContext) {
        if (RenderContext.gl == null) {
            var ctx = RenderContext.device;
            ctx.save();
            ctx.fillStyle = 'White';
            ctx.font = '15px Arial';
            ctx.fillText(this._hoverText, this._hoverTextPoint.x, this._hoverTextPoint.y);
            ctx.restore();
        }
    },

    rAtoViewLng: function (ra) {
        return (((180 - (ra / 24 * 360) - 180) + 540) % 360) - 180;
    },

    _updateViewParameters: function () {
        if (this.renderContext.space && this._tracking && this._trackingObject != null) {
            if (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_galacticMode() && this.renderContext.space) {
                var gPoint = _coordinates_js__WEBPACK_IMPORTED_MODULE_14__.Coordinates.j2000toGalactic(this._trackingObject.get_RA() * 15, this._trackingObject.get_dec());
                this.renderContext.targetAlt = this.renderContext.alt = gPoint[1];
                this.renderContext.targetAz = this.renderContext.az = gPoint[0];
            }
            else if (this.renderContext.space && _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_localHorizonMode()) {
                var currentAltAz = _coordinates_js__WEBPACK_IMPORTED_MODULE_14__.Coordinates.equitorialToHorizon(_coordinates_js__WEBPACK_IMPORTED_MODULE_14__.Coordinates.fromRaDec(this._trackingObject.get_RA(), this._trackingObject.get_dec()), _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.get_location(), _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.get_now());
                this.renderContext.targetAlt = currentAltAz.get_alt();
                this.renderContext.targetAz = currentAltAz.get_az();
            }
            else {
                this.renderContext.viewCamera.lng = this.renderContext.targetCamera.lng = this.rAtoViewLng(this._trackingObject.get_RA());
                this.renderContext.viewCamera.lat = this.renderContext.targetCamera.lat = this._trackingObject.get_dec();
            }
        } else if (!this.get_solarSystemMode()) {
            this._tracking = false;
            this._trackingObject = null;
        }
        var oneMinusDragCoefficient = 1 - 0.8;
        var dc = 0.8;
        if (!this._tracking) {
            var minDelta = (this.renderContext.viewCamera.zoom / 4000);
            if (this.renderContext.viewCamera.zoom > 360) {
                minDelta = (360 / 40000);
            }
            if (this.renderContext.space && (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_localHorizonMode() || _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_galacticMode())) {
                if ((((Math.abs(this.renderContext.targetAlt - this.renderContext.alt) >= minDelta) | (Math.abs(this.renderContext.targetAz - this.renderContext.az) >= minDelta)) === 1)) {
                    this.renderContext.alt += (this.renderContext.targetAlt - this.renderContext.alt) / 10;
                    if (Math.abs(this.renderContext.targetAz - this.renderContext.az) > 170) {
                        if (this.renderContext.targetAz > this.renderContext.az) {
                            this.renderContext.az += (this.renderContext.targetAz - (360 + this.renderContext.az)) / 10;
                        }
                        else {
                            this.renderContext.az += ((360 + this.renderContext.targetAz) - this.renderContext.az) / 10;
                        }
                    }
                    else {
                        this.renderContext.az += (this.renderContext.targetAz - this.renderContext.az) / 10;
                    }
                    this.renderContext.az = ((this.renderContext.az + 720) % 360);
                }
            }
            else {
                if ((((Math.abs(this.renderContext.targetCamera.lat - this.renderContext.viewCamera.lat) >= minDelta) | (Math.abs(this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) >= minDelta)) === 1)) {
                    this.renderContext.viewCamera.lat += (this.renderContext.targetCamera.lat - this.renderContext.viewCamera.lat) / 10;
                    if (Math.abs(this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) > 170) {
                        if (this.renderContext.targetCamera.lng > this.renderContext.viewCamera.lng) {
                            this.renderContext.viewCamera.lng += (this.renderContext.targetCamera.lng - (360 + this.renderContext.viewCamera.lng)) / 10;
                        }
                        else {
                            this.renderContext.viewCamera.lng += ((360 + this.renderContext.targetCamera.lng) - this.renderContext.viewCamera.lng) / 10;
                        }
                    }
                    else {
                        this.renderContext.viewCamera.lng += (this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) / 10;
                    }
                    this.renderContext.viewCamera.lng = ((this.renderContext.viewCamera.lng + 720) % 360);
                }
                else {
                    if (this.renderContext.viewCamera.lat !== this.renderContext.targetCamera.lat || this.renderContext.viewCamera.lng !== this.renderContext.targetCamera.lng) {
                        this.renderContext.viewCamera.lat = this.renderContext.targetCamera.lat;
                        this.renderContext.viewCamera.lng = this.renderContext.targetCamera.lng;
                    }
                }
            }
        }
        this.renderContext.viewCamera.zoom = dc * this.renderContext.viewCamera.zoom + oneMinusDragCoefficient * this.renderContext.targetCamera.zoom;
        this.renderContext.viewCamera.rotation = dc * this.renderContext.viewCamera.rotation + oneMinusDragCoefficient * this.renderContext.targetCamera.rotation;
        this.renderContext.viewCamera.angle = dc * this.renderContext.viewCamera.angle + oneMinusDragCoefficient * this.renderContext.targetCamera.angle;
    },

    move: function (x, y) {
        // Emulate MoveView() in the Windows client -- rotate the x and y
        // offsets if the view is rotated. Our signs are the opposite of
        // the Windows client.

        var angle = Math.atan2(y, x);
        var distance = Math.sqrt(x * x + y * y);
        if (this.get_solarSystemMode() || this.get_planetLike()) {
            x = Math.cos(angle + this.renderContext.viewCamera.rotation) * distance;
            y = Math.sin(angle + this.renderContext.viewCamera.rotation) * distance;
        } else {
            x = Math.cos(angle - this.renderContext.viewCamera.rotation) * distance;
            y = Math.sin(angle - this.renderContext.viewCamera.rotation) * distance;
        }

        // Apply the rotated offsets. The following merges up GetPixelScale{X,Y}()
        // and MoveViewNative() of the Windows client.

        var scaleY = this.renderContext.get_fovScale() / 3600;
        if (this.renderContext.get_backgroundImageset().get_dataSetType() == _imageset_js__WEBPACK_IMPORTED_MODULE_16__.ImageSetType.solarSystem) {
            scaleY = 0.06;
        }
        var scaleX = scaleY / Math.max(0.2, Math.cos(this.renderContext.viewCamera.lat / 180 * Math.PI));
        if (!this.renderContext.get_backgroundImageset().get_dataSetType() || this.renderContext.get_backgroundImageset().get_dataSetType() === 1 || this.renderContext.get_backgroundImageset().get_dataSetType() == _imageset_js__WEBPACK_IMPORTED_MODULE_16__.ImageSetType.solarSystem) {
            scaleX *= 6.3;  // XXX don't know where this magic number comes from
            scaleY *= 6.3;
        }
        if (this.renderContext.space && (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_galacticMode() || _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_localHorizonMode())) {
            x = (_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_localHorizonMode()) ? -x : x;
            this.renderContext.targetAz += x * scaleX;
            this.renderContext.targetAz = ((this.renderContext.targetAz + 720) % 360);
            this.renderContext.targetAlt += y * scaleY;
            if (this.renderContext.targetAlt > 90) {
                this.renderContext.targetAlt = 90;
            }
            if (this.renderContext.targetAlt < -90) {
                this.renderContext.targetAlt = -90;
            }
        } else {
            this.renderContext.targetCamera.lng -= x * scaleX;
            this.renderContext.targetCamera.lng = ((this.renderContext.targetCamera.lng + 720) % 360);
            this.renderContext.targetCamera.lat += y * scaleY;
            if (this.renderContext.targetCamera.lat > 90) {
                this.renderContext.targetCamera.lat = 90;
            }
            if (this.renderContext.targetCamera.lat < -90) {
                this.renderContext.targetCamera.lat = -90;
            }
        }
        if (!_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_globalSettings().get_smoothPan()) {
            this.renderContext.viewCamera = this.renderContext.targetCamera.copy();
        }
        if (!!x && !!y) {
            this._tracking = false;
            this._trackingObject = null;
        }
    },

    zoom: function (factor) {
        this.renderContext.targetCamera.zoom *= factor;
        if (this.renderContext.targetCamera.zoom > this.get_zoomMax()) {
            this.renderContext.targetCamera.zoom = this.get_zoomMax();
        }
        if (!_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_globalSettings().get_smoothPan()) {
            this.renderContext.viewCamera = this.renderContext.targetCamera.copy();
        }
    },

    roll: function (angle) {
        this.renderContext.targetCamera.rotation += angle;
    },

    // Gesture events

    onGestureStart: function (e) {
        this._mouseDown = false;
        this._beginZoom = this.renderContext.viewCamera.zoom;
    },

    onGestureChange: function (e) {
        var g = e;
        this._mouseDown = false;
        this.renderContext.targetCamera.zoom = this.renderContext.viewCamera.zoom = Math.min(360, this._beginZoom * (1 / g.scale));
    },

    onGestureEnd: function (e) {
        var g = e;
        this._mouseDown = false;
    },

    // Touch events

    onTouchStart: function (e) {
        var ev = e;
        ev.preventDefault();
        ev.stopPropagation();
        this._lastX = ev.targetTouches[0].pageX;
        this._lastY = ev.targetTouches[0].pageY;
        if (ev.targetTouches.length === 2) {
            this._hasTwoTouches = true;
            return;
        }
        if (this.uiController != null) {
            var ee = new WWTElementEvent(this._lastX, this._lastY);
            if (this.uiController.mouseDown(this, ee)) {
                this._mouseDown = false;
                this._dragging = false;
                return;
            }
        }
        this._mouseDown = true;
    },

    onTouchMove: function (e) {
        var ev = e;
        if (this._hasTwoTouches) {
            var t0 = ev.touches[0];
            var t1 = ev.touches[1];
            var newRect = new Array(2);
            newRect[0] = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.create(t0.pageX, t0.pageY);
            newRect[1] = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.create(t1.pageX, t1.pageY);
            if (this._pinchingZoomRect[0] != null && this._pinchingZoomRect[1] != null) {
                var centerPoint = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.create(this.renderContext.width / 2, this.renderContext.height / 2);
                var delta1 = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.subtract(newRect[0], this._pinchingZoomRect[0]);
                var delta2 = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.subtract(newRect[1], this._pinchingZoomRect[1]);
                var radialDirection1 = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.subtract(this._pinchingZoomRect[0], centerPoint);
                var radialDirection2 = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.subtract(this._pinchingZoomRect[1], centerPoint);
                radialDirection1.normalize();
                radialDirection2.normalize();
                var radialDot1 = delta1.x * radialDirection1.x + delta1.y * radialDirection1.y;
                var radialDot2 = delta2.x * radialDirection2.x + delta2.y * radialDirection2.y;
                var radialComponent1 = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.create(radialDot1 * radialDirection1.x, radialDot1 * radialDirection1.y);
                var radialComponent2 = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.create(radialDot2 * radialDirection2.x, radialDot2 * radialDirection2.y);
                var angularComponent1 = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.subtract(delta1, radialComponent1);
                var angularComponent2 = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.subtract(delta2, radialComponent2);
                var radialMagnitude = radialComponent1.get_length() + radialComponent2.get_length();
                var angularMagnitude = angularComponent1.get_length() + angularComponent2.get_length();
                if (radialMagnitude >= angularMagnitude) {
                    var oldDist = this.getDistance(this._pinchingZoomRect[0], this._pinchingZoomRect[1]);
                    var newDist = this.getDistance(newRect[0], newRect[1]);
                    var ratio = oldDist / newDist;
                    this.zoom(ratio);
                }
                else {
                    var oldCenterDelta1 = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.subtract(this._pinchingZoomRect[0], centerPoint);
                    var oldCenterDelta2 = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.subtract(this._pinchingZoomRect[1], centerPoint);
                    var newCenterDelta1 = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.subtract(newRect[0], centerPoint);
                    var newCenterDelta2 = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.subtract(newRect[1], centerPoint);
                    var cross1 = this.crossProductZ(oldCenterDelta1, newCenterDelta1);
                    var cross2 = this.crossProductZ(oldCenterDelta2, newCenterDelta2);
                    var angle1 = Math.asin(cross1 / (oldCenterDelta1.get_length() * newCenterDelta1.get_length()));
                    var angle2 = Math.asin(cross2 / (oldCenterDelta2.get_length() * newCenterDelta2.get_length()));
                    if (angle1 * angle2 >= 0) {
                        var angle = angle1 + angle2;
                        if (this.get_planetLike() || this.get_solarSystemMode()) {
                            angle *= -1;
                        }
                        this.roll(angle);
                    }
                }
            }
            this._pinchingZoomRect = newRect;
            ev.stopPropagation();
            ev.preventDefault();
            return;
        }
        ev.preventDefault();
        ev.stopPropagation();
        if (this._mouseDown) {
            this._dragging = true;
            var curX = ev.targetTouches[0].pageX - this._lastX;
            var curY = ev.targetTouches[0].pageY - this._lastY;
            this.move(curX, curY);
            this._lastX = ev.targetTouches[0].pageX;
            this._lastY = ev.targetTouches[0].pageY;
        } else {
            //todo fix this to use syntheszed touch events.
            if (this.uiController != null) {
                if (this.uiController.mouseMove(this, e)) {
                    e.preventDefault();
                    e.stopPropagation();
                    return;
                }
            }
        }
    },

    onTouchEnd: function (e) {
        var ev = e;
        ev.preventDefault();
        ev.stopPropagation();
        this._pinchingZoomRect[0] = null;
        this._pinchingZoomRect[1] = null;
        if (this._hasTwoTouches) {
            if (ev.touches.length < 2) {
                this._hasTwoTouches = false;
            }
            return;
        }
        if (this.uiController != null) {
            var ee = new WWTElementEvent(this._lastX, this._lastY);
            if (this.uiController.mouseUp(this, ee)) {
                this._mouseDown = false;
                this._dragging = false;
                return;
            }
        }
        this._mouseDown = false;
        this._dragging = false;
    },

    // Pointer events

    onPointerDown: function (e) {
        var pe = e;
        var index = 0;
        var evt = arguments[0], cnv = arguments[0].target; if (cnv.setPointerCapture) { cnv.setPointerCapture(evt.pointerId); } else if (cnv.msSetPointerCapture) { cnv.msSetPointerCapture(evt.pointerId); }

        // Check for this pointer already being in the list because as of July
        // 2020, Chrome/Mac sometimes fails to deliver the pointerUp event.

        if (this._pointerIds[0] === pe.pointerId) {
            index = 0;
        } else if (this._pointerIds[1] === pe.pointerId) {
            index = 1;
        } else if (!this._pointerIds[0]) {
            index = 0;
        } else if (!this._pointerIds[1]) {
            index = 1;
        } else {
            return;  // only attempt to track two pointers at once
        }
        this._pointerIds[index] = pe.pointerId;
        this._pinchingZoomRect[index] = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.create(e.offsetX, e.offsetY);
    },

    onPointerMove: function (e) {
        var pe = e;
        var index = 0;

        // Our pointerIds infrastructure is meant to track adjustments during a
        // pinch motion. However, as seen in Firefox circa v81 on Linux and
        // Android, in some cases the browser can just *lie* and swap pointerIds
        // for the two fingers during a pinch gesture, leading to catastrophic
        // failures. Therefore, ignore the pointerId information and infer which
        // location is being updated from whichever change is smaller.

        if (this._pointerIds[0] === pe.pointerId) {
            index = 0;
        } else if (this._pointerIds[1] === pe.pointerId) {
            index = 1;
        } else {
            return;
        }
        if (this._pinchingZoomRect[0] != null && this._pinchingZoomRect[1] != null) {
            var oldDist = this.getDistance(this._pinchingZoomRect[0], this._pinchingZoomRect[1]);
            var newRect = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.create(e.offsetX, e.offsetY);
            var newDist0 = this.getDistance(newRect, this._pinchingZoomRect[0]);
            var ratio0 = oldDist / newDist0;
            var abslog0 = Math.abs(Math.log(ratio0));
            if (!isFinite(abslog0)) {
                abslog0 = 1000;
            }
            var newDist1 = this.getDistance(newRect, this._pinchingZoomRect[1]);
            var ratio1 = oldDist / newDist1;
            var abslog1 = Math.abs(Math.log(ratio1));
            if (!isFinite(abslog1)) {
                abslog1 = 1000;
            }
            if (abslog1 < abslog0) {
                this._pinchingZoomRect[0] = newRect;
                this.zoom(ratio1);
            }
            else {
                this._pinchingZoomRect[1] = newRect;
                this.zoom(ratio0);
            }
        } else {
            // Before two fingers are available, just trust.
            this._pinchingZoomRect[index] = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.create(e.offsetX, e.offsetY);
        }

        // There doesn't seem to be a particular reason to call these
        // but there also doesn't seem to be a reason NOT to
        // and doing so hasn't caused any issues to this point
        e.stopPropagation();
        e.preventDefault();
    },

    // NOTE! As of July 2020, Chrome on Macs seems to sometimes fail to
    // deliver this event. So our pinch-detection code needs to be robust to
    // that.
    onPointerUp: function (e) {
        var pe = e;

        // The -2 here is intended to indicate "no pointer ID"
        // with the hope being that no browser will use this value.
        // Note that -1 is reserved by the W3 spec for
        // "events generated by something other than a pointing device"
        // which is why we don't use -1
        // (https://www.w3.org/TR/pointerevents3/#pointerevent-interface)

        if (this._pointerIds[0] === pe.pointerId) {
            this._pointerIds[0] = -2;
            this._pinchingZoomRect[0] = null;
        }

        if (this._pointerIds[1] === pe.pointerId) {
            this._pointerIds[1] = -2;
            this._pinchingZoomRect[1] = null;
        }
    },

    // Mouse events

    onMouseDown: function (e) {
        document.addEventListener('mousemove', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onMouseMove', this), false);
        document.addEventListener('mouseup', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onMouseUp', this), false);
        if (this.uiController != null) {
            if (this.uiController.mouseDown(this, e)) {
                return;
            }
        }
        this._mouseDown = true;
        this._lastX = _util_js__WEBPACK_IMPORTED_MODULE_7__.Mouse.offsetX(this.canvas, e);
        this._lastY = _util_js__WEBPACK_IMPORTED_MODULE_7__.Mouse.offsetY(this.canvas, e);
    },

    onMouseMove: function (e) {
        this._lastMouseMove = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now();
        this._hoverTextPoint = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.create(_util_js__WEBPACK_IMPORTED_MODULE_7__.Mouse.offsetX(this.canvas, e), _util_js__WEBPACK_IMPORTED_MODULE_7__.Mouse.offsetY(this.canvas, e));
        this._hoverText = '';
        if (this._mouseDown) {
            e.preventDefault();
            e.stopPropagation();
            this._moved = true;
            if (e.ctrlKey) {
                this._tilt(_util_js__WEBPACK_IMPORTED_MODULE_7__.Mouse.offsetX(this.canvas, e) - this._lastX, _util_js__WEBPACK_IMPORTED_MODULE_7__.Mouse.offsetY(this.canvas, e) - this._lastY);
            }
            else {
                this.move(_util_js__WEBPACK_IMPORTED_MODULE_7__.Mouse.offsetX(this.canvas, e) - this._lastX, _util_js__WEBPACK_IMPORTED_MODULE_7__.Mouse.offsetY(this.canvas, e) - this._lastY);
            }
            this._lastX = _util_js__WEBPACK_IMPORTED_MODULE_7__.Mouse.offsetX(this.canvas, e);
            this._lastY = _util_js__WEBPACK_IMPORTED_MODULE_7__.Mouse.offsetY(this.canvas, e);
        } else {
            if (this.uiController != null) {
                if (this.uiController.mouseMove(this, e)) {
                    e.preventDefault();
                    e.stopPropagation();
                    return;
                }
            }
        }
    },

    onMouseUp: function (e) {
        document.removeEventListener('mousemove', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onMouseMove', this), false);
        document.removeEventListener('mouseup', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onMouseUp', this), false);
        if (this.uiController != null) {
            if (this.uiController.mouseUp(this, e)) {
                this._mouseDown = false;
                e.preventDefault();
                return;
            }
        }
        if (this._mouseDown && !this._moved) {
            var raDecDown = this.getCoordinatesForScreenPoint(_util_js__WEBPACK_IMPORTED_MODULE_7__.Mouse.offsetX(this.canvas, e), _util_js__WEBPACK_IMPORTED_MODULE_7__.Mouse.offsetY(this.canvas, e));
            if (!this._annotationclicked(raDecDown.x, raDecDown.y, _util_js__WEBPACK_IMPORTED_MODULE_7__.Mouse.offsetX(this.canvas, e), _util_js__WEBPACK_IMPORTED_MODULE_7__.Mouse.offsetY(this.canvas, e))) {
                _data_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalScriptInterface._fireClick(raDecDown.x, raDecDown.y);
            }
        }
        this._mouseDown = false;
        this._moved = false;
    },

    // WheelEvent is a WWT-specific name that we use to abstract across the
    // different wheel-motion events that browsers provide: "wheel",
    // "mousewheel", "DOMMouseScroll".
    onMouseWheel: function (e) {
        var ev = e;
        var delta;
        if (!!ev.deltaY) {
            delta = -ev.deltaY;
        } else if (!!ev.detail) {
            delta = ev.detail * -1;
        } else {
            delta = ev.wheelDelta;
        }
        if (delta > 0) {
            this.zoom(0.9);
        } else {
            this.zoom(1.1);
        }
        e.stopPropagation();
        e.preventDefault();
    },

    onDoubleClick: function (e) {
        WWTControl.showDataLayers = true;
    },

    onKeyDown: function (e) {
        if (this.uiController != null) {
            this.uiController.keyDown(this, e);
        }
    },

    getDistance: function (a, b) {
        var x;
        var y;
        x = a.x - b.x;
        y = a.y - b.y;
        return Math.sqrt(x * x + y * y);
    },

    crossProductZ: function (a, b) {
        return a.x * b.y - a.y * b.x;
    },

    onContextMenu: function (e) {
        e.preventDefault();
        e.stopPropagation();
    },

    _tilt: function (x, y) {
        this.renderContext.targetCamera.rotation += x * 0.001;
        this.renderContext.targetCamera.angle += y * 0.001;
        if (this.renderContext.targetCamera.angle < -1.52) {
            this.renderContext.targetCamera.angle = -1.52;
        }
        if (this.renderContext.targetCamera.angle > 0) {
            this.renderContext.targetCamera.angle = 0;
        }
    },

    getCoordinatesForScreenPoint: function (x, y) {
        var pt = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.create(x, y);
        var PickRayDir = this.transformPickPointToWorldSpace(pt, this.renderContext.width, this.renderContext.height);
        return _coordinates_js__WEBPACK_IMPORTED_MODULE_14__.Coordinates.cartesianToSphericalSky(PickRayDir);
    },

    transformPickPointToWorldSpace: function (ptCursor, backBufferWidth, backBufferHeight) {
        var vPickRayDir = new _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector3d();

        // It is possible for this function to be called before the RenderContext is
        // set up, in which case the Projection is null. In that case we'll leave the
        // vector at its 0,0,0 default.

        if (this.renderContext.get_projection() != null) {
            var v = new _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector3d();
            v.x = (((2 * ptCursor.x) / backBufferWidth) - 1) / this.renderContext.get_projection().get_m11();
            v.y = (((2 * ptCursor.y) / backBufferHeight) - 1) / this.renderContext.get_projection().get_m22();
            v.z = 1;
            var m = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Matrix3d.multiplyMatrix(this.renderContext.get_view(), this.renderContext.get_world());

            m.invert();

            // Transform the screen space pick ray into 3D space
            vPickRayDir.x = v.x * m.get_m11() + v.y * m.get_m21() + v.z * m.get_m31();
            vPickRayDir.y = v.x * m.get_m12() + v.y * m.get_m22() + v.z * m.get_m32();
            vPickRayDir.z = v.x * m.get_m13() + v.y * m.get_m23() + v.z * m.get_m33();
            vPickRayDir.normalize();
        }
        return vPickRayDir;
    },

    transformWorldPointToPickSpace: function (worldPoint, backBufferWidth, backBufferHeight) {
        var m = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Matrix3d.multiplyMatrix(this.renderContext.get_view(), this.renderContext.get_world());
        m.invert();
        var p = new _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d();
        var vz = worldPoint.x * m.get_m31() + worldPoint.y * m.get_m32() + worldPoint.z * m.get_m33();
        var vx = (worldPoint.x * m.get_m11() + worldPoint.y * m.get_m12() + worldPoint.z * m.get_m13()) / vz;
        var vy = (worldPoint.x * m.get_m21() + worldPoint.y * m.get_m22() + worldPoint.z * m.get_m23()) / vz;
        p.x = Math.round((1 + this.renderContext.get_projection().get_m11() * vx) * (backBufferWidth / 2));
        p.y = Math.round((1 + this.renderContext.get_projection().get_m22() * vy) * (backBufferHeight / 2));
        return p;
    },

    getScreenPointForCoordinates: function (ra, dec) {
        var pt = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector2d.create(ra, dec);
        var cartesian = _coordinates_js__WEBPACK_IMPORTED_MODULE_14__.Coordinates.sphericalSkyToCartesian(pt);
        var result = this.transformWorldPointToPickSpace(cartesian, this.renderContext.width, this.renderContext.height);
        return result;
    },

    // Note that due to limitations of ScriptSharp, this method was public even
    // though it should really have been private.
    setup: function (canvas, startLat, startLng, startZoom) {
        var $this = this;

        window.addEventListener('contextmenu', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onContextMenu', this), false);
        document.body.addEventListener('keydown', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onKeyDown', this), false);
        canvas.addEventListener('dblclick', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onDoubleClick', this), false);
        canvas.addEventListener('mousedown', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onMouseDown', this), false);
        canvas.addEventListener('wheel', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onMouseWheel', this), false);
        canvas.addEventListener('mousewheel', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onMouseWheel', this), false);
        canvas.addEventListener('DOMMouseScroll', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onMouseWheel', this), false);  // old Firefox
        canvas.addEventListener('touchstart', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onTouchStart', this), false);
        canvas.addEventListener('touchmove', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onTouchMove', this), false);
        canvas.addEventListener('touchend', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onTouchEnd', this), false);
        canvas.addEventListener('gesturechange', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onGestureChange', this), false);
        canvas.addEventListener('gesturestart', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onGestureStart', this), false);
        canvas.addEventListener('gestureend', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onGestureEnd', this), false);
        canvas.addEventListener('pointerdown', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onPointerDown', this), false);
        canvas.addEventListener('pointermove', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onPointerMove', this), false);
        canvas.addEventListener('pointerup', _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('onPointerUp', this), false);
        this.renderContext.viewCamera.lat = startLat;
        this.renderContext.viewCamera.lng = startLng;
        this.renderContext.viewCamera.zoom = startZoom;
        this.renderContext.targetCamera = this.renderContext.viewCamera.copy();
        if (this.renderContext.gl == null) {
            this._foregroundCanvas = document.createElement('canvas');
            this._foregroundCanvas.width = canvas.width;
            this._foregroundCanvas.height = canvas.height;
            this._fgDevice = this._foregroundCanvas.getContext('2d');
        }
        if (this.freestandingMode) {
            setTimeout(function () {
                $this._setupComplete();
            }, 0);
        } else {
            // To line up with Windows client history, this uses `X=` when `W=`
            // would be more appropriate.
            (0,_data_globals_js__WEBPACK_IMPORTED_MODULE_3__.loadWtmlFile)(_url_helpers_js__WEBPACK_IMPORTED_MODULE_6__.URLHelpers.singleton.coreDynamicUrl('wwtweb/catalog.aspx?X=ImageSets6'), _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_setupComplete', this), true);
        }
    },

    _setupComplete: function () {
        _data_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalScriptInterface._fireReady();
    },

    gotoRADecZoom: function (ra, dec, zoom, instant, roll) {
        this._tracking = false;
        this._trackingObject = null;
        this.gotoTargetFull(
            false, // noZoom
            instant,
            this._cameraParametersFromRADecZoom(ra, dec, zoom, roll),
            _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext.get_foregroundImageset(),
            _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext.get_backgroundImageset()
        );
    },

    _cameraParametersFromRADecZoom: function (ra, dec, zoom, roll) {
        while (ra > 24) {
            ra -= 24;
        }
        while (ra < 0) {
            ra += 24;
        }
        dec = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.DoubleUtilities.clamp(dec, -90, 90);
        zoom = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.DoubleUtilities.clamp(zoom, this.get_zoomMin(), this.get_zoomMax());
        var rotation = (roll == null) ? _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext.viewCamera.rotation : roll;
        var cameraParams = _camera_parameters_js__WEBPACK_IMPORTED_MODULE_12__.CameraParameters.create(dec, _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext.rAtoViewLng(ra), zoom, rotation, _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext.viewCamera.angle, _render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext.viewCamera.opacity);
        return cameraParams;
    },

    timeToRADecZoom: function (ra, dec, zoom, roll) {
        var cameraParams = this._cameraParametersFromRADecZoom(ra, dec, zoom, roll);
        return this.timeToTargetFull(cameraParams, false);
    },

    get_solarSystemMode: function () {
        if (this.renderContext.get_backgroundImageset() == null) {
            return false;
        }
        return this.renderContext.get_backgroundImageset().get_dataSetType() == _imageset_js__WEBPACK_IMPORTED_MODULE_16__.ImageSetType.solarSystem;
    },

    gotoTarget: function (place, noZoom, instant, trackObject) {
        if (place == null) {
            return;
        }
        if ((trackObject && this.get_solarSystemMode())) {
            if ((place.get_classification() === 536870912 && place.get_type() !== 4) || (place.get_classification() === 1) || (place.get_classification() === 1048576) && place.get_distance() > 0) {
                var target = 65536;
                if (place.get_classification() === 1 || place.get_classification() === 1048576) {
                    target = 20;
                }
                else {
                    try {
                        if (place.get_target() !== 65536) {
                            target = place.get_target();
                        }
                        else {
                            target = _planets_js__WEBPACK_IMPORTED_MODULE_19__.Planets.getPlanetIDFromName(place.get_name());
                        }
                    }
                    catch ($e1) {
                    }
                }
                if (target !== 65536) {
                    this._trackingObject = place;
                    if (target === this._solarSystemTrack && !(place.get_classification() === 1 || place.get_classification() === 1048576)) {
                        this.gotoTarget3(place.get_camParams(), noZoom, instant);
                        return;
                    }
                    var jumpTime = 4;
                    if (target === 20) {
                        jumpTime = 17;
                    }
                    else {
                        jumpTime += 13 * (101 - _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_solarSystemScale()) / 100;
                    }
                    if (instant) {
                        jumpTime = 1;
                    }
                    var camTo = this.renderContext.viewCamera.copy();
                    camTo.targetReferenceFrame = '';
                    camTo.target = target;
                    var zoom = 10;
                    if (target === 20) {
                        if (place.get_classification() === _place_js__WEBPACK_IMPORTED_MODULE_18__.Classification.galaxy) {
                            zoom = 1404946007758;
                        }
                        else {
                            zoom = 63239.6717 * 100;
                        }

                        // Star or something outside of SS
                        var vect = _coordinates_js__WEBPACK_IMPORTED_MODULE_14__.Coordinates.raDecTo3dAu(place.get_RA(), place.get_dec(), place.get_distance());
                        var ecliptic = _coordinates_js__WEBPACK_IMPORTED_MODULE_14__.Coordinates.meanObliquityOfEcliptic(_space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.get_jNow()) / 180 * Math.PI;
                        vect.rotateX(ecliptic);
                        camTo.viewTarget = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector3d.negate(camTo.viewTarget);
                    }
                    else {
                        camTo.viewTarget = _planets_js__WEBPACK_IMPORTED_MODULE_19__.Planets.getPlanet3dLocationJD(target, _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.getJNowForFutureTime(jumpTime));
                        switch (target) {
                            case 0:
                                zoom = 0.6;
                                break;
                            case 1:
                                zoom = 0.0004;
                                break;
                            case 2:
                                zoom = 0.0004;
                                break;
                            case 3:
                                zoom = 0.0004;
                                break;
                            case 4:
                                zoom = 0.007;
                                break;
                            case 5:
                                zoom = 0.007;
                                break;
                            case 6:
                                zoom = 0.004;
                                break;
                            case 7:
                                zoom = 0.004;
                                break;
                            case 8:
                                zoom = 0.0004;
                                break;
                            case 9:
                                zoom = 0.0004;
                                break;
                            case 10:
                                zoom = 0.0004;
                                break;
                            case 11:
                                zoom = 0.0004;
                                break;
                            case 12:
                                zoom = 0.0004;
                                break;
                            case 13:
                                zoom = 0.0004;
                                break;
                            case 19:
                                zoom = 0.0004;
                                break;
                            case 20:
                                zoom = 10;
                                break;
                            default:
                                break;
                        }
                        zoom = zoom * _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_solarSystemScale();
                    }
                    var fromParams = this.renderContext.viewCamera.copy();
                    if (this._solarSystemTrack === 20 && !_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.emptyString(this.renderContext.get_trackingFrame())) {
                        fromParams = this.renderContext.customTrackingParams;
                        this.renderContext.set_trackingFrame('');
                    }
                    camTo.zoom = zoom;
                    var toVector = camTo.viewTarget;
                    toVector.subtract(fromParams.viewTarget);
                    if (place.get_classification() === 1) {
                        toVector = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector3d.negate(toVector);
                    }
                    if (!!toVector.length()) {
                        var raDec = toVector.toRaDec();
                        if (target === 20) {
                            camTo.lat = -raDec.y;
                        }
                        else {
                            camTo.lat = raDec.y;
                        }
                        camTo.lng = raDec.x * 15 - 90;
                    }
                    else {
                        camTo.lat = this.renderContext.viewCamera.lat;
                        camTo.lng = this.renderContext.viewCamera.lng;
                    }
                    if (target !== _camera_parameters_js__WEBPACK_IMPORTED_MODULE_12__.SolarSystemObjects.custom) {
                        // replace with planet surface
                        camTo.viewTarget = _planets_js__WEBPACK_IMPORTED_MODULE_19__.Planets.getPlanetTargetPoint(target, camTo.lat, camTo.lng, _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.getJNowForFutureTime(jumpTime));
                    }
                    var solarMover = new _view_mover_js__WEBPACK_IMPORTED_MODULE_27__.ViewMoverKenBurnsStyle(fromParams, camTo, jumpTime, _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.get_now(), _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.getTimeForFutureTime(jumpTime), 3);
                    solarMover.fastDirectionMove = true;
                    this.set__mover(solarMover);
                    return;
                }
            }
        }
        this._tracking = false;
        this._trackingObject = null;
        var camParams = place.get_camParams().copy();
        if (this.renderContext.get_backgroundImageset() != null && place.get_type() !== this.renderContext.get_backgroundImageset().get_dataSetType()) {
            this.renderContext.targetCamera = place.get_camParams().copy();
            this.renderContext.viewCamera = this.renderContext.targetCamera.copy();
            this.renderContext.set_backgroundImageset(this.getDefaultImageset(place.get_type(), 3));
            instant = true;
        } else if (this.get_solarSystemMode() && place.get_target() !== this._solarSystemTrack) {
            this.renderContext.targetCamera = place.get_camParams().copy();
            this.renderContext.viewCamera = this.renderContext.targetCamera.copy();
            this._solarSystemTrack = place.get_target();
            instant = true;
        }
        if (place.get_classification() === 128) {
            camParams.zoom = this.get_zoomMax();
            this.gotoTargetFull(false, instant, camParams, null, null);
        } else {
            this._solarSystemTrack = place.get_target();
            this.gotoTargetFull(noZoom, instant, camParams, place.get_studyImageset(), place.get_backgroundImageset());
            if (trackObject) {
                this._tracking = true;
                this._trackingObject = place;
            }
        }
    },

    gotoTarget3: function (camParams, noZoom, instant) {
        this._tracking = false;
        this._trackingObject = null;
        this.gotoTargetFull(noZoom, instant, camParams, this.renderContext.get_foregroundImageset(), this.renderContext.get_backgroundImageset());
    },

    _tooCloseForSlewMove: function (cameraParams) {
        return Math.abs(this.renderContext.viewCamera.lat - cameraParams.lat) < 1E-12 && Math.abs(this.renderContext.viewCamera.lng - cameraParams.lng) < 1E-12 && Math.abs(this.renderContext.viewCamera.zoom - cameraParams.zoom) < 1E-12 && Math.abs(this.renderContext.viewCamera.rotation - cameraParams.rotation) < 1E-12;
    },

    gotoTargetFull: function (noZoom, instant, cameraParams, studyImageSet, backgroundImageSet) {
        this._tracking = false;
        this._trackingObject = null;
        this._targetStudyImageset = studyImageSet;
        this._targetBackgroundImageset = backgroundImageSet;
        if (noZoom) {
            cameraParams.zoom = this.renderContext.viewCamera.zoom;
            cameraParams.angle = this.renderContext.viewCamera.angle;
            cameraParams.rotation = this.renderContext.viewCamera.rotation;
        } else {
            if (cameraParams.zoom === -1 || !cameraParams.zoom) {
                if (this.renderContext.space) {
                    cameraParams.zoom = 1.40625;
                }
                else {
                    cameraParams.zoom = 0.09;
                }
            }
        }
        if (instant || this._tooCloseForSlewMove(cameraParams)) {
            this.set__mover(null);
            this.renderContext.targetCamera = cameraParams.copy();
            this.renderContext.viewCamera = this.renderContext.targetCamera.copy();
            if (this.renderContext.space && _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_galacticMode()) {
                var gPoint = _coordinates_js__WEBPACK_IMPORTED_MODULE_14__.Coordinates.j2000toGalactic(this.renderContext.viewCamera.get_RA() * 15, this.renderContext.viewCamera.get_dec());
                this.renderContext.targetAlt = this.renderContext.alt = gPoint[1];
                this.renderContext.targetAz = this.renderContext.az = gPoint[0];
            }
            else if (this.renderContext.space && _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_active().get_localHorizonMode()) {
                var currentAltAz = _coordinates_js__WEBPACK_IMPORTED_MODULE_14__.Coordinates.equitorialToHorizon(_coordinates_js__WEBPACK_IMPORTED_MODULE_14__.Coordinates.fromRaDec(this.renderContext.viewCamera.get_RA(), this.renderContext.viewCamera.get_dec()), _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.get_location(), _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.get_now());
                this.renderContext.targetAlt = this.renderContext.alt = currentAltAz.get_alt();
                this.renderContext.targetAz = this.renderContext.az = currentAltAz.get_az();
            }
            this._mover_Midpoint();
        } else {
            this.set__mover(_view_mover_js__WEBPACK_IMPORTED_MODULE_27__.ViewMoverSlew.create(this.renderContext.viewCamera, cameraParams));
            this.get__mover().set_midpoint(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.bind('_mover_Midpoint', this));
        }
    },

    _slewTimeBetweenTargets: function (from, to) {
        var mover = _view_mover_js__WEBPACK_IMPORTED_MODULE_27__.ViewMoverSlew.create(from, to);
        return mover.get_moveTime();
    },

    timeToTargetFull: function (cameraParams, noZoom) {
        if (noZoom) {
            cameraParams.zoom = this.renderContext.viewCamera.zoom;
            cameraParams.angle = this.renderContext.viewCamera.angle;
            cameraParams.rotation = this.renderContext.viewCamera.rotation;
        }
        if (this._tooCloseForSlewMove(cameraParams)) {
            return 0;
        }
        return this._slewTimeBetweenTargets(_render_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalRenderContext.viewCamera, cameraParams);
    },

    _freezeView: function () {
        this.renderContext.viewCamera = this.renderContext.targetCamera.copy();
        this.set__mover(null);
    },

    get__mover: function () {
        return this.renderContext.viewMover;
    },

    set__mover: function (value) {
        this.renderContext.viewMover = value;
        return value;
    },

    fadeInImageSet: function (newImageSet) {
        if (this.renderContext.get_backgroundImageset() != null && newImageSet.get_dataSetType() !== this.renderContext.get_backgroundImageset().get_dataSetType()) {
            _tile_cache_js__WEBPACK_IMPORTED_MODULE_24__.TileCache.purgeQueue();
            _tile_cache_js__WEBPACK_IMPORTED_MODULE_24__.TileCache.clearCache();
        }
        this.renderContext.set_backgroundImageset(newImageSet);
    },

    _mover_Midpoint: function () {
        if ((this._targetStudyImageset != null && this.renderContext.get_foregroundImageset() == null) || (this.renderContext.get_foregroundImageset() != null && !this.renderContext.get_foregroundImageset().equals(this._targetStudyImageset))) {
            this.renderContext.set_foregroundImageset(this._targetStudyImageset);
        }
        if (this.renderContext.get_backgroundImageset() != null && (this._targetBackgroundImageset != null && !this.renderContext.get_backgroundImageset().equals(this._targetBackgroundImageset))) {
            if (this._targetBackgroundImageset != null && this._targetBackgroundImageset.get_generic()) {
                this.fadeInImageSet(this._getRealImagesetFromGeneric(this._targetBackgroundImageset));
            }
            else {
                this.fadeInImageSet(this._targetBackgroundImageset);
            }
        }
    },

    getDefaultImageset: function (imageSetType, bandPass) {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(WWTControl.imageSets);
        while ($enum1.moveNext()) {
            var imageset = $enum1.current;
            if (imageset.get_defaultSet() && imageset.get_bandPass() === bandPass && imageset.get_dataSetType() === imageSetType) {
                return imageset;
            }
        }
        var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(WWTControl.imageSets);
        while ($enum2.moveNext()) {
            var imageset = $enum2.current;
            if (imageset.get_bandPass() === bandPass && imageset.get_dataSetType() === imageSetType) {
                return imageset;
            }
        }
        var $enum3 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(WWTControl.imageSets);
        while ($enum3.moveNext()) {
            var imageset = $enum3.current;
            if (imageset.get_dataSetType() === imageSetType) {
                return imageset;
            }
        }
        return WWTControl.imageSets[0];
    },

    _getRealImagesetFromGeneric: function (generic) {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(WWTControl.imageSets);
        while ($enum1.moveNext()) {
            var imageset = $enum1.current;
            if (imageset.get_defaultSet() && imageset.get_bandPass() === generic.get_bandPass() && imageset.get_dataSetType() === generic.get_dataSetType()) {
                return imageset;
            }
        }
        var $enum2 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(WWTControl.imageSets);
        while ($enum2.moveNext()) {
            var imageset = $enum2.current;
            if (imageset.get_bandPass() === generic.get_bandPass() && imageset.get_dataSetType() === generic.get_dataSetType()) {
                return imageset;
            }
        }
        return WWTControl.imageSets[0];
    },

    _hideUI: function (p) { },

    createTour: function (name) {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(this.uiController, _tours_tour_player_js__WEBPACK_IMPORTED_MODULE_28__.TourPlayer)) {
            var player = this.uiController;
            player.stop(false);
        }
        this.tour = new _tours_tour_document_js__WEBPACK_IMPORTED_MODULE_30__.TourDocument();
        this.tour.set_title(name);
        this.setupTour();
        this.tour.set_editMode(true);
        return this.tour;
    },

    setupTour: function () {
        this.tourEdit = new _tours_tour_edit_js__WEBPACK_IMPORTED_MODULE_31__.TourEditTab();
        this.tourEdit.set_tour(this.tour);
        this.tour.set_currentTourstopIndex(0);
        this.tour.set_editMode(false);
        this.uiController = this.tourEdit.tourEditorUI;
    },

    loadTour: function (url) {
        var $this = this;

        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(this.uiController, _tours_tour_player_js__WEBPACK_IMPORTED_MODULE_28__.TourPlayer)) {
            var player = this.uiController;
            player.stop(false);
        }
        this.tour = _tours_tour_document_js__WEBPACK_IMPORTED_MODULE_30__.TourDocument.fromUrl(url, function () {
            $this.setupTour();
            var player = new _tours_tour_player_js__WEBPACK_IMPORTED_MODULE_28__.TourPlayer();
            player.set_tour($this.tour);
            _data_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalWWTControl.uiController = player;
            _data_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalScriptInterface._fireTourReady();
        });
    },

    playTour: function (url) {
        var $this = this;

        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(this.uiController, _tours_tour_player_js__WEBPACK_IMPORTED_MODULE_28__.TourPlayer)) {
            var player = this.uiController;
            player.stop(false);
        }
        this.tour = _tours_tour_document_js__WEBPACK_IMPORTED_MODULE_30__.TourDocument.fromUrl(url, function () {
            $this.setupTour();
            $this.tourEdit.playNow(true);  // fromStart
            _data_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalScriptInterface._fireTourReady();
        });
    },

    playCurrentTour: function () {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(this.uiController, _tours_tour_player_js__WEBPACK_IMPORTED_MODULE_28__.TourPlayer)) {
            var player = this.uiController;
            player.play();
        }
    },

    pauseCurrentTour: function () {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(this.uiController, _tours_tour_player_js__WEBPACK_IMPORTED_MODULE_28__.TourPlayer)) {
            var player = this.uiController;
            player.pauseTour();
        }
    },

    stopCurrentTour: function () {
        if (_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.canCast(this.uiController, _tours_tour_player_js__WEBPACK_IMPORTED_MODULE_28__.TourPlayer)) {
            var player = this.uiController;
            player.stop(false);
        }
    },

    _closeTour: function () { },

    getImagesetByName: function (name) {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(WWTControl.imageSets);
        while ($enum1.moveNext()) {
            var imageset = $enum1.current;
            if (imageset.get_name().toLowerCase().indexOf(name.toLowerCase()) > -1) {
                return imageset;
            }
        }
        return null;
    },

    getImageSetByUrl: function (url) {
        var $enum1 = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.enumerate(WWTControl.imageSets);
        while ($enum1.moveNext()) {
            var imageset = $enum1.current;
            if (imageset.get_url() === url) {
                return imageset;
            }
        }
        return null;
    },

    setBackgroundImageByName: function (name) {
        var newBackground = this.getImagesetByName(name);
        if (newBackground != null) {
            this.renderContext.set_backgroundImageset(newBackground);
        }
    },

    setForegroundImageByName: function (name) {
        var newForeground = this.getImagesetByName(name);
        if (newForeground != null) {
            this.renderContext.set_foregroundImageset(newForeground);
        }
    },

    addCatalogHips: function (catalogHips) {
        this.renderContext.addCatalogHips(catalogHips, null);
    },

    addCatalogHipsByName: function (name) {
        this.addCatalogHipsByNameWithCallback(name, null);
    },

    addCatalogHipsByNameWithCallback: function (name, onLoad) {
        var catalogHips = this.getImagesetByName(name);
        if (catalogHips != null) {
            this.renderContext.addCatalogHips(catalogHips, onLoad);
        }
    },

    removeCatalogHipsByName: function (name) {
        var catalogHips = this.getImagesetByName(name);
        if (catalogHips != null) {
            this.renderContext.removeCatalogHips(catalogHips);
        }
    },

    getCatalogHipsByName: function (name) {
        return this.renderContext.getCatalogHipsByName(name);
    },

    getCatalogHipsDataInView: function (name, limit, onComplete) {
        var catalogHips = this.getImagesetByName(name);
        if (catalogHips != null) {
            this.renderContext.getCatalogHipsDataInView(catalogHips, limit, onComplete);
        }
    },

    setCutsForFits: function (imagesetName, min, max) {
        var imageset = this.getImagesetByName(imagesetName);
        if (imageset != null && imageset.get_fitsProperties() != null) {
            imageset.get_fitsProperties().lowerCut = min;
            imageset.get_fitsProperties().upperCut = max;
        } else {
            console.log(imagesetName + ' not found');
        }
    },

    setColorMapForFits: function (imagesetName, colorMapName) {
        var imageset = this.getImagesetByName(imagesetName);
        if (imageset != null && imageset.get_fitsProperties() != null) {
            imageset.get_fitsProperties().colorMapName = colorMapName;
        } else {
            console.log(imagesetName + ' not found');
        }
    },

    setScaleTypeForFits: function (imagesetName, scaleType) {
        var imageset = this.getImagesetByName(imagesetName);
        if (imageset != null && imageset.get_fitsProperties() != null) {
            imageset.get_fitsProperties().scaleType = scaleType;
        } else {
            console.log(imagesetName + ' not found');
        }
    },

    _drawCrosshairs: function (context) {
        if (context.gl == null) {
            var ctx = context.device;
            ctx.save();
            ctx.beginPath();
            ctx.strokeStyle = _settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_current().get_crosshairsColor();
            ctx.lineWidth = 2;
            var x = context.width / 2, y = context.height / 2;
            var halfLength = 5;
            ctx.moveTo(x, y + halfLength);
            ctx.lineTo(x, y - halfLength);
            ctx.moveTo(x + halfLength, y);
            ctx.lineTo(x - halfLength, y);
            ctx.stroke();
            ctx.restore();
        } else {
            if (this._crossHairs == null) {
                // These coordinates are in clip space where the shape of the
                // viewport is 1x1, so to get the crosshairs to appear square on
                // the screen we have to apply the aspect ratio.
                var halfHeight = 0.03;
                var halfWidth = halfHeight * context.height / context.width;
                this._crossHairs = new _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_9__.SimpleLineList();
                this._crossHairs.set_depthBuffered(false);
                this._crossHairs.pure2D = true;
                this._crossHairs.addLine(_double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector3d.create(-halfWidth, 0, 0), _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector3d.create(halfWidth, 0, 0));
                this._crossHairs.addLine(_double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector3d.create(0, -halfHeight, 0), _double3d_js__WEBPACK_IMPORTED_MODULE_8__.Vector3d.create(0, halfHeight, 0));
            }
            this._crossHairs.drawLines(context, 1, _color_js__WEBPACK_IMPORTED_MODULE_5__.Color.load(_settings_js__WEBPACK_IMPORTED_MODULE_20__.Settings.get_current().get_crosshairsColor()));
        }
    },

    captureThumbnail: function (blobReady) {
        this.captureFrame(blobReady, 96, 45, 'image/jpeg', true);
    },

    captureCurrentFrame: function (blobReady, width, height, format) {
        this.captureFrame(blobReady, width, height, format, false);
    },

    captureFrameForVideo: function (blobReady, width, height, format) {
        var $this = this;

        var frameNumber = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.currentFrameNumber;
        var forVideo = function (blob) {
            var containsIndex;
            if (frameNumber === $this._videoQueueIndex) {
                blobReady(blob);
                $this._videoQueueIndex += 1;

                // Keep moving forward until we hit the next index that we're still waiting on
                while ((containsIndex = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.keyExists($this._videoBlobQueue, $this._videoQueueIndex)) || ($this._emptyFrames.indexOf($this._videoQueueIndex) >= 0)) {
                    if (containsIndex) {
                        blobReady($this._videoBlobQueue[$this._videoQueueIndex]);
                        $this._videoBlobQueue[$this._videoQueueIndex] = null;
                    }
                    else {
                        _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.remove($this._emptyFrames, $this._videoQueueIndex);
                    }
                    $this._videoQueueIndex += 1;
                }
            }
            else {
                if (blob != null) {
                    $this._videoBlobQueue[frameNumber] = blob;
                }
                else {
                    $this._emptyFrames.push(frameNumber);
                }
            }
            if ($this._videoQueueIndex >= _space_time_controller_js__WEBPACK_IMPORTED_MODULE_21__.SpaceTimeController.totalFrames) {
                $this._videoBlobReady = null;
                $this._videoBlobQueue = null;
                $this._videoQueueIndex = 0;
                $this._emptyFrames.length = 0;
            }
        };
        this.captureCurrentFrame(forVideo, width, height, format);
    },

    captureFrame: function (blobReady, width, height, format, needRender) {
        if (needRender) {
            this.renderOneFrame(); // NB: this used to be Render() but that was almost surely not what we want
        }
        var image = document.createElement('img');
        image.addEventListener('load', function (e) {
            var imageAspect = (image.width) / image.height;
            var clientAspect = width / height;
            var cw = width;
            var ch = height;
            if (imageAspect < clientAspect) {
                ch = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((cw / imageAspect));
            }
            else {
                cw = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate((ch * imageAspect));
            }
            var cx = (width - cw) / 2;
            var cy = (height - ch) / 2;
            var temp = document.createElement('canvas');
            temp.height = height;
            temp.width = width;
            var ctx = temp.getContext('2d');
            ctx.drawImage(image, cx, cy, cw, ch);
            if (typeof temp.msToBlob == 'function') { var blob = temp.msToBlob(); blobReady(blob); } else { temp.toBlob(blobReady, format); }
        }, false);
        image.src = _data_globals_js__WEBPACK_IMPORTED_MODULE_3__.globalWWTControl.canvas.toDataURL();
    },

    clampZooms: function (rc) {
        rc.viewCamera.zoom = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.DoubleUtilities.clamp(rc.viewCamera.zoom, this.get_zoomMin(), this.get_zoomMax());
        rc.targetCamera.zoom = _double3d_js__WEBPACK_IMPORTED_MODULE_8__.DoubleUtilities.clamp(rc.targetCamera.zoom, this.get_zoomMin(), this.get_zoomMax());
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("WWTControl", [WWTControl, WWTControl$, null]);

// wwtlib.WWTControlBuilder

function WWTControlBuilder(divId) {
    this._divId = null;
    this._startRenderLoop = false;
    this._startLat = 0;
    this._startLng = 0;
    this._startZoom = 360;
    this._freestandingAssetBaseurl = '';
    this._startMode = '';
    this._divId = divId;
}

var WWTControlBuilder$ = {
    startRenderLoop: function (value) {
        this._startRenderLoop = value;
    },

    initialView: function (lat, lng, zoom) {
        this._startLat = lat;
        this._startLng = lng;
        this._startZoom = zoom;
    },

    freestandingMode: function (asset_baseurl) {
        this._freestandingAssetBaseurl = asset_baseurl;
    },

    initialMode: function (value) {
        this._startMode = value;
    },

    create: function () {
        var freestandingMode = !!this._freestandingAssetBaseurl;
        var trueStartMode;
        if (!!this._startMode) {
            trueStartMode = this._startMode;
        } else if (freestandingMode) {
            trueStartMode = 'black';
        } else {
            trueStartMode = 'sky';
        }
        (0,_data_globals_js__WEBPACK_IMPORTED_MODULE_3__.set_freestandingMode)(freestandingMode);
        if (freestandingMode) {
            _url_helpers_js__WEBPACK_IMPORTED_MODULE_6__.URLHelpers.singleton.overrideAssetBaseurl(this._freestandingAssetBaseurl);
        }
        return WWTControl.initControl6(this._divId, this._startRenderLoop, this._startLat, this._startLng, this._startZoom, trueStartMode);
    }
};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("WWTControlBuilder", [WWTControlBuilder, WWTControlBuilder$, null]);

// wwtlib.WWTElementEvent

function WWTElementEvent(x, y) {
    this.offsetX = 0;
    this.offsetY = 0;
    this.offsetX = x;
    this.offsetY = y;
}

var WWTElementEvent$ = {};

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_1__.registerType)("WWTElementEvent", [WWTElementEvent, WWTElementEvent$, null]);


/***/ }),

/***/ "../node_modules/pako/index.js":
/*!*************************************!*\
  !*** ../node_modules/pako/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Top level file is just a mixin of submodules & constants


var assign    = (__webpack_require__(/*! ./lib/utils/common */ "../node_modules/pako/lib/utils/common.js").assign);

var deflate   = __webpack_require__(/*! ./lib/deflate */ "../node_modules/pako/lib/deflate.js");
var inflate   = __webpack_require__(/*! ./lib/inflate */ "../node_modules/pako/lib/inflate.js");
var constants = __webpack_require__(/*! ./lib/zlib/constants */ "../node_modules/pako/lib/zlib/constants.js");

var pako = {};

assign(pako, deflate, inflate, constants);

module.exports = pako;


/***/ }),

/***/ "../node_modules/pako/lib/deflate.js":
/*!*******************************************!*\
  !*** ../node_modules/pako/lib/deflate.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {




var zlib_deflate = __webpack_require__(/*! ./zlib/deflate */ "../node_modules/pako/lib/zlib/deflate.js");
var utils        = __webpack_require__(/*! ./utils/common */ "../node_modules/pako/lib/utils/common.js");
var strings      = __webpack_require__(/*! ./utils/strings */ "../node_modules/pako/lib/utils/strings.js");
var msg          = __webpack_require__(/*! ./zlib/messages */ "../node_modules/pako/lib/zlib/messages.js");
var ZStream      = __webpack_require__(/*! ./zlib/zstream */ "../node_modules/pako/lib/zlib/zstream.js");

var toString = Object.prototype.toString;

/* Public constants ==========================================================*/
/* ===========================================================================*/

var Z_NO_FLUSH      = 0;
var Z_FINISH        = 4;

var Z_OK            = 0;
var Z_STREAM_END    = 1;
var Z_SYNC_FLUSH    = 2;

var Z_DEFAULT_COMPRESSION = -1;

var Z_DEFAULT_STRATEGY    = 0;

var Z_DEFLATED  = 8;

/* ===========================================================================*/


/**
 * class Deflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[deflate]],
 * [[deflateRaw]] and [[gzip]].
 **/

/* internal
 * Deflate.chunks -> Array
 *
 * Chunks of output data, if [[Deflate#onData]] not overridden.
 **/

/**
 * Deflate.result -> Uint8Array|Array
 *
 * Compressed result, generated by default [[Deflate#onData]]
 * and [[Deflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you
 * push a chunk with explicit flush (call [[Deflate#push]] with
 * `Z_SYNC_FLUSH` param).
 **/

/**
 * Deflate.err -> Number
 *
 * Error code after deflate finished. 0 (Z_OK) on success.
 * You will not need it in real life, because deflate errors
 * are possible only on wrong options or bad `onData` / `onEnd`
 * custom handlers.
 **/

/**
 * Deflate.msg -> String
 *
 * Error message, if [[Deflate.err]] != 0
 **/


/**
 * new Deflate(options)
 * - options (Object): zlib deflate options.
 *
 * Creates new deflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `level`
 * - `windowBits`
 * - `memLevel`
 * - `strategy`
 * - `dictionary`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw deflate
 * - `gzip` (Boolean) - create gzip wrapper
 * - `to` (String) - if equal to 'string', then result will be "binary string"
 *    (each char code [0..255])
 * - `header` (Object) - custom header for gzip
 *   - `text` (Boolean) - true if compressed data believed to be text
 *   - `time` (Number) - modification time, unix timestamp
 *   - `os` (Number) - operation system code
 *   - `extra` (Array) - array of bytes with extra data (max 65536)
 *   - `name` (String) - file name (binary string)
 *   - `comment` (String) - comment (binary string)
 *   - `hcrc` (Boolean) - true if header crc should be added
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])
 *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * var deflate = new pako.Deflate({ level: 3});
 *
 * deflate.push(chunk1, false);
 * deflate.push(chunk2, true);  // true -> last chunk
 *
 * if (deflate.err) { throw new Error(deflate.err); }
 *
 * console.log(deflate.result);
 * ```
 **/
function Deflate(options) {
  if (!(this instanceof Deflate)) return new Deflate(options);

  this.options = utils.assign({
    level: Z_DEFAULT_COMPRESSION,
    method: Z_DEFLATED,
    chunkSize: 16384,
    windowBits: 15,
    memLevel: 8,
    strategy: Z_DEFAULT_STRATEGY,
    to: ''
  }, options || {});

  var opt = this.options;

  if (opt.raw && (opt.windowBits > 0)) {
    opt.windowBits = -opt.windowBits;
  }

  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {
    opt.windowBits += 16;
  }

  this.err    = 0;      // error code, if happens (0 = Z_OK)
  this.msg    = '';     // error message
  this.ended  = false;  // used to avoid multiple onEnd() calls
  this.chunks = [];     // chunks of compressed data

  this.strm = new ZStream();
  this.strm.avail_out = 0;

  var status = zlib_deflate.deflateInit2(
    this.strm,
    opt.level,
    opt.method,
    opt.windowBits,
    opt.memLevel,
    opt.strategy
  );

  if (status !== Z_OK) {
    throw new Error(msg[status]);
  }

  if (opt.header) {
    zlib_deflate.deflateSetHeader(this.strm, opt.header);
  }

  if (opt.dictionary) {
    var dict;
    // Convert data if needed
    if (typeof opt.dictionary === 'string') {
      // If we need to compress text, change encoding to utf8.
      dict = strings.string2buf(opt.dictionary);
    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {
      dict = new Uint8Array(opt.dictionary);
    } else {
      dict = opt.dictionary;
    }

    status = zlib_deflate.deflateSetDictionary(this.strm, dict);

    if (status !== Z_OK) {
      throw new Error(msg[status]);
    }

    this._dict_set = true;
  }
}

/**
 * Deflate#push(data[, mode]) -> Boolean
 * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be
 *   converted to utf8 byte sequence.
 * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.
 *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.
 *
 * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with
 * new compressed chunks. Returns `true` on success. The last data block must have
 * mode Z_FINISH (or `true`). That will flush internal pending buffers and call
 * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you
 * can use mode Z_SYNC_FLUSH, keeping the compression context.
 *
 * On fail call [[Deflate#onEnd]] with error code and return false.
 *
 * We strongly recommend to use `Uint8Array` on input for best speed (output
 * array format is detected automatically). Also, don't skip last param and always
 * use the same type in your code (boolean or number). That will improve JS speed.
 *
 * For regular `Array`-s make sure all elements are [0..255].
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/
Deflate.prototype.push = function (data, mode) {
  var strm = this.strm;
  var chunkSize = this.options.chunkSize;
  var status, _mode;

  if (this.ended) { return false; }

  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);

  // Convert data if needed
  if (typeof data === 'string') {
    // If we need to compress text, change encoding to utf8.
    strm.input = strings.string2buf(data);
  } else if (toString.call(data) === '[object ArrayBuffer]') {
    strm.input = new Uint8Array(data);
  } else {
    strm.input = data;
  }

  strm.next_in = 0;
  strm.avail_in = strm.input.length;

  do {
    if (strm.avail_out === 0) {
      strm.output = new utils.Buf8(chunkSize);
      strm.next_out = 0;
      strm.avail_out = chunkSize;
    }
    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */

    if (status !== Z_STREAM_END && status !== Z_OK) {
      this.onEnd(status);
      this.ended = true;
      return false;
    }
    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {
      if (this.options.to === 'string') {
        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));
      } else {
        this.onData(utils.shrinkBuf(strm.output, strm.next_out));
      }
    }
  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);

  // Finalize on the last chunk.
  if (_mode === Z_FINISH) {
    status = zlib_deflate.deflateEnd(this.strm);
    this.onEnd(status);
    this.ended = true;
    return status === Z_OK;
  }

  // callback interim results if Z_SYNC_FLUSH.
  if (_mode === Z_SYNC_FLUSH) {
    this.onEnd(Z_OK);
    strm.avail_out = 0;
    return true;
  }

  return true;
};


/**
 * Deflate#onData(chunk) -> Void
 * - chunk (Uint8Array|Array|String): output data. Type of array depends
 *   on js engine support. When string output requested, each chunk
 *   will be string.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/
Deflate.prototype.onData = function (chunk) {
  this.chunks.push(chunk);
};


/**
 * Deflate#onEnd(status) -> Void
 * - status (Number): deflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called once after you tell deflate that the input stream is
 * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)
 * or if an error happened. By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/
Deflate.prototype.onEnd = function (status) {
  // On success - join
  if (status === Z_OK) {
    if (this.options.to === 'string') {
      this.result = this.chunks.join('');
    } else {
      this.result = utils.flattenChunks(this.chunks);
    }
  }
  this.chunks = [];
  this.err = status;
  this.msg = this.strm.msg;
};


/**
 * deflate(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * Compress `data` with deflate algorithm and `options`.
 *
 * Supported options are:
 *
 * - level
 * - windowBits
 * - memLevel
 * - strategy
 * - dictionary
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 * - `to` (String) - if equal to 'string', then result will be "binary string"
 *    (each char code [0..255])
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);
 *
 * console.log(pako.deflate(data));
 * ```
 **/
function deflate(input, options) {
  var deflator = new Deflate(options);

  deflator.push(input, true);

  // That will never happens, if you don't cheat with options :)
  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }

  return deflator.result;
}


/**
 * deflateRaw(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/
function deflateRaw(input, options) {
  options = options || {};
  options.raw = true;
  return deflate(input, options);
}


/**
 * gzip(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but create gzip wrapper instead of
 * deflate one.
 **/
function gzip(input, options) {
  options = options || {};
  options.gzip = true;
  return deflate(input, options);
}


exports.Deflate = Deflate;
exports.deflate = deflate;
exports.deflateRaw = deflateRaw;
exports.gzip = gzip;


/***/ }),

/***/ "../node_modules/pako/lib/inflate.js":
/*!*******************************************!*\
  !*** ../node_modules/pako/lib/inflate.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {




var zlib_inflate = __webpack_require__(/*! ./zlib/inflate */ "../node_modules/pako/lib/zlib/inflate.js");
var utils        = __webpack_require__(/*! ./utils/common */ "../node_modules/pako/lib/utils/common.js");
var strings      = __webpack_require__(/*! ./utils/strings */ "../node_modules/pako/lib/utils/strings.js");
var c            = __webpack_require__(/*! ./zlib/constants */ "../node_modules/pako/lib/zlib/constants.js");
var msg          = __webpack_require__(/*! ./zlib/messages */ "../node_modules/pako/lib/zlib/messages.js");
var ZStream      = __webpack_require__(/*! ./zlib/zstream */ "../node_modules/pako/lib/zlib/zstream.js");
var GZheader     = __webpack_require__(/*! ./zlib/gzheader */ "../node_modules/pako/lib/zlib/gzheader.js");

var toString = Object.prototype.toString;

/**
 * class Inflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[inflate]]
 * and [[inflateRaw]].
 **/

/* internal
 * inflate.chunks -> Array
 *
 * Chunks of output data, if [[Inflate#onData]] not overridden.
 **/

/**
 * Inflate.result -> Uint8Array|Array|String
 *
 * Uncompressed result, generated by default [[Inflate#onData]]
 * and [[Inflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you
 * push a chunk with explicit flush (call [[Inflate#push]] with
 * `Z_SYNC_FLUSH` param).
 **/

/**
 * Inflate.err -> Number
 *
 * Error code after inflate finished. 0 (Z_OK) on success.
 * Should be checked if broken data possible.
 **/

/**
 * Inflate.msg -> String
 *
 * Error message, if [[Inflate.err]] != 0
 **/


/**
 * new Inflate(options)
 * - options (Object): zlib inflate options.
 *
 * Creates new inflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `windowBits`
 * - `dictionary`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw inflate
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 * By default, when no options set, autodetect deflate/gzip data format via
 * wrapper header.
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])
 *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * var inflate = new pako.Inflate({ level: 3});
 *
 * inflate.push(chunk1, false);
 * inflate.push(chunk2, true);  // true -> last chunk
 *
 * if (inflate.err) { throw new Error(inflate.err); }
 *
 * console.log(inflate.result);
 * ```
 **/
function Inflate(options) {
  if (!(this instanceof Inflate)) return new Inflate(options);

  this.options = utils.assign({
    chunkSize: 16384,
    windowBits: 0,
    to: ''
  }, options || {});

  var opt = this.options;

  // Force window size for `raw` data, if not set directly,
  // because we have no header for autodetect.
  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {
    opt.windowBits = -opt.windowBits;
    if (opt.windowBits === 0) { opt.windowBits = -15; }
  }

  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate
  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&
      !(options && options.windowBits)) {
    opt.windowBits += 32;
  }

  // Gzip header has no info about windows size, we can do autodetect only
  // for deflate. So, if window size not set, force it to max when gzip possible
  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {
    // bit 3 (16) -> gzipped data
    // bit 4 (32) -> autodetect gzip/deflate
    if ((opt.windowBits & 15) === 0) {
      opt.windowBits |= 15;
    }
  }

  this.err    = 0;      // error code, if happens (0 = Z_OK)
  this.msg    = '';     // error message
  this.ended  = false;  // used to avoid multiple onEnd() calls
  this.chunks = [];     // chunks of compressed data

  this.strm   = new ZStream();
  this.strm.avail_out = 0;

  var status  = zlib_inflate.inflateInit2(
    this.strm,
    opt.windowBits
  );

  if (status !== c.Z_OK) {
    throw new Error(msg[status]);
  }

  this.header = new GZheader();

  zlib_inflate.inflateGetHeader(this.strm, this.header);

  // Setup dictionary
  if (opt.dictionary) {
    // Convert data if needed
    if (typeof opt.dictionary === 'string') {
      opt.dictionary = strings.string2buf(opt.dictionary);
    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {
      opt.dictionary = new Uint8Array(opt.dictionary);
    }
    if (opt.raw) { //In raw mode we need to set the dictionary early
      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);
      if (status !== c.Z_OK) {
        throw new Error(msg[status]);
      }
    }
  }
}

/**
 * Inflate#push(data[, mode]) -> Boolean
 * - data (Uint8Array|Array|ArrayBuffer|String): input data
 * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.
 *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.
 *
 * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with
 * new output chunks. Returns `true` on success. The last data block must have
 * mode Z_FINISH (or `true`). That will flush internal pending buffers and call
 * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you
 * can use mode Z_SYNC_FLUSH, keeping the decompression context.
 *
 * On fail call [[Inflate#onEnd]] with error code and return false.
 *
 * We strongly recommend to use `Uint8Array` on input for best speed (output
 * format is detected automatically). Also, don't skip last param and always
 * use the same type in your code (boolean or number). That will improve JS speed.
 *
 * For regular `Array`-s make sure all elements are [0..255].
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/
Inflate.prototype.push = function (data, mode) {
  var strm = this.strm;
  var chunkSize = this.options.chunkSize;
  var dictionary = this.options.dictionary;
  var status, _mode;
  var next_out_utf8, tail, utf8str;

  // Flag to properly process Z_BUF_ERROR on testing inflate call
  // when we check that all output data was flushed.
  var allowBufError = false;

  if (this.ended) { return false; }
  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);

  // Convert data if needed
  if (typeof data === 'string') {
    // Only binary strings can be decompressed on practice
    strm.input = strings.binstring2buf(data);
  } else if (toString.call(data) === '[object ArrayBuffer]') {
    strm.input = new Uint8Array(data);
  } else {
    strm.input = data;
  }

  strm.next_in = 0;
  strm.avail_in = strm.input.length;

  do {
    if (strm.avail_out === 0) {
      strm.output = new utils.Buf8(chunkSize);
      strm.next_out = 0;
      strm.avail_out = chunkSize;
    }

    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */

    if (status === c.Z_NEED_DICT && dictionary) {
      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);
    }

    if (status === c.Z_BUF_ERROR && allowBufError === true) {
      status = c.Z_OK;
      allowBufError = false;
    }

    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {
      this.onEnd(status);
      this.ended = true;
      return false;
    }

    if (strm.next_out) {
      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {

        if (this.options.to === 'string') {

          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);

          tail = strm.next_out - next_out_utf8;
          utf8str = strings.buf2string(strm.output, next_out_utf8);

          // move tail
          strm.next_out = tail;
          strm.avail_out = chunkSize - tail;
          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }

          this.onData(utf8str);

        } else {
          this.onData(utils.shrinkBuf(strm.output, strm.next_out));
        }
      }
    }

    // When no more input data, we should check that internal inflate buffers
    // are flushed. The only way to do it when avail_out = 0 - run one more
    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.
    // Here we set flag to process this error properly.
    //
    // NOTE. Deflate does not return error in this case and does not needs such
    // logic.
    if (strm.avail_in === 0 && strm.avail_out === 0) {
      allowBufError = true;
    }

  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);

  if (status === c.Z_STREAM_END) {
    _mode = c.Z_FINISH;
  }

  // Finalize on the last chunk.
  if (_mode === c.Z_FINISH) {
    status = zlib_inflate.inflateEnd(this.strm);
    this.onEnd(status);
    this.ended = true;
    return status === c.Z_OK;
  }

  // callback interim results if Z_SYNC_FLUSH.
  if (_mode === c.Z_SYNC_FLUSH) {
    this.onEnd(c.Z_OK);
    strm.avail_out = 0;
    return true;
  }

  return true;
};


/**
 * Inflate#onData(chunk) -> Void
 * - chunk (Uint8Array|Array|String): output data. Type of array depends
 *   on js engine support. When string output requested, each chunk
 *   will be string.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/
Inflate.prototype.onData = function (chunk) {
  this.chunks.push(chunk);
};


/**
 * Inflate#onEnd(status) -> Void
 * - status (Number): inflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called either after you tell inflate that the input stream is
 * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)
 * or if an error happened. By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/
Inflate.prototype.onEnd = function (status) {
  // On success - join
  if (status === c.Z_OK) {
    if (this.options.to === 'string') {
      // Glue & convert here, until we teach pako to send
      // utf8 aligned strings to onData
      this.result = this.chunks.join('');
    } else {
      this.result = utils.flattenChunks(this.chunks);
    }
  }
  this.chunks = [];
  this.err = status;
  this.msg = this.strm.msg;
};


/**
 * inflate(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Decompress `data` with inflate/ungzip and `options`. Autodetect
 * format via wrapper header by default. That's why we don't provide
 * separate `ungzip` method.
 *
 * Supported options are:
 *
 * - windowBits
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])
 *   , output;
 *
 * try {
 *   output = pako.inflate(input);
 * } catch (err)
 *   console.log(err);
 * }
 * ```
 **/
function inflate(input, options) {
  var inflator = new Inflate(options);

  inflator.push(input, true);

  // That will never happens, if you don't cheat with options :)
  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }

  return inflator.result;
}


/**
 * inflateRaw(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * The same as [[inflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/
function inflateRaw(input, options) {
  options = options || {};
  options.raw = true;
  return inflate(input, options);
}


/**
 * ungzip(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Just shortcut to [[inflate]], because it autodetects format
 * by header.content. Done for convenience.
 **/


exports.Inflate = Inflate;
exports.inflate = inflate;
exports.inflateRaw = inflateRaw;
exports.ungzip  = inflate;


/***/ }),

/***/ "../node_modules/pako/lib/utils/common.js":
/*!************************************************!*\
  !*** ../node_modules/pako/lib/utils/common.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {




var TYPED_OK =  (typeof Uint8Array !== 'undefined') &&
                (typeof Uint16Array !== 'undefined') &&
                (typeof Int32Array !== 'undefined');

function _has(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}

exports.assign = function (obj /*from1, from2, from3, ...*/) {
  var sources = Array.prototype.slice.call(arguments, 1);
  while (sources.length) {
    var source = sources.shift();
    if (!source) { continue; }

    if (typeof source !== 'object') {
      throw new TypeError(source + 'must be non-object');
    }

    for (var p in source) {
      if (_has(source, p)) {
        obj[p] = source[p];
      }
    }
  }

  return obj;
};


// reduce buffer size, avoiding mem copy
exports.shrinkBuf = function (buf, size) {
  if (buf.length === size) { return buf; }
  if (buf.subarray) { return buf.subarray(0, size); }
  buf.length = size;
  return buf;
};


var fnTyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    if (src.subarray && dest.subarray) {
      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);
      return;
    }
    // Fallback to ordinary array
    for (var i = 0; i < len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function (chunks) {
    var i, l, len, pos, chunk, result;

    // calculate data length
    len = 0;
    for (i = 0, l = chunks.length; i < l; i++) {
      len += chunks[i].length;
    }

    // join chunks
    result = new Uint8Array(len);
    pos = 0;
    for (i = 0, l = chunks.length; i < l; i++) {
      chunk = chunks[i];
      result.set(chunk, pos);
      pos += chunk.length;
    }

    return result;
  }
};

var fnUntyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    for (var i = 0; i < len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function (chunks) {
    return [].concat.apply([], chunks);
  }
};


// Enable/Disable typed arrays use, for testing
//
exports.setTyped = function (on) {
  if (on) {
    exports.Buf8  = Uint8Array;
    exports.Buf16 = Uint16Array;
    exports.Buf32 = Int32Array;
    exports.assign(exports, fnTyped);
  } else {
    exports.Buf8  = Array;
    exports.Buf16 = Array;
    exports.Buf32 = Array;
    exports.assign(exports, fnUntyped);
  }
};

exports.setTyped(TYPED_OK);


/***/ }),

/***/ "../node_modules/pako/lib/utils/strings.js":
/*!*************************************************!*\
  !*** ../node_modules/pako/lib/utils/strings.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

// String encode/decode helpers



var utils = __webpack_require__(/*! ./common */ "../node_modules/pako/lib/utils/common.js");


// Quick check if we can use fast array to bin string conversion
//
// - apply(Array) can fail on Android 2.2
// - apply(Uint8Array) can fail on iOS 5.1 Safari
//
var STR_APPLY_OK = true;
var STR_APPLY_UIA_OK = true;

try { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }
try { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }


// Table with utf8 lengths (calculated by first byte of sequence)
// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,
// because max possible codepoint is 0x10ffff
var _utf8len = new utils.Buf8(256);
for (var q = 0; q < 256; q++) {
  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);
}
_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start


// convert string to array (typed, when possible)
exports.string2buf = function (str) {
  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;

  // count binary size
  for (m_pos = 0; m_pos < str_len; m_pos++) {
    c = str.charCodeAt(m_pos);
    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {
      c2 = str.charCodeAt(m_pos + 1);
      if ((c2 & 0xfc00) === 0xdc00) {
        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
        m_pos++;
      }
    }
    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;
  }

  // allocate buffer
  buf = new utils.Buf8(buf_len);

  // convert
  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {
    c = str.charCodeAt(m_pos);
    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {
      c2 = str.charCodeAt(m_pos + 1);
      if ((c2 & 0xfc00) === 0xdc00) {
        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
        m_pos++;
      }
    }
    if (c < 0x80) {
      /* one byte */
      buf[i++] = c;
    } else if (c < 0x800) {
      /* two bytes */
      buf[i++] = 0xC0 | (c >>> 6);
      buf[i++] = 0x80 | (c & 0x3f);
    } else if (c < 0x10000) {
      /* three bytes */
      buf[i++] = 0xE0 | (c >>> 12);
      buf[i++] = 0x80 | (c >>> 6 & 0x3f);
      buf[i++] = 0x80 | (c & 0x3f);
    } else {
      /* four bytes */
      buf[i++] = 0xf0 | (c >>> 18);
      buf[i++] = 0x80 | (c >>> 12 & 0x3f);
      buf[i++] = 0x80 | (c >>> 6 & 0x3f);
      buf[i++] = 0x80 | (c & 0x3f);
    }
  }

  return buf;
};

// Helper (used in 2 places)
function buf2binstring(buf, len) {
  // On Chrome, the arguments in a function call that are allowed is `65534`.
  // If the length of the buffer is smaller than that, we can use this optimization,
  // otherwise we will take a slower path.
  if (len < 65534) {
    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {
      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));
    }
  }

  var result = '';
  for (var i = 0; i < len; i++) {
    result += String.fromCharCode(buf[i]);
  }
  return result;
}


// Convert byte array to binary string
exports.buf2binstring = function (buf) {
  return buf2binstring(buf, buf.length);
};


// Convert binary string (typed, when possible)
exports.binstring2buf = function (str) {
  var buf = new utils.Buf8(str.length);
  for (var i = 0, len = buf.length; i < len; i++) {
    buf[i] = str.charCodeAt(i);
  }
  return buf;
};


// convert array to string
exports.buf2string = function (buf, max) {
  var i, out, c, c_len;
  var len = max || buf.length;

  // Reserve max possible length (2 words per char)
  // NB: by unknown reasons, Array is significantly faster for
  //     String.fromCharCode.apply than Uint16Array.
  var utf16buf = new Array(len * 2);

  for (out = 0, i = 0; i < len;) {
    c = buf[i++];
    // quick process ascii
    if (c < 0x80) { utf16buf[out++] = c; continue; }

    c_len = _utf8len[c];
    // skip 5 & 6 byte codes
    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }

    // apply mask on first byte
    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;
    // join the rest
    while (c_len > 1 && i < len) {
      c = (c << 6) | (buf[i++] & 0x3f);
      c_len--;
    }

    // terminated by end of string?
    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }

    if (c < 0x10000) {
      utf16buf[out++] = c;
    } else {
      c -= 0x10000;
      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);
      utf16buf[out++] = 0xdc00 | (c & 0x3ff);
    }
  }

  return buf2binstring(utf16buf, out);
};


// Calculate max possible position in utf8 buffer,
// that will not break sequence. If that's not possible
// - (very small limits) return max size as is.
//
// buf[] - utf8 bytes array
// max   - length limit (mandatory);
exports.utf8border = function (buf, max) {
  var pos;

  max = max || buf.length;
  if (max > buf.length) { max = buf.length; }

  // go back from last position, until start of sequence found
  pos = max - 1;
  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }

  // Very small and broken sequence,
  // return max, because we should return something anyway.
  if (pos < 0) { return max; }

  // If we came to start of buffer - that means buffer is too small,
  // return max too.
  if (pos === 0) { return max; }

  return (pos + _utf8len[buf[pos]] > max) ? pos : max;
};


/***/ }),

/***/ "../node_modules/pako/lib/zlib/adler32.js":
/*!************************************************!*\
  !*** ../node_modules/pako/lib/zlib/adler32.js ***!
  \************************************************/
/***/ ((module) => {



// Note: adler32 takes 12% for level 0 and 2% for level 6.
// It isn't worth it to make additional optimizations as in original.
// Small size is preferable.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function adler32(adler, buf, len, pos) {
  var s1 = (adler & 0xffff) |0,
      s2 = ((adler >>> 16) & 0xffff) |0,
      n = 0;

  while (len !== 0) {
    // Set limit ~ twice less than 5552, to keep
    // s2 in 31-bits, because we force signed ints.
    // in other case %= will fail.
    n = len > 2000 ? 2000 : len;
    len -= n;

    do {
      s1 = (s1 + buf[pos++]) |0;
      s2 = (s2 + s1) |0;
    } while (--n);

    s1 %= 65521;
    s2 %= 65521;
  }

  return (s1 | (s2 << 16)) |0;
}


module.exports = adler32;


/***/ }),

/***/ "../node_modules/pako/lib/zlib/constants.js":
/*!**************************************************!*\
  !*** ../node_modules/pako/lib/zlib/constants.js ***!
  \**************************************************/
/***/ ((module) => {



// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

module.exports = {

  /* Allowed flush values; see deflate() and inflate() below for details */
  Z_NO_FLUSH:         0,
  Z_PARTIAL_FLUSH:    1,
  Z_SYNC_FLUSH:       2,
  Z_FULL_FLUSH:       3,
  Z_FINISH:           4,
  Z_BLOCK:            5,
  Z_TREES:            6,

  /* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */
  Z_OK:               0,
  Z_STREAM_END:       1,
  Z_NEED_DICT:        2,
  Z_ERRNO:           -1,
  Z_STREAM_ERROR:    -2,
  Z_DATA_ERROR:      -3,
  //Z_MEM_ERROR:     -4,
  Z_BUF_ERROR:       -5,
  //Z_VERSION_ERROR: -6,

  /* compression levels */
  Z_NO_COMPRESSION:         0,
  Z_BEST_SPEED:             1,
  Z_BEST_COMPRESSION:       9,
  Z_DEFAULT_COMPRESSION:   -1,


  Z_FILTERED:               1,
  Z_HUFFMAN_ONLY:           2,
  Z_RLE:                    3,
  Z_FIXED:                  4,
  Z_DEFAULT_STRATEGY:       0,

  /* Possible values of the data_type field (though see inflate()) */
  Z_BINARY:                 0,
  Z_TEXT:                   1,
  //Z_ASCII:                1, // = Z_TEXT (deprecated)
  Z_UNKNOWN:                2,

  /* The deflate compression method */
  Z_DEFLATED:               8
  //Z_NULL:                 null // Use -1 or null inline, depending on var type
};


/***/ }),

/***/ "../node_modules/pako/lib/zlib/crc32.js":
/*!**********************************************!*\
  !*** ../node_modules/pako/lib/zlib/crc32.js ***!
  \**********************************************/
/***/ ((module) => {



// Note: we can't get significant speed boost here.
// So write code to minimize size - no pregenerated tables
// and array tools dependencies.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// Use ordinary array, since untyped makes no boost here
function makeTable() {
  var c, table = [];

  for (var n = 0; n < 256; n++) {
    c = n;
    for (var k = 0; k < 8; k++) {
      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));
    }
    table[n] = c;
  }

  return table;
}

// Create table on load. Just 255 signed longs. Not a problem.
var crcTable = makeTable();


function crc32(crc, buf, len, pos) {
  var t = crcTable,
      end = pos + len;

  crc ^= -1;

  for (var i = pos; i < end; i++) {
    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];
  }

  return (crc ^ (-1)); // >>> 0;
}


module.exports = crc32;


/***/ }),

/***/ "../node_modules/pako/lib/zlib/deflate.js":
/*!************************************************!*\
  !*** ../node_modules/pako/lib/zlib/deflate.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils   = __webpack_require__(/*! ../utils/common */ "../node_modules/pako/lib/utils/common.js");
var trees   = __webpack_require__(/*! ./trees */ "../node_modules/pako/lib/zlib/trees.js");
var adler32 = __webpack_require__(/*! ./adler32 */ "../node_modules/pako/lib/zlib/adler32.js");
var crc32   = __webpack_require__(/*! ./crc32 */ "../node_modules/pako/lib/zlib/crc32.js");
var msg     = __webpack_require__(/*! ./messages */ "../node_modules/pako/lib/zlib/messages.js");

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
var Z_NO_FLUSH      = 0;
var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
//var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
//var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
//var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;


/* compression levels */
//var Z_NO_COMPRESSION      = 0;
//var Z_BEST_SPEED          = 1;
//var Z_BEST_COMPRESSION    = 9;
var Z_DEFAULT_COMPRESSION = -1;


var Z_FILTERED            = 1;
var Z_HUFFMAN_ONLY        = 2;
var Z_RLE                 = 3;
var Z_FIXED               = 4;
var Z_DEFAULT_STRATEGY    = 0;

/* Possible values of the data_type field (though see inflate()) */
//var Z_BINARY              = 0;
//var Z_TEXT                = 1;
//var Z_ASCII               = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;


/* The deflate compression method */
var Z_DEFLATED  = 8;

/*============================================================================*/


var MAX_MEM_LEVEL = 9;
/* Maximum value for memLevel in deflateInit2 */
var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_MEM_LEVEL = 8;


var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */
var LITERALS      = 256;
/* number of literal bytes 0..255 */
var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */
var D_CODES       = 30;
/* number of distance codes */
var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */
var HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */
var MAX_BITS  = 15;
/* All codes must not exceed MAX_BITS bits */

var MIN_MATCH = 3;
var MAX_MATCH = 258;
var MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);

var PRESET_DICT = 0x20;

var INIT_STATE = 42;
var EXTRA_STATE = 69;
var NAME_STATE = 73;
var COMMENT_STATE = 91;
var HCRC_STATE = 103;
var BUSY_STATE = 113;
var FINISH_STATE = 666;

var BS_NEED_MORE      = 1; /* block not completed, need more input or more output */
var BS_BLOCK_DONE     = 2; /* block flush performed */
var BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */
var BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */

var OS_CODE = 0x03; // Unix :) . Don't detect, use this default.

function err(strm, errorCode) {
  strm.msg = msg[errorCode];
  return errorCode;
}

function rank(f) {
  return ((f) << 1) - ((f) > 4 ? 9 : 0);
}

function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }


/* =========================================================================
 * Flush as much pending output as possible. All deflate() output goes
 * through this function so some applications may wish to modify it
 * to avoid allocating a large strm->output buffer and copying into it.
 * (See also read_buf()).
 */
function flush_pending(strm) {
  var s = strm.state;

  //_tr_flush_bits(s);
  var len = s.pending;
  if (len > strm.avail_out) {
    len = strm.avail_out;
  }
  if (len === 0) { return; }

  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);
  strm.next_out += len;
  s.pending_out += len;
  strm.total_out += len;
  strm.avail_out -= len;
  s.pending -= len;
  if (s.pending === 0) {
    s.pending_out = 0;
  }
}


function flush_block_only(s, last) {
  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);
  s.block_start = s.strstart;
  flush_pending(s.strm);
}


function put_byte(s, b) {
  s.pending_buf[s.pending++] = b;
}


/* =========================================================================
 * Put a short in the pending buffer. The 16-bit value is put in MSB order.
 * IN assertion: the stream state is correct and there is enough room in
 * pending_buf.
 */
function putShortMSB(s, b) {
//  put_byte(s, (Byte)(b >> 8));
//  put_byte(s, (Byte)(b & 0xff));
  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;
  s.pending_buf[s.pending++] = b & 0xff;
}


/* ===========================================================================
 * Read a new buffer from the current input stream, update the adler32
 * and total number of bytes read.  All deflate() input goes through
 * this function so some applications may wish to modify it to avoid
 * allocating a large strm->input buffer and copying from it.
 * (See also flush_pending()).
 */
function read_buf(strm, buf, start, size) {
  var len = strm.avail_in;

  if (len > size) { len = size; }
  if (len === 0) { return 0; }

  strm.avail_in -= len;

  // zmemcpy(buf, strm->next_in, len);
  utils.arraySet(buf, strm.input, strm.next_in, len, start);
  if (strm.state.wrap === 1) {
    strm.adler = adler32(strm.adler, buf, len, start);
  }

  else if (strm.state.wrap === 2) {
    strm.adler = crc32(strm.adler, buf, len, start);
  }

  strm.next_in += len;
  strm.total_in += len;

  return len;
}


/* ===========================================================================
 * Set match_start to the longest match starting at the given string and
 * return its length. Matches shorter or equal to prev_length are discarded,
 * in which case the result is equal to prev_length and match_start is
 * garbage.
 * IN assertions: cur_match is the head of the hash chain for the current
 *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1
 * OUT assertion: the match length is not greater than s->lookahead.
 */
function longest_match(s, cur_match) {
  var chain_length = s.max_chain_length;      /* max hash chain length */
  var scan = s.strstart; /* current string */
  var match;                       /* matched string */
  var len;                           /* length of current match */
  var best_len = s.prev_length;              /* best match length so far */
  var nice_match = s.nice_match;             /* stop if match long enough */
  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?
      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;

  var _win = s.window; // shortcut

  var wmask = s.w_mask;
  var prev  = s.prev;

  /* Stop when cur_match becomes <= limit. To simplify the code,
   * we prevent matches with the string of window index 0.
   */

  var strend = s.strstart + MAX_MATCH;
  var scan_end1  = _win[scan + best_len - 1];
  var scan_end   = _win[scan + best_len];

  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.
   * It is easy to get rid of this optimization if necessary.
   */
  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");

  /* Do not waste too much time if we already have a good match: */
  if (s.prev_length >= s.good_match) {
    chain_length >>= 2;
  }
  /* Do not look for matches beyond the end of the input. This is necessary
   * to make deflate deterministic.
   */
  if (nice_match > s.lookahead) { nice_match = s.lookahead; }

  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");

  do {
    // Assert(cur_match < s->strstart, "no future");
    match = cur_match;

    /* Skip to next match if the match length cannot increase
     * or if the match length is less than 2.  Note that the checks below
     * for insufficient lookahead only occur occasionally for performance
     * reasons.  Therefore uninitialized memory will be accessed, and
     * conditional jumps will be made that depend on those values.
     * However the length of the match is limited to the lookahead, so
     * the output of deflate is not affected by the uninitialized values.
     */

    if (_win[match + best_len]     !== scan_end  ||
        _win[match + best_len - 1] !== scan_end1 ||
        _win[match]                !== _win[scan] ||
        _win[++match]              !== _win[scan + 1]) {
      continue;
    }

    /* The check at best_len-1 can be removed because it will be made
     * again later. (This heuristic is not always a win.)
     * It is not necessary to compare scan[2] and match[2] since they
     * are always equal when the other bytes match, given that
     * the hash keys are equal and that HASH_BITS >= 8.
     */
    scan += 2;
    match++;
    // Assert(*scan == *match, "match[2]?");

    /* We check for insufficient lookahead only every 8th comparison;
     * the 256th check will be made at strstart+258.
     */
    do {
      /*jshint noempty:false*/
    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             scan < strend);

    // Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");

    len = MAX_MATCH - (strend - scan);
    scan = strend - MAX_MATCH;

    if (len > best_len) {
      s.match_start = cur_match;
      best_len = len;
      if (len >= nice_match) {
        break;
      }
      scan_end1  = _win[scan + best_len - 1];
      scan_end   = _win[scan + best_len];
    }
  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);

  if (best_len <= s.lookahead) {
    return best_len;
  }
  return s.lookahead;
}


/* ===========================================================================
 * Fill the window when the lookahead becomes insufficient.
 * Updates strstart and lookahead.
 *
 * IN assertion: lookahead < MIN_LOOKAHEAD
 * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD
 *    At least one byte has been read, or avail_in == 0; reads are
 *    performed for at least two bytes (required for the zip translate_eol
 *    option -- not supported here).
 */
function fill_window(s) {
  var _w_size = s.w_size;
  var p, n, m, more, str;

  //Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");

  do {
    more = s.window_size - s.lookahead - s.strstart;

    // JS ints have 32 bit, block below not needed
    /* Deal with !@#$% 64K limit: */
    //if (sizeof(int) <= 2) {
    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {
    //        more = wsize;
    //
    //  } else if (more == (unsigned)(-1)) {
    //        /* Very unlikely, but possible on 16 bit machine if
    //         * strstart == 0 && lookahead == 1 (input done a byte at time)
    //         */
    //        more--;
    //    }
    //}


    /* If the window is almost full and there is insufficient lookahead,
     * move the upper half to the lower one to make room in the upper half.
     */
    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {

      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);
      s.match_start -= _w_size;
      s.strstart -= _w_size;
      /* we now have strstart >= MAX_DIST */
      s.block_start -= _w_size;

      /* Slide the hash table (could be avoided with 32 bit values
       at the expense of memory usage). We slide even when level == 0
       to keep the hash table consistent if we switch back to level > 0
       later. (Using level 0 permanently is not an optimal usage of
       zlib, so we don't care about this pathological case.)
       */

      n = s.hash_size;
      p = n;
      do {
        m = s.head[--p];
        s.head[p] = (m >= _w_size ? m - _w_size : 0);
      } while (--n);

      n = _w_size;
      p = n;
      do {
        m = s.prev[--p];
        s.prev[p] = (m >= _w_size ? m - _w_size : 0);
        /* If n is not on any hash chain, prev[n] is garbage but
         * its value will never be used.
         */
      } while (--n);

      more += _w_size;
    }
    if (s.strm.avail_in === 0) {
      break;
    }

    /* If there was no sliding:
     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&
     *    more == window_size - lookahead - strstart
     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
     * => more >= window_size - 2*WSIZE + 2
     * In the BIG_MEM or MMAP case (not yet supported),
     *   window_size == input_size + MIN_LOOKAHEAD  &&
     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.
     * Otherwise, window_size == 2*WSIZE so more >= 2.
     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.
     */
    //Assert(more >= 2, "more < 2");
    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);
    s.lookahead += n;

    /* Initialize the hash value now that we have some input: */
    if (s.lookahead + s.insert >= MIN_MATCH) {
      str = s.strstart - s.insert;
      s.ins_h = s.window[str];

      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;
//#if MIN_MATCH != 3
//        Call update_hash() MIN_MATCH-3 more times
//#endif
      while (s.insert) {
        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;

        s.prev[str & s.w_mask] = s.head[s.ins_h];
        s.head[s.ins_h] = str;
        str++;
        s.insert--;
        if (s.lookahead + s.insert < MIN_MATCH) {
          break;
        }
      }
    }
    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
     * but this is not important since only literal bytes will be emitted.
     */

  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);

  /* If the WIN_INIT bytes after the end of the current data have never been
   * written, then zero those bytes in order to avoid memory check reports of
   * the use of uninitialized (or uninitialised as Julian writes) bytes by
   * the longest match routines.  Update the high water mark for the next
   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
   */
//  if (s.high_water < s.window_size) {
//    var curr = s.strstart + s.lookahead;
//    var init = 0;
//
//    if (s.high_water < curr) {
//      /* Previous high water mark below current data -- zero WIN_INIT
//       * bytes or up to end of window, whichever is less.
//       */
//      init = s.window_size - curr;
//      if (init > WIN_INIT)
//        init = WIN_INIT;
//      zmemzero(s->window + curr, (unsigned)init);
//      s->high_water = curr + init;
//    }
//    else if (s->high_water < (ulg)curr + WIN_INIT) {
//      /* High water mark at or above current data, but below current data
//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up
//       * to end of window, whichever is less.
//       */
//      init = (ulg)curr + WIN_INIT - s->high_water;
//      if (init > s->window_size - s->high_water)
//        init = s->window_size - s->high_water;
//      zmemzero(s->window + s->high_water, (unsigned)init);
//      s->high_water += init;
//    }
//  }
//
//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,
//    "not enough room for search");
}

/* ===========================================================================
 * Copy without compression as much as possible from the input stream, return
 * the current block state.
 * This function does not insert new strings in the dictionary since
 * uncompressible data is probably not useful. This function is used
 * only for the level=0 compression option.
 * NOTE: this function should be optimized to avoid extra copying from
 * window to pending_buf.
 */
function deflate_stored(s, flush) {
  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited
   * to pending_buf_size, and each stored block has a 5 byte header:
   */
  var max_block_size = 0xffff;

  if (max_block_size > s.pending_buf_size - 5) {
    max_block_size = s.pending_buf_size - 5;
  }

  /* Copy as much as possible from input to output: */
  for (;;) {
    /* Fill the window as much as possible: */
    if (s.lookahead <= 1) {

      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||
      //  s->block_start >= (long)s->w_size, "slide too late");
//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||
//        s.block_start >= s.w_size)) {
//        throw  new Error("slide too late");
//      }

      fill_window(s);
      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }

      if (s.lookahead === 0) {
        break;
      }
      /* flush the current block */
    }
    //Assert(s->block_start >= 0L, "block gone");
//    if (s.block_start < 0) throw new Error("block gone");

    s.strstart += s.lookahead;
    s.lookahead = 0;

    /* Emit a stored block if pending_buf will be full: */
    var max_start = s.block_start + max_block_size;

    if (s.strstart === 0 || s.strstart >= max_start) {
      /* strstart == 0 is possible when wraparound on 16-bit machine */
      s.lookahead = s.strstart - max_start;
      s.strstart = max_start;
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/


    }
    /* Flush if we may have to slide, otherwise block_start may become
     * negative and the data will be gone:
     */
    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }

  s.insert = 0;

  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }

  if (s.strstart > s.block_start) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_NEED_MORE;
}

/* ===========================================================================
 * Compress as much as possible from the input stream, return the current
 * block state.
 * This function does not perform lazy evaluation of matches and inserts
 * new strings in the dictionary only for unmatched strings or for short
 * matches. It is used only for the fast compression options.
 */
function deflate_fast(s, flush) {
  var hash_head;        /* head of the hash chain */
  var bflush;           /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) {
        break; /* flush the current block */
      }
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     * At this point we have always match_length < MIN_MATCH
     */
    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */
    }
    if (s.match_length >= MIN_MATCH) {
      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only

      /*** _tr_tally_dist(s, s.strstart - s.match_start,
                     s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;

      /* Insert new strings in the hash table only if the match length
       * is not too large. This saves time but degrades compression.
       */
      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {
        s.match_length--; /* string at strstart already in table */
        do {
          s.strstart++;
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
          /* strstart never exceeds WSIZE-MAX_MATCH, so there are
           * always MIN_MATCH bytes ahead.
           */
        } while (--s.match_length !== 0);
        s.strstart++;
      } else
      {
        s.strstart += s.match_length;
        s.match_length = 0;
        s.ins_h = s.window[s.strstart];
        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;

//#if MIN_MATCH != 3
//                Call UPDATE_HASH() MIN_MATCH-3 more times
//#endif
        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not
         * matter since it will be recomputed at next deflate call.
         */
      }
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s.window[s.strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * Same as above, but achieves better compression. We use a lazy
 * evaluation for matches: a match is finally adopted only if there is
 * no better match at the next window position.
 */
function deflate_slow(s, flush) {
  var hash_head;          /* head of hash chain */
  var bflush;              /* set if current block must be flushed */

  var max_insert;

  /* Process the input block. */
  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     */
    s.prev_length = s.match_length;
    s.prev_match = s.match_start;
    s.match_length = MIN_MATCH - 1;

    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&
        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */

      if (s.match_length <= 5 &&
         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {

        /* If prev_match is also MIN_MATCH, match_start is garbage
         * but we will ignore the current match anyway.
         */
        s.match_length = MIN_MATCH - 1;
      }
    }
    /* If there was a match at the previous step and the current
     * match is not better, output the previous match:
     */
    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {
      max_insert = s.strstart + s.lookahead - MIN_MATCH;
      /* Do not insert strings in hash table beyond this. */

      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);

      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,
                     s.prev_length - MIN_MATCH, bflush);***/
      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);
      /* Insert in hash table all strings up to the end of the match.
       * strstart-1 and strstart are already inserted. If there is not
       * enough lookahead, the last two strings are not inserted in
       * the hash table.
       */
      s.lookahead -= s.prev_length - 1;
      s.prev_length -= 2;
      do {
        if (++s.strstart <= max_insert) {
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
        }
      } while (--s.prev_length !== 0);
      s.match_available = 0;
      s.match_length = MIN_MATCH - 1;
      s.strstart++;

      if (bflush) {
        /*** FLUSH_BLOCK(s, 0); ***/
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
        /***/
      }

    } else if (s.match_available) {
      /* If there was no match at the previous position, output a
       * single literal. If there was a match but the current match
       * is longer, truncate the previous match to a single literal.
       */
      //Tracevv((stderr,"%c", s->window[s->strstart-1]));
      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);

      if (bflush) {
        /*** FLUSH_BLOCK_ONLY(s, 0) ***/
        flush_block_only(s, false);
        /***/
      }
      s.strstart++;
      s.lookahead--;
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    } else {
      /* There is no previous match to compare with, wait for
       * the next step to decide.
       */
      s.match_available = 1;
      s.strstart++;
      s.lookahead--;
    }
  }
  //Assert (flush != Z_NO_FLUSH, "no flush?");
  if (s.match_available) {
    //Tracevv((stderr,"%c", s->window[s->strstart-1]));
    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);

    s.match_available = 0;
  }
  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_BLOCK_DONE;
}


/* ===========================================================================
 * For Z_RLE, simply look for runs of bytes, generate matches only of distance
 * one.  Do not maintain a hash table.  (It will be regenerated if this run of
 * deflate switches away from Z_RLE.)
 */
function deflate_rle(s, flush) {
  var bflush;            /* set if current block must be flushed */
  var prev;              /* byte at distance one to match */
  var scan, strend;      /* scan goes up to strend for length of run */

  var _win = s.window;

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the longest run, plus one for the unrolled loop.
     */
    if (s.lookahead <= MAX_MATCH) {
      fill_window(s);
      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* See how many times the previous byte repeats */
    s.match_length = 0;
    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {
      scan = s.strstart - 1;
      prev = _win[scan];
      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {
        strend = s.strstart + MAX_MATCH;
        do {
          /*jshint noempty:false*/
        } while (prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 scan < strend);
        s.match_length = MAX_MATCH - (strend - scan);
        if (s.match_length > s.lookahead) {
          s.match_length = s.lookahead;
        }
      }
      //Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");
    }

    /* Emit match if have run of MIN_MATCH or longer, else emit literal */
    if (s.match_length >= MIN_MATCH) {
      //check_match(s, s.strstart, s.strstart - 1, s.match_length);

      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;
      s.strstart += s.match_length;
      s.match_length = 0;
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s->window[s->strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.
 * (It will be regenerated if this run of deflate switches away from Huffman.)
 */
function deflate_huff(s, flush) {
  var bflush;             /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we have a literal to write. */
    if (s.lookahead === 0) {
      fill_window(s);
      if (s.lookahead === 0) {
        if (flush === Z_NO_FLUSH) {
          return BS_NEED_MORE;
        }
        break;      /* flush the current block */
      }
    }

    /* Output a literal byte */
    s.match_length = 0;
    //Tracevv((stderr,"%c", s->window[s->strstart]));
    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);
    s.lookahead--;
    s.strstart++;
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* Values for max_lazy_match, good_match and max_chain_length, depending on
 * the desired pack level (0..9). The values given below have been tuned to
 * exclude worst case performance for pathological files. Better values may be
 * found for specific files.
 */
function Config(good_length, max_lazy, nice_length, max_chain, func) {
  this.good_length = good_length;
  this.max_lazy = max_lazy;
  this.nice_length = nice_length;
  this.max_chain = max_chain;
  this.func = func;
}

var configuration_table;

configuration_table = [
  /*      good lazy nice chain */
  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */
  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */
  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */
  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */

  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */
  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */
  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */
  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */
  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */
  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */
];


/* ===========================================================================
 * Initialize the "longest match" routines for a new zlib stream
 */
function lm_init(s) {
  s.window_size = 2 * s.w_size;

  /*** CLEAR_HASH(s); ***/
  zero(s.head); // Fill with NIL (= 0);

  /* Set the default configuration parameters:
   */
  s.max_lazy_match = configuration_table[s.level].max_lazy;
  s.good_match = configuration_table[s.level].good_length;
  s.nice_match = configuration_table[s.level].nice_length;
  s.max_chain_length = configuration_table[s.level].max_chain;

  s.strstart = 0;
  s.block_start = 0;
  s.lookahead = 0;
  s.insert = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  s.ins_h = 0;
}


function DeflateState() {
  this.strm = null;            /* pointer back to this zlib stream */
  this.status = 0;            /* as the name implies */
  this.pending_buf = null;      /* output still pending */
  this.pending_buf_size = 0;  /* size of pending_buf */
  this.pending_out = 0;       /* next pending byte to output to the stream */
  this.pending = 0;           /* nb of bytes in the pending buffer */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.gzhead = null;         /* gzip header information to write */
  this.gzindex = 0;           /* where in extra, name, or comment */
  this.method = Z_DEFLATED; /* can only be DEFLATED */
  this.last_flush = -1;   /* value of flush param for previous deflate call */

  this.w_size = 0;  /* LZ77 window size (32K by default) */
  this.w_bits = 0;  /* log2(w_size)  (8..16) */
  this.w_mask = 0;  /* w_size - 1 */

  this.window = null;
  /* Sliding window. Input bytes are read into the second half of the window,
   * and move to the first half later to keep a dictionary of at least wSize
   * bytes. With this organization, matches are limited to a distance of
   * wSize-MAX_MATCH bytes, but this ensures that IO is always
   * performed with a length multiple of the block size.
   */

  this.window_size = 0;
  /* Actual size of window: 2*wSize, except when the user input buffer
   * is directly used as sliding window.
   */

  this.prev = null;
  /* Link to older string with same hash index. To limit the size of this
   * array to 64K, this link is maintained only for the last 32K strings.
   * An index in this array is thus a window index modulo 32K.
   */

  this.head = null;   /* Heads of the hash chains or NIL. */

  this.ins_h = 0;       /* hash index of string to be inserted */
  this.hash_size = 0;   /* number of elements in hash table */
  this.hash_bits = 0;   /* log2(hash_size) */
  this.hash_mask = 0;   /* hash_size-1 */

  this.hash_shift = 0;
  /* Number of bits by which ins_h must be shifted at each input
   * step. It must be such that after MIN_MATCH steps, the oldest
   * byte no longer takes part in the hash key, that is:
   *   hash_shift * MIN_MATCH >= hash_bits
   */

  this.block_start = 0;
  /* Window position at the beginning of the current output block. Gets
   * negative when the window is moved backwards.
   */

  this.match_length = 0;      /* length of best match */
  this.prev_match = 0;        /* previous match */
  this.match_available = 0;   /* set if previous match exists */
  this.strstart = 0;          /* start of string to insert */
  this.match_start = 0;       /* start of matching string */
  this.lookahead = 0;         /* number of valid bytes ahead in window */

  this.prev_length = 0;
  /* Length of the best match at previous step. Matches not greater than this
   * are discarded. This is used in the lazy match evaluation.
   */

  this.max_chain_length = 0;
  /* To speed up deflation, hash chains are never searched beyond this
   * length.  A higher limit improves compression ratio but degrades the
   * speed.
   */

  this.max_lazy_match = 0;
  /* Attempt to find a better match only when the current match is strictly
   * smaller than this value. This mechanism is used only for compression
   * levels >= 4.
   */
  // That's alias to max_lazy_match, don't use directly
  //this.max_insert_length = 0;
  /* Insert new strings in the hash table only if the match length is not
   * greater than this length. This saves time but degrades compression.
   * max_insert_length is used only for compression levels <= 3.
   */

  this.level = 0;     /* compression level (1..9) */
  this.strategy = 0;  /* favor or force Huffman coding*/

  this.good_match = 0;
  /* Use a faster search when the previous match is longer than this */

  this.nice_match = 0; /* Stop searching when current match exceeds this */

              /* used by trees.c: */

  /* Didn't use ct_data typedef below to suppress compiler warning */

  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */
  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */
  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */

  // Use flat array of DOUBLE size, with interleaved fata,
  // because JS does not support effective
  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);
  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);
  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);
  zero(this.dyn_ltree);
  zero(this.dyn_dtree);
  zero(this.bl_tree);

  this.l_desc   = null;         /* desc. for literal tree */
  this.d_desc   = null;         /* desc. for distance tree */
  this.bl_desc  = null;         /* desc. for bit length tree */

  //ush bl_count[MAX_BITS+1];
  this.bl_count = new utils.Buf16(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */
  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */
  zero(this.heap);

  this.heap_len = 0;               /* number of elements in the heap */
  this.heap_max = 0;               /* element of largest frequency */
  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
   * The same heap array is used to build all trees.
   */

  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];
  zero(this.depth);
  /* Depth of each subtree used as tie breaker for trees of equal frequency
   */

  this.l_buf = 0;          /* buffer index for literals or lengths */

  this.lit_bufsize = 0;
  /* Size of match buffer for literals/lengths.  There are 4 reasons for
   * limiting lit_bufsize to 64K:
   *   - frequencies can be kept in 16 bit counters
   *   - if compression is not successful for the first block, all input
   *     data is still in the window so we can still emit a stored block even
   *     when input comes from standard input.  (This can also be done for
   *     all blocks if lit_bufsize is not greater than 32K.)
   *   - if compression is not successful for a file smaller than 64K, we can
   *     even emit a stored file instead of a stored block (saving 5 bytes).
   *     This is applicable only for zip (not gzip or zlib).
   *   - creating new Huffman trees less frequently may not provide fast
   *     adaptation to changes in the input data statistics. (Take for
   *     example a binary file with poorly compressible code followed by
   *     a highly compressible string table.) Smaller buffer sizes give
   *     fast adaptation but have of course the overhead of transmitting
   *     trees more frequently.
   *   - I can't count above 4
   */

  this.last_lit = 0;      /* running index in l_buf */

  this.d_buf = 0;
  /* Buffer index for distances. To simplify the code, d_buf and l_buf have
   * the same number of elements. To use different lengths, an extra flag
   * array would be necessary.
   */

  this.opt_len = 0;       /* bit length of current block with optimal trees */
  this.static_len = 0;    /* bit length of current block with static trees */
  this.matches = 0;       /* number of string matches in current block */
  this.insert = 0;        /* bytes at end of window left to insert */


  this.bi_buf = 0;
  /* Output buffer. bits are inserted starting at the bottom (least
   * significant bits).
   */
  this.bi_valid = 0;
  /* Number of valid bits in bi_buf.  All bits above the last valid bit
   * are always zero.
   */

  // Used for window memory init. We safely ignore it for JS. That makes
  // sense only for pointers and memory check tools.
  //this.high_water = 0;
  /* High water mark offset in window for initialized bytes -- bytes above
   * this are set to zero in order to avoid memory check warnings when
   * longest match routines access bytes past the input.  This is then
   * updated to the new high water mark.
   */
}


function deflateResetKeep(strm) {
  var s;

  if (!strm || !strm.state) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.total_in = strm.total_out = 0;
  strm.data_type = Z_UNKNOWN;

  s = strm.state;
  s.pending = 0;
  s.pending_out = 0;

  if (s.wrap < 0) {
    s.wrap = -s.wrap;
    /* was made negative by deflate(..., Z_FINISH); */
  }
  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);
  strm.adler = (s.wrap === 2) ?
    0  // crc32(0, Z_NULL, 0)
  :
    1; // adler32(0, Z_NULL, 0)
  s.last_flush = Z_NO_FLUSH;
  trees._tr_init(s);
  return Z_OK;
}


function deflateReset(strm) {
  var ret = deflateResetKeep(strm);
  if (ret === Z_OK) {
    lm_init(strm.state);
  }
  return ret;
}


function deflateSetHeader(strm, head) {
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }
  strm.state.gzhead = head;
  return Z_OK;
}


function deflateInit2(strm, level, method, windowBits, memLevel, strategy) {
  if (!strm) { // === Z_NULL
    return Z_STREAM_ERROR;
  }
  var wrap = 1;

  if (level === Z_DEFAULT_COMPRESSION) {
    level = 6;
  }

  if (windowBits < 0) { /* suppress zlib wrapper */
    wrap = 0;
    windowBits = -windowBits;
  }

  else if (windowBits > 15) {
    wrap = 2;           /* write gzip wrapper instead */
    windowBits -= 16;
  }


  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||
    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||
    strategy < 0 || strategy > Z_FIXED) {
    return err(strm, Z_STREAM_ERROR);
  }


  if (windowBits === 8) {
    windowBits = 9;
  }
  /* until 256-byte window bug fixed */

  var s = new DeflateState();

  strm.state = s;
  s.strm = strm;

  s.wrap = wrap;
  s.gzhead = null;
  s.w_bits = windowBits;
  s.w_size = 1 << s.w_bits;
  s.w_mask = s.w_size - 1;

  s.hash_bits = memLevel + 7;
  s.hash_size = 1 << s.hash_bits;
  s.hash_mask = s.hash_size - 1;
  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);

  s.window = new utils.Buf8(s.w_size * 2);
  s.head = new utils.Buf16(s.hash_size);
  s.prev = new utils.Buf16(s.w_size);

  // Don't need mem init magic for JS.
  //s.high_water = 0;  /* nothing written to s->window yet */

  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */

  s.pending_buf_size = s.lit_bufsize * 4;

  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);
  //s->pending_buf = (uchf *) overlay;
  s.pending_buf = new utils.Buf8(s.pending_buf_size);

  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)
  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);
  s.d_buf = 1 * s.lit_bufsize;

  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;
  s.l_buf = (1 + 2) * s.lit_bufsize;

  s.level = level;
  s.strategy = strategy;
  s.method = method;

  return deflateReset(strm);
}

function deflateInit(strm, level) {
  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);
}


function deflate(strm, flush) {
  var old_flush, s;
  var beg, val; // for gzip header write only

  if (!strm || !strm.state ||
    flush > Z_BLOCK || flush < 0) {
    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;
  }

  s = strm.state;

  if (!strm.output ||
      (!strm.input && strm.avail_in !== 0) ||
      (s.status === FINISH_STATE && flush !== Z_FINISH)) {
    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);
  }

  s.strm = strm; /* just in case */
  old_flush = s.last_flush;
  s.last_flush = flush;

  /* Write the header */
  if (s.status === INIT_STATE) {

    if (s.wrap === 2) { // GZIP header
      strm.adler = 0;  //crc32(0L, Z_NULL, 0);
      put_byte(s, 31);
      put_byte(s, 139);
      put_byte(s, 8);
      if (!s.gzhead) { // s->gzhead == Z_NULL
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, OS_CODE);
        s.status = BUSY_STATE;
      }
      else {
        put_byte(s, (s.gzhead.text ? 1 : 0) +
                    (s.gzhead.hcrc ? 2 : 0) +
                    (!s.gzhead.extra ? 0 : 4) +
                    (!s.gzhead.name ? 0 : 8) +
                    (!s.gzhead.comment ? 0 : 16)
        );
        put_byte(s, s.gzhead.time & 0xff);
        put_byte(s, (s.gzhead.time >> 8) & 0xff);
        put_byte(s, (s.gzhead.time >> 16) & 0xff);
        put_byte(s, (s.gzhead.time >> 24) & 0xff);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, s.gzhead.os & 0xff);
        if (s.gzhead.extra && s.gzhead.extra.length) {
          put_byte(s, s.gzhead.extra.length & 0xff);
          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);
        }
        if (s.gzhead.hcrc) {
          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);
        }
        s.gzindex = 0;
        s.status = EXTRA_STATE;
      }
    }
    else // DEFLATE header
    {
      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;
      var level_flags = -1;

      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {
        level_flags = 0;
      } else if (s.level < 6) {
        level_flags = 1;
      } else if (s.level === 6) {
        level_flags = 2;
      } else {
        level_flags = 3;
      }
      header |= (level_flags << 6);
      if (s.strstart !== 0) { header |= PRESET_DICT; }
      header += 31 - (header % 31);

      s.status = BUSY_STATE;
      putShortMSB(s, header);

      /* Save the adler32 of the preset dictionary: */
      if (s.strstart !== 0) {
        putShortMSB(s, strm.adler >>> 16);
        putShortMSB(s, strm.adler & 0xffff);
      }
      strm.adler = 1; // adler32(0L, Z_NULL, 0);
    }
  }

//#ifdef GZIP
  if (s.status === EXTRA_STATE) {
    if (s.gzhead.extra/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */

      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            break;
          }
        }
        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);
        s.gzindex++;
      }
      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (s.gzindex === s.gzhead.extra.length) {
        s.gzindex = 0;
        s.status = NAME_STATE;
      }
    }
    else {
      s.status = NAME_STATE;
    }
  }
  if (s.status === NAME_STATE) {
    if (s.gzhead.name/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.name.length) {
          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.gzindex = 0;
        s.status = COMMENT_STATE;
      }
    }
    else {
      s.status = COMMENT_STATE;
    }
  }
  if (s.status === COMMENT_STATE) {
    if (s.gzhead.comment/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.comment.length) {
          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.status = HCRC_STATE;
      }
    }
    else {
      s.status = HCRC_STATE;
    }
  }
  if (s.status === HCRC_STATE) {
    if (s.gzhead.hcrc) {
      if (s.pending + 2 > s.pending_buf_size) {
        flush_pending(strm);
      }
      if (s.pending + 2 <= s.pending_buf_size) {
        put_byte(s, strm.adler & 0xff);
        put_byte(s, (strm.adler >> 8) & 0xff);
        strm.adler = 0; //crc32(0L, Z_NULL, 0);
        s.status = BUSY_STATE;
      }
    }
    else {
      s.status = BUSY_STATE;
    }
  }
//#endif

  /* Flush as much pending output as possible */
  if (s.pending !== 0) {
    flush_pending(strm);
    if (strm.avail_out === 0) {
      /* Since avail_out is 0, deflate will be called again with
       * more output space, but possibly with both pending and
       * avail_in equal to zero. There won't be anything to do,
       * but this is not an error situation so make sure we
       * return OK instead of BUF_ERROR at next call of deflate:
       */
      s.last_flush = -1;
      return Z_OK;
    }

    /* Make sure there is something to do and avoid duplicate consecutive
     * flushes. For repeated and useless calls with Z_FINISH, we keep
     * returning Z_STREAM_END instead of Z_BUF_ERROR.
     */
  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&
    flush !== Z_FINISH) {
    return err(strm, Z_BUF_ERROR);
  }

  /* User must not provide more input after the first FINISH: */
  if (s.status === FINISH_STATE && strm.avail_in !== 0) {
    return err(strm, Z_BUF_ERROR);
  }

  /* Start a new block or continue the current one.
   */
  if (strm.avail_in !== 0 || s.lookahead !== 0 ||
    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {
    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :
      (s.strategy === Z_RLE ? deflate_rle(s, flush) :
        configuration_table[s.level].func(s, flush));

    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {
      s.status = FINISH_STATE;
    }
    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {
      if (strm.avail_out === 0) {
        s.last_flush = -1;
        /* avoid BUF_ERROR next call, see above */
      }
      return Z_OK;
      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call
       * of deflate should use the same flush parameter to make sure
       * that the flush is complete. So we don't have to output an
       * empty block here, this will be done at next call. This also
       * ensures that for a very small output buffer, we emit at most
       * one empty block.
       */
    }
    if (bstate === BS_BLOCK_DONE) {
      if (flush === Z_PARTIAL_FLUSH) {
        trees._tr_align(s);
      }
      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */

        trees._tr_stored_block(s, 0, 0, false);
        /* For a full flush, this empty block will be recognized
         * as a special marker by inflate_sync().
         */
        if (flush === Z_FULL_FLUSH) {
          /*** CLEAR_HASH(s); ***/             /* forget history */
          zero(s.head); // Fill with NIL (= 0);

          if (s.lookahead === 0) {
            s.strstart = 0;
            s.block_start = 0;
            s.insert = 0;
          }
        }
      }
      flush_pending(strm);
      if (strm.avail_out === 0) {
        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */
        return Z_OK;
      }
    }
  }
  //Assert(strm->avail_out > 0, "bug2");
  //if (strm.avail_out <= 0) { throw new Error("bug2");}

  if (flush !== Z_FINISH) { return Z_OK; }
  if (s.wrap <= 0) { return Z_STREAM_END; }

  /* Write the trailer */
  if (s.wrap === 2) {
    put_byte(s, strm.adler & 0xff);
    put_byte(s, (strm.adler >> 8) & 0xff);
    put_byte(s, (strm.adler >> 16) & 0xff);
    put_byte(s, (strm.adler >> 24) & 0xff);
    put_byte(s, strm.total_in & 0xff);
    put_byte(s, (strm.total_in >> 8) & 0xff);
    put_byte(s, (strm.total_in >> 16) & 0xff);
    put_byte(s, (strm.total_in >> 24) & 0xff);
  }
  else
  {
    putShortMSB(s, strm.adler >>> 16);
    putShortMSB(s, strm.adler & 0xffff);
  }

  flush_pending(strm);
  /* If avail_out is zero, the application will call deflate again
   * to flush the rest.
   */
  if (s.wrap > 0) { s.wrap = -s.wrap; }
  /* write the trailer only once! */
  return s.pending !== 0 ? Z_OK : Z_STREAM_END;
}

function deflateEnd(strm) {
  var status;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  status = strm.state.status;
  if (status !== INIT_STATE &&
    status !== EXTRA_STATE &&
    status !== NAME_STATE &&
    status !== COMMENT_STATE &&
    status !== HCRC_STATE &&
    status !== BUSY_STATE &&
    status !== FINISH_STATE
  ) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.state = null;

  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;
}


/* =========================================================================
 * Initializes the compression dictionary from the given byte
 * sequence without producing any compressed output.
 */
function deflateSetDictionary(strm, dictionary) {
  var dictLength = dictionary.length;

  var s;
  var str, n;
  var wrap;
  var avail;
  var next;
  var input;
  var tmpDict;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  s = strm.state;
  wrap = s.wrap;

  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {
    return Z_STREAM_ERROR;
  }

  /* when using zlib wrappers, compute Adler-32 for provided dictionary */
  if (wrap === 1) {
    /* adler32(strm->adler, dictionary, dictLength); */
    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);
  }

  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */

  /* if dictionary would fill window, just replace the history */
  if (dictLength >= s.w_size) {
    if (wrap === 0) {            /* already empty otherwise */
      /*** CLEAR_HASH(s); ***/
      zero(s.head); // Fill with NIL (= 0);
      s.strstart = 0;
      s.block_start = 0;
      s.insert = 0;
    }
    /* use the tail */
    // dictionary = dictionary.slice(dictLength - s.w_size);
    tmpDict = new utils.Buf8(s.w_size);
    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);
    dictionary = tmpDict;
    dictLength = s.w_size;
  }
  /* insert dictionary into window and hash */
  avail = strm.avail_in;
  next = strm.next_in;
  input = strm.input;
  strm.avail_in = dictLength;
  strm.next_in = 0;
  strm.input = dictionary;
  fill_window(s);
  while (s.lookahead >= MIN_MATCH) {
    str = s.strstart;
    n = s.lookahead - (MIN_MATCH - 1);
    do {
      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;

      s.prev[str & s.w_mask] = s.head[s.ins_h];

      s.head[s.ins_h] = str;
      str++;
    } while (--n);
    s.strstart = str;
    s.lookahead = MIN_MATCH - 1;
    fill_window(s);
  }
  s.strstart += s.lookahead;
  s.block_start = s.strstart;
  s.insert = s.lookahead;
  s.lookahead = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  strm.next_in = next;
  strm.input = input;
  strm.avail_in = avail;
  s.wrap = wrap;
  return Z_OK;
}


exports.deflateInit = deflateInit;
exports.deflateInit2 = deflateInit2;
exports.deflateReset = deflateReset;
exports.deflateResetKeep = deflateResetKeep;
exports.deflateSetHeader = deflateSetHeader;
exports.deflate = deflate;
exports.deflateEnd = deflateEnd;
exports.deflateSetDictionary = deflateSetDictionary;
exports.deflateInfo = 'pako deflate (from Nodeca project)';

/* Not implemented
exports.deflateBound = deflateBound;
exports.deflateCopy = deflateCopy;
exports.deflateParams = deflateParams;
exports.deflatePending = deflatePending;
exports.deflatePrime = deflatePrime;
exports.deflateTune = deflateTune;
*/


/***/ }),

/***/ "../node_modules/pako/lib/zlib/gzheader.js":
/*!*************************************************!*\
  !*** ../node_modules/pako/lib/zlib/gzheader.js ***!
  \*************************************************/
/***/ ((module) => {



// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function GZheader() {
  /* true if compressed data believed to be text */
  this.text       = 0;
  /* modification time */
  this.time       = 0;
  /* extra flags (not used when writing a gzip file) */
  this.xflags     = 0;
  /* operating system */
  this.os         = 0;
  /* pointer to extra field or Z_NULL if none */
  this.extra      = null;
  /* extra field length (valid if extra != Z_NULL) */
  this.extra_len  = 0; // Actually, we don't need it in JS,
                       // but leave for few code modifications

  //
  // Setup limits is not necessary because in js we should not preallocate memory
  // for inflate use constant limit in 65536 bytes
  //

  /* space at extra (only when reading header) */
  // this.extra_max  = 0;
  /* pointer to zero-terminated file name or Z_NULL */
  this.name       = '';
  /* space at name (only when reading header) */
  // this.name_max   = 0;
  /* pointer to zero-terminated comment or Z_NULL */
  this.comment    = '';
  /* space at comment (only when reading header) */
  // this.comm_max   = 0;
  /* true if there was or will be a header crc */
  this.hcrc       = 0;
  /* true when done reading gzip header (not used when writing a gzip file) */
  this.done       = false;
}

module.exports = GZheader;


/***/ }),

/***/ "../node_modules/pako/lib/zlib/inffast.js":
/*!************************************************!*\
  !*** ../node_modules/pako/lib/zlib/inffast.js ***!
  \************************************************/
/***/ ((module) => {



// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// See state defs from inflate.js
var BAD = 30;       /* got a data error -- remain here until reset */
var TYPE = 12;      /* i: waiting for type bits, including last-flag bit */

/*
   Decode literal, length, and distance codes and write out the resulting
   literal and match bytes until either not enough input or output is
   available, an end-of-block is encountered, or a data error is encountered.
   When large enough input and output buffers are supplied to inflate(), for
   example, a 16K input buffer and a 64K output buffer, more than 95% of the
   inflate execution time is spent in this routine.

   Entry assumptions:

        state.mode === LEN
        strm.avail_in >= 6
        strm.avail_out >= 258
        start >= strm.avail_out
        state.bits < 8

   On return, state.mode is one of:

        LEN -- ran out of enough output space or enough available input
        TYPE -- reached end of block code, inflate() to interpret next block
        BAD -- error in block data

   Notes:

    - The maximum input bits used by a length/distance pair is 15 bits for the
      length code, 5 bits for the length extra, 15 bits for the distance code,
      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.
      Therefore if strm.avail_in >= 6, then there is enough input to avoid
      checking for available input while decoding.

    - The maximum bytes that a single length/distance pair can output is 258
      bytes, which is the maximum length that can be coded.  inflate_fast()
      requires strm.avail_out >= 258 for each loop to avoid checking for
      output space.
 */
module.exports = function inflate_fast(strm, start) {
  var state;
  var _in;                    /* local strm.input */
  var last;                   /* have enough input while in < last */
  var _out;                   /* local strm.output */
  var beg;                    /* inflate()'s initial strm.output */
  var end;                    /* while out < end, enough space available */
//#ifdef INFLATE_STRICT
  var dmax;                   /* maximum distance from zlib header */
//#endif
  var wsize;                  /* window size or zero if not using window */
  var whave;                  /* valid bytes in the window */
  var wnext;                  /* window write index */
  // Use `s_window` instead `window`, avoid conflict with instrumentation tools
  var s_window;               /* allocated sliding window, if wsize != 0 */
  var hold;                   /* local strm.hold */
  var bits;                   /* local strm.bits */
  var lcode;                  /* local strm.lencode */
  var dcode;                  /* local strm.distcode */
  var lmask;                  /* mask for first level of length codes */
  var dmask;                  /* mask for first level of distance codes */
  var here;                   /* retrieved table entry */
  var op;                     /* code bits, operation, extra bits, or */
                              /*  window position, window bytes to copy */
  var len;                    /* match length, unused bytes */
  var dist;                   /* match distance */
  var from;                   /* where to copy match from */
  var from_source;


  var input, output; // JS specific, because we have no pointers

  /* copy state to local variables */
  state = strm.state;
  //here = state.here;
  _in = strm.next_in;
  input = strm.input;
  last = _in + (strm.avail_in - 5);
  _out = strm.next_out;
  output = strm.output;
  beg = _out - (start - strm.avail_out);
  end = _out + (strm.avail_out - 257);
//#ifdef INFLATE_STRICT
  dmax = state.dmax;
//#endif
  wsize = state.wsize;
  whave = state.whave;
  wnext = state.wnext;
  s_window = state.window;
  hold = state.hold;
  bits = state.bits;
  lcode = state.lencode;
  dcode = state.distcode;
  lmask = (1 << state.lenbits) - 1;
  dmask = (1 << state.distbits) - 1;


  /* decode literals and length/distances until end-of-block or not enough
     input data or output space */

  top:
  do {
    if (bits < 15) {
      hold += input[_in++] << bits;
      bits += 8;
      hold += input[_in++] << bits;
      bits += 8;
    }

    here = lcode[hold & lmask];

    dolen:
    for (;;) { // Goto emulation
      op = here >>> 24/*here.bits*/;
      hold >>>= op;
      bits -= op;
      op = (here >>> 16) & 0xff/*here.op*/;
      if (op === 0) {                          /* literal */
        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
        //        "inflate:         literal '%c'\n" :
        //        "inflate:         literal 0x%02x\n", here.val));
        output[_out++] = here & 0xffff/*here.val*/;
      }
      else if (op & 16) {                     /* length base */
        len = here & 0xffff/*here.val*/;
        op &= 15;                           /* number of extra bits */
        if (op) {
          if (bits < op) {
            hold += input[_in++] << bits;
            bits += 8;
          }
          len += hold & ((1 << op) - 1);
          hold >>>= op;
          bits -= op;
        }
        //Tracevv((stderr, "inflate:         length %u\n", len));
        if (bits < 15) {
          hold += input[_in++] << bits;
          bits += 8;
          hold += input[_in++] << bits;
          bits += 8;
        }
        here = dcode[hold & dmask];

        dodist:
        for (;;) { // goto emulation
          op = here >>> 24/*here.bits*/;
          hold >>>= op;
          bits -= op;
          op = (here >>> 16) & 0xff/*here.op*/;

          if (op & 16) {                      /* distance base */
            dist = here & 0xffff/*here.val*/;
            op &= 15;                       /* number of extra bits */
            if (bits < op) {
              hold += input[_in++] << bits;
              bits += 8;
              if (bits < op) {
                hold += input[_in++] << bits;
                bits += 8;
              }
            }
            dist += hold & ((1 << op) - 1);
//#ifdef INFLATE_STRICT
            if (dist > dmax) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break top;
            }
//#endif
            hold >>>= op;
            bits -= op;
            //Tracevv((stderr, "inflate:         distance %u\n", dist));
            op = _out - beg;                /* max distance in output */
            if (dist > op) {                /* see if copy from window */
              op = dist - op;               /* distance back in window */
              if (op > whave) {
                if (state.sane) {
                  strm.msg = 'invalid distance too far back';
                  state.mode = BAD;
                  break top;
                }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//                if (len <= op - whave) {
//                  do {
//                    output[_out++] = 0;
//                  } while (--len);
//                  continue top;
//                }
//                len -= op - whave;
//                do {
//                  output[_out++] = 0;
//                } while (--op > whave);
//                if (op === 0) {
//                  from = _out - dist;
//                  do {
//                    output[_out++] = output[from++];
//                  } while (--len);
//                  continue top;
//                }
//#endif
              }
              from = 0; // window index
              from_source = s_window;
              if (wnext === 0) {           /* very common case */
                from += wsize - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              else if (wnext < op) {      /* wrap around window */
                from += wsize + wnext - op;
                op -= wnext;
                if (op < len) {         /* some from end of window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = 0;
                  if (wnext < len) {  /* some from start of window */
                    op = wnext;
                    len -= op;
                    do {
                      output[_out++] = s_window[from++];
                    } while (--op);
                    from = _out - dist;      /* rest from output */
                    from_source = output;
                  }
                }
              }
              else {                      /* contiguous in window */
                from += wnext - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              while (len > 2) {
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                len -= 3;
              }
              if (len) {
                output[_out++] = from_source[from++];
                if (len > 1) {
                  output[_out++] = from_source[from++];
                }
              }
            }
            else {
              from = _out - dist;          /* copy direct from output */
              do {                        /* minimum length is three */
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                len -= 3;
              } while (len > 2);
              if (len) {
                output[_out++] = output[from++];
                if (len > 1) {
                  output[_out++] = output[from++];
                }
              }
            }
          }
          else if ((op & 64) === 0) {          /* 2nd level distance code */
            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
            continue dodist;
          }
          else {
            strm.msg = 'invalid distance code';
            state.mode = BAD;
            break top;
          }

          break; // need to emulate goto via "continue"
        }
      }
      else if ((op & 64) === 0) {              /* 2nd level length code */
        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
        continue dolen;
      }
      else if (op & 32) {                     /* end-of-block */
        //Tracevv((stderr, "inflate:         end of block\n"));
        state.mode = TYPE;
        break top;
      }
      else {
        strm.msg = 'invalid literal/length code';
        state.mode = BAD;
        break top;
      }

      break; // need to emulate goto via "continue"
    }
  } while (_in < last && _out < end);

  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */
  len = bits >> 3;
  _in -= len;
  bits -= len << 3;
  hold &= (1 << bits) - 1;

  /* update state and return */
  strm.next_in = _in;
  strm.next_out = _out;
  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));
  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));
  state.hold = hold;
  state.bits = bits;
  return;
};


/***/ }),

/***/ "../node_modules/pako/lib/zlib/inflate.js":
/*!************************************************!*\
  !*** ../node_modules/pako/lib/zlib/inflate.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils         = __webpack_require__(/*! ../utils/common */ "../node_modules/pako/lib/utils/common.js");
var adler32       = __webpack_require__(/*! ./adler32 */ "../node_modules/pako/lib/zlib/adler32.js");
var crc32         = __webpack_require__(/*! ./crc32 */ "../node_modules/pako/lib/zlib/crc32.js");
var inflate_fast  = __webpack_require__(/*! ./inffast */ "../node_modules/pako/lib/zlib/inffast.js");
var inflate_table = __webpack_require__(/*! ./inftrees */ "../node_modules/pako/lib/zlib/inftrees.js");

var CODES = 0;
var LENS = 1;
var DISTS = 2;

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
//var Z_NO_FLUSH      = 0;
//var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
//var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;

/* The deflate compression method */
var Z_DEFLATED  = 8;


/* STATES ====================================================================*/
/* ===========================================================================*/


var    HEAD = 1;       /* i: waiting for magic header */
var    FLAGS = 2;      /* i: waiting for method and flags (gzip) */
var    TIME = 3;       /* i: waiting for modification time (gzip) */
var    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */
var    EXLEN = 5;      /* i: waiting for extra length (gzip) */
var    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */
var    NAME = 7;       /* i: waiting for end of file name (gzip) */
var    COMMENT = 8;    /* i: waiting for end of comment (gzip) */
var    HCRC = 9;       /* i: waiting for header crc (gzip) */
var    DICTID = 10;    /* i: waiting for dictionary check value */
var    DICT = 11;      /* waiting for inflateSetDictionary() call */
var        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */
var        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */
var        STORED = 14;    /* i: waiting for stored size (length and complement) */
var        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */
var        COPY = 16;      /* i/o: waiting for input or output to copy stored block */
var        TABLE = 17;     /* i: waiting for dynamic block table lengths */
var        LENLENS = 18;   /* i: waiting for code length code lengths */
var        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */
var            LEN_ = 20;      /* i: same as LEN below, but only first time in */
var            LEN = 21;       /* i: waiting for length/lit/eob code */
var            LENEXT = 22;    /* i: waiting for length extra bits */
var            DIST = 23;      /* i: waiting for distance code */
var            DISTEXT = 24;   /* i: waiting for distance extra bits */
var            MATCH = 25;     /* o: waiting for output space to copy string */
var            LIT = 26;       /* o: waiting for output space to write literal */
var    CHECK = 27;     /* i: waiting for 32-bit check value */
var    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */
var    DONE = 29;      /* finished check, done -- remain here until reset */
var    BAD = 30;       /* got a data error -- remain here until reset */
var    MEM = 31;       /* got an inflate() memory error -- remain here until reset */
var    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */

/* ===========================================================================*/



var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);

var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_WBITS = MAX_WBITS;


function zswap32(q) {
  return  (((q >>> 24) & 0xff) +
          ((q >>> 8) & 0xff00) +
          ((q & 0xff00) << 8) +
          ((q & 0xff) << 24));
}


function InflateState() {
  this.mode = 0;             /* current inflate mode */
  this.last = false;          /* true if processing last block */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.havedict = false;      /* true if dictionary provided */
  this.flags = 0;             /* gzip header method and flags (0 if zlib) */
  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */
  this.check = 0;             /* protected copy of check value */
  this.total = 0;             /* protected copy of output count */
  // TODO: may be {}
  this.head = null;           /* where to save gzip header information */

  /* sliding window */
  this.wbits = 0;             /* log base 2 of requested window size */
  this.wsize = 0;             /* window size or zero if not using window */
  this.whave = 0;             /* valid bytes in the window */
  this.wnext = 0;             /* window write index */
  this.window = null;         /* allocated sliding window, if needed */

  /* bit accumulator */
  this.hold = 0;              /* input bit accumulator */
  this.bits = 0;              /* number of bits in "in" */

  /* for string and stored block copying */
  this.length = 0;            /* literal or length of data to copy */
  this.offset = 0;            /* distance back to copy string from */

  /* for table and code decoding */
  this.extra = 0;             /* extra bits needed */

  /* fixed and dynamic code tables */
  this.lencode = null;          /* starting table for length/literal codes */
  this.distcode = null;         /* starting table for distance codes */
  this.lenbits = 0;           /* index bits for lencode */
  this.distbits = 0;          /* index bits for distcode */

  /* dynamic table building */
  this.ncode = 0;             /* number of code length code lengths */
  this.nlen = 0;              /* number of length code lengths */
  this.ndist = 0;             /* number of distance code lengths */
  this.have = 0;              /* number of code lengths in lens[] */
  this.next = null;              /* next available space in codes[] */

  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */
  this.work = new utils.Buf16(288); /* work area for code table building */

  /*
   because we don't have pointers in js, we use lencode and distcode directly
   as buffers so we don't need codes
  */
  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */
  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */
  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */
  this.sane = 0;                   /* if false, allow invalid distance too far */
  this.back = 0;                   /* bits back of last unprocessed length/lit */
  this.was = 0;                    /* initial length of match */
}

function inflateResetKeep(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  strm.total_in = strm.total_out = state.total = 0;
  strm.msg = ''; /*Z_NULL*/
  if (state.wrap) {       /* to support ill-conceived Java test suite */
    strm.adler = state.wrap & 1;
  }
  state.mode = HEAD;
  state.last = 0;
  state.havedict = 0;
  state.dmax = 32768;
  state.head = null/*Z_NULL*/;
  state.hold = 0;
  state.bits = 0;
  //state.lencode = state.distcode = state.next = state.codes;
  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);
  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);

  state.sane = 1;
  state.back = -1;
  //Tracev((stderr, "inflate: reset\n"));
  return Z_OK;
}

function inflateReset(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  state.wsize = 0;
  state.whave = 0;
  state.wnext = 0;
  return inflateResetKeep(strm);

}

function inflateReset2(strm, windowBits) {
  var wrap;
  var state;

  /* get the state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;

  /* extract wrap request from windowBits parameter */
  if (windowBits < 0) {
    wrap = 0;
    windowBits = -windowBits;
  }
  else {
    wrap = (windowBits >> 4) + 1;
    if (windowBits < 48) {
      windowBits &= 15;
    }
  }

  /* set number of window bits, free window if different */
  if (windowBits && (windowBits < 8 || windowBits > 15)) {
    return Z_STREAM_ERROR;
  }
  if (state.window !== null && state.wbits !== windowBits) {
    state.window = null;
  }

  /* update state and reset the rest of it */
  state.wrap = wrap;
  state.wbits = windowBits;
  return inflateReset(strm);
}

function inflateInit2(strm, windowBits) {
  var ret;
  var state;

  if (!strm) { return Z_STREAM_ERROR; }
  //strm.msg = Z_NULL;                 /* in case we return an error */

  state = new InflateState();

  //if (state === Z_NULL) return Z_MEM_ERROR;
  //Tracev((stderr, "inflate: allocated\n"));
  strm.state = state;
  state.window = null/*Z_NULL*/;
  ret = inflateReset2(strm, windowBits);
  if (ret !== Z_OK) {
    strm.state = null/*Z_NULL*/;
  }
  return ret;
}

function inflateInit(strm) {
  return inflateInit2(strm, DEF_WBITS);
}


/*
 Return state with length and distance decoding tables and index sizes set to
 fixed code decoding.  Normally this returns fixed tables from inffixed.h.
 If BUILDFIXED is defined, then instead this routine builds the tables the
 first time it's called, and returns those tables the first time and
 thereafter.  This reduces the size of the code by about 2K bytes, in
 exchange for a little execution time.  However, BUILDFIXED should not be
 used for threaded applications, since the rewriting of the tables and virgin
 may not be thread-safe.
 */
var virgin = true;

var lenfix, distfix; // We have no pointers in JS, so keep tables separate

function fixedtables(state) {
  /* build fixed huffman tables if first call (may not be thread safe) */
  if (virgin) {
    var sym;

    lenfix = new utils.Buf32(512);
    distfix = new utils.Buf32(32);

    /* literal/length table */
    sym = 0;
    while (sym < 144) { state.lens[sym++] = 8; }
    while (sym < 256) { state.lens[sym++] = 9; }
    while (sym < 280) { state.lens[sym++] = 7; }
    while (sym < 288) { state.lens[sym++] = 8; }

    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });

    /* distance table */
    sym = 0;
    while (sym < 32) { state.lens[sym++] = 5; }

    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });

    /* do this just once */
    virgin = false;
  }

  state.lencode = lenfix;
  state.lenbits = 9;
  state.distcode = distfix;
  state.distbits = 5;
}


/*
 Update the window with the last wsize (normally 32K) bytes written before
 returning.  If window does not exist yet, create it.  This is only called
 when a window is already in use, or when output has been written during this
 inflate call, but the end of the deflate stream has not been reached yet.
 It is also called to create a window for dictionary data when a dictionary
 is loaded.

 Providing output buffers larger than 32K to inflate() should provide a speed
 advantage, since only the last 32K of output is copied to the sliding window
 upon return from inflate(), and since all distances after the first 32K of
 output will fall in the output data, making match copies simpler and faster.
 The advantage may be dependent on the size of the processor's data caches.
 */
function updatewindow(strm, src, end, copy) {
  var dist;
  var state = strm.state;

  /* if it hasn't been done already, allocate space for the window */
  if (state.window === null) {
    state.wsize = 1 << state.wbits;
    state.wnext = 0;
    state.whave = 0;

    state.window = new utils.Buf8(state.wsize);
  }

  /* copy state->wsize or less output bytes into the circular window */
  if (copy >= state.wsize) {
    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);
    state.wnext = 0;
    state.whave = state.wsize;
  }
  else {
    dist = state.wsize - state.wnext;
    if (dist > copy) {
      dist = copy;
    }
    //zmemcpy(state->window + state->wnext, end - copy, dist);
    utils.arraySet(state.window, src, end - copy, dist, state.wnext);
    copy -= dist;
    if (copy) {
      //zmemcpy(state->window, end - copy, copy);
      utils.arraySet(state.window, src, end - copy, copy, 0);
      state.wnext = copy;
      state.whave = state.wsize;
    }
    else {
      state.wnext += dist;
      if (state.wnext === state.wsize) { state.wnext = 0; }
      if (state.whave < state.wsize) { state.whave += dist; }
    }
  }
  return 0;
}

function inflate(strm, flush) {
  var state;
  var input, output;          // input/output buffers
  var next;                   /* next input INDEX */
  var put;                    /* next output INDEX */
  var have, left;             /* available input and output */
  var hold;                   /* bit buffer */
  var bits;                   /* bits in bit buffer */
  var _in, _out;              /* save starting available input and output */
  var copy;                   /* number of stored or match bytes to copy */
  var from;                   /* where to copy match bytes from */
  var from_source;
  var here = 0;               /* current decoding table entry */
  var here_bits, here_op, here_val; // paked "here" denormalized (JS specific)
  //var last;                   /* parent table entry */
  var last_bits, last_op, last_val; // paked "last" denormalized (JS specific)
  var len;                    /* length to copy for repeats, bits to drop */
  var ret;                    /* return code */
  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */
  var opts;

  var n; // temporary var for NEED_BITS

  var order = /* permutation of code lengths */
    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];


  if (!strm || !strm.state || !strm.output ||
      (!strm.input && strm.avail_in !== 0)) {
    return Z_STREAM_ERROR;
  }

  state = strm.state;
  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */


  //--- LOAD() ---
  put = strm.next_out;
  output = strm.output;
  left = strm.avail_out;
  next = strm.next_in;
  input = strm.input;
  have = strm.avail_in;
  hold = state.hold;
  bits = state.bits;
  //---

  _in = have;
  _out = left;
  ret = Z_OK;

  inf_leave: // goto emulation
  for (;;) {
    switch (state.mode) {
      case HEAD:
        if (state.wrap === 0) {
          state.mode = TYPEDO;
          break;
        }
        //=== NEEDBITS(16);
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */
          state.check = 0/*crc32(0L, Z_NULL, 0)*/;
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//

          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          state.mode = FLAGS;
          break;
        }
        state.flags = 0;           /* expect zlib header */
        if (state.head) {
          state.head.done = false;
        }
        if (!(state.wrap & 1) ||   /* check if zlib header allowed */
          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {
          strm.msg = 'incorrect header check';
          state.mode = BAD;
          break;
        }
        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
        len = (hold & 0x0f)/*BITS(4)*/ + 8;
        if (state.wbits === 0) {
          state.wbits = len;
        }
        else if (len > state.wbits) {
          strm.msg = 'invalid window size';
          state.mode = BAD;
          break;
        }
        state.dmax = 1 << len;
        //Tracev((stderr, "inflate:   zlib header ok\n"));
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = hold & 0x200 ? DICTID : TYPE;
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        break;
      case FLAGS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.flags = hold;
        if ((state.flags & 0xff) !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        if (state.flags & 0xe000) {
          strm.msg = 'unknown header flags set';
          state.mode = BAD;
          break;
        }
        if (state.head) {
          state.head.text = ((hold >> 8) & 1);
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = TIME;
        /* falls through */
      case TIME:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.time = hold;
        }
        if (state.flags & 0x0200) {
          //=== CRC4(state.check, hold)
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          hbuf[2] = (hold >>> 16) & 0xff;
          hbuf[3] = (hold >>> 24) & 0xff;
          state.check = crc32(state.check, hbuf, 4, 0);
          //===
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = OS;
        /* falls through */
      case OS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.xflags = (hold & 0xff);
          state.head.os = (hold >> 8);
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = EXLEN;
        /* falls through */
      case EXLEN:
        if (state.flags & 0x0400) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length = hold;
          if (state.head) {
            state.head.extra_len = hold;
          }
          if (state.flags & 0x0200) {
            //=== CRC2(state.check, hold);
            hbuf[0] = hold & 0xff;
            hbuf[1] = (hold >>> 8) & 0xff;
            state.check = crc32(state.check, hbuf, 2, 0);
            //===//
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        else if (state.head) {
          state.head.extra = null/*Z_NULL*/;
        }
        state.mode = EXTRA;
        /* falls through */
      case EXTRA:
        if (state.flags & 0x0400) {
          copy = state.length;
          if (copy > have) { copy = have; }
          if (copy) {
            if (state.head) {
              len = state.head.extra_len - state.length;
              if (!state.head.extra) {
                // Use untyped array for more convenient processing later
                state.head.extra = new Array(state.head.extra_len);
              }
              utils.arraySet(
                state.head.extra,
                input,
                next,
                // extra field is limited to 65536 bytes
                // - no need for additional size check
                copy,
                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                len
              );
              //zmemcpy(state.head.extra + len, next,
              //        len + copy > state.head.extra_max ?
              //        state.head.extra_max - len : copy);
            }
            if (state.flags & 0x0200) {
              state.check = crc32(state.check, input, copy, next);
            }
            have -= copy;
            next += copy;
            state.length -= copy;
          }
          if (state.length) { break inf_leave; }
        }
        state.length = 0;
        state.mode = NAME;
        /* falls through */
      case NAME:
        if (state.flags & 0x0800) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            // TODO: 2 or 1 bytes?
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.name_max*/)) {
              state.head.name += String.fromCharCode(len);
            }
          } while (len && copy < have);

          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.name = null;
        }
        state.length = 0;
        state.mode = COMMENT;
        /* falls through */
      case COMMENT:
        if (state.flags & 0x1000) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.comm_max*/)) {
              state.head.comment += String.fromCharCode(len);
            }
          } while (len && copy < have);
          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.comment = null;
        }
        state.mode = HCRC;
        /* falls through */
      case HCRC:
        if (state.flags & 0x0200) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if (hold !== (state.check & 0xffff)) {
            strm.msg = 'header crc mismatch';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        if (state.head) {
          state.head.hcrc = ((state.flags >> 9) & 1);
          state.head.done = true;
        }
        strm.adler = state.check = 0;
        state.mode = TYPE;
        break;
      case DICTID:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        strm.adler = state.check = zswap32(hold);
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = DICT;
        /* falls through */
      case DICT:
        if (state.havedict === 0) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          return Z_NEED_DICT;
        }
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = TYPE;
        /* falls through */
      case TYPE:
        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case TYPEDO:
        if (state.last) {
          //--- BYTEBITS() ---//
          hold >>>= bits & 7;
          bits -= bits & 7;
          //---//
          state.mode = CHECK;
          break;
        }
        //=== NEEDBITS(3); */
        while (bits < 3) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.last = (hold & 0x01)/*BITS(1)*/;
        //--- DROPBITS(1) ---//
        hold >>>= 1;
        bits -= 1;
        //---//

        switch ((hold & 0x03)/*BITS(2)*/) {
          case 0:                             /* stored block */
            //Tracev((stderr, "inflate:     stored block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = STORED;
            break;
          case 1:                             /* fixed block */
            fixedtables(state);
            //Tracev((stderr, "inflate:     fixed codes block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = LEN_;             /* decode codes */
            if (flush === Z_TREES) {
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
              break inf_leave;
            }
            break;
          case 2:                             /* dynamic block */
            //Tracev((stderr, "inflate:     dynamic codes block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = TABLE;
            break;
          case 3:
            strm.msg = 'invalid block type';
            state.mode = BAD;
        }
        //--- DROPBITS(2) ---//
        hold >>>= 2;
        bits -= 2;
        //---//
        break;
      case STORED:
        //--- BYTEBITS() ---// /* go to byte boundary */
        hold >>>= bits & 7;
        bits -= bits & 7;
        //---//
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {
          strm.msg = 'invalid stored block lengths';
          state.mode = BAD;
          break;
        }
        state.length = hold & 0xffff;
        //Tracev((stderr, "inflate:       stored length %u\n",
        //        state.length));
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = COPY_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case COPY_:
        state.mode = COPY;
        /* falls through */
      case COPY:
        copy = state.length;
        if (copy) {
          if (copy > have) { copy = have; }
          if (copy > left) { copy = left; }
          if (copy === 0) { break inf_leave; }
          //--- zmemcpy(put, next, copy); ---
          utils.arraySet(output, input, next, copy, put);
          //---//
          have -= copy;
          next += copy;
          left -= copy;
          put += copy;
          state.length -= copy;
          break;
        }
        //Tracev((stderr, "inflate:       stored end\n"));
        state.mode = TYPE;
        break;
      case TABLE:
        //=== NEEDBITS(14); */
        while (bits < 14) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
//#ifndef PKZIP_BUG_WORKAROUND
        if (state.nlen > 286 || state.ndist > 30) {
          strm.msg = 'too many length or distance symbols';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracev((stderr, "inflate:       table sizes ok\n"));
        state.have = 0;
        state.mode = LENLENS;
        /* falls through */
      case LENLENS:
        while (state.have < state.ncode) {
          //=== NEEDBITS(3);
          while (bits < 3) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);
          //--- DROPBITS(3) ---//
          hold >>>= 3;
          bits -= 3;
          //---//
        }
        while (state.have < 19) {
          state.lens[order[state.have++]] = 0;
        }
        // We have separate tables & no pointers. 2 commented lines below not needed.
        //state.next = state.codes;
        //state.lencode = state.next;
        // Switch to use dynamic table
        state.lencode = state.lendyn;
        state.lenbits = 7;

        opts = { bits: state.lenbits };
        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);
        state.lenbits = opts.bits;

        if (ret) {
          strm.msg = 'invalid code lengths set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, "inflate:       code lengths ok\n"));
        state.have = 0;
        state.mode = CODELENS;
        /* falls through */
      case CODELENS:
        while (state.have < state.nlen + state.ndist) {
          for (;;) {
            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          if (here_val < 16) {
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            state.lens[state.have++] = here_val;
          }
          else {
            if (here_val === 16) {
              //=== NEEDBITS(here.bits + 2);
              n = here_bits + 2;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              if (state.have === 0) {
                strm.msg = 'invalid bit length repeat';
                state.mode = BAD;
                break;
              }
              len = state.lens[state.have - 1];
              copy = 3 + (hold & 0x03);//BITS(2);
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
            }
            else if (here_val === 17) {
              //=== NEEDBITS(here.bits + 3);
              n = here_bits + 3;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 3 + (hold & 0x07);//BITS(3);
              //--- DROPBITS(3) ---//
              hold >>>= 3;
              bits -= 3;
              //---//
            }
            else {
              //=== NEEDBITS(here.bits + 7);
              n = here_bits + 7;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 11 + (hold & 0x7f);//BITS(7);
              //--- DROPBITS(7) ---//
              hold >>>= 7;
              bits -= 7;
              //---//
            }
            if (state.have + copy > state.nlen + state.ndist) {
              strm.msg = 'invalid bit length repeat';
              state.mode = BAD;
              break;
            }
            while (copy--) {
              state.lens[state.have++] = len;
            }
          }
        }

        /* handle error breaks in while */
        if (state.mode === BAD) { break; }

        /* check for end-of-block code (better have one) */
        if (state.lens[256] === 0) {
          strm.msg = 'invalid code -- missing end-of-block';
          state.mode = BAD;
          break;
        }

        /* build code tables -- note: do not change the lenbits or distbits
           values here (9 and 6) without reading the comments in inftrees.h
           concerning the ENOUGH constants, which depend on those values */
        state.lenbits = 9;

        opts = { bits: state.lenbits };
        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.lenbits = opts.bits;
        // state.lencode = state.next;

        if (ret) {
          strm.msg = 'invalid literal/lengths set';
          state.mode = BAD;
          break;
        }

        state.distbits = 6;
        //state.distcode.copy(state.codes);
        // Switch to use dynamic table
        state.distcode = state.distdyn;
        opts = { bits: state.distbits };
        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.distbits = opts.bits;
        // state.distcode = state.next;

        if (ret) {
          strm.msg = 'invalid distances set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, 'inflate:       codes ok\n'));
        state.mode = LEN_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case LEN_:
        state.mode = LEN;
        /* falls through */
      case LEN:
        if (have >= 6 && left >= 258) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          inflate_fast(strm, _out);
          //--- LOAD() ---
          put = strm.next_out;
          output = strm.output;
          left = strm.avail_out;
          next = strm.next_in;
          input = strm.input;
          have = strm.avail_in;
          hold = state.hold;
          bits = state.bits;
          //---

          if (state.mode === TYPE) {
            state.back = -1;
          }
          break;
        }
        state.back = 0;
        for (;;) {
          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if (here_bits <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if (here_op && (here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.lencode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        state.length = here_val;
        if (here_op === 0) {
          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
          //        "inflate:         literal '%c'\n" :
          //        "inflate:         literal 0x%02x\n", here.val));
          state.mode = LIT;
          break;
        }
        if (here_op & 32) {
          //Tracevv((stderr, "inflate:         end of block\n"));
          state.back = -1;
          state.mode = TYPE;
          break;
        }
        if (here_op & 64) {
          strm.msg = 'invalid literal/length code';
          state.mode = BAD;
          break;
        }
        state.extra = here_op & 15;
        state.mode = LENEXT;
        /* falls through */
      case LENEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
        //Tracevv((stderr, "inflate:         length %u\n", state.length));
        state.was = state.length;
        state.mode = DIST;
        /* falls through */
      case DIST:
        for (;;) {
          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if ((here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.distcode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        if (here_op & 64) {
          strm.msg = 'invalid distance code';
          state.mode = BAD;
          break;
        }
        state.offset = here_val;
        state.extra = (here_op) & 15;
        state.mode = DISTEXT;
        /* falls through */
      case DISTEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
//#ifdef INFLATE_STRICT
        if (state.offset > state.dmax) {
          strm.msg = 'invalid distance too far back';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracevv((stderr, "inflate:         distance %u\n", state.offset));
        state.mode = MATCH;
        /* falls through */
      case MATCH:
        if (left === 0) { break inf_leave; }
        copy = _out - left;
        if (state.offset > copy) {         /* copy from window */
          copy = state.offset - copy;
          if (copy > state.whave) {
            if (state.sane) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break;
            }
// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//          Trace((stderr, "inflate.c too far\n"));
//          copy -= state.whave;
//          if (copy > state.length) { copy = state.length; }
//          if (copy > left) { copy = left; }
//          left -= copy;
//          state.length -= copy;
//          do {
//            output[put++] = 0;
//          } while (--copy);
//          if (state.length === 0) { state.mode = LEN; }
//          break;
//#endif
          }
          if (copy > state.wnext) {
            copy -= state.wnext;
            from = state.wsize - copy;
          }
          else {
            from = state.wnext - copy;
          }
          if (copy > state.length) { copy = state.length; }
          from_source = state.window;
        }
        else {                              /* copy from output */
          from_source = output;
          from = put - state.offset;
          copy = state.length;
        }
        if (copy > left) { copy = left; }
        left -= copy;
        state.length -= copy;
        do {
          output[put++] = from_source[from++];
        } while (--copy);
        if (state.length === 0) { state.mode = LEN; }
        break;
      case LIT:
        if (left === 0) { break inf_leave; }
        output[put++] = state.length;
        left--;
        state.mode = LEN;
        break;
      case CHECK:
        if (state.wrap) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            // Use '|' instead of '+' to make sure that result is signed
            hold |= input[next++] << bits;
            bits += 8;
          }
          //===//
          _out -= left;
          strm.total_out += _out;
          state.total += _out;
          if (_out) {
            strm.adler = state.check =
                /*UPDATE(state.check, put - _out, _out);*/
                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));

          }
          _out = left;
          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too
          if ((state.flags ? hold : zswap32(hold)) !== state.check) {
            strm.msg = 'incorrect data check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   check matches trailer\n"));
        }
        state.mode = LENGTH;
        /* falls through */
      case LENGTH:
        if (state.wrap && state.flags) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if (hold !== (state.total & 0xffffffff)) {
            strm.msg = 'incorrect length check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   length matches trailer\n"));
        }
        state.mode = DONE;
        /* falls through */
      case DONE:
        ret = Z_STREAM_END;
        break inf_leave;
      case BAD:
        ret = Z_DATA_ERROR;
        break inf_leave;
      case MEM:
        return Z_MEM_ERROR;
      case SYNC:
        /* falls through */
      default:
        return Z_STREAM_ERROR;
    }
  }

  // inf_leave <- here is real place for "goto inf_leave", emulated via "break inf_leave"

  /*
     Return from inflate(), updating the total counts and the check value.
     If there was no progress during the inflate() call, return a buffer
     error.  Call updatewindow() to create and/or update the window state.
     Note: a memory error from inflate() is non-recoverable.
   */

  //--- RESTORE() ---
  strm.next_out = put;
  strm.avail_out = left;
  strm.next_in = next;
  strm.avail_in = have;
  state.hold = hold;
  state.bits = bits;
  //---

  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&
                      (state.mode < CHECK || flush !== Z_FINISH))) {
    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {
      state.mode = MEM;
      return Z_MEM_ERROR;
    }
  }
  _in -= strm.avail_in;
  _out -= strm.avail_out;
  strm.total_in += _in;
  strm.total_out += _out;
  state.total += _out;
  if (state.wrap && _out) {
    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));
  }
  strm.data_type = state.bits + (state.last ? 64 : 0) +
                    (state.mode === TYPE ? 128 : 0) +
                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);
  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {
    ret = Z_BUF_ERROR;
  }
  return ret;
}

function inflateEnd(strm) {

  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {
    return Z_STREAM_ERROR;
  }

  var state = strm.state;
  if (state.window) {
    state.window = null;
  }
  strm.state = null;
  return Z_OK;
}

function inflateGetHeader(strm, head) {
  var state;

  /* check state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }

  /* save header structure */
  state.head = head;
  head.done = false;
  return Z_OK;
}

function inflateSetDictionary(strm, dictionary) {
  var dictLength = dictionary.length;

  var state;
  var dictid;
  var ret;

  /* check state */
  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }
  state = strm.state;

  if (state.wrap !== 0 && state.mode !== DICT) {
    return Z_STREAM_ERROR;
  }

  /* check for correct dictionary identifier */
  if (state.mode === DICT) {
    dictid = 1; /* adler32(0, null, 0)*/
    /* dictid = adler32(dictid, dictionary, dictLength); */
    dictid = adler32(dictid, dictionary, dictLength, 0);
    if (dictid !== state.check) {
      return Z_DATA_ERROR;
    }
  }
  /* copy dictionary to window using updatewindow(), which will amend the
   existing dictionary if appropriate */
  ret = updatewindow(strm, dictionary, dictLength, dictLength);
  if (ret) {
    state.mode = MEM;
    return Z_MEM_ERROR;
  }
  state.havedict = 1;
  // Tracev((stderr, "inflate:   dictionary set\n"));
  return Z_OK;
}

exports.inflateReset = inflateReset;
exports.inflateReset2 = inflateReset2;
exports.inflateResetKeep = inflateResetKeep;
exports.inflateInit = inflateInit;
exports.inflateInit2 = inflateInit2;
exports.inflate = inflate;
exports.inflateEnd = inflateEnd;
exports.inflateGetHeader = inflateGetHeader;
exports.inflateSetDictionary = inflateSetDictionary;
exports.inflateInfo = 'pako inflate (from Nodeca project)';

/* Not implemented
exports.inflateCopy = inflateCopy;
exports.inflateGetDictionary = inflateGetDictionary;
exports.inflateMark = inflateMark;
exports.inflatePrime = inflatePrime;
exports.inflateSync = inflateSync;
exports.inflateSyncPoint = inflateSyncPoint;
exports.inflateUndermine = inflateUndermine;
*/


/***/ }),

/***/ "../node_modules/pako/lib/zlib/inftrees.js":
/*!*************************************************!*\
  !*** ../node_modules/pako/lib/zlib/inftrees.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils = __webpack_require__(/*! ../utils/common */ "../node_modules/pako/lib/utils/common.js");

var MAXBITS = 15;
var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);

var CODES = 0;
var LENS = 1;
var DISTS = 2;

var lbase = [ /* Length codes 257..285 base */
  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,
  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0
];

var lext = [ /* Length codes 257..285 extra */
  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78
];

var dbase = [ /* Distance codes 0..29 base */
  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,
  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,
  8193, 12289, 16385, 24577, 0, 0
];

var dext = [ /* Distance codes 0..29 extra */
  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,
  28, 28, 29, 29, 64, 64
];

module.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)
{
  var bits = opts.bits;
      //here = opts.here; /* table entry for duplication */

  var len = 0;               /* a code's length in bits */
  var sym = 0;               /* index of code symbols */
  var min = 0, max = 0;          /* minimum and maximum code lengths */
  var root = 0;              /* number of index bits for root table */
  var curr = 0;              /* number of index bits for current table */
  var drop = 0;              /* code bits to drop for sub-table */
  var left = 0;                   /* number of prefix codes available */
  var used = 0;              /* code entries in table used */
  var huff = 0;              /* Huffman code */
  var incr;              /* for incrementing code, index */
  var fill;              /* index for replicating entries */
  var low;               /* low bits for current root entry */
  var mask;              /* mask for low root bits */
  var next;             /* next available space in table */
  var base = null;     /* base value table to use */
  var base_index = 0;
//  var shoextra;    /* extra bits table to use */
  var end;                    /* use base and extra for symbol > end */
  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */
  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */
  var extra = null;
  var extra_index = 0;

  var here_bits, here_op, here_val;

  /*
   Process a set of code lengths to create a canonical Huffman code.  The
   code lengths are lens[0..codes-1].  Each length corresponds to the
   symbols 0..codes-1.  The Huffman code is generated by first sorting the
   symbols by length from short to long, and retaining the symbol order
   for codes with equal lengths.  Then the code starts with all zero bits
   for the first code of the shortest length, and the codes are integer
   increments for the same length, and zeros are appended as the length
   increases.  For the deflate format, these bits are stored backwards
   from their more natural integer increment ordering, and so when the
   decoding tables are built in the large loop below, the integer codes
   are incremented backwards.

   This routine assumes, but does not check, that all of the entries in
   lens[] are in the range 0..MAXBITS.  The caller must assure this.
   1..MAXBITS is interpreted as that code length.  zero means that that
   symbol does not occur in this code.

   The codes are sorted by computing a count of codes for each length,
   creating from that a table of starting indices for each length in the
   sorted table, and then entering the symbols in order in the sorted
   table.  The sorted table is work[], with that space being provided by
   the caller.

   The length counts are used for other purposes as well, i.e. finding
   the minimum and maximum length codes, determining if there are any
   codes at all, checking for a valid set of lengths, and looking ahead
   at length counts to determine sub-table sizes when building the
   decoding tables.
   */

  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */
  for (len = 0; len <= MAXBITS; len++) {
    count[len] = 0;
  }
  for (sym = 0; sym < codes; sym++) {
    count[lens[lens_index + sym]]++;
  }

  /* bound code lengths, force root to be within code lengths */
  root = bits;
  for (max = MAXBITS; max >= 1; max--) {
    if (count[max] !== 0) { break; }
  }
  if (root > max) {
    root = max;
  }
  if (max === 0) {                     /* no symbols to code at all */
    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */
    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;
    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;


    //table.op[opts.table_index] = 64;
    //table.bits[opts.table_index] = 1;
    //table.val[opts.table_index++] = 0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;

    opts.bits = 1;
    return 0;     /* no symbols, but wait for decoding to report error */
  }
  for (min = 1; min < max; min++) {
    if (count[min] !== 0) { break; }
  }
  if (root < min) {
    root = min;
  }

  /* check for an over-subscribed or incomplete set of lengths */
  left = 1;
  for (len = 1; len <= MAXBITS; len++) {
    left <<= 1;
    left -= count[len];
    if (left < 0) {
      return -1;
    }        /* over-subscribed */
  }
  if (left > 0 && (type === CODES || max !== 1)) {
    return -1;                      /* incomplete set */
  }

  /* generate offsets into symbol table for each length for sorting */
  offs[1] = 0;
  for (len = 1; len < MAXBITS; len++) {
    offs[len + 1] = offs[len] + count[len];
  }

  /* sort symbols by length, by symbol order within each length */
  for (sym = 0; sym < codes; sym++) {
    if (lens[lens_index + sym] !== 0) {
      work[offs[lens[lens_index + sym]]++] = sym;
    }
  }

  /*
   Create and fill in decoding tables.  In this loop, the table being
   filled is at next and has curr index bits.  The code being used is huff
   with length len.  That code is converted to an index by dropping drop
   bits off of the bottom.  For codes where len is less than drop + curr,
   those top drop + curr - len bits are incremented through all values to
   fill the table with replicated entries.

   root is the number of index bits for the root table.  When len exceeds
   root, sub-tables are created pointed to by the root entry with an index
   of the low root bits of huff.  This is saved in low to check for when a
   new sub-table should be started.  drop is zero when the root table is
   being filled, and drop is root when sub-tables are being filled.

   When a new sub-table is needed, it is necessary to look ahead in the
   code lengths to determine what size sub-table is needed.  The length
   counts are used for this, and so count[] is decremented as codes are
   entered in the tables.

   used keeps track of how many table entries have been allocated from the
   provided *table space.  It is checked for LENS and DIST tables against
   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in
   the initial root table size constants.  See the comments in inftrees.h
   for more information.

   sym increments through all symbols, and the loop terminates when
   all codes of length max, i.e. all codes, have been processed.  This
   routine permits incomplete codes, so another loop after this one fills
   in the rest of the decoding tables with invalid code markers.
   */

  /* set up for code type */
  // poor man optimization - use if-else instead of switch,
  // to avoid deopts in old v8
  if (type === CODES) {
    base = extra = work;    /* dummy value--not used */
    end = 19;

  } else if (type === LENS) {
    base = lbase;
    base_index -= 257;
    extra = lext;
    extra_index -= 257;
    end = 256;

  } else {                    /* DISTS */
    base = dbase;
    extra = dext;
    end = -1;
  }

  /* initialize opts for loop */
  huff = 0;                   /* starting code */
  sym = 0;                    /* starting code symbol */
  len = min;                  /* starting code length */
  next = table_index;              /* current table to fill in */
  curr = root;                /* current table index bits */
  drop = 0;                   /* current bits to drop from code for index */
  low = -1;                   /* trigger new sub-table when len > root */
  used = 1 << root;          /* use root table entries */
  mask = used - 1;            /* mask for comparing low */

  /* check available table space */
  if ((type === LENS && used > ENOUGH_LENS) ||
    (type === DISTS && used > ENOUGH_DISTS)) {
    return 1;
  }

  /* process all codes and make table entries */
  for (;;) {
    /* create table entry */
    here_bits = len - drop;
    if (work[sym] < end) {
      here_op = 0;
      here_val = work[sym];
    }
    else if (work[sym] > end) {
      here_op = extra[extra_index + work[sym]];
      here_val = base[base_index + work[sym]];
    }
    else {
      here_op = 32 + 64;         /* end of block */
      here_val = 0;
    }

    /* replicate for those indices with low len bits equal to huff */
    incr = 1 << (len - drop);
    fill = 1 << curr;
    min = fill;                 /* save offset to next table */
    do {
      fill -= incr;
      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;
    } while (fill !== 0);

    /* backwards increment the len-bit code huff */
    incr = 1 << (len - 1);
    while (huff & incr) {
      incr >>= 1;
    }
    if (incr !== 0) {
      huff &= incr - 1;
      huff += incr;
    } else {
      huff = 0;
    }

    /* go to next symbol, update count, len */
    sym++;
    if (--count[len] === 0) {
      if (len === max) { break; }
      len = lens[lens_index + work[sym]];
    }

    /* create new sub-table if needed */
    if (len > root && (huff & mask) !== low) {
      /* if first time, transition to sub-tables */
      if (drop === 0) {
        drop = root;
      }

      /* increment past last table */
      next += min;            /* here min is 1 << curr */

      /* determine length of next table */
      curr = len - drop;
      left = 1 << curr;
      while (curr + drop < max) {
        left -= count[curr + drop];
        if (left <= 0) { break; }
        curr++;
        left <<= 1;
      }

      /* check for enough space */
      used += 1 << curr;
      if ((type === LENS && used > ENOUGH_LENS) ||
        (type === DISTS && used > ENOUGH_DISTS)) {
        return 1;
      }

      /* point entry in root table to sub-table */
      low = huff & mask;
      /*table.op[low] = curr;
      table.bits[low] = root;
      table.val[low] = next - opts.table_index;*/
      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;
    }
  }

  /* fill in remaining table entry if code is incomplete (guaranteed to have
   at most one remaining entry, since if the code is incomplete, the
   maximum code length that was allowed to get this far is one bit) */
  if (huff !== 0) {
    //table.op[next + huff] = 64;            /* invalid code marker */
    //table.bits[next + huff] = len - drop;
    //table.val[next + huff] = 0;
    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;
  }

  /* set return parameters */
  //opts.table_index += used;
  opts.bits = root;
  return 0;
};


/***/ }),

/***/ "../node_modules/pako/lib/zlib/messages.js":
/*!*************************************************!*\
  !*** ../node_modules/pako/lib/zlib/messages.js ***!
  \*************************************************/
/***/ ((module) => {



// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

module.exports = {
  2:      'need dictionary',     /* Z_NEED_DICT       2  */
  1:      'stream end',          /* Z_STREAM_END      1  */
  0:      '',                    /* Z_OK              0  */
  '-1':   'file error',          /* Z_ERRNO         (-1) */
  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */
  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */
  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */
  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */
  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */
};


/***/ }),

/***/ "../node_modules/pako/lib/zlib/trees.js":
/*!**********************************************!*\
  !*** ../node_modules/pako/lib/zlib/trees.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

/* eslint-disable space-unary-ops */

var utils = __webpack_require__(/*! ../utils/common */ "../node_modules/pako/lib/utils/common.js");

/* Public constants ==========================================================*/
/* ===========================================================================*/


//var Z_FILTERED          = 1;
//var Z_HUFFMAN_ONLY      = 2;
//var Z_RLE               = 3;
var Z_FIXED               = 4;
//var Z_DEFAULT_STRATEGY  = 0;

/* Possible values of the data_type field (though see inflate()) */
var Z_BINARY              = 0;
var Z_TEXT                = 1;
//var Z_ASCII             = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;

/*============================================================================*/


function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }

// From zutil.h

var STORED_BLOCK = 0;
var STATIC_TREES = 1;
var DYN_TREES    = 2;
/* The three kinds of block type */

var MIN_MATCH    = 3;
var MAX_MATCH    = 258;
/* The minimum and maximum match lengths */

// From deflate.h
/* ===========================================================================
 * Internal compression state.
 */

var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */

var LITERALS      = 256;
/* number of literal bytes 0..255 */

var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */

var D_CODES       = 30;
/* number of distance codes */

var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */

var HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */

var MAX_BITS      = 15;
/* All codes must not exceed MAX_BITS bits */

var Buf_size      = 16;
/* size of bit buffer in bi_buf */


/* ===========================================================================
 * Constants
 */

var MAX_BL_BITS = 7;
/* Bit length codes must not exceed MAX_BL_BITS bits */

var END_BLOCK   = 256;
/* end of block literal code */

var REP_3_6     = 16;
/* repeat previous bit length 3-6 times (2 bits of repeat count) */

var REPZ_3_10   = 17;
/* repeat a zero length 3-10 times  (3 bits of repeat count) */

var REPZ_11_138 = 18;
/* repeat a zero length 11-138 times  (7 bits of repeat count) */

/* eslint-disable comma-spacing,array-bracket-spacing */
var extra_lbits =   /* extra bits for each length code */
  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];

var extra_dbits =   /* extra bits for each distance code */
  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];

var extra_blbits =  /* extra bits for each bit length code */
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];

var bl_order =
  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
/* eslint-enable comma-spacing,array-bracket-spacing */

/* The lengths of the bit length codes are sent in order of decreasing
 * probability, to avoid transmitting the lengths for unused bit length codes.
 */

/* ===========================================================================
 * Local data. These are initialized only once.
 */

// We pre-fill arrays with 0 to avoid uninitialized gaps

var DIST_CODE_LEN = 512; /* see definition of array dist_code below */

// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1
var static_ltree  = new Array((L_CODES + 2) * 2);
zero(static_ltree);
/* The static literal tree. Since the bit lengths are imposed, there is no
 * need for the L_CODES extra codes used during heap construction. However
 * The codes 286 and 287 are needed to build a canonical tree (see _tr_init
 * below).
 */

var static_dtree  = new Array(D_CODES * 2);
zero(static_dtree);
/* The static distance tree. (Actually a trivial tree since all codes use
 * 5 bits.)
 */

var _dist_code    = new Array(DIST_CODE_LEN);
zero(_dist_code);
/* Distance codes. The first 256 values correspond to the distances
 * 3 .. 258, the last 256 values correspond to the top 8 bits of
 * the 15 bit distances.
 */

var _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);
zero(_length_code);
/* length code for each normalized match length (0 == MIN_MATCH) */

var base_length   = new Array(LENGTH_CODES);
zero(base_length);
/* First normalized length for each code (0 = MIN_MATCH) */

var base_dist     = new Array(D_CODES);
zero(base_dist);
/* First normalized distance for each code (0 = distance of 1) */


function StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {

  this.static_tree  = static_tree;  /* static tree or NULL */
  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */
  this.extra_base   = extra_base;   /* base index for extra_bits */
  this.elems        = elems;        /* max number of elements in the tree */
  this.max_length   = max_length;   /* max bit length for the codes */

  // show if `static_tree` has data or dummy - needed for monomorphic objects
  this.has_stree    = static_tree && static_tree.length;
}


var static_l_desc;
var static_d_desc;
var static_bl_desc;


function TreeDesc(dyn_tree, stat_desc) {
  this.dyn_tree = dyn_tree;     /* the dynamic tree */
  this.max_code = 0;            /* largest code with non zero frequency */
  this.stat_desc = stat_desc;   /* the corresponding static tree */
}



function d_code(dist) {
  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];
}


/* ===========================================================================
 * Output a short LSB first on the stream.
 * IN assertion: there is enough room in pendingBuf.
 */
function put_short(s, w) {
//    put_byte(s, (uch)((w) & 0xff));
//    put_byte(s, (uch)((ush)(w) >> 8));
  s.pending_buf[s.pending++] = (w) & 0xff;
  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;
}


/* ===========================================================================
 * Send a value on a given number of bits.
 * IN assertion: length <= 16 and value fits in length bits.
 */
function send_bits(s, value, length) {
  if (s.bi_valid > (Buf_size - length)) {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    put_short(s, s.bi_buf);
    s.bi_buf = value >> (Buf_size - s.bi_valid);
    s.bi_valid += length - Buf_size;
  } else {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    s.bi_valid += length;
  }
}


function send_code(s, c, tree) {
  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);
}


/* ===========================================================================
 * Reverse the first len bits of a code, using straightforward code (a faster
 * method would use a table)
 * IN assertion: 1 <= len <= 15
 */
function bi_reverse(code, len) {
  var res = 0;
  do {
    res |= code & 1;
    code >>>= 1;
    res <<= 1;
  } while (--len > 0);
  return res >>> 1;
}


/* ===========================================================================
 * Flush the bit buffer, keeping at most 7 bits in it.
 */
function bi_flush(s) {
  if (s.bi_valid === 16) {
    put_short(s, s.bi_buf);
    s.bi_buf = 0;
    s.bi_valid = 0;

  } else if (s.bi_valid >= 8) {
    s.pending_buf[s.pending++] = s.bi_buf & 0xff;
    s.bi_buf >>= 8;
    s.bi_valid -= 8;
  }
}


/* ===========================================================================
 * Compute the optimal bit lengths for a tree and update the total bit length
 * for the current block.
 * IN assertion: the fields freq and dad are set, heap[heap_max] and
 *    above are the tree nodes sorted by increasing frequency.
 * OUT assertions: the field len is set to the optimal bit length, the
 *     array bl_count contains the frequencies for each bit length.
 *     The length opt_len is updated; static_len is also updated if stree is
 *     not null.
 */
function gen_bitlen(s, desc)
//    deflate_state *s;
//    tree_desc *desc;    /* the tree descriptor */
{
  var tree            = desc.dyn_tree;
  var max_code        = desc.max_code;
  var stree           = desc.stat_desc.static_tree;
  var has_stree       = desc.stat_desc.has_stree;
  var extra           = desc.stat_desc.extra_bits;
  var base            = desc.stat_desc.extra_base;
  var max_length      = desc.stat_desc.max_length;
  var h;              /* heap index */
  var n, m;           /* iterate over the tree elements */
  var bits;           /* bit length */
  var xbits;          /* extra bits */
  var f;              /* frequency */
  var overflow = 0;   /* number of elements with bit length too large */

  for (bits = 0; bits <= MAX_BITS; bits++) {
    s.bl_count[bits] = 0;
  }

  /* In a first pass, compute the optimal bit lengths (which may
   * overflow in the case of the bit length tree).
   */
  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */

  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {
    n = s.heap[h];
    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;
    if (bits > max_length) {
      bits = max_length;
      overflow++;
    }
    tree[n * 2 + 1]/*.Len*/ = bits;
    /* We overwrite tree[n].Dad which is no longer needed */

    if (n > max_code) { continue; } /* not a leaf node */

    s.bl_count[bits]++;
    xbits = 0;
    if (n >= base) {
      xbits = extra[n - base];
    }
    f = tree[n * 2]/*.Freq*/;
    s.opt_len += f * (bits + xbits);
    if (has_stree) {
      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);
    }
  }
  if (overflow === 0) { return; }

  // Trace((stderr,"\nbit length overflow\n"));
  /* This happens for example on obj2 and pic of the Calgary corpus */

  /* Find the first bit length which could increase: */
  do {
    bits = max_length - 1;
    while (s.bl_count[bits] === 0) { bits--; }
    s.bl_count[bits]--;      /* move one leaf down the tree */
    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */
    s.bl_count[max_length]--;
    /* The brother of the overflow item also moves one step up,
     * but this does not affect bl_count[max_length]
     */
    overflow -= 2;
  } while (overflow > 0);

  /* Now recompute all bit lengths, scanning in increasing frequency.
   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all
   * lengths instead of fixing only the wrong ones. This idea is taken
   * from 'ar' written by Haruhiko Okumura.)
   */
  for (bits = max_length; bits !== 0; bits--) {
    n = s.bl_count[bits];
    while (n !== 0) {
      m = s.heap[--h];
      if (m > max_code) { continue; }
      if (tree[m * 2 + 1]/*.Len*/ !== bits) {
        // Trace((stderr,"code %d bits %d->%d\n", m, tree[m].Len, bits));
        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;
        tree[m * 2 + 1]/*.Len*/ = bits;
      }
      n--;
    }
  }
}


/* ===========================================================================
 * Generate the codes for a given tree and bit counts (which need not be
 * optimal).
 * IN assertion: the array bl_count contains the bit length statistics for
 * the given tree and the field len is set for all tree elements.
 * OUT assertion: the field code is set for all tree elements of non
 *     zero code length.
 */
function gen_codes(tree, max_code, bl_count)
//    ct_data *tree;             /* the tree to decorate */
//    int max_code;              /* largest code with non zero frequency */
//    ushf *bl_count;            /* number of codes at each bit length */
{
  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */
  var code = 0;              /* running code value */
  var bits;                  /* bit index */
  var n;                     /* code index */

  /* The distribution counts are first used to generate the code values
   * without bit reversal.
   */
  for (bits = 1; bits <= MAX_BITS; bits++) {
    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;
  }
  /* Check that the bit counts in bl_count are consistent. The last code
   * must be all ones.
   */
  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,
  //        "inconsistent bit counts");
  //Tracev((stderr,"\ngen_codes: max_code %d ", max_code));

  for (n = 0;  n <= max_code; n++) {
    var len = tree[n * 2 + 1]/*.Len*/;
    if (len === 0) { continue; }
    /* Now reverse the bits */
    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);

    //Tracecv(tree != static_ltree, (stderr,"\nn %3d %c l %2d c %4x (%x) ",
    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));
  }
}


/* ===========================================================================
 * Initialize the various 'constant' tables.
 */
function tr_static_init() {
  var n;        /* iterates over tree elements */
  var bits;     /* bit counter */
  var length;   /* length value */
  var code;     /* code value */
  var dist;     /* distance index */
  var bl_count = new Array(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  // do check in _tr_init()
  //if (static_init_done) return;

  /* For some embedded targets, global variables are not initialized: */
/*#ifdef NO_INIT_GLOBAL_POINTERS
  static_l_desc.static_tree = static_ltree;
  static_l_desc.extra_bits = extra_lbits;
  static_d_desc.static_tree = static_dtree;
  static_d_desc.extra_bits = extra_dbits;
  static_bl_desc.extra_bits = extra_blbits;
#endif*/

  /* Initialize the mapping length (0..255) -> length code (0..28) */
  length = 0;
  for (code = 0; code < LENGTH_CODES - 1; code++) {
    base_length[code] = length;
    for (n = 0; n < (1 << extra_lbits[code]); n++) {
      _length_code[length++] = code;
    }
  }
  //Assert (length == 256, "tr_static_init: length != 256");
  /* Note that the length 255 (match length 258) can be represented
   * in two different ways: code 284 + 5 bits or code 285, so we
   * overwrite length_code[255] to use the best encoding:
   */
  _length_code[length - 1] = code;

  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */
  dist = 0;
  for (code = 0; code < 16; code++) {
    base_dist[code] = dist;
    for (n = 0; n < (1 << extra_dbits[code]); n++) {
      _dist_code[dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: dist != 256");
  dist >>= 7; /* from now on, all distances are divided by 128 */
  for (; code < D_CODES; code++) {
    base_dist[code] = dist << 7;
    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {
      _dist_code[256 + dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: 256+dist != 512");

  /* Construct the codes of the static literal tree */
  for (bits = 0; bits <= MAX_BITS; bits++) {
    bl_count[bits] = 0;
  }

  n = 0;
  while (n <= 143) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  while (n <= 255) {
    static_ltree[n * 2 + 1]/*.Len*/ = 9;
    n++;
    bl_count[9]++;
  }
  while (n <= 279) {
    static_ltree[n * 2 + 1]/*.Len*/ = 7;
    n++;
    bl_count[7]++;
  }
  while (n <= 287) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  /* Codes 286 and 287 do not exist, but we must include them in the
   * tree construction to get a canonical Huffman tree (longest code
   * all ones)
   */
  gen_codes(static_ltree, L_CODES + 1, bl_count);

  /* The static distance tree is trivial: */
  for (n = 0; n < D_CODES; n++) {
    static_dtree[n * 2 + 1]/*.Len*/ = 5;
    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);
  }

  // Now data ready and we can init static trees
  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);
  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);
  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);

  //static_init_done = true;
}


/* ===========================================================================
 * Initialize a new block.
 */
function init_block(s) {
  var n; /* iterates over tree elements */

  /* Initialize the trees. */
  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }

  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;
  s.opt_len = s.static_len = 0;
  s.last_lit = s.matches = 0;
}


/* ===========================================================================
 * Flush the bit buffer and align the output on a byte boundary
 */
function bi_windup(s)
{
  if (s.bi_valid > 8) {
    put_short(s, s.bi_buf);
  } else if (s.bi_valid > 0) {
    //put_byte(s, (Byte)s->bi_buf);
    s.pending_buf[s.pending++] = s.bi_buf;
  }
  s.bi_buf = 0;
  s.bi_valid = 0;
}

/* ===========================================================================
 * Copy a stored block, storing first the length and its
 * one's complement if requested.
 */
function copy_block(s, buf, len, header)
//DeflateState *s;
//charf    *buf;    /* the input data */
//unsigned len;     /* its length */
//int      header;  /* true if block header must be written */
{
  bi_windup(s);        /* align on byte boundary */

  if (header) {
    put_short(s, len);
    put_short(s, ~len);
  }
//  while (len--) {
//    put_byte(s, *buf++);
//  }
  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);
  s.pending += len;
}

/* ===========================================================================
 * Compares to subtrees, using the tree depth as tie breaker when
 * the subtrees have equal frequency. This minimizes the worst case length.
 */
function smaller(tree, n, m, depth) {
  var _n2 = n * 2;
  var _m2 = m * 2;
  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||
         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));
}

/* ===========================================================================
 * Restore the heap property by moving down the tree starting at node k,
 * exchanging a node with the smallest of its two sons if necessary, stopping
 * when the heap property is re-established (each father smaller than its
 * two sons).
 */
function pqdownheap(s, tree, k)
//    deflate_state *s;
//    ct_data *tree;  /* the tree to restore */
//    int k;               /* node to move down */
{
  var v = s.heap[k];
  var j = k << 1;  /* left son of k */
  while (j <= s.heap_len) {
    /* Set j to the smallest of the two sons: */
    if (j < s.heap_len &&
      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {
      j++;
    }
    /* Exit if v is smaller than both sons */
    if (smaller(tree, v, s.heap[j], s.depth)) { break; }

    /* Exchange v with the smallest son */
    s.heap[k] = s.heap[j];
    k = j;

    /* And continue down the tree, setting j to the left son of k */
    j <<= 1;
  }
  s.heap[k] = v;
}


// inlined manually
// var SMALLEST = 1;

/* ===========================================================================
 * Send the block data compressed using the given Huffman trees
 */
function compress_block(s, ltree, dtree)
//    deflate_state *s;
//    const ct_data *ltree; /* literal tree */
//    const ct_data *dtree; /* distance tree */
{
  var dist;           /* distance of matched string */
  var lc;             /* match length or unmatched char (if dist == 0) */
  var lx = 0;         /* running index in l_buf */
  var code;           /* the code to send */
  var extra;          /* number of extra bits to send */

  if (s.last_lit !== 0) {
    do {
      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);
      lc = s.pending_buf[s.l_buf + lx];
      lx++;

      if (dist === 0) {
        send_code(s, lc, ltree); /* send a literal byte */
        //Tracecv(isgraph(lc), (stderr," '%c' ", lc));
      } else {
        /* Here, lc is the match length - MIN_MATCH */
        code = _length_code[lc];
        send_code(s, code + LITERALS + 1, ltree); /* send the length code */
        extra = extra_lbits[code];
        if (extra !== 0) {
          lc -= base_length[code];
          send_bits(s, lc, extra);       /* send the extra length bits */
        }
        dist--; /* dist is now the match distance - 1 */
        code = d_code(dist);
        //Assert (code < D_CODES, "bad d_code");

        send_code(s, code, dtree);       /* send the distance code */
        extra = extra_dbits[code];
        if (extra !== 0) {
          dist -= base_dist[code];
          send_bits(s, dist, extra);   /* send the extra distance bits */
        }
      } /* literal or match pair ? */

      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */
      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,
      //       "pendingBuf overflow");

    } while (lx < s.last_lit);
  }

  send_code(s, END_BLOCK, ltree);
}


/* ===========================================================================
 * Construct one Huffman tree and assigns the code bit strings and lengths.
 * Update the total bit length for the current block.
 * IN assertion: the field freq is set for all tree elements.
 * OUT assertions: the fields len and code are set to the optimal bit length
 *     and corresponding code. The length opt_len is updated; static_len is
 *     also updated if stree is not null. The field max_code is set.
 */
function build_tree(s, desc)
//    deflate_state *s;
//    tree_desc *desc; /* the tree descriptor */
{
  var tree     = desc.dyn_tree;
  var stree    = desc.stat_desc.static_tree;
  var has_stree = desc.stat_desc.has_stree;
  var elems    = desc.stat_desc.elems;
  var n, m;          /* iterate over heap elements */
  var max_code = -1; /* largest code with non zero frequency */
  var node;          /* new node being created */

  /* Construct the initial heap, with least frequent element in
   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].
   * heap[0] is not used.
   */
  s.heap_len = 0;
  s.heap_max = HEAP_SIZE;

  for (n = 0; n < elems; n++) {
    if (tree[n * 2]/*.Freq*/ !== 0) {
      s.heap[++s.heap_len] = max_code = n;
      s.depth[n] = 0;

    } else {
      tree[n * 2 + 1]/*.Len*/ = 0;
    }
  }

  /* The pkzip format requires that at least one distance code exists,
   * and that at least one bit should be sent even if there is only one
   * possible code. So to avoid special checks later on we force at least
   * two codes of non zero frequency.
   */
  while (s.heap_len < 2) {
    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);
    tree[node * 2]/*.Freq*/ = 1;
    s.depth[node] = 0;
    s.opt_len--;

    if (has_stree) {
      s.static_len -= stree[node * 2 + 1]/*.Len*/;
    }
    /* node is 0 or 1 so it does not have extra bits */
  }
  desc.max_code = max_code;

  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,
   * establish sub-heaps of increasing lengths:
   */
  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }

  /* Construct the Huffman tree by repeatedly combining the least two
   * frequent nodes.
   */
  node = elems;              /* next internal node of the tree */
  do {
    //pqremove(s, tree, n);  /* n = node of least frequency */
    /*** pqremove ***/
    n = s.heap[1/*SMALLEST*/];
    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];
    pqdownheap(s, tree, 1/*SMALLEST*/);
    /***/

    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */

    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */
    s.heap[--s.heap_max] = m;

    /* Create a new node father of n and m */
    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;
    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;
    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;

    /* and insert the new node in the heap */
    s.heap[1/*SMALLEST*/] = node++;
    pqdownheap(s, tree, 1/*SMALLEST*/);

  } while (s.heap_len >= 2);

  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];

  /* At this point, the fields freq and dad are set. We can now
   * generate the bit lengths.
   */
  gen_bitlen(s, desc);

  /* The field len is now set, we can generate the bit codes */
  gen_codes(tree, max_code, s.bl_count);
}


/* ===========================================================================
 * Scan a literal or distance tree to determine the frequencies of the codes
 * in the bit length tree.
 */
function scan_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree;   /* the tree to be scanned */
//    int max_code;    /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }
  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      s.bl_tree[curlen * 2]/*.Freq*/ += count;

    } else if (curlen !== 0) {

      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }
      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;

    } else if (count <= 10) {
      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;

    } else {
      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;
    }

    count = 0;
    prevlen = curlen;

    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Send a literal or distance tree in compressed form, using the codes in
 * bl_tree.
 */
function send_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree; /* the tree to be scanned */
//    int max_code;       /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  /* tree[max_code+1].Len = -1; */  /* guard already set */
  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);

    } else if (curlen !== 0) {
      if (curlen !== prevlen) {
        send_code(s, curlen, s.bl_tree);
        count--;
      }
      //Assert(count >= 3 && count <= 6, " 3_6?");
      send_code(s, REP_3_6, s.bl_tree);
      send_bits(s, count - 3, 2);

    } else if (count <= 10) {
      send_code(s, REPZ_3_10, s.bl_tree);
      send_bits(s, count - 3, 3);

    } else {
      send_code(s, REPZ_11_138, s.bl_tree);
      send_bits(s, count - 11, 7);
    }

    count = 0;
    prevlen = curlen;
    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Construct the Huffman tree for the bit lengths and return the index in
 * bl_order of the last bit length code to send.
 */
function build_bl_tree(s) {
  var max_blindex;  /* index of last bit length code of non zero freq */

  /* Determine the bit length frequencies for literal and distance trees */
  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);
  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);

  /* Build the bit length tree: */
  build_tree(s, s.bl_desc);
  /* opt_len now includes the length of the tree representations, except
   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
   */

  /* Determine the number of bit length codes to send. The pkzip format
   * requires that at least 4 bit length codes be sent. (appnote.txt says
   * 3 but the actual value used is 4.)
   */
  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {
    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {
      break;
    }
  }
  /* Update opt_len to include the bit length tree and counts */
  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;
  //Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",
  //        s->opt_len, s->static_len));

  return max_blindex;
}


/* ===========================================================================
 * Send the header for a block using dynamic Huffman trees: the counts, the
 * lengths of the bit length codes, the literal tree and the distance tree.
 * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.
 */
function send_all_trees(s, lcodes, dcodes, blcodes)
//    deflate_state *s;
//    int lcodes, dcodes, blcodes; /* number of codes for each tree */
{
  var rank;                    /* index in bl_order */

  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, "not enough codes");
  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,
  //        "too many codes");
  //Tracev((stderr, "\nbl counts: "));
  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */
  send_bits(s, dcodes - 1,   5);
  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */
  for (rank = 0; rank < blcodes; rank++) {
    //Tracev((stderr, "\nbl code %2d ", bl_order[rank]));
    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);
  }
  //Tracev((stderr, "\nbl tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */
  //Tracev((stderr, "\nlit tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */
  //Tracev((stderr, "\ndist tree: sent %ld", s->bits_sent));
}


/* ===========================================================================
 * Check if the data type is TEXT or BINARY, using the following algorithm:
 * - TEXT if the two conditions below are satisfied:
 *    a) There are no non-portable control characters belonging to the
 *       "black list" (0..6, 14..25, 28..31).
 *    b) There is at least one printable character belonging to the
 *       "white list" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).
 * - BINARY otherwise.
 * - The following partially-portable control characters form a
 *   "gray list" that is ignored in this detection algorithm:
 *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).
 * IN assertion: the fields Freq of dyn_ltree are set.
 */
function detect_data_type(s) {
  /* black_mask is the bit mask of black-listed bytes
   * set bits 0..6, 14..25, and 28..31
   * 0xf3ffc07f = binary 11110011111111111100000001111111
   */
  var black_mask = 0xf3ffc07f;
  var n;

  /* Check for non-textual ("black-listed") bytes. */
  for (n = 0; n <= 31; n++, black_mask >>>= 1) {
    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {
      return Z_BINARY;
    }
  }

  /* Check for textual ("white-listed") bytes. */
  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||
      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {
    return Z_TEXT;
  }
  for (n = 32; n < LITERALS; n++) {
    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {
      return Z_TEXT;
    }
  }

  /* There are no "black-listed" or "white-listed" bytes:
   * this stream either is empty or has tolerated ("gray-listed") bytes only.
   */
  return Z_BINARY;
}


var static_init_done = false;

/* ===========================================================================
 * Initialize the tree data structures for a new zlib stream.
 */
function _tr_init(s)
{

  if (!static_init_done) {
    tr_static_init();
    static_init_done = true;
  }

  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);
  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);
  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);

  s.bi_buf = 0;
  s.bi_valid = 0;

  /* Initialize the first block of the first file: */
  init_block(s);
}


/* ===========================================================================
 * Send a stored block
 */
function _tr_stored_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */
  copy_block(s, buf, stored_len, true); /* with header */
}


/* ===========================================================================
 * Send one empty static block to give enough lookahead for inflate.
 * This takes 10 bits, of which 7 may remain in the bit buffer.
 */
function _tr_align(s) {
  send_bits(s, STATIC_TREES << 1, 3);
  send_code(s, END_BLOCK, static_ltree);
  bi_flush(s);
}


/* ===========================================================================
 * Determine the best encoding for the current block: dynamic trees, static
 * trees or store, and output the encoded block to the zip file.
 */
function _tr_flush_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block, or NULL if too old */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */
  var max_blindex = 0;        /* index of last bit length code of non zero freq */

  /* Build the Huffman trees unless a stored block is forced */
  if (s.level > 0) {

    /* Check if the file is binary or text */
    if (s.strm.data_type === Z_UNKNOWN) {
      s.strm.data_type = detect_data_type(s);
    }

    /* Construct the literal and distance trees */
    build_tree(s, s.l_desc);
    // Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));

    build_tree(s, s.d_desc);
    // Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));
    /* At this point, opt_len and static_len are the total bit lengths of
     * the compressed block data, excluding the tree representations.
     */

    /* Build the bit length tree for the above two trees, and get the index
     * in bl_order of the last bit length code to send.
     */
    max_blindex = build_bl_tree(s);

    /* Determine the best encoding. Compute the block lengths in bytes. */
    opt_lenb = (s.opt_len + 3 + 7) >>> 3;
    static_lenb = (s.static_len + 3 + 7) >>> 3;

    // Tracev((stderr, "\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u ",
    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,
    //        s->last_lit));

    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }

  } else {
    // Assert(buf != (char*)0, "lost buf");
    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */
  }

  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {
    /* 4: two words for the lengths */

    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
     * Otherwise we can't have processed more than WSIZE input bytes since
     * the last block flush, because compression would have been
     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to
     * transform a block into a stored block.
     */
    _tr_stored_block(s, buf, stored_len, last);

  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {

    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);
    compress_block(s, static_ltree, static_dtree);

  } else {
    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);
    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);
    compress_block(s, s.dyn_ltree, s.dyn_dtree);
  }
  // Assert (s->compressed_len == s->bits_sent, "bad compressed size");
  /* The above check is made mod 2^32, for files larger than 512 MB
   * and uLong implemented on 32 bits.
   */
  init_block(s);

  if (last) {
    bi_windup(s);
  }
  // Tracev((stderr,"\ncomprlen %lu(%lu) ", s->compressed_len>>3,
  //       s->compressed_len-7*last));
}

/* ===========================================================================
 * Save the match info and tally the frequency counts. Return true if
 * the current block must be flushed.
 */
function _tr_tally(s, dist, lc)
//    deflate_state *s;
//    unsigned dist;  /* distance of matched string */
//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */
{
  //var out_length, in_length, dcode;

  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;
  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;

  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;
  s.last_lit++;

  if (dist === 0) {
    /* lc is the unmatched char */
    s.dyn_ltree[lc * 2]/*.Freq*/++;
  } else {
    s.matches++;
    /* Here, lc is the match length - MIN_MATCH */
    dist--;             /* dist = match distance - 1 */
    //Assert((ush)dist < (ush)MAX_DIST(s) &&
    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&
    //       (ush)d_code(dist) < (ush)D_CODES,  "_tr_tally: bad match");

    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;
    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;
  }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility

//#ifdef TRUNCATE_BLOCK
//  /* Try to guess if it is profitable to stop the current block here */
//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {
//    /* Compute an upper bound for the compressed length */
//    out_length = s.last_lit*8;
//    in_length = s.strstart - s.block_start;
//
//    for (dcode = 0; dcode < D_CODES; dcode++) {
//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);
//    }
//    out_length >>>= 3;
//    //Tracev((stderr,"\nlast_lit %u, in %ld, out ~%ld(%ld%%) ",
//    //       s->last_lit, in_length, out_length,
//    //       100L - out_length*100L/in_length));
//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {
//      return true;
//    }
//  }
//#endif

  return (s.last_lit === s.lit_bufsize - 1);
  /* We avoid equality with lit_bufsize because of wraparound at 64K
   * on 16 bit machines and because stored blocks are restricted to
   * 64K-1 bytes.
   */
}

exports._tr_init  = _tr_init;
exports._tr_stored_block = _tr_stored_block;
exports._tr_flush_block  = _tr_flush_block;
exports._tr_tally = _tr_tally;
exports._tr_align = _tr_align;


/***/ }),

/***/ "../node_modules/pako/lib/zlib/zstream.js":
/*!************************************************!*\
  !*** ../node_modules/pako/lib/zlib/zstream.js ***!
  \************************************************/
/***/ ((module) => {



// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function ZStream() {
  /* next input byte */
  this.input = null; // JS specific, because we have no pointers
  this.next_in = 0;
  /* number of bytes available at input */
  this.avail_in = 0;
  /* total number of input bytes read so far */
  this.total_in = 0;
  /* next output byte should be put there */
  this.output = null; // JS specific, because we have no pointers
  this.next_out = 0;
  /* remaining free space at output */
  this.avail_out = 0;
  /* total number of bytes output so far */
  this.total_out = 0;
  /* last error message, NULL if no error */
  this.msg = ''/*Z_NULL*/;
  /* not visible by applications */
  this.state = null;
  /* best guess about the data type: binary or text */
  this.data_type = 2/*Z_UNKNOWN*/;
  /* adler32 value of the uncompressed data */
  this.adler = 0;
}

module.exports = ZStream;


/***/ }),

/***/ "../node_modules/uuid/dist/esm-browser/parse.js":
/*!******************************************************!*\
  !*** ../node_modules/uuid/dist/esm-browser/parse.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ "../node_modules/uuid/dist/esm-browser/validate.js");


function parse(uuid) {
  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(uuid)) {
    throw TypeError('Invalid UUID');
  }

  var v;
  var arr = new Uint8Array(16); // Parse ########-....-....-....-............

  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;
  arr[1] = v >>> 16 & 0xff;
  arr[2] = v >>> 8 & 0xff;
  arr[3] = v & 0xff; // Parse ........-####-....-....-............

  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;
  arr[5] = v & 0xff; // Parse ........-....-####-....-............

  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;
  arr[7] = v & 0xff; // Parse ........-....-....-####-............

  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;
  arr[9] = v & 0xff; // Parse ........-....-....-....-############
  // (Use "/" to avoid 32-bit truncation when bit-shifting high-order bytes)

  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;
  arr[11] = v / 0x100000000 & 0xff;
  arr[12] = v >>> 24 & 0xff;
  arr[13] = v >>> 16 & 0xff;
  arr[14] = v >>> 8 & 0xff;
  arr[15] = v & 0xff;
  return arr;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parse);

/***/ }),

/***/ "../node_modules/uuid/dist/esm-browser/regex.js":
/*!******************************************************!*\
  !*** ../node_modules/uuid/dist/esm-browser/regex.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);

/***/ }),

/***/ "../node_modules/uuid/dist/esm-browser/sha1.js":
/*!*****************************************************!*\
  !*** ../node_modules/uuid/dist/esm-browser/sha1.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Adapted from Chris Veness' SHA1 code at
// http://www.movable-type.co.uk/scripts/sha1.html
function f(s, x, y, z) {
  switch (s) {
    case 0:
      return x & y ^ ~x & z;

    case 1:
      return x ^ y ^ z;

    case 2:
      return x & y ^ x & z ^ y & z;

    case 3:
      return x ^ y ^ z;
  }
}

function ROTL(x, n) {
  return x << n | x >>> 32 - n;
}

function sha1(bytes) {
  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];
  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];

  if (typeof bytes === 'string') {
    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape

    bytes = [];

    for (var i = 0; i < msg.length; ++i) {
      bytes.push(msg.charCodeAt(i));
    }
  } else if (!Array.isArray(bytes)) {
    // Convert Array-like to Array
    bytes = Array.prototype.slice.call(bytes);
  }

  bytes.push(0x80);
  var l = bytes.length / 4 + 2;
  var N = Math.ceil(l / 16);
  var M = new Array(N);

  for (var _i = 0; _i < N; ++_i) {
    var arr = new Uint32Array(16);

    for (var j = 0; j < 16; ++j) {
      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];
    }

    M[_i] = arr;
  }

  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);
  M[N - 1][14] = Math.floor(M[N - 1][14]);
  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;

  for (var _i2 = 0; _i2 < N; ++_i2) {
    var W = new Uint32Array(80);

    for (var t = 0; t < 16; ++t) {
      W[t] = M[_i2][t];
    }

    for (var _t = 16; _t < 80; ++_t) {
      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);
    }

    var a = H[0];
    var b = H[1];
    var c = H[2];
    var d = H[3];
    var e = H[4];

    for (var _t2 = 0; _t2 < 80; ++_t2) {
      var s = Math.floor(_t2 / 20);
      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;
      e = d;
      d = c;
      c = ROTL(b, 30) >>> 0;
      b = a;
      a = T;
    }

    H[0] = H[0] + a >>> 0;
    H[1] = H[1] + b >>> 0;
    H[2] = H[2] + c >>> 0;
    H[3] = H[3] + d >>> 0;
    H[4] = H[4] + e >>> 0;
  }

  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sha1);

/***/ }),

/***/ "../node_modules/uuid/dist/esm-browser/stringify.js":
/*!**********************************************************!*\
  !*** ../node_modules/uuid/dist/esm-browser/stringify.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ "../node_modules/uuid/dist/esm-browser/validate.js");

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */

var byteToHex = [];

for (var i = 0; i < 256; ++i) {
  byteToHex.push((i + 0x100).toString(16).substr(1));
}

function stringify(arr) {
  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  // Note: Be careful editing this code!  It's been tuned for performance
  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one
  // of the following:
  // - One or more input array values don't map to a hex octet (leading to
  // "undefined" in the uuid)
  // - Invalid input values for the RFC `version` or `variant` fields

  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(uuid)) {
    throw TypeError('Stringified UUID is invalid');
  }

  return uuid;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);

/***/ }),

/***/ "../node_modules/uuid/dist/esm-browser/v35.js":
/*!****************************************************!*\
  !*** ../node_modules/uuid/dist/esm-browser/v35.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DNS: () => (/* binding */ DNS),
/* harmony export */   URL: () => (/* binding */ URL),
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ "../node_modules/uuid/dist/esm-browser/stringify.js");
/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse.js */ "../node_modules/uuid/dist/esm-browser/parse.js");



function stringToBytes(str) {
  str = unescape(encodeURIComponent(str)); // UTF8 escape

  var bytes = [];

  for (var i = 0; i < str.length; ++i) {
    bytes.push(str.charCodeAt(i));
  }

  return bytes;
}

var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';
var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, version, hashfunc) {
  function generateUUID(value, namespace, buf, offset) {
    if (typeof value === 'string') {
      value = stringToBytes(value);
    }

    if (typeof namespace === 'string') {
      namespace = (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__["default"])(namespace);
    }

    if (namespace.length !== 16) {
      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');
    } // Compute hash of namespace and value, Per 4.3
    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =
    // hashfunc([...namespace, ... value])`


    var bytes = new Uint8Array(16 + value.length);
    bytes.set(namespace);
    bytes.set(value, namespace.length);
    bytes = hashfunc(bytes);
    bytes[6] = bytes[6] & 0x0f | version;
    bytes[8] = bytes[8] & 0x3f | 0x80;

    if (buf) {
      offset = offset || 0;

      for (var i = 0; i < 16; ++i) {
        buf[offset + i] = bytes[i];
      }

      return buf;
    }

    return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__["default"])(bytes);
  } // Function#name is not settable on some platforms (#270)


  try {
    generateUUID.name = name; // eslint-disable-next-line no-empty
  } catch (err) {} // For CommonJS default export support


  generateUUID.DNS = DNS;
  generateUUID.URL = URL;
  return generateUUID;
}

/***/ }),

/***/ "../node_modules/uuid/dist/esm-browser/v5.js":
/*!***************************************************!*\
  !*** ../node_modules/uuid/dist/esm-browser/v5.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ "../node_modules/uuid/dist/esm-browser/v35.js");
/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha1.js */ "../node_modules/uuid/dist/esm-browser/sha1.js");


var v5 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__["default"])('v5', 0x50, _sha1_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v5);

/***/ }),

/***/ "../node_modules/uuid/dist/esm-browser/validate.js":
/*!*********************************************************!*\
  !*** ../node_modules/uuid/dist/esm-browser/validate.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ "../node_modules/uuid/dist/esm-browser/regex.js");


function validate(uuid) {
  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__["default"].test(uuid);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!**********************!*\
  !*** ./esm/index.js ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ABR: () => (/* reexport safe */ _astrocalc_aberration_js__WEBPACK_IMPORTED_MODULE_18__.ABR),
/* harmony export */   ACFT: () => (/* reexport safe */ _astrocalc_aberration_js__WEBPACK_IMPORTED_MODULE_18__.ACFT),
/* harmony export */   ASEP: () => (/* reexport safe */ _astrocalc_angular_separation_js__WEBPACK_IMPORTED_MODULE_4__.ASEP),
/* harmony export */   Alignment: () => (/* reexport safe */ _sky_text_js__WEBPACK_IMPORTED_MODULE_90__.Alignment),
/* harmony export */   AltTypes: () => (/* reexport safe */ _layers_time_series_layer_js__WEBPACK_IMPORTED_MODULE_125__.AltTypes),
/* harmony export */   AltUnits: () => (/* reexport safe */ _layers_layer_js__WEBPACK_IMPORTED_MODULE_106__.AltUnits),
/* harmony export */   Annotation: () => (/* reexport safe */ _annotation_js__WEBPACK_IMPORTED_MODULE_66__.Annotation),
/* harmony export */   AnnotationClickEventArgs: () => (/* reexport safe */ _script_interface_js__WEBPACK_IMPORTED_MODULE_137__.AnnotationClickEventArgs),
/* harmony export */   ArrivedEventArgs: () => (/* reexport safe */ _script_interface_js__WEBPACK_IMPORTED_MODULE_137__.ArrivedEventArgs),
/* harmony export */   AstroCalc: () => (/* reexport safe */ _astrocalc_js__WEBPACK_IMPORTED_MODULE_47__.AstroCalc),
/* harmony export */   AstroRaDec: () => (/* reexport safe */ _astrocalc_js__WEBPACK_IMPORTED_MODULE_47__.AstroRaDec),
/* harmony export */   AudioOverlay: () => (/* reexport safe */ _tours_overlay_js__WEBPACK_IMPORTED_MODULE_118__.AudioOverlay),
/* harmony export */   AudioType: () => (/* reexport safe */ _tours_overlay_js__WEBPACK_IMPORTED_MODULE_118__.AudioType),
/* harmony export */   BandPass: () => (/* reexport safe */ _imageset_js__WEBPACK_IMPORTED_MODULE_87__.BandPass),
/* harmony export */   BinaryReader: () => (/* reexport safe */ _utilities_binary_reader_js__WEBPACK_IMPORTED_MODULE_56__.BinaryReader),
/* harmony export */   Bitmap: () => (/* reexport safe */ _utilities_bitmap_js__WEBPACK_IMPORTED_MODULE_54__.Bitmap),
/* harmony export */   BitmapOverlay: () => (/* reexport safe */ _tours_overlay_js__WEBPACK_IMPORTED_MODULE_118__.BitmapOverlay),
/* harmony export */   BlendState: () => (/* reexport safe */ _blend_state_js__WEBPACK_IMPORTED_MODULE_42__.BlendState),
/* harmony export */   BodyAngles: () => (/* reexport safe */ _planets_js__WEBPACK_IMPORTED_MODULE_93__.BodyAngles),
/* harmony export */   C3D: () => (/* reexport safe */ _astrocalc_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_3__.C3D),
/* harmony export */   CAAEarth: () => (/* reexport safe */ _astrocalc_earth_js__WEBPACK_IMPORTED_MODULE_5__.CAAEarth),
/* harmony export */   CAAEclipticalElementDetails: () => (/* reexport safe */ _astrocalc_ecliptical_elements_js__WEBPACK_IMPORTED_MODULE_20__.CAAEclipticalElementDetails),
/* harmony export */   CAAEclipticalElements: () => (/* reexport safe */ _astrocalc_ecliptical_elements_js__WEBPACK_IMPORTED_MODULE_20__.CAAEclipticalElements),
/* harmony export */   CAAFK5: () => (/* reexport safe */ _astrocalc_fk5_js__WEBPACK_IMPORTED_MODULE_6__.CAAFK5),
/* harmony export */   CAAGlobe: () => (/* reexport safe */ _astrocalc_globe_js__WEBPACK_IMPORTED_MODULE_25__.CAAGlobe),
/* harmony export */   CAAJupiter: () => (/* reexport safe */ _astrocalc_jupiter_js__WEBPACK_IMPORTED_MODULE_12__.CAAJupiter),
/* harmony export */   CAAKepler: () => (/* reexport safe */ _astrocalc_kepler_js__WEBPACK_IMPORTED_MODULE_17__.CAAKepler),
/* harmony export */   CAAMars: () => (/* reexport safe */ _astrocalc_mars_js__WEBPACK_IMPORTED_MODULE_11__.CAAMars),
/* harmony export */   CAAMercury: () => (/* reexport safe */ _astrocalc_mercury_js__WEBPACK_IMPORTED_MODULE_9__.CAAMercury),
/* harmony export */   CAAMoon: () => (/* reexport safe */ _astrocalc_moon_js__WEBPACK_IMPORTED_MODULE_28__.CAAMoon),
/* harmony export */   CAAMoonNodes: () => (/* reexport safe */ _astrocalc_moon_nodes_js__WEBPACK_IMPORTED_MODULE_30__.CAAMoonNodes),
/* harmony export */   CAAMoonPerigeeApogee: () => (/* reexport safe */ _astrocalc_moon_perigee_apogee_js__WEBPACK_IMPORTED_MODULE_31__.CAAMoonPerigeeApogee),
/* harmony export */   CAAMoonPhases: () => (/* reexport safe */ _astrocalc_moon_phases_js__WEBPACK_IMPORTED_MODULE_32__.CAAMoonPhases),
/* harmony export */   CAANeptune: () => (/* reexport safe */ _astrocalc_neptune_js__WEBPACK_IMPORTED_MODULE_15__.CAANeptune),
/* harmony export */   CAANutation: () => (/* reexport safe */ _astrocalc_nutation_js__WEBPACK_IMPORTED_MODULE_7__.CAANutation),
/* harmony export */   CAAParallax: () => (/* reexport safe */ _astrocalc_parallax_js__WEBPACK_IMPORTED_MODULE_33__.CAAParallax),
/* harmony export */   CAAPhysicalJupiter: () => (/* reexport safe */ _astrocalc_physical_jupiter_js__WEBPACK_IMPORTED_MODULE_35__.CAAPhysicalJupiter),
/* harmony export */   CAAPhysicalJupiterDetails: () => (/* reexport safe */ _astrocalc_physical_jupiter_js__WEBPACK_IMPORTED_MODULE_35__.CAAPhysicalJupiterDetails),
/* harmony export */   CAAPhysicalMars: () => (/* reexport safe */ _astrocalc_physical_mars_js__WEBPACK_IMPORTED_MODULE_36__.CAAPhysicalMars),
/* harmony export */   CAAPhysicalMarsDetails: () => (/* reexport safe */ _astrocalc_physical_mars_js__WEBPACK_IMPORTED_MODULE_36__.CAAPhysicalMarsDetails),
/* harmony export */   CAAPhysicalSun: () => (/* reexport safe */ _astrocalc_physical_sun_js__WEBPACK_IMPORTED_MODULE_37__.CAAPhysicalSun),
/* harmony export */   CAAPhysicalSunDetails: () => (/* reexport safe */ _astrocalc_physical_sun_js__WEBPACK_IMPORTED_MODULE_37__.CAAPhysicalSunDetails),
/* harmony export */   CAAPluto: () => (/* reexport safe */ _astrocalc_pluto_js__WEBPACK_IMPORTED_MODULE_16__.CAAPluto),
/* harmony export */   CAAPrecession: () => (/* reexport safe */ _astrocalc_precession_js__WEBPACK_IMPORTED_MODULE_38__.CAAPrecession),
/* harmony export */   CAARiseTransitSet: () => (/* reexport safe */ _astrocalc_rise_transit_set_js__WEBPACK_IMPORTED_MODULE_39__.CAARiseTransitSet),
/* harmony export */   CAARiseTransitSetDetails: () => (/* reexport safe */ _astrocalc_rise_transit_set_js__WEBPACK_IMPORTED_MODULE_39__.CAARiseTransitSetDetails),
/* harmony export */   CAASaturn: () => (/* reexport safe */ _astrocalc_saturn_js__WEBPACK_IMPORTED_MODULE_13__.CAASaturn),
/* harmony export */   CAASaturnRingDetails: () => (/* reexport safe */ _astrocalc_saturn_rings_js__WEBPACK_IMPORTED_MODULE_40__.CAASaturnRingDetails),
/* harmony export */   CAASaturnRings: () => (/* reexport safe */ _astrocalc_saturn_rings_js__WEBPACK_IMPORTED_MODULE_40__.CAASaturnRings),
/* harmony export */   CAASidereal: () => (/* reexport safe */ _astrocalc_sidereal_js__WEBPACK_IMPORTED_MODULE_34__.CAASidereal),
/* harmony export */   CAAStellarMagnitudes: () => (/* reexport safe */ _astrocalc_stellar_magnitudes_js__WEBPACK_IMPORTED_MODULE_41__.CAAStellarMagnitudes),
/* harmony export */   CAASun: () => (/* reexport safe */ _astrocalc_sun_js__WEBPACK_IMPORTED_MODULE_8__.CAASun),
/* harmony export */   CAATopocentricEclipticDetails: () => (/* reexport safe */ _astrocalc_parallax_js__WEBPACK_IMPORTED_MODULE_33__.CAATopocentricEclipticDetails),
/* harmony export */   CAAUranus: () => (/* reexport safe */ _astrocalc_uranus_js__WEBPACK_IMPORTED_MODULE_14__.CAAUranus),
/* harmony export */   CAAVenus: () => (/* reexport safe */ _astrocalc_venus_js__WEBPACK_IMPORTED_MODULE_10__.CAAVenus),
/* harmony export */   COR: () => (/* reexport safe */ _astrocalc_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_3__.COR),
/* harmony export */   CT: () => (/* reexport safe */ _astrocalc_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_3__.CT),
/* harmony export */   CalD: () => (/* reexport safe */ _astrocalc_date_js__WEBPACK_IMPORTED_MODULE_2__.CalD),
/* harmony export */   CameraParameters: () => (/* reexport safe */ _camera_parameters_js__WEBPACK_IMPORTED_MODULE_67__.CameraParameters),
/* harmony export */   CatalogSpreadSheetLayer: () => (/* reexport safe */ _layers_spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_126__.CatalogSpreadSheetLayer),
/* harmony export */   Circle: () => (/* reexport safe */ _annotation_js__WEBPACK_IMPORTED_MODULE_66__.Circle),
/* harmony export */   Classification: () => (/* reexport safe */ _place_js__WEBPACK_IMPORTED_MODULE_94__.Classification),
/* harmony export */   CollectionLoadedEventArgs: () => (/* reexport safe */ _script_interface_js__WEBPACK_IMPORTED_MODULE_137__.CollectionLoadedEventArgs),
/* harmony export */   Color: () => (/* reexport safe */ _color_js__WEBPACK_IMPORTED_MODULE_43__.Color),
/* harmony export */   ColorMapContainer: () => (/* reexport safe */ _layers_color_map_container_js__WEBPACK_IMPORTED_MODULE_73__.ColorMapContainer),
/* harmony export */   ColorMaps: () => (/* reexport safe */ _layers_time_series_layer_js__WEBPACK_IMPORTED_MODULE_125__.ColorMaps),
/* harmony export */   ColorPicker: () => (/* reexport safe */ _utilities_color_picker_js__WEBPACK_IMPORTED_MODULE_103__.ColorPicker),
/* harmony export */   Colors: () => (/* reexport safe */ _color_js__WEBPACK_IMPORTED_MODULE_43__.Colors),
/* harmony export */   ConstellationFilter: () => (/* reexport safe */ _constellation_filter_js__WEBPACK_IMPORTED_MODULE_68__.ConstellationFilter),
/* harmony export */   Constellations: () => (/* reexport safe */ _constellations_js__WEBPACK_IMPORTED_MODULE_91__.Constellations),
/* harmony export */   ContextMenuStrip: () => (/* reexport safe */ _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_55__.ContextMenuStrip),
/* harmony export */   ConvexHull: () => (/* reexport safe */ _double3d_js__WEBPACK_IMPORTED_MODULE_45__.ConvexHull),
/* harmony export */   Coordinates: () => (/* reexport safe */ _coordinates_js__WEBPACK_IMPORTED_MODULE_59__.Coordinates),
/* harmony export */   CoordinatesTypes: () => (/* reexport safe */ _layers_time_series_layer_js__WEBPACK_IMPORTED_MODULE_125__.CoordinatesTypes),
/* harmony export */   CullMode: () => (/* reexport safe */ _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_52__.CullMode),
/* harmony export */   Cursor: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_46__.Cursor),
/* harmony export */   Cursors: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_46__.Cursors),
/* harmony export */   DAY_OF_WEEK: () => (/* reexport safe */ _astrocalc_date_js__WEBPACK_IMPORTED_MODULE_2__.DAY_OF_WEEK),
/* harmony export */   DT: () => (/* reexport safe */ _astrocalc_date_js__WEBPACK_IMPORTED_MODULE_2__.DT),
/* harmony export */   DYT: () => (/* reexport safe */ _astrocalc_dynamical_time_js__WEBPACK_IMPORTED_MODULE_19__.DYT),
/* harmony export */   DataItem: () => (/* reexport safe */ _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_52__.DataItem),
/* harmony export */   DataTypes: () => (/* reexport safe */ _layers_fits_image_js_js__WEBPACK_IMPORTED_MODULE_76__.DataTypes),
/* harmony export */   DataVizWizard: () => (/* reexport safe */ _layers_manager_dialogs_js__WEBPACK_IMPORTED_MODULE_130__.DataVizWizard),
/* harmony export */   Dates: () => (/* reexport safe */ _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_52__.Dates),
/* harmony export */   Dialog: () => (/* reexport safe */ _utilities_dialog_js__WEBPACK_IMPORTED_MODULE_104__.Dialog),
/* harmony export */   DialogResult: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_46__.DialogResult),
/* harmony export */   DomainValue: () => (/* reexport safe */ _layers_layer_js__WEBPACK_IMPORTED_MODULE_106__.DomainValue),
/* harmony export */   DoubleUtilities: () => (/* reexport safe */ _double3d_js__WEBPACK_IMPORTED_MODULE_45__.DoubleUtilities),
/* harmony export */   ELL: () => (/* reexport safe */ _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_22__.ELL),
/* harmony export */   EO: () => (/* reexport safe */ _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_22__.EO),
/* harmony export */   EOD: () => (/* reexport safe */ _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_22__.EOD),
/* harmony export */   EOE: () => (/* reexport safe */ _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_22__.EOE),
/* harmony export */   EOT: () => (/* reexport safe */ _astrocalc_equation_of_time_js__WEBPACK_IMPORTED_MODULE_23__.EOT),
/* harmony export */   EPD: () => (/* reexport safe */ _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_22__.EPD),
/* harmony export */   EPO: () => (/* reexport safe */ _astrocalc_elements_planetary_orbit_js__WEBPACK_IMPORTED_MODULE_21__.EPO),
/* harmony export */   EllipseRenderer: () => (/* reexport safe */ _layers_orbit_js__WEBPACK_IMPORTED_MODULE_112__.EllipseRenderer),
/* harmony export */   EllipseShader: () => (/* reexport safe */ _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_51__.EllipseShader),
/* harmony export */   EquirectangularTile: () => (/* reexport safe */ _equirectangular_tile_js__WEBPACK_IMPORTED_MODULE_80__.EquirectangularTile),
/* harmony export */   FadeType: () => (/* reexport safe */ _layers_layer_js__WEBPACK_IMPORTED_MODULE_106__.FadeType),
/* harmony export */   FastMath: () => (/* reexport safe */ _fast_math_js__WEBPACK_IMPORTED_MODULE_60__.FastMath),
/* harmony export */   FileCabinet: () => (/* reexport safe */ _tours_file_cabinet_js__WEBPACK_IMPORTED_MODULE_117__.FileCabinet),
/* harmony export */   FileEntry: () => (/* reexport safe */ _tours_file_cabinet_js__WEBPACK_IMPORTED_MODULE_117__.FileEntry),
/* harmony export */   FitsImage: () => (/* reexport safe */ _layers_fits_image_js__WEBPACK_IMPORTED_MODULE_75__.FitsImage),
/* harmony export */   FitsImageJs: () => (/* reexport safe */ _layers_fits_image_js_js__WEBPACK_IMPORTED_MODULE_76__.FitsImageJs),
/* harmony export */   FitsImageTile: () => (/* reexport safe */ _layers_fits_image_tile_js__WEBPACK_IMPORTED_MODULE_77__.FitsImageTile),
/* harmony export */   FitsProperties: () => (/* reexport safe */ _fits_properties_js__WEBPACK_IMPORTED_MODULE_69__.FitsProperties),
/* harmony export */   FitsShader: () => (/* reexport safe */ _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_51__.FitsShader),
/* harmony export */   FlipbookOverlay: () => (/* reexport safe */ _tours_overlay_js__WEBPACK_IMPORTED_MODULE_118__.FlipbookOverlay),
/* harmony export */   Folder: () => (/* reexport safe */ _folder_js__WEBPACK_IMPORTED_MODULE_133__.Folder),
/* harmony export */   FolderBrowser: () => (/* reexport safe */ _folder_browser_js__WEBPACK_IMPORTED_MODULE_134__.FolderBrowser),
/* harmony export */   FolderDownloadAction: () => (/* reexport safe */ _wtml_js__WEBPACK_IMPORTED_MODULE_139__.FolderDownloadAction),
/* harmony export */   FolderGroup: () => (/* reexport safe */ _folder_js__WEBPACK_IMPORTED_MODULE_133__.FolderGroup),
/* harmony export */   FolderRefreshType: () => (/* reexport safe */ _folder_js__WEBPACK_IMPORTED_MODULE_133__.FolderRefreshType),
/* harmony export */   FolderType: () => (/* reexport safe */ _folder_js__WEBPACK_IMPORTED_MODULE_133__.FolderType),
/* harmony export */   FolderUp: () => (/* reexport safe */ _folder_up_js__WEBPACK_IMPORTED_MODULE_95__.FolderUp),
/* harmony export */   Formatting: () => (/* reexport safe */ _utilities_xml_text_writer_js__WEBPACK_IMPORTED_MODULE_58__.Formatting),
/* harmony export */   FrameTarget: () => (/* reexport safe */ _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_128__.FrameTarget),
/* harmony export */   FrameWizard: () => (/* reexport safe */ _layers_manager_dialogs_js__WEBPACK_IMPORTED_MODULE_130__.FrameWizard),
/* harmony export */   Fxyf: () => (/* reexport safe */ _fxyf_js__WEBPACK_IMPORTED_MODULE_64__.Fxyf),
/* harmony export */   GFX: () => (/* binding */ GFX),
/* harmony export */   GM: () => (/* reexport safe */ _astrocalc_galilean_moons_js__WEBPACK_IMPORTED_MODULE_24__.GM),
/* harmony export */   GMD: () => (/* reexport safe */ _astrocalc_galilean_moons_js__WEBPACK_IMPORTED_MODULE_24__.GMD),
/* harmony export */   GMDS: () => (/* reexport safe */ _astrocalc_galilean_moons_js__WEBPACK_IMPORTED_MODULE_24__.GMDS),
/* harmony export */   Galaxy: () => (/* reexport safe */ _star_js__WEBPACK_IMPORTED_MODULE_70__.Galaxy),
/* harmony export */   GlyphCache: () => (/* reexport safe */ _sky_text_js__WEBPACK_IMPORTED_MODULE_90__.GlyphCache),
/* harmony export */   GlyphItem: () => (/* reexport safe */ _sky_text_js__WEBPACK_IMPORTED_MODULE_90__.GlyphItem),
/* harmony export */   GreatCircleDialog: () => (/* reexport safe */ _layers_manager_dialogs_js__WEBPACK_IMPORTED_MODULE_130__.GreatCircleDialog),
/* harmony export */   GreatCirlceRouteLayer: () => (/* reexport safe */ _layers_great_circle_route_layer_js__WEBPACK_IMPORTED_MODULE_108__.GreatCirlceRouteLayer),
/* harmony export */   GridLayer: () => (/* reexport safe */ _layers_grid_layer_js__WEBPACK_IMPORTED_MODULE_109__.GridLayer),
/* harmony export */   Grids: () => (/* reexport safe */ _grids_js__WEBPACK_IMPORTED_MODULE_96__.Grids),
/* harmony export */   GroundOverlayLayer: () => (/* reexport safe */ _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_128__.GroundOverlayLayer),
/* harmony export */   Group: () => (/* reexport safe */ _layers_object3d_js__WEBPACK_IMPORTED_MODULE_111__.Group),
/* harmony export */   Guid: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_46__.Guid),
/* harmony export */   HealpixTables: () => (/* reexport safe */ _healpix_tables_js__WEBPACK_IMPORTED_MODULE_61__.HealpixTables),
/* harmony export */   HealpixTile: () => (/* reexport safe */ _healpix_tile_js__WEBPACK_IMPORTED_MODULE_81__.HealpixTile),
/* harmony export */   HealpixUtils: () => (/* reexport safe */ _healpix_utils_js__WEBPACK_IMPORTED_MODULE_62__.HealpixUtils),
/* harmony export */   HipsProperties: () => (/* reexport safe */ _hips_properties_js__WEBPACK_IMPORTED_MODULE_135__.HipsProperties),
/* harmony export */   Histogram: () => (/* reexport safe */ _utilities_histogram_js__WEBPACK_IMPORTED_MODULE_105__.Histogram),
/* harmony export */   HistogramEqualization: () => (/* reexport safe */ _layers_fits_image_js_js__WEBPACK_IMPORTED_MODULE_76__.HistogramEqualization),
/* harmony export */   Hploc: () => (/* reexport safe */ _hploc_js__WEBPACK_IMPORTED_MODULE_63__.Hploc),
/* harmony export */   IFR: () => (/* reexport safe */ _astrocalc_illuminated_fraction_js__WEBPACK_IMPORTED_MODULE_26__.IFR),
/* harmony export */   INTP: () => (/* reexport safe */ _astrocalc_interpolate_js__WEBPACK_IMPORTED_MODULE_27__.INTP),
/* harmony export */   IPlace: () => (/* reexport safe */ _interfaces_js__WEBPACK_IMPORTED_MODULE_65__.IPlace),
/* harmony export */   ISSLayer: () => (/* reexport safe */ _layers_iss_layer_js__WEBPACK_IMPORTED_MODULE_124__.ISSLayer),
/* harmony export */   ISettings: () => (/* reexport safe */ _interfaces_js__WEBPACK_IMPORTED_MODULE_65__.ISettings),
/* harmony export */   IThumbnail: () => (/* reexport safe */ _interfaces_js__WEBPACK_IMPORTED_MODULE_65__.IThumbnail),
/* harmony export */   IUIServicesCallbacks: () => (/* reexport safe */ _interfaces_js__WEBPACK_IMPORTED_MODULE_65__.IUIServicesCallbacks),
/* harmony export */   IUiController: () => (/* reexport safe */ _interfaces_js__WEBPACK_IMPORTED_MODULE_65__.IUiController),
/* harmony export */   IUndoStep: () => (/* reexport safe */ _interfaces_js__WEBPACK_IMPORTED_MODULE_65__.IUndoStep),
/* harmony export */   IViewMover: () => (/* reexport safe */ _interfaces_js__WEBPACK_IMPORTED_MODULE_65__.IViewMover),
/* harmony export */   ImageSetLayer: () => (/* reexport safe */ _layers_imageset_layer_js__WEBPACK_IMPORTED_MODULE_110__.ImageSetLayer),
/* harmony export */   ImageSetType: () => (/* reexport safe */ _imageset_js__WEBPACK_IMPORTED_MODULE_87__.ImageSetType),
/* harmony export */   ImageShader: () => (/* reexport safe */ _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_51__.ImageShader),
/* harmony export */   ImageShader2: () => (/* reexport safe */ _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_51__.ImageShader2),
/* harmony export */   Imageset: () => (/* reexport safe */ _imageset_js__WEBPACK_IMPORTED_MODULE_87__.Imageset),
/* harmony export */   InViewReturnMessage: () => (/* reexport safe */ _render_context_js__WEBPACK_IMPORTED_MODULE_136__.InViewReturnMessage),
/* harmony export */   IndexBuffer: () => (/* reexport safe */ _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_48__.IndexBuffer),
/* harmony export */   InterpolationType: () => (/* reexport safe */ _camera_parameters_js__WEBPACK_IMPORTED_MODULE_67__.InterpolationType),
/* harmony export */   KeplerPointSpriteShader: () => (/* reexport safe */ _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_51__.KeplerPointSpriteShader),
/* harmony export */   KeplerVertex: () => (/* reexport safe */ _kepler_vertex_js__WEBPACK_IMPORTED_MODULE_97__.KeplerVertex),
/* harmony export */   KeplerianElements: () => (/* reexport safe */ _planets_js__WEBPACK_IMPORTED_MODULE_93__.KeplerianElements),
/* harmony export */   Keys: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_46__.Keys),
/* harmony export */   KmlCoordinate: () => (/* reexport safe */ _layers_spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_126__.KmlCoordinate),
/* harmony export */   KmlLineList: () => (/* reexport safe */ _layers_spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_126__.KmlLineList),
/* harmony export */   Language: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_46__.Language),
/* harmony export */   LatLngEdges: () => (/* reexport safe */ _tangent_tile_js__WEBPACK_IMPORTED_MODULE_84__.LatLngEdges),
/* harmony export */   Layer: () => (/* reexport safe */ _layers_layer_js__WEBPACK_IMPORTED_MODULE_106__.Layer),
/* harmony export */   LayerInfo: () => (/* reexport safe */ _tours_tour_stop_js__WEBPACK_IMPORTED_MODULE_120__.LayerInfo),
/* harmony export */   LayerManager: () => (/* reexport safe */ _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_128__.LayerManager),
/* harmony export */   LayerMap: () => (/* reexport safe */ _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_128__.LayerMap),
/* harmony export */   LayerUI: () => (/* reexport safe */ _layers_layer_ui_js__WEBPACK_IMPORTED_MODULE_107__.LayerUI),
/* harmony export */   LayerUIMenuItem: () => (/* reexport safe */ _layers_layer_ui_js__WEBPACK_IMPORTED_MODULE_107__.LayerUIMenuItem),
/* harmony export */   LayerUITreeNode: () => (/* reexport safe */ _layers_layer_ui_js__WEBPACK_IMPORTED_MODULE_107__.LayerUITreeNode),
/* harmony export */   LineList: () => (/* reexport safe */ _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_52__.LineList),
/* harmony export */   LineShaderNormalDates: () => (/* reexport safe */ _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_51__.LineShaderNormalDates),
/* harmony export */   Linepoint: () => (/* reexport safe */ _constellations_js__WEBPACK_IMPORTED_MODULE_91__.Linepoint),
/* harmony export */   Lineset: () => (/* reexport safe */ _constellations_js__WEBPACK_IMPORTED_MODULE_91__.Lineset),
/* harmony export */   LocationHint: () => (/* reexport safe */ _double3d_js__WEBPACK_IMPORTED_MODULE_45__.LocationHint),
/* harmony export */   LoopTypes: () => (/* reexport safe */ _tours_overlay_js__WEBPACK_IMPORTED_MODULE_118__.LoopTypes),
/* harmony export */   MIFR: () => (/* reexport safe */ _astrocalc_moon_illuminated_fraction_js__WEBPACK_IMPORTED_MODULE_29__.MIFR),
/* harmony export */   MPAC: () => (/* reexport safe */ _astrocalc_moon_perigee_apogee_js__WEBPACK_IMPORTED_MODULE_31__.MPAC),
/* harmony export */   MarkerMixes: () => (/* reexport safe */ _layers_time_series_layer_js__WEBPACK_IMPORTED_MODULE_125__.MarkerMixes),
/* harmony export */   MarkerScales: () => (/* reexport safe */ _layers_time_series_layer_js__WEBPACK_IMPORTED_MODULE_125__.MarkerScales),
/* harmony export */   MasterTime: () => (/* reexport safe */ _tours_tour_player_js__WEBPACK_IMPORTED_MODULE_123__.MasterTime),
/* harmony export */   Material: () => (/* reexport safe */ _layers_object3d_js__WEBPACK_IMPORTED_MODULE_111__.Material),
/* harmony export */   Matrix2d: () => (/* reexport safe */ _double3d_js__WEBPACK_IMPORTED_MODULE_45__.Matrix2d),
/* harmony export */   Matrix3d: () => (/* reexport safe */ _double3d_js__WEBPACK_IMPORTED_MODULE_45__.Matrix3d),
/* harmony export */   MercatorTile: () => (/* reexport safe */ _mercator_tile_js__WEBPACK_IMPORTED_MODULE_82__.MercatorTile),
/* harmony export */   Mesh: () => (/* reexport safe */ _layers_object3d_js__WEBPACK_IMPORTED_MODULE_111__.Mesh),
/* harmony export */   ModelShader: () => (/* reexport safe */ _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_51__.ModelShader),
/* harmony export */   ModelShaderTan: () => (/* reexport safe */ _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_51__.ModelShaderTan),
/* harmony export */   MoonCoefficient1: () => (/* reexport safe */ _astrocalc_moon_js__WEBPACK_IMPORTED_MODULE_28__.MoonCoefficient1),
/* harmony export */   MoonCoefficient2: () => (/* reexport safe */ _astrocalc_moon_js__WEBPACK_IMPORTED_MODULE_28__.MoonCoefficient2),
/* harmony export */   Mouse: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_46__.Mouse),
/* harmony export */   NUC: () => (/* reexport safe */ _astrocalc_nutation_js__WEBPACK_IMPORTED_MODULE_7__.NUC),
/* harmony export */   Object3d: () => (/* reexport safe */ _layers_object3d_js__WEBPACK_IMPORTED_MODULE_111__.Object3d),
/* harmony export */   Object3dLayer: () => (/* reexport safe */ _layers_object3d_js__WEBPACK_IMPORTED_MODULE_111__.Object3dLayer),
/* harmony export */   Object3dLayerUI: () => (/* reexport safe */ _layers_object3d_js__WEBPACK_IMPORTED_MODULE_111__.Object3dLayerUI),
/* harmony export */   ObjectNode: () => (/* reexport safe */ _layers_object3d_js__WEBPACK_IMPORTED_MODULE_111__.ObjectNode),
/* harmony export */   Orbit: () => (/* reexport safe */ _layers_orbit_js__WEBPACK_IMPORTED_MODULE_112__.Orbit),
/* harmony export */   OrbitLayer: () => (/* reexport safe */ _layers_orbit_layer_js__WEBPACK_IMPORTED_MODULE_114__.OrbitLayer),
/* harmony export */   OrbitLayerUI: () => (/* reexport safe */ _layers_orbit_layer_js__WEBPACK_IMPORTED_MODULE_114__.OrbitLayerUI),
/* harmony export */   OrbitLineList: () => (/* reexport safe */ _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_52__.OrbitLineList),
/* harmony export */   OrbitLineShader: () => (/* reexport safe */ _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_51__.OrbitLineShader),
/* harmony export */   Overlay: () => (/* reexport safe */ _tours_overlay_js__WEBPACK_IMPORTED_MODULE_118__.Overlay),
/* harmony export */   OverlayAnchor: () => (/* reexport safe */ _tours_overlay_js__WEBPACK_IMPORTED_MODULE_118__.OverlayAnchor),
/* harmony export */   OverlayList: () => (/* reexport safe */ _tours_tour_editor_js__WEBPACK_IMPORTED_MODULE_122__.OverlayList),
/* harmony export */   OverlayProperties: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_46__.OverlayProperties),
/* harmony export */   Place: () => (/* reexport safe */ _place_js__WEBPACK_IMPORTED_MODULE_94__.Place),
/* harmony export */   PlaneD: () => (/* reexport safe */ _double3d_js__WEBPACK_IMPORTED_MODULE_45__.PlaneD),
/* harmony export */   Planets: () => (/* reexport safe */ _planets_js__WEBPACK_IMPORTED_MODULE_93__.Planets),
/* harmony export */   PlotTile: () => (/* reexport safe */ _plot_tile_js__WEBPACK_IMPORTED_MODULE_83__.PlotTile),
/* harmony export */   PlotTypes: () => (/* reexport safe */ _layers_time_series_layer_js__WEBPACK_IMPORTED_MODULE_125__.PlotTypes),
/* harmony export */   PlutoCoefficient1: () => (/* reexport safe */ _astrocalc_pluto_js__WEBPACK_IMPORTED_MODULE_16__.PlutoCoefficient1),
/* harmony export */   PlutoCoefficient2: () => (/* reexport safe */ _astrocalc_pluto_js__WEBPACK_IMPORTED_MODULE_16__.PlutoCoefficient2),
/* harmony export */   PointList: () => (/* reexport safe */ _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_52__.PointList),
/* harmony export */   PointScaleTypes: () => (/* reexport safe */ _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_52__.PointScaleTypes),
/* harmony export */   PointType: () => (/* reexport safe */ _constellations_js__WEBPACK_IMPORTED_MODULE_91__.PointType),
/* harmony export */   Pointing: () => (/* reexport safe */ _pointing_js__WEBPACK_IMPORTED_MODULE_98__.Pointing),
/* harmony export */   Poly: () => (/* reexport safe */ _annotation_js__WEBPACK_IMPORTED_MODULE_66__.Poly),
/* harmony export */   PolyLine: () => (/* reexport safe */ _annotation_js__WEBPACK_IMPORTED_MODULE_66__.PolyLine),
/* harmony export */   PopupColorPicker: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_46__.PopupColorPicker),
/* harmony export */   PopupVolume: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_46__.PopupVolume),
/* harmony export */   PositionColored: () => (/* reexport safe */ _double3d_js__WEBPACK_IMPORTED_MODULE_45__.PositionColored),
/* harmony export */   PositionColoredTextured: () => (/* reexport safe */ _double3d_js__WEBPACK_IMPORTED_MODULE_45__.PositionColoredTextured),
/* harmony export */   PositionNormalTextured: () => (/* reexport safe */ _double3d_js__WEBPACK_IMPORTED_MODULE_45__.PositionNormalTextured),
/* harmony export */   PositionNormalTexturedTangent: () => (/* reexport safe */ _double3d_js__WEBPACK_IMPORTED_MODULE_45__.PositionNormalTexturedTangent),
/* harmony export */   PositionNormalTexturedTangentVertexBuffer: () => (/* reexport safe */ _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_48__.PositionNormalTexturedTangentVertexBuffer),
/* harmony export */   PositionNormalTexturedVertexBuffer: () => (/* reexport safe */ _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_48__.PositionNormalTexturedVertexBuffer),
/* harmony export */   PositionNormalTexturedX2: () => (/* reexport safe */ _double3d_js__WEBPACK_IMPORTED_MODULE_45__.PositionNormalTexturedX2),
/* harmony export */   PositionTexture: () => (/* reexport safe */ _double3d_js__WEBPACK_IMPORTED_MODULE_45__.PositionTexture),
/* harmony export */   PositionVertexBuffer: () => (/* reexport safe */ _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_48__.PositionVertexBuffer),
/* harmony export */   Primitives: () => (/* reexport safe */ _layers_vo_table_js__WEBPACK_IMPORTED_MODULE_116__.Primitives),
/* harmony export */   ProjectionType: () => (/* reexport safe */ _imageset_js__WEBPACK_IMPORTED_MODULE_87__.ProjectionType),
/* harmony export */   PushPin: () => (/* reexport safe */ _layers_spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_126__.PushPin),
/* harmony export */   RAUnits: () => (/* reexport safe */ _layers_time_series_layer_js__WEBPACK_IMPORTED_MODULE_125__.RAUnits),
/* harmony export */   Rectangle: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_46__.Rectangle),
/* harmony export */   ReferenceFrame: () => (/* reexport safe */ _layers_reference_frame_js__WEBPACK_IMPORTED_MODULE_113__.ReferenceFrame),
/* harmony export */   ReferenceFrameProps: () => (/* reexport safe */ _layers_manager_dialogs_js__WEBPACK_IMPORTED_MODULE_130__.ReferenceFrameProps),
/* harmony export */   ReferenceFrameTypes: () => (/* reexport safe */ _layers_reference_frame_js__WEBPACK_IMPORTED_MODULE_113__.ReferenceFrameTypes),
/* harmony export */   ReferenceFrames: () => (/* reexport safe */ _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_128__.ReferenceFrames),
/* harmony export */   RenderContext: () => (/* reexport safe */ _render_context_js__WEBPACK_IMPORTED_MODULE_136__.RenderContext),
/* harmony export */   RenderTriangle: () => (/* reexport safe */ _render_triangle_js__WEBPACK_IMPORTED_MODULE_79__.RenderTriangle),
/* harmony export */   RiseSetDetails: () => (/* reexport safe */ _astrocalc_js__WEBPACK_IMPORTED_MODULE_47__.RiseSetDetails),
/* harmony export */   ScaleLinear: () => (/* reexport safe */ _layers_fits_image_js_js__WEBPACK_IMPORTED_MODULE_76__.ScaleLinear),
/* harmony export */   ScaleLog: () => (/* reexport safe */ _layers_fits_image_js_js__WEBPACK_IMPORTED_MODULE_76__.ScaleLog),
/* harmony export */   ScaleMap: () => (/* reexport safe */ _layers_fits_image_js_js__WEBPACK_IMPORTED_MODULE_76__.ScaleMap),
/* harmony export */   ScalePow: () => (/* reexport safe */ _layers_fits_image_js_js__WEBPACK_IMPORTED_MODULE_76__.ScalePow),
/* harmony export */   ScaleSqrt: () => (/* reexport safe */ _layers_fits_image_js_js__WEBPACK_IMPORTED_MODULE_76__.ScaleSqrt),
/* harmony export */   ScaleTypes: () => (/* reexport safe */ _fits_properties_js__WEBPACK_IMPORTED_MODULE_69__.ScaleTypes),
/* harmony export */   ScriptInterface: () => (/* reexport safe */ _script_interface_js__WEBPACK_IMPORTED_MODULE_137__.ScriptInterface),
/* harmony export */   SelectLink: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_46__.SelectLink),
/* harmony export */   Selection: () => (/* reexport safe */ _tours_selection_js__WEBPACK_IMPORTED_MODULE_119__.Selection),
/* harmony export */   SelectionAnchor: () => (/* reexport safe */ _tours_selection_js__WEBPACK_IMPORTED_MODULE_119__.SelectionAnchor),
/* harmony export */   SettingParameter: () => (/* reexport safe */ _settings_js__WEBPACK_IMPORTED_MODULE_88__.SettingParameter),
/* harmony export */   Settings: () => (/* reexport safe */ _settings_js__WEBPACK_IMPORTED_MODULE_88__.Settings),
/* harmony export */   ShapeOverlay: () => (/* reexport safe */ _tours_overlay_js__WEBPACK_IMPORTED_MODULE_118__.ShapeOverlay),
/* harmony export */   ShapeSpriteShader: () => (/* reexport safe */ _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_51__.ShapeSpriteShader),
/* harmony export */   ShapeType: () => (/* reexport safe */ _tours_overlay_js__WEBPACK_IMPORTED_MODULE_118__.ShapeType),
/* harmony export */   ShortIndexBuffer: () => (/* reexport safe */ _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_48__.ShortIndexBuffer),
/* harmony export */   SimpleInput: () => (/* reexport safe */ _utilities_simple_input_js__WEBPACK_IMPORTED_MODULE_57__.SimpleInput),
/* harmony export */   SimpleLineList: () => (/* reexport safe */ _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_52__.SimpleLineList),
/* harmony export */   SimpleLineShader: () => (/* reexport safe */ _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_51__.SimpleLineShader),
/* harmony export */   SimpleLineShader2D: () => (/* reexport safe */ _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_51__.SimpleLineShader2D),
/* harmony export */   SkyImageTile: () => (/* reexport safe */ _sky_image_tile_js__WEBPACK_IMPORTED_MODULE_85__.SkyImageTile),
/* harmony export */   SkyOverlays: () => (/* reexport safe */ _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_128__.SkyOverlays),
/* harmony export */   SlideChangedEventArgs: () => (/* reexport safe */ _script_interface_js__WEBPACK_IMPORTED_MODULE_137__.SlideChangedEventArgs),
/* harmony export */   SolarSystemObjects: () => (/* reexport safe */ _camera_parameters_js__WEBPACK_IMPORTED_MODULE_67__.SolarSystemObjects),
/* harmony export */   SoundEditor: () => (/* reexport safe */ _tours_tour_editor_js__WEBPACK_IMPORTED_MODULE_122__.SoundEditor),
/* harmony export */   SpaceTimeController: () => (/* reexport safe */ _space_time_controller_js__WEBPACK_IMPORTED_MODULE_92__.SpaceTimeController),
/* harmony export */   SphereHull: () => (/* reexport safe */ _double3d_js__WEBPACK_IMPORTED_MODULE_45__.SphereHull),
/* harmony export */   SpreadSheetLayer: () => (/* reexport safe */ _layers_spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_126__.SpreadSheetLayer),
/* harmony export */   SpriteShader: () => (/* reexport safe */ _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_51__.SpriteShader),
/* harmony export */   Star: () => (/* reexport safe */ _star_js__WEBPACK_IMPORTED_MODULE_70__.Star),
/* harmony export */   StateType: () => (/* reexport safe */ _web_file_js__WEBPACK_IMPORTED_MODULE_72__.StateType),
/* harmony export */   StockSkyOverlayTypes: () => (/* reexport safe */ _settings_js__WEBPACK_IMPORTED_MODULE_88__.StockSkyOverlayTypes),
/* harmony export */   Table: () => (/* reexport safe */ _layers_table_js__WEBPACK_IMPORTED_MODULE_115__.Table),
/* harmony export */   TagMe: () => (/* reexport safe */ _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_55__.TagMe),
/* harmony export */   TangentTile: () => (/* reexport safe */ _tangent_tile_js__WEBPACK_IMPORTED_MODULE_84__.TangentTile),
/* harmony export */   Tessellator: () => (/* reexport safe */ _graphics_tessellator_js__WEBPACK_IMPORTED_MODULE_50__.Tessellator),
/* harmony export */   Text3d: () => (/* reexport safe */ _sky_text_js__WEBPACK_IMPORTED_MODULE_90__.Text3d),
/* harmony export */   Text3dBatch: () => (/* reexport safe */ _sky_text_js__WEBPACK_IMPORTED_MODULE_90__.Text3dBatch),
/* harmony export */   TextBorderStyle: () => (/* reexport safe */ _tours_text_object_js__WEBPACK_IMPORTED_MODULE_89__.TextBorderStyle),
/* harmony export */   TextObject: () => (/* reexport safe */ _tours_text_object_js__WEBPACK_IMPORTED_MODULE_89__.TextObject),
/* harmony export */   TextOverlay: () => (/* reexport safe */ _tours_overlay_js__WEBPACK_IMPORTED_MODULE_118__.TextOverlay),
/* harmony export */   TextShader: () => (/* reexport safe */ _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_51__.TextShader),
/* harmony export */   Texture: () => (/* reexport safe */ _graphics_texture_js__WEBPACK_IMPORTED_MODULE_49__.Texture),
/* harmony export */   ThumbnailSize: () => (/* reexport safe */ _folder_browser_js__WEBPACK_IMPORTED_MODULE_134__.ThumbnailSize),
/* harmony export */   Tile: () => (/* reexport safe */ _tile_js__WEBPACK_IMPORTED_MODULE_78__.Tile),
/* harmony export */   TileShader: () => (/* reexport safe */ _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_51__.TileShader),
/* harmony export */   TimeLine: () => (/* reexport safe */ _tours_tour_editor_js__WEBPACK_IMPORTED_MODULE_122__.TimeLine),
/* harmony export */   TimeSeriesLayer: () => (/* reexport safe */ _layers_time_series_layer_js__WEBPACK_IMPORTED_MODULE_125__.TimeSeriesLayer),
/* harmony export */   TimeSeriesLineVertex: () => (/* reexport safe */ _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_52__.TimeSeriesLineVertex),
/* harmony export */   TimeSeriesPointSpriteShader: () => (/* reexport safe */ _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_51__.TimeSeriesPointSpriteShader),
/* harmony export */   TimeSeriesPointVertex: () => (/* reexport safe */ _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_52__.TimeSeriesPointVertex),
/* harmony export */   ToastTile: () => (/* reexport safe */ _toast_tile_js__WEBPACK_IMPORTED_MODULE_86__.ToastTile),
/* harmony export */   ToolStripMenuItem: () => (/* reexport safe */ _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_55__.ToolStripMenuItem),
/* harmony export */   ToolStripSeparator: () => (/* reexport safe */ _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_55__.ToolStripSeparator),
/* harmony export */   Tour: () => (/* reexport safe */ _tour_js__WEBPACK_IMPORTED_MODULE_99__.Tour),
/* harmony export */   TourDocument: () => (/* reexport safe */ _tours_tour_document_js__WEBPACK_IMPORTED_MODULE_131__.TourDocument),
/* harmony export */   TourEdit: () => (/* reexport safe */ _tours_tour_editor_js__WEBPACK_IMPORTED_MODULE_122__.TourEdit),
/* harmony export */   TourEditTab: () => (/* reexport safe */ _tours_tour_edit_js__WEBPACK_IMPORTED_MODULE_132__.TourEditTab),
/* harmony export */   TourEditor: () => (/* reexport safe */ _tours_tour_editor_js__WEBPACK_IMPORTED_MODULE_122__.TourEditor),
/* harmony export */   TourPlayer: () => (/* reexport safe */ _tours_tour_player_js__WEBPACK_IMPORTED_MODULE_123__.TourPlayer),
/* harmony export */   TourStop: () => (/* reexport safe */ _tours_tour_stop_js__WEBPACK_IMPORTED_MODULE_120__.TourStop),
/* harmony export */   TourStopList: () => (/* reexport safe */ _tours_tour_editor_js__WEBPACK_IMPORTED_MODULE_122__.TourStopList),
/* harmony export */   TransitionType: () => (/* reexport safe */ _tours_tour_stop_js__WEBPACK_IMPORTED_MODULE_120__.TransitionType),
/* harmony export */   TriangleFanList: () => (/* reexport safe */ _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_52__.TriangleFanList),
/* harmony export */   TriangleList: () => (/* reexport safe */ _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_52__.TriangleList),
/* harmony export */   URLHelpers: () => (/* reexport safe */ _url_helpers_js__WEBPACK_IMPORTED_MODULE_44__.URLHelpers),
/* harmony export */   URLRewriteMode: () => (/* reexport safe */ _url_helpers_js__WEBPACK_IMPORTED_MODULE_44__.URLRewriteMode),
/* harmony export */   UiTools: () => (/* reexport safe */ _ui_tools_js__WEBPACK_IMPORTED_MODULE_71__.UiTools),
/* harmony export */   Undo: () => (/* reexport safe */ _tours_undo_js__WEBPACK_IMPORTED_MODULE_121__.Undo),
/* harmony export */   UndoStep: () => (/* reexport safe */ _tours_undo_js__WEBPACK_IMPORTED_MODULE_121__.UndoStep),
/* harmony export */   UndoTourPropertiesChange: () => (/* reexport safe */ _tours_undo_js__WEBPACK_IMPORTED_MODULE_121__.UndoTourPropertiesChange),
/* harmony export */   UndoTourSlidelistChange: () => (/* reexport safe */ _tours_undo_js__WEBPACK_IMPORTED_MODULE_121__.UndoTourSlidelistChange),
/* harmony export */   UndoTourStopChange: () => (/* reexport safe */ _tours_tour_stop_js__WEBPACK_IMPORTED_MODULE_120__.UndoTourStopChange),
/* harmony export */   UserLevel: () => (/* reexport safe */ _tours_tour_document_js__WEBPACK_IMPORTED_MODULE_131__.UserLevel),
/* harmony export */   Util: () => (/* reexport safe */ _baseutil_js__WEBPACK_IMPORTED_MODULE_1__.Util),
/* harmony export */   VSC: () => (/* reexport safe */ _astrocalc_earth_js__WEBPACK_IMPORTED_MODULE_5__.VSC),
/* harmony export */   Vector2d: () => (/* reexport safe */ _double3d_js__WEBPACK_IMPORTED_MODULE_45__.Vector2d),
/* harmony export */   Vector3d: () => (/* reexport safe */ _double3d_js__WEBPACK_IMPORTED_MODULE_45__.Vector3d),
/* harmony export */   Vector4d: () => (/* reexport safe */ _double3d_js__WEBPACK_IMPORTED_MODULE_45__.Vector4d),
/* harmony export */   VertexBufferBase: () => (/* reexport safe */ _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_48__.VertexBufferBase),
/* harmony export */   VideoOutputType: () => (/* reexport safe */ _video_output_type_js__WEBPACK_IMPORTED_MODULE_100__.VideoOutputType),
/* harmony export */   ViewMoverKenBurnsStyle: () => (/* reexport safe */ _view_mover_js__WEBPACK_IMPORTED_MODULE_101__.ViewMoverKenBurnsStyle),
/* harmony export */   VizLayer: () => (/* reexport safe */ _viz_layer_js__WEBPACK_IMPORTED_MODULE_102__.VizLayer),
/* harmony export */   VoColumn: () => (/* reexport safe */ _layers_vo_table_js__WEBPACK_IMPORTED_MODULE_116__.VoColumn),
/* harmony export */   VoRow: () => (/* reexport safe */ _layers_vo_table_js__WEBPACK_IMPORTED_MODULE_116__.VoRow),
/* harmony export */   VoTable: () => (/* reexport safe */ _layers_vo_table_js__WEBPACK_IMPORTED_MODULE_116__.VoTable),
/* harmony export */   VoTableLayer: () => (/* reexport safe */ _layers_vo_table_layer_js__WEBPACK_IMPORTED_MODULE_127__.VoTableLayer),
/* harmony export */   WWTControl: () => (/* reexport safe */ _wwt_control_js__WEBPACK_IMPORTED_MODULE_138__.WWTControl),
/* harmony export */   WWTControlBuilder: () => (/* reexport safe */ _wwt_control_js__WEBPACK_IMPORTED_MODULE_138__.WWTControlBuilder),
/* harmony export */   WWTElementEvent: () => (/* reexport safe */ _wwt_control_js__WEBPACK_IMPORTED_MODULE_138__.WWTElementEvent),
/* harmony export */   WcsImage: () => (/* reexport safe */ _layers_wcs_image_js__WEBPACK_IMPORTED_MODULE_74__.WcsImage),
/* harmony export */   WebFile: () => (/* reexport safe */ _web_file_js__WEBPACK_IMPORTED_MODULE_72__.WebFile),
/* harmony export */   Wtml: () => (/* reexport safe */ _wtml_js__WEBPACK_IMPORTED_MODULE_139__.Wtml),
/* harmony export */   XmlTextWriter: () => (/* reexport safe */ _utilities_xml_text_writer_js__WEBPACK_IMPORTED_MODULE_58__.XmlTextWriter),
/* harmony export */   Xyf: () => (/* reexport safe */ _healpix_tile_js__WEBPACK_IMPORTED_MODULE_81__.Xyf),
/* harmony export */   set_tilePrepDevice: () => (/* reexport safe */ _render_globals_js__WEBPACK_IMPORTED_MODULE_53__.set_tilePrepDevice),
/* harmony export */   set_useGlVersion2: () => (/* reexport safe */ _render_globals_js__WEBPACK_IMPORTED_MODULE_53__.set_useGlVersion2),
/* harmony export */   ss: () => (/* reexport safe */ _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss)
/* harmony export */ });
/* harmony import */ var _ss_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ss.js */ "./esm/ss.js");
/* harmony import */ var _baseutil_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./baseutil.js */ "./esm/baseutil.js");
/* harmony import */ var _astrocalc_date_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./astrocalc/date.js */ "./esm/astrocalc/date.js");
/* harmony import */ var _astrocalc_coordinate_transformation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./astrocalc/coordinate_transformation.js */ "./esm/astrocalc/coordinate_transformation.js");
/* harmony import */ var _astrocalc_angular_separation_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./astrocalc/angular_separation.js */ "./esm/astrocalc/angular_separation.js");
/* harmony import */ var _astrocalc_earth_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./astrocalc/earth.js */ "./esm/astrocalc/earth.js");
/* harmony import */ var _astrocalc_fk5_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./astrocalc/fk5.js */ "./esm/astrocalc/fk5.js");
/* harmony import */ var _astrocalc_nutation_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./astrocalc/nutation.js */ "./esm/astrocalc/nutation.js");
/* harmony import */ var _astrocalc_sun_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./astrocalc/sun.js */ "./esm/astrocalc/sun.js");
/* harmony import */ var _astrocalc_mercury_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./astrocalc/mercury.js */ "./esm/astrocalc/mercury.js");
/* harmony import */ var _astrocalc_venus_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./astrocalc/venus.js */ "./esm/astrocalc/venus.js");
/* harmony import */ var _astrocalc_mars_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./astrocalc/mars.js */ "./esm/astrocalc/mars.js");
/* harmony import */ var _astrocalc_jupiter_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./astrocalc/jupiter.js */ "./esm/astrocalc/jupiter.js");
/* harmony import */ var _astrocalc_saturn_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./astrocalc/saturn.js */ "./esm/astrocalc/saturn.js");
/* harmony import */ var _astrocalc_uranus_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./astrocalc/uranus.js */ "./esm/astrocalc/uranus.js");
/* harmony import */ var _astrocalc_neptune_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./astrocalc/neptune.js */ "./esm/astrocalc/neptune.js");
/* harmony import */ var _astrocalc_pluto_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./astrocalc/pluto.js */ "./esm/astrocalc/pluto.js");
/* harmony import */ var _astrocalc_kepler_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./astrocalc/kepler.js */ "./esm/astrocalc/kepler.js");
/* harmony import */ var _astrocalc_aberration_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./astrocalc/aberration.js */ "./esm/astrocalc/aberration.js");
/* harmony import */ var _astrocalc_dynamical_time_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./astrocalc/dynamical_time.js */ "./esm/astrocalc/dynamical_time.js");
/* harmony import */ var _astrocalc_ecliptical_elements_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./astrocalc/ecliptical_elements.js */ "./esm/astrocalc/ecliptical_elements.js");
/* harmony import */ var _astrocalc_elements_planetary_orbit_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./astrocalc/elements_planetary_orbit.js */ "./esm/astrocalc/elements_planetary_orbit.js");
/* harmony import */ var _astrocalc_elliptical_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./astrocalc/elliptical.js */ "./esm/astrocalc/elliptical.js");
/* harmony import */ var _astrocalc_equation_of_time_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./astrocalc/equation_of_time.js */ "./esm/astrocalc/equation_of_time.js");
/* harmony import */ var _astrocalc_galilean_moons_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./astrocalc/galilean_moons.js */ "./esm/astrocalc/galilean_moons.js");
/* harmony import */ var _astrocalc_globe_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./astrocalc/globe.js */ "./esm/astrocalc/globe.js");
/* harmony import */ var _astrocalc_illuminated_fraction_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./astrocalc/illuminated_fraction.js */ "./esm/astrocalc/illuminated_fraction.js");
/* harmony import */ var _astrocalc_interpolate_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./astrocalc/interpolate.js */ "./esm/astrocalc/interpolate.js");
/* harmony import */ var _astrocalc_moon_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./astrocalc/moon.js */ "./esm/astrocalc/moon.js");
/* harmony import */ var _astrocalc_moon_illuminated_fraction_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./astrocalc/moon_illuminated_fraction.js */ "./esm/astrocalc/moon_illuminated_fraction.js");
/* harmony import */ var _astrocalc_moon_nodes_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./astrocalc/moon_nodes.js */ "./esm/astrocalc/moon_nodes.js");
/* harmony import */ var _astrocalc_moon_perigee_apogee_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./astrocalc/moon_perigee_apogee.js */ "./esm/astrocalc/moon_perigee_apogee.js");
/* harmony import */ var _astrocalc_moon_phases_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./astrocalc/moon_phases.js */ "./esm/astrocalc/moon_phases.js");
/* harmony import */ var _astrocalc_parallax_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./astrocalc/parallax.js */ "./esm/astrocalc/parallax.js");
/* harmony import */ var _astrocalc_sidereal_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./astrocalc/sidereal.js */ "./esm/astrocalc/sidereal.js");
/* harmony import */ var _astrocalc_physical_jupiter_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./astrocalc/physical_jupiter.js */ "./esm/astrocalc/physical_jupiter.js");
/* harmony import */ var _astrocalc_physical_mars_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./astrocalc/physical_mars.js */ "./esm/astrocalc/physical_mars.js");
/* harmony import */ var _astrocalc_physical_sun_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./astrocalc/physical_sun.js */ "./esm/astrocalc/physical_sun.js");
/* harmony import */ var _astrocalc_precession_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./astrocalc/precession.js */ "./esm/astrocalc/precession.js");
/* harmony import */ var _astrocalc_rise_transit_set_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./astrocalc/rise_transit_set.js */ "./esm/astrocalc/rise_transit_set.js");
/* harmony import */ var _astrocalc_saturn_rings_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./astrocalc/saturn_rings.js */ "./esm/astrocalc/saturn_rings.js");
/* harmony import */ var _astrocalc_stellar_magnitudes_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./astrocalc/stellar_magnitudes.js */ "./esm/astrocalc/stellar_magnitudes.js");
/* harmony import */ var _blend_state_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./blend_state.js */ "./esm/blend_state.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./color.js */ "./esm/color.js");
/* harmony import */ var _url_helpers_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./url_helpers.js */ "./esm/url_helpers.js");
/* harmony import */ var _double3d_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./double3d.js */ "./esm/double3d.js");
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./util.js */ "./esm/util.js");
/* harmony import */ var _astrocalc_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./astrocalc.js */ "./esm/astrocalc.js");
/* harmony import */ var _graphics_gl_buffers_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./graphics/gl_buffers.js */ "./esm/graphics/gl_buffers.js");
/* harmony import */ var _graphics_texture_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./graphics/texture.js */ "./esm/graphics/texture.js");
/* harmony import */ var _graphics_tessellator_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./graphics/tessellator.js */ "./esm/graphics/tessellator.js");
/* harmony import */ var _graphics_shaders_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./graphics/shaders.js */ "./esm/graphics/shaders.js");
/* harmony import */ var _graphics_primitives3d_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./graphics/primitives3d.js */ "./esm/graphics/primitives3d.js");
/* harmony import */ var _render_globals_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./render_globals.js */ "./esm/render_globals.js");
/* harmony import */ var _utilities_bitmap_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./utilities/bitmap.js */ "./esm/utilities/bitmap.js");
/* harmony import */ var _utilities_context_menu_strip_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./utilities/context_menu_strip.js */ "./esm/utilities/context_menu_strip.js");
/* harmony import */ var _utilities_binary_reader_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./utilities/binary_reader.js */ "./esm/utilities/binary_reader.js");
/* harmony import */ var _utilities_simple_input_js__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./utilities/simple_input.js */ "./esm/utilities/simple_input.js");
/* harmony import */ var _utilities_xml_text_writer_js__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./utilities/xml_text_writer.js */ "./esm/utilities/xml_text_writer.js");
/* harmony import */ var _coordinates_js__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./coordinates.js */ "./esm/coordinates.js");
/* harmony import */ var _fast_math_js__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./fast_math.js */ "./esm/fast_math.js");
/* harmony import */ var _healpix_tables_js__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./healpix_tables.js */ "./esm/healpix_tables.js");
/* harmony import */ var _healpix_utils_js__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./healpix_utils.js */ "./esm/healpix_utils.js");
/* harmony import */ var _hploc_js__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./hploc.js */ "./esm/hploc.js");
/* harmony import */ var _fxyf_js__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./fxyf.js */ "./esm/fxyf.js");
/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./interfaces.js */ "./esm/interfaces.js");
/* harmony import */ var _annotation_js__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./annotation.js */ "./esm/annotation.js");
/* harmony import */ var _camera_parameters_js__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./camera_parameters.js */ "./esm/camera_parameters.js");
/* harmony import */ var _constellation_filter_js__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./constellation_filter.js */ "./esm/constellation_filter.js");
/* harmony import */ var _fits_properties_js__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./fits_properties.js */ "./esm/fits_properties.js");
/* harmony import */ var _star_js__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./star.js */ "./esm/star.js");
/* harmony import */ var _ui_tools_js__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./ui_tools.js */ "./esm/ui_tools.js");
/* harmony import */ var _web_file_js__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./web_file.js */ "./esm/web_file.js");
/* harmony import */ var _layers_color_map_container_js__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./layers/color_map_container.js */ "./esm/layers/color_map_container.js");
/* harmony import */ var _layers_wcs_image_js__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./layers/wcs_image.js */ "./esm/layers/wcs_image.js");
/* harmony import */ var _layers_fits_image_js__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./layers/fits_image.js */ "./esm/layers/fits_image.js");
/* harmony import */ var _layers_fits_image_js_js__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./layers/fits_image_js.js */ "./esm/layers/fits_image_js.js");
/* harmony import */ var _layers_fits_image_tile_js__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./layers/fits_image_tile.js */ "./esm/layers/fits_image_tile.js");
/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./tile.js */ "./esm/tile.js");
/* harmony import */ var _render_triangle_js__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./render_triangle.js */ "./esm/render_triangle.js");
/* harmony import */ var _equirectangular_tile_js__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./equirectangular_tile.js */ "./esm/equirectangular_tile.js");
/* harmony import */ var _healpix_tile_js__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./healpix_tile.js */ "./esm/healpix_tile.js");
/* harmony import */ var _mercator_tile_js__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./mercator_tile.js */ "./esm/mercator_tile.js");
/* harmony import */ var _plot_tile_js__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./plot_tile.js */ "./esm/plot_tile.js");
/* harmony import */ var _tangent_tile_js__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./tangent_tile.js */ "./esm/tangent_tile.js");
/* harmony import */ var _sky_image_tile_js__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./sky_image_tile.js */ "./esm/sky_image_tile.js");
/* harmony import */ var _toast_tile_js__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./toast_tile.js */ "./esm/toast_tile.js");
/* harmony import */ var _imageset_js__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./imageset.js */ "./esm/imageset.js");
/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./settings.js */ "./esm/settings.js");
/* harmony import */ var _tours_text_object_js__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./tours/text_object.js */ "./esm/tours/text_object.js");
/* harmony import */ var _sky_text_js__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./sky_text.js */ "./esm/sky_text.js");
/* harmony import */ var _constellations_js__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./constellations.js */ "./esm/constellations.js");
/* harmony import */ var _space_time_controller_js__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./space_time_controller.js */ "./esm/space_time_controller.js");
/* harmony import */ var _planets_js__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./planets.js */ "./esm/planets.js");
/* harmony import */ var _place_js__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./place.js */ "./esm/place.js");
/* harmony import */ var _folder_up_js__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./folder_up.js */ "./esm/folder_up.js");
/* harmony import */ var _grids_js__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./grids.js */ "./esm/grids.js");
/* harmony import */ var _kepler_vertex_js__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./kepler_vertex.js */ "./esm/kepler_vertex.js");
/* harmony import */ var _pointing_js__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./pointing.js */ "./esm/pointing.js");
/* harmony import */ var _tour_js__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./tour.js */ "./esm/tour.js");
/* harmony import */ var _video_output_type_js__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./video_output_type.js */ "./esm/video_output_type.js");
/* harmony import */ var _view_mover_js__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./view_mover.js */ "./esm/view_mover.js");
/* harmony import */ var _viz_layer_js__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./viz_layer.js */ "./esm/viz_layer.js");
/* harmony import */ var _utilities_color_picker_js__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./utilities/color_picker.js */ "./esm/utilities/color_picker.js");
/* harmony import */ var _utilities_dialog_js__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./utilities/dialog.js */ "./esm/utilities/dialog.js");
/* harmony import */ var _utilities_histogram_js__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./utilities/histogram.js */ "./esm/utilities/histogram.js");
/* harmony import */ var _layers_layer_js__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./layers/layer.js */ "./esm/layers/layer.js");
/* harmony import */ var _layers_layer_ui_js__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./layers/layer_ui.js */ "./esm/layers/layer_ui.js");
/* harmony import */ var _layers_great_circle_route_layer_js__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./layers/great_circle_route_layer.js */ "./esm/layers/great_circle_route_layer.js");
/* harmony import */ var _layers_grid_layer_js__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./layers/grid_layer.js */ "./esm/layers/grid_layer.js");
/* harmony import */ var _layers_imageset_layer_js__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./layers/imageset_layer.js */ "./esm/layers/imageset_layer.js");
/* harmony import */ var _layers_object3d_js__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./layers/object3d.js */ "./esm/layers/object3d.js");
/* harmony import */ var _layers_orbit_js__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./layers/orbit.js */ "./esm/layers/orbit.js");
/* harmony import */ var _layers_reference_frame_js__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./layers/reference_frame.js */ "./esm/layers/reference_frame.js");
/* harmony import */ var _layers_orbit_layer_js__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./layers/orbit_layer.js */ "./esm/layers/orbit_layer.js");
/* harmony import */ var _layers_table_js__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./layers/table.js */ "./esm/layers/table.js");
/* harmony import */ var _layers_vo_table_js__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ./layers/vo_table.js */ "./esm/layers/vo_table.js");
/* harmony import */ var _tours_file_cabinet_js__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./tours/file_cabinet.js */ "./esm/tours/file_cabinet.js");
/* harmony import */ var _tours_overlay_js__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./tours/overlay.js */ "./esm/tours/overlay.js");
/* harmony import */ var _tours_selection_js__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./tours/selection.js */ "./esm/tours/selection.js");
/* harmony import */ var _tours_tour_stop_js__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./tours/tour_stop.js */ "./esm/tours/tour_stop.js");
/* harmony import */ var _tours_undo_js__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./tours/undo.js */ "./esm/tours/undo.js");
/* harmony import */ var _tours_tour_editor_js__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ./tours/tour_editor.js */ "./esm/tours/tour_editor.js");
/* harmony import */ var _tours_tour_player_js__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ./tours/tour_player.js */ "./esm/tours/tour_player.js");
/* harmony import */ var _layers_iss_layer_js__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ./layers/iss_layer.js */ "./esm/layers/iss_layer.js");
/* harmony import */ var _layers_time_series_layer_js__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ./layers/time_series_layer.js */ "./esm/layers/time_series_layer.js");
/* harmony import */ var _layers_spreadsheet_layer_js__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ./layers/spreadsheet_layer.js */ "./esm/layers/spreadsheet_layer.js");
/* harmony import */ var _layers_vo_table_layer_js__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ./layers/vo_table_layer.js */ "./esm/layers/vo_table_layer.js");
/* harmony import */ var _layers_layer_manager_js__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ./layers/layer_manager.js */ "./esm/layers/layer_manager.js");
/* harmony import */ var _layers_from_xml_js__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ./layers/from_xml.js */ "./esm/layers/from_xml.js");
/* harmony import */ var _layers_manager_dialogs_js__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ./layers/manager_dialogs.js */ "./esm/layers/manager_dialogs.js");
/* harmony import */ var _tours_tour_document_js__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ./tours/tour_document.js */ "./esm/tours/tour_document.js");
/* harmony import */ var _tours_tour_edit_js__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ./tours/tour_edit.js */ "./esm/tours/tour_edit.js");
/* harmony import */ var _folder_js__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ./folder.js */ "./esm/folder.js");
/* harmony import */ var _folder_browser_js__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ./folder_browser.js */ "./esm/folder_browser.js");
/* harmony import */ var _hips_properties_js__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ./hips_properties.js */ "./esm/hips_properties.js");
/* harmony import */ var _render_context_js__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ./render_context.js */ "./esm/render_context.js");
/* harmony import */ var _script_interface_js__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ./script_interface.js */ "./esm/script_interface.js");
/* harmony import */ var _wwt_control_js__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ./wwt_control.js */ "./esm/wwt_control.js");
/* harmony import */ var _wtml_js__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ./wtml.js */ "./esm/wtml.js");
/* harmony import */ var _typesystem_js__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ./typesystem.js */ "./esm/typesystem.js");
/* harmony import */ var _data_globals_js__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ./data_globals.js */ "./esm/data_globals.js");
// Copyright 2023 the .NET Foundation
// Licensed under the MIT License

// The toplevel WorldWide Telescope WebGL engine API module.
//
// To maintain compatibility with a *lot* of legacy code, we export way more
// types and interfaces than we would if we were starting from scratch, often
// with confusing or misspelled names. So it goes.
//
// The import/exports here are in rough dependency order throughout the
// codebase, although there are numerous places where circular references sneak
// in.

































































// These are new, post-C# APIs that we wouldn't normally expose, but they
// support the test suite.































































// To keep API compatibility, we can't fix this typo.

























// When we import this module, we install the `Layer.fromXml()` function, which
// depends on the specific layer types established above. I am probably being
// too conservative about circular module dependencies but there are worse ways
// to be.


// And when we import *this* module, we also attach some instances to the
// LayerManager class. I'm not sure if they're even used in the webclient, which
// would be the only place that reasonably would.
















// GFX
//
// This was a global holder for constants used in the AstroCalc component. We've
// moved those constants into their specific modules, but still expose the name
// just in case someone actually referenced it. Since we've removed all of the
// constants that it contains, though, if someone was reckless enough to try to
// use this variable their usage would almost surely be broken by now.



function GFX() { }

(0,_typesystem_js__WEBPACK_IMPORTED_MODULE_140__.registerType)("GFX", [GFX, null, null]);


// Nontrivial initializations.










_wwt_control_js__WEBPACK_IMPORTED_MODULE_138__.WWTControl.exploreRoot = new _folder_js__WEBPACK_IMPORTED_MODULE_133__.Folder();
_wwt_control_js__WEBPACK_IMPORTED_MODULE_138__.WWTControl.singleton = new _wwt_control_js__WEBPACK_IMPORTED_MODULE_138__.WWTControl();
_wwt_control_js__WEBPACK_IMPORTED_MODULE_138__.WWTControl.singleton.renderContext = new _render_context_js__WEBPACK_IMPORTED_MODULE_136__.RenderContext();
(0,_data_globals_js__WEBPACK_IMPORTED_MODULE_141__.set_globalWWTControl)(_wwt_control_js__WEBPACK_IMPORTED_MODULE_138__.WWTControl.singleton);
(0,_render_globals_js__WEBPACK_IMPORTED_MODULE_53__.set_globalRenderContext)(_wwt_control_js__WEBPACK_IMPORTED_MODULE_138__.WWTControl.singleton.renderContext);

_space_time_controller_js__WEBPACK_IMPORTED_MODULE_92__.SpaceTimeController._metaNow = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now();
_space_time_controller_js__WEBPACK_IMPORTED_MODULE_92__.SpaceTimeController._now = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now();
_space_time_controller_js__WEBPACK_IMPORTED_MODULE_92__.SpaceTimeController.last = _space_time_controller_js__WEBPACK_IMPORTED_MODULE_92__.SpaceTimeController.get_metaNow();
_space_time_controller_js__WEBPACK_IMPORTED_MODULE_92__.SpaceTimeController.updateClock();

_kepler_vertex_js__WEBPACK_IMPORTED_MODULE_97__.KeplerVertex.baseDate = _ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.truncate(_space_time_controller_js__WEBPACK_IMPORTED_MODULE_92__.SpaceTimeController.utcToJulian(_ss_js__WEBPACK_IMPORTED_MODULE_0__.ss.now()));

})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=index.js.map